

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 16 18:07:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F1825 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000E                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  008C                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  010C                     	;# 
   127  010E                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011A                     	;# 
   138  011B                     	;# 
   139  011D                     	;# 
   140  011E                     	;# 
   141  018C                     	;# 
   142  018E                     	;# 
   143  0191                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0194                     	;# 
   150  0195                     	;# 
   151  0196                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020E                     	;# 
   162  0211                     	;# 
   163  0211                     	;# 
   164  0212                     	;# 
   165  0212                     	;# 
   166  0213                     	;# 
   167  0213                     	;# 
   168  0214                     	;# 
   169  0214                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0216                     	;# 
   174  0216                     	;# 
   175  0217                     	;# 
   176  0217                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0294                     	;# 
   182  0295                     	;# 
   183  0295                     	;# 
   184  0296                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  029B                     	;# 
   190  029C                     	;# 
   191  029D                     	;# 
   192  029E                     	;# 
   193  0311                     	;# 
   194  0311                     	;# 
   195  0312                     	;# 
   196  0313                     	;# 
   197  0318                     	;# 
   198  0318                     	;# 
   199  0319                     	;# 
   200  031A                     	;# 
   201  038C                     	;# 
   202  038E                     	;# 
   203  0391                     	;# 
   204  0392                     	;# 
   205  0393                     	;# 
   206  039A                     	;# 
   207  039C                     	;# 
   208  039D                     	;# 
   209  039E                     	;# 
   210  039F                     	;# 
   211  0415                     	;# 
   212  0416                     	;# 
   213  0417                     	;# 
   214  041C                     	;# 
   215  041D                     	;# 
   216  041E                     	;# 
   217  0FE4                     	;# 
   218  0FE5                     	;# 
   219  0FE6                     	;# 
   220  0FE7                     	;# 
   221  0FE8                     	;# 
   222  0FE9                     	;# 
   223  0FEA                     	;# 
   224  0FEB                     	;# 
   225  0FED                     	;# 
   226  0FEE                     	;# 
   227  0FEF                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000E                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  008C                     	;# 
   257  008E                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  010C                     	;# 
   273  010E                     	;# 
   274  0111                     	;# 
   275  0112                     	;# 
   276  0113                     	;# 
   277  0114                     	;# 
   278  0115                     	;# 
   279  0116                     	;# 
   280  0117                     	;# 
   281  0118                     	;# 
   282  0119                     	;# 
   283  011A                     	;# 
   284  011B                     	;# 
   285  011D                     	;# 
   286  011E                     	;# 
   287  018C                     	;# 
   288  018E                     	;# 
   289  0191                     	;# 
   290  0191                     	;# 
   291  0192                     	;# 
   292  0193                     	;# 
   293  0193                     	;# 
   294  0193                     	;# 
   295  0194                     	;# 
   296  0195                     	;# 
   297  0196                     	;# 
   298  0199                     	;# 
   299  019A                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019C                     	;# 
   303  019D                     	;# 
   304  019E                     	;# 
   305  019F                     	;# 
   306  020C                     	;# 
   307  020E                     	;# 
   308  0211                     	;# 
   309  0211                     	;# 
   310  0212                     	;# 
   311  0212                     	;# 
   312  0213                     	;# 
   313  0213                     	;# 
   314  0214                     	;# 
   315  0214                     	;# 
   316  0215                     	;# 
   317  0215                     	;# 
   318  0215                     	;# 
   319  0216                     	;# 
   320  0216                     	;# 
   321  0217                     	;# 
   322  0217                     	;# 
   323  0291                     	;# 
   324  0291                     	;# 
   325  0292                     	;# 
   326  0293                     	;# 
   327  0294                     	;# 
   328  0295                     	;# 
   329  0295                     	;# 
   330  0296                     	;# 
   331  0298                     	;# 
   332  0298                     	;# 
   333  0299                     	;# 
   334  029A                     	;# 
   335  029B                     	;# 
   336  029C                     	;# 
   337  029D                     	;# 
   338  029E                     	;# 
   339  0311                     	;# 
   340  0311                     	;# 
   341  0312                     	;# 
   342  0313                     	;# 
   343  0318                     	;# 
   344  0318                     	;# 
   345  0319                     	;# 
   346  031A                     	;# 
   347  038C                     	;# 
   348  038E                     	;# 
   349  0391                     	;# 
   350  0392                     	;# 
   351  0393                     	;# 
   352  039A                     	;# 
   353  039C                     	;# 
   354  039D                     	;# 
   355  039E                     	;# 
   356  039F                     	;# 
   357  0415                     	;# 
   358  0416                     	;# 
   359  0417                     	;# 
   360  041C                     	;# 
   361  041D                     	;# 
   362  041E                     	;# 
   363  0FE4                     	;# 
   364  0FE5                     	;# 
   365  0FE6                     	;# 
   366  0FE7                     	;# 
   367  0FE8                     	;# 
   368  0FE9                     	;# 
   369  0FEA                     	;# 
   370  0FEB                     	;# 
   371  0FED                     	;# 
   372  0FEE                     	;# 
   373  0FEF                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000E                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  008C                     	;# 
   403  008E                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0098                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  010C                     	;# 
   419  010E                     	;# 
   420  0111                     	;# 
   421  0112                     	;# 
   422  0113                     	;# 
   423  0114                     	;# 
   424  0115                     	;# 
   425  0116                     	;# 
   426  0117                     	;# 
   427  0118                     	;# 
   428  0119                     	;# 
   429  011A                     	;# 
   430  011B                     	;# 
   431  011D                     	;# 
   432  011E                     	;# 
   433  018C                     	;# 
   434  018E                     	;# 
   435  0191                     	;# 
   436  0191                     	;# 
   437  0192                     	;# 
   438  0193                     	;# 
   439  0193                     	;# 
   440  0193                     	;# 
   441  0194                     	;# 
   442  0195                     	;# 
   443  0196                     	;# 
   444  0199                     	;# 
   445  019A                     	;# 
   446  019B                     	;# 
   447  019B                     	;# 
   448  019C                     	;# 
   449  019D                     	;# 
   450  019E                     	;# 
   451  019F                     	;# 
   452  020C                     	;# 
   453  020E                     	;# 
   454  0211                     	;# 
   455  0211                     	;# 
   456  0212                     	;# 
   457  0212                     	;# 
   458  0213                     	;# 
   459  0213                     	;# 
   460  0214                     	;# 
   461  0214                     	;# 
   462  0215                     	;# 
   463  0215                     	;# 
   464  0215                     	;# 
   465  0216                     	;# 
   466  0216                     	;# 
   467  0217                     	;# 
   468  0217                     	;# 
   469  0291                     	;# 
   470  0291                     	;# 
   471  0292                     	;# 
   472  0293                     	;# 
   473  0294                     	;# 
   474  0295                     	;# 
   475  0295                     	;# 
   476  0296                     	;# 
   477  0298                     	;# 
   478  0298                     	;# 
   479  0299                     	;# 
   480  029A                     	;# 
   481  029B                     	;# 
   482  029C                     	;# 
   483  029D                     	;# 
   484  029E                     	;# 
   485  0311                     	;# 
   486  0311                     	;# 
   487  0312                     	;# 
   488  0313                     	;# 
   489  0318                     	;# 
   490  0318                     	;# 
   491  0319                     	;# 
   492  031A                     	;# 
   493  038C                     	;# 
   494  038E                     	;# 
   495  0391                     	;# 
   496  0392                     	;# 
   497  0393                     	;# 
   498  039A                     	;# 
   499  039C                     	;# 
   500  039D                     	;# 
   501  039E                     	;# 
   502  039F                     	;# 
   503  0415                     	;# 
   504  0416                     	;# 
   505  0417                     	;# 
   506  041C                     	;# 
   507  041D                     	;# 
   508  041E                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000E                     	;# 
   534  0011                     	;# 
   535  0012                     	;# 
   536  0013                     	;# 
   537  0015                     	;# 
   538  0016                     	;# 
   539  0016                     	;# 
   540  0017                     	;# 
   541  0018                     	;# 
   542  0019                     	;# 
   543  001A                     	;# 
   544  001B                     	;# 
   545  001C                     	;# 
   546  001E                     	;# 
   547  001F                     	;# 
   548  008C                     	;# 
   549  008E                     	;# 
   550  0091                     	;# 
   551  0092                     	;# 
   552  0093                     	;# 
   553  0095                     	;# 
   554  0096                     	;# 
   555  0097                     	;# 
   556  0098                     	;# 
   557  0099                     	;# 
   558  009A                     	;# 
   559  009B                     	;# 
   560  009B                     	;# 
   561  009C                     	;# 
   562  009D                     	;# 
   563  009E                     	;# 
   564  010C                     	;# 
   565  010E                     	;# 
   566  0111                     	;# 
   567  0112                     	;# 
   568  0113                     	;# 
   569  0114                     	;# 
   570  0115                     	;# 
   571  0116                     	;# 
   572  0117                     	;# 
   573  0118                     	;# 
   574  0119                     	;# 
   575  011A                     	;# 
   576  011B                     	;# 
   577  011D                     	;# 
   578  011E                     	;# 
   579  018C                     	;# 
   580  018E                     	;# 
   581  0191                     	;# 
   582  0191                     	;# 
   583  0192                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0193                     	;# 
   587  0194                     	;# 
   588  0195                     	;# 
   589  0196                     	;# 
   590  0199                     	;# 
   591  019A                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019C                     	;# 
   595  019D                     	;# 
   596  019E                     	;# 
   597  019F                     	;# 
   598  020C                     	;# 
   599  020E                     	;# 
   600  0211                     	;# 
   601  0211                     	;# 
   602  0212                     	;# 
   603  0212                     	;# 
   604  0213                     	;# 
   605  0213                     	;# 
   606  0214                     	;# 
   607  0214                     	;# 
   608  0215                     	;# 
   609  0215                     	;# 
   610  0215                     	;# 
   611  0216                     	;# 
   612  0216                     	;# 
   613  0217                     	;# 
   614  0217                     	;# 
   615  0291                     	;# 
   616  0291                     	;# 
   617  0292                     	;# 
   618  0293                     	;# 
   619  0294                     	;# 
   620  0295                     	;# 
   621  0295                     	;# 
   622  0296                     	;# 
   623  0298                     	;# 
   624  0298                     	;# 
   625  0299                     	;# 
   626  029A                     	;# 
   627  029B                     	;# 
   628  029C                     	;# 
   629  029D                     	;# 
   630  029E                     	;# 
   631  0311                     	;# 
   632  0311                     	;# 
   633  0312                     	;# 
   634  0313                     	;# 
   635  0318                     	;# 
   636  0318                     	;# 
   637  0319                     	;# 
   638  031A                     	;# 
   639  038C                     	;# 
   640  038E                     	;# 
   641  0391                     	;# 
   642  0392                     	;# 
   643  0393                     	;# 
   644  039A                     	;# 
   645  039C                     	;# 
   646  039D                     	;# 
   647  039E                     	;# 
   648  039F                     	;# 
   649  0415                     	;# 
   650  0416                     	;# 
   651  0417                     	;# 
   652  041C                     	;# 
   653  041D                     	;# 
   654  041E                     	;# 
   655  0FE4                     	;# 
   656  0FE5                     	;# 
   657  0FE6                     	;# 
   658  0FE7                     	;# 
   659  0FE8                     	;# 
   660  0FE9                     	;# 
   661  0FEA                     	;# 
   662  0FEB                     	;# 
   663  0FED                     	;# 
   664  0FEE                     	;# 
   665  0FEF                     	;# 
   666  001C                     _T2CON	set	28
   667  001B                     _PR2	set	27
   668  0011                     _PIR1bits	set	17
   669  000E                     _PORTC	set	14
   670  000C                     _PORTA	set	12
   671  000B                     _INTCONbits	set	11
   672  000C                     _PORTAbits	set	12
   673  008E                     _TRISCbits	set	142
   674  008C                     _TRISAbits	set	140
   675  008E                     _TRISC	set	142
   676  008C                     _TRISA	set	140
   677  0099                     _OSCCONbits	set	153
   678  011E                     _APFCON1bits	set	286
   679  010E                     _LATC	set	270
   680  010C                     _LATA	set	268
   681  010E                     _LATCbits	set	270
   682  018E                     _ANSELC	set	398
   683  018C                     _ANSELA	set	396
   684  0211                     _SSPBUF	set	529
   685  0211                     _SSP1BUF	set	529
   686  0216                     _SSP1CON2bits	set	534
   687  0214                     _SSP1STAT	set	532
   688  0212                     _SSP1ADD	set	530
   689  0216                     _SSP1CON2	set	534
   690  0215                     _SSP1CON1	set	533
   691  029C                     _CCP2AS	set	668
   692  029E                     _CCPTMRS	set	670
   693  029A                     _CCP2CON	set	666
   694  0298                     _CCPR2L	set	664
   695                           
   696                           	psect	stringtext1
   697  1000                     __pstringtext1:	
   698  1000                     STR_3:	
   699  1000  344D               	retlw	77	;'M'
   700  1001  3449               	retlw	73	;'I'
   701  1002  344E               	retlw	78	;'N'
   702  1003  3455               	retlw	85	;'U'
   703  1004  3453               	retlw	83	;'S'
   704  1005  3420               	retlw	32	;' '
   705  1006  343D               	retlw	61	;'='
   706  1007  343D               	retlw	61	;'='
   707  1008  3420               	retlw	32	;' '
   708  1009  3450               	retlw	80	;'P'
   709  100A  3455               	retlw	85	;'U'
   710  100B  3453               	retlw	83	;'S'
   711  100C  3448               	retlw	72	;'H'
   712  100D  3445               	retlw	69	;'E'
   713  100E  3444               	retlw	68	;'D'
   714  100F  3400               	retlw	0
   715                           
   716                           	psect	stringtext2
   717  1010                     __pstringtext2:	
   718  1010                     STR_4:	
   719  1010  3450               	retlw	80	;'P'
   720  1011  344C               	retlw	76	;'L'
   721  1012  3455               	retlw	85	;'U'
   722  1013  3453               	retlw	83	;'S'
   723  1014  3420               	retlw	32	;' '
   724  1015  343D               	retlw	61	;'='
   725  1016  343D               	retlw	61	;'='
   726  1017  3420               	retlw	32	;' '
   727  1018  3450               	retlw	80	;'P'
   728  1019  3455               	retlw	85	;'U'
   729  101A  3453               	retlw	83	;'S'
   730  101B  3448               	retlw	72	;'H'
   731  101C  3445               	retlw	69	;'E'
   732  101D  3444               	retlw	68	;'D'
   733  101E  3400               	retlw	0
   734                           
   735                           	psect	stringtext3
   736  101F                     __pstringtext3:	
   737  101F                     STR_2:	
   738  101F  3453               	retlw	83	;'S'
   739  1020  3453               	retlw	83	;'S'
   740  1021  3454               	retlw	84	;'T'
   741  1022  3420               	retlw	32	;' '
   742  1023  343D               	retlw	61	;'='
   743  1024  343D               	retlw	61	;'='
   744  1025  3420               	retlw	32	;' '
   745  1026  3450               	retlw	80	;'P'
   746  1027  3455               	retlw	85	;'U'
   747  1028  3453               	retlw	83	;'S'
   748  1029  3448               	retlw	72	;'H'
   749  102A  3445               	retlw	69	;'E'
   750  102B  3444               	retlw	68	;'D'
   751  102C  3400               	retlw	0
   752                           
   753                           	psect	stringtext4
   754  102D                     __pstringtext4:	
   755  102D                     STR_5:	
   756  102D  3450               	retlw	80	;'P'
   757  102E  3461               	retlw	97	;'a'
   758  102F  3475               	retlw	117	;'u'
   759  1030  346C               	retlw	108	;'l'
   760  1031  3420               	retlw	32	;' '
   761  1032  3449               	retlw	73	;'I'
   762  1033  346F               	retlw	111	;'o'
   763  1034  3472               	retlw	114	;'r'
   764  1035  3467               	retlw	103	;'g'
   765  1036  3461               	retlw	97	;'a'
   766  1037  3400               	retlw	0
   767                           
   768                           	psect	stringtext5
   769  1038                     __pstringtext5:	
   770  1038                     STR_1:	
   771  1038  3425               	retlw	37	;'%'
   772  1039  3464               	retlw	100	;'d'
   773  103A  3400               	retlw	0
   774                           
   775                           	psect	stringtext6
   776  0000                     __pstringtext6:	
   777                           
   778                           ; #config settings
   779  0000                     
   780                           	psect	cinit
   781  07F0                     start_initialization:	
   782  07F0                     __initialization:	
   783                           
   784                           ; Clear objects allocated to BANK0
   785  07F0  0020               	movlb	0	; select bank0
   786  07F1  01EC               	clrf	__pbssBANK0& (0+127)
   787  07F2  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   788  07F3  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   789  07F4  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   790                           
   791                           ; Clear objects allocated to BANK1
   792  07F5  30A0               	movlw	low __pbssBANK1
   793  07F6  0084               	movwf	4
   794  07F7  3000               	movlw	high __pbssBANK1
   795  07F8  0085               	movwf	5
   796  07F9  3029               	movlw	41
   797  07FA  318F  2794  3187   	fcall	clear_ram0
   798  07FD                     end_of_initialization:	
   799                           ;End of C runtime variable initialization code
   800                           
   801  07FD                     __end_of__initialization:	
   802  07FD  0020               	movlb	0
   803  07FE  3183  2B49         	ljmp	_main	;jump to C main() function
   804                           
   805                           	psect	bssBANK0
   806  006C                     __pbssBANK0:	
   807  006C                     _prec:	
   808  006C                     	ds	2
   809  006E                     _flags:	
   810  006E                     	ds	2
   811                           
   812                           	psect	bssBANK1
   813  00A0                     __pbssBANK1:	
   814  00A0                     _nout:	
   815  00A0                     	ds	2
   816  00A2                     _width:	
   817  00A2                     	ds	2
   818  00A4                     _data:	
   819  00A4                     	ds	2
   820  00A6                     _dbuf:	
   821  00A6                     	ds	32
   822  00C6                     _duty:	
   823  00C6                     	ds	3
   824                           
   825                           	psect	clrtext
   826  0F94                     clear_ram0:	
   827                           ;	Called with FSR0 containing the base address, and
   828                           ;	WREG with the size to clear
   829                           
   830  0F94  0064               	clrwdt	;clear the watchdog before getting into this loop
   831  0F95                     clrloop0:	
   832  0F95  0180               	clrf	0	;clear RAM location pointed to by FSR
   833  0F96  3101               	addfsr 0,1
   834  0F97  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   835  0F98  2F95               	goto	clrloop0	;have we reached the end yet?
   836  0F99  3400               	retlw	0	;all done for this memory range, return
   837                           
   838                           	psect	cstackBANK1
   839  00C9                     __pcstackBANK1:	
   840  00C9                     	ds	2
   841  00CB                     sprintf@ap:	
   842                           
   843                           ; 1 bytes @ 0x2
   844  00CB                     	ds	1
   845  00CC                     sprintf@s:	
   846                           
   847                           ; 1 bytes @ 0x3
   848  00CC                     	ds	1
   849  00CD                     sprintf@f:	
   850                           
   851                           ; 5 bytes @ 0x4
   852  00CD                     	ds	5
   853                           
   854                           	psect	cstackCOMMON
   855  0070                     __pcstackCOMMON:	
   856  0070                     ?_config:	
   857  0070                     ?_pwm_config:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ??_pwm_config:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_Lcd_Clear:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_Lcd_Init:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_Cursor_Off:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ?_I2C_Master_Start:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ??_I2C_Master_Start:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_I2C_Write_Display:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_I2C_Master_Stop:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ??_I2C_Master_Stop:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?_putch:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ??_putch:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_main:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_Lcd_Port:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?_Lcd_Cmd:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ?_Lcd_Write_Char:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_I2C_Master_Wait:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ??_I2C_Master_Wait:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ??___aodiv:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ??___aomod:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_fputc:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_strlen:	
   921                           ; 2 bytes @ 0x0
   922                           
   923  0070                     ?___lldiv:	
   924                           ; 2 bytes @ 0x0
   925                           
   926  0070                     putch@c:	
   927                           ; 4 bytes @ 0x0
   928                           
   929  0070                     I2C_Write_Display@d:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     fputc@c:	
   933                           ; 2 bytes @ 0x0
   934                           
   935  0070                     ___lldiv@divisor:	
   936                           ; 2 bytes @ 0x0
   937                           
   938                           
   939                           ; 4 bytes @ 0x0
   940  0070                     	ds	1
   941  0071                     ___aodiv@counter:	
   942  0071                     ___aomod@counter:	
   943                           ; 1 bytes @ 0x1
   944                           
   945                           
   946                           ; 1 bytes @ 0x1
   947  0071                     	ds	1
   948  0072                     ??_I2C_Write_Display:	
   949  0072                     ??_strlen:	
   950                           ; 1 bytes @ 0x2
   951                           
   952  0072                     ??_Lcd_Port:	
   953                           ; 1 bytes @ 0x2
   954                           
   955  0072                     ___aodiv@sign:	
   956                           ; 1 bytes @ 0x2
   957                           
   958  0072                     ___aomod@sign:	
   959                           ; 1 bytes @ 0x2
   960                           
   961  0072                     fputc@fp:	
   962                           ; 1 bytes @ 0x2
   963                           
   964                           
   965                           ; 1 bytes @ 0x2
   966  0072                     	ds	1
   967  0073                     ??_fputc:	
   968  0073                     ?_abs:	
   969                           ; 1 bytes @ 0x3
   970                           
   971  0073                     strlen@a:	
   972                           ; 2 bytes @ 0x3
   973                           
   974  0073                     abs@a:	
   975                           ; 1 bytes @ 0x3
   976                           
   977  0073                     ___aodiv@quotient:	
   978                           ; 2 bytes @ 0x3
   979                           
   980                           
   981                           ; 8 bytes @ 0x3
   982  0073                     	ds	1
   983  0074                     Lcd_Port@data:	
   984  0074                     strlen@s:	
   985                           ; 1 bytes @ 0x4
   986                           
   987  0074                     ___lldiv@dividend:	
   988                           ; 1 bytes @ 0x4
   989                           
   990                           
   991                           ; 4 bytes @ 0x4
   992  0074                     	ds	1
   993  0075                     ??_abs:	
   994  0075                     ??_Lcd_Cmd:	
   995                           ; 1 bytes @ 0x5
   996                           
   997  0075                     ??_Lcd_Write_Char:	
   998                           ; 1 bytes @ 0x5
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x5
  1002  0075                     	ds	2
  1003  0077                     Lcd_Write_Char@a:	
  1004                           
  1005                           ; 1 bytes @ 0x7
  1006  0077                     	ds	1
  1007  0078                     ??___lldiv:	
  1008  0078                     ?_fputs:	
  1009                           ; 1 bytes @ 0x8
  1010                           
  1011  0078                     Lcd_Write_Char@y:	
  1012                           ; 2 bytes @ 0x8
  1013                           
  1014  0078                     fputs@fp:	
  1015                           ; 1 bytes @ 0x8
  1016                           
  1017  0078                     Lcd_Cmd@buff:	
  1018                           ; 1 bytes @ 0x8
  1019                           
  1020                           
  1021                           ; 2 bytes @ 0x8
  1022  0078                     	ds	1
  1023  0079                     ??_fputs:	
  1024  0079                     Lcd_Write_Char@temp:	
  1025                           ; 1 bytes @ 0x9
  1026                           
  1027  0079                     ___lldiv@quotient:	
  1028                           ; 1 bytes @ 0x9
  1029                           
  1030                           
  1031                           ; 4 bytes @ 0x9
  1032  0079                     	ds	1
  1033  007A                     ?_Lcd_Write_String:	
  1034  007A                     Lcd_Cmd@a:	
  1035                           ; 1 bytes @ 0xA
  1036                           
  1037  007A                     Lcd_Write_String@a:	
  1038                           ; 1 bytes @ 0xA
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0xA
  1042  007A                     	ds	1
  1043  007B                     ??_Lcd_Clear:	
  1044  007B                     ?_Lcd_Set_Cursor:	
  1045                           ; 1 bytes @ 0xB
  1046                           
  1047  007B                     ??_Lcd_Init:	
  1048                           ; 1 bytes @ 0xB
  1049                           
  1050  007B                     ??_Cursor_Off:	
  1051                           ; 1 bytes @ 0xB
  1052                           
  1053  007B                     Lcd_Set_Cursor@b:	
  1054                           ; 1 bytes @ 0xB
  1055                           
  1056                           
  1057                           ; 1 bytes @ 0xB
  1058  007B                     	ds	1
  1059  007C                     ??_Lcd_Set_Cursor:	
  1060  007C                     ??_Lcd_Write_String:	
  1061                           ; 1 bytes @ 0xC
  1062                           
  1063  007C                     ??_pad:	
  1064                           ; 1 bytes @ 0xC
  1065                           
  1066                           
  1067                           ; 1 bytes @ 0xC
  1068  007C                     	ds	1
  1069  007D                     ??_sprintf:	
  1070  007D                     ___lldiv@counter:	
  1071                           ; 1 bytes @ 0xD
  1072                           
  1073                           
  1074                           ; 1 bytes @ 0xD
  1075  007D                     	ds	1
  1076                           
  1077                           	psect	cstackBANK0
  1078  0020                     __pcstackBANK0:	
  1079  0020                     ?_I2C_Master_Init:	
  1080  0020                     ?___aodiv:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0020                     ?___aomod:	
  1084                           ; 8 bytes @ 0x0
  1085                           
  1086  0020                     Lcd_Set_Cursor@a:	
  1087                           ; 8 bytes @ 0x0
  1088                           
  1089  0020                     fputs@c:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0020                     Lcd_Write_String@i:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0020                     I2C_Master_Init@c:	
  1096                           ; 2 bytes @ 0x0
  1097                           
  1098  0020                     ___aodiv@divisor:	
  1099                           ; 4 bytes @ 0x0
  1100                           
  1101  0020                     ___aomod@divisor:	
  1102                           ; 8 bytes @ 0x0
  1103                           
  1104                           
  1105                           ; 8 bytes @ 0x0
  1106  0020                     	ds	1
  1107  0021                     Lcd_Set_Cursor@z:	
  1108  0021                     fputs@i:	
  1109                           ; 1 bytes @ 0x1
  1110                           
  1111                           
  1112                           ; 2 bytes @ 0x1
  1113  0021                     	ds	1
  1114  0022                     Lcd_Set_Cursor@y:	
  1115                           
  1116                           ; 1 bytes @ 0x2
  1117  0022                     	ds	1
  1118  0023                     Lcd_Set_Cursor@temp:	
  1119  0023                     fputs@s:	
  1120                           ; 1 bytes @ 0x3
  1121                           
  1122                           
  1123                           ; 1 bytes @ 0x3
  1124  0023                     	ds	1
  1125  0024                     ??_I2C_Master_Init:	
  1126  0024                     ?_pad:	
  1127                           ; 1 bytes @ 0x4
  1128                           
  1129  0024                     pad@buf:	
  1130                           ; 2 bytes @ 0x4
  1131                           
  1132                           
  1133                           ; 1 bytes @ 0x4
  1134  0024                     	ds	1
  1135  0025                     pad@p:	
  1136                           
  1137                           ; 2 bytes @ 0x5
  1138  0025                     	ds	2
  1139  0027                     pad@i:	
  1140                           
  1141                           ; 2 bytes @ 0x7
  1142  0027                     	ds	1
  1143  0028                     ??_config:	
  1144  0028                     ___aodiv@dividend:	
  1145                           ; 1 bytes @ 0x8
  1146                           
  1147  0028                     ___aomod@dividend:	
  1148                           ; 8 bytes @ 0x8
  1149                           
  1150                           
  1151                           ; 8 bytes @ 0x8
  1152  0028                     	ds	1
  1153  0029                     pad@w:	
  1154                           
  1155                           ; 2 bytes @ 0x9
  1156  0029                     	ds	2
  1157  002B                     pad@fp:	
  1158                           
  1159                           ; 1 bytes @ 0xB
  1160  002B                     	ds	5
  1161  0030                     ?_dtoa:	
  1162  0030                     dtoa@d:	
  1163                           ; 2 bytes @ 0x10
  1164                           
  1165                           
  1166                           ; 8 bytes @ 0x10
  1167  0030                     	ds	8
  1168  0038                     ??_dtoa:	
  1169                           
  1170                           ; 1 bytes @ 0x18
  1171  0038                     	ds	3
  1172  003B                     _dtoa$635:	
  1173                           
  1174                           ; 2 bytes @ 0x1B
  1175  003B                     	ds	2
  1176  003D                     dtoa@fp:	
  1177                           
  1178                           ; 1 bytes @ 0x1D
  1179  003D                     	ds	1
  1180  003E                     dtoa@p:	
  1181                           
  1182                           ; 2 bytes @ 0x1E
  1183  003E                     	ds	2
  1184  0040                     dtoa@w:	
  1185                           
  1186                           ; 2 bytes @ 0x20
  1187  0040                     	ds	2
  1188  0042                     dtoa@s:	
  1189                           
  1190                           ; 2 bytes @ 0x22
  1191  0042                     	ds	2
  1192  0044                     dtoa@n:	
  1193                           
  1194                           ; 8 bytes @ 0x24
  1195  0044                     	ds	8
  1196  004C                     dtoa@i:	
  1197                           
  1198                           ; 2 bytes @ 0x2C
  1199  004C                     	ds	2
  1200  004E                     ?_vfpfcnvrt:	
  1201  004E                     vfpfcnvrt@fmt:	
  1202                           ; 2 bytes @ 0x2E
  1203                           
  1204                           
  1205                           ; 1 bytes @ 0x2E
  1206  004E                     	ds	1
  1207  004F                     vfpfcnvrt@ap:	
  1208                           
  1209                           ; 1 bytes @ 0x2F
  1210  004F                     	ds	1
  1211  0050                     ??_vfpfcnvrt:	
  1212                           
  1213                           ; 1 bytes @ 0x30
  1214  0050                     	ds	5
  1215  0055                     vfpfcnvrt@ll:	
  1216                           
  1217                           ; 8 bytes @ 0x35
  1218  0055                     	ds	8
  1219  005D                     vfpfcnvrt@fp:	
  1220                           
  1221                           ; 1 bytes @ 0x3D
  1222  005D                     	ds	1
  1223  005E                     ?_vfprintf:	
  1224  005E                     vfprintf@fmt:	
  1225                           ; 2 bytes @ 0x3E
  1226                           
  1227                           
  1228                           ; 2 bytes @ 0x3E
  1229  005E                     	ds	2
  1230  0060                     vfprintf@ap:	
  1231                           
  1232                           ; 1 bytes @ 0x40
  1233  0060                     	ds	1
  1234  0061                     ??_vfprintf:	
  1235                           
  1236                           ; 1 bytes @ 0x41
  1237  0061                     	ds	2
  1238  0063                     vfprintf@fp:	
  1239                           
  1240                           ; 1 bytes @ 0x43
  1241  0063                     	ds	1
  1242  0064                     vfprintf@cfmt:	
  1243                           
  1244                           ; 2 bytes @ 0x44
  1245  0064                     	ds	2
  1246  0066                     ?_sprintf:	
  1247  0066                     sprintf@fmt:	
  1248                           ; 2 bytes @ 0x46
  1249                           
  1250                           
  1251                           ; 2 bytes @ 0x46
  1252  0066                     	ds	4
  1253  006A                     ??_main:	
  1254                           
  1255                           ; 1 bytes @ 0x4A
  1256  006A                     	ds	2
  1257                           
  1258                           	psect	maintext
  1259  0349                     __pmaintext:	
  1260 ;;
  1261 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1262 ;;
  1263 ;; *************** function _main *****************
  1264 ;; Defined at:
  1265 ;;		line 18 in file "main.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : B1F/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1281 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1283 ;;Total ram usage:        2 bytes
  1284 ;; Hardware stack levels required when called:    8
  1285 ;; This function calls:
  1286 ;;		_Lcd_Clear
  1287 ;;		_Lcd_Set_Cursor
  1288 ;;		_Lcd_Write_String
  1289 ;;		_config
  1290 ;;		_pwm_config
  1291 ;;		_sprintf
  1292 ;; This function is called by:
  1293 ;;		Startup code after reset
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           
  1298                           ;psect for function _main
  1299  0349                     _main:	
  1300  0349                     l1891:	
  1301                           ;incstack = 0
  1302                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1303                           
  1304                           
  1305                           ;main.c: 19:     config();
  1306  0349  3182  22ED  3183   	fcall	_config
  1307  034C                     l1893:	
  1308                           
  1309                           ;main.c: 20:     pwm_config();
  1310  034C  318F  27B8  3183   	fcall	_pwm_config
  1311  034F                     l1895:	
  1312                           
  1313                           ;main.c: 22:     CCPR2L = 0;
  1314  034F  0025               	movlb	5	; select bank5
  1315  0350  0198               	clrf	24	;volatile
  1316  0351                     l1897:	
  1317                           
  1318                           ;main.c: 23:     LATCbits.LATC4 = 0;
  1319  0351  0022               	movlb	2	; select bank2
  1320  0352  120E               	bcf	14,4	;volatile
  1321  0353                     l1899:	
  1322                           
  1323                           ;main.c: 24:     LATCbits.LATC5 = 1;
  1324  0353  168E               	bsf	14,5	;volatile
  1325  0354                     l1901:	
  1326                           
  1327                           ;main.c: 26:     Lcd_Clear();
  1328  0354  318F  27A3  3183   	fcall	_Lcd_Clear
  1329  0357                     l1903:	
  1330                           
  1331                           ;main.c: 29:         sprintf(duty, "%d", CCPR2L);
  1332  0357  3038               	movlw	low (STR_1| (0+32768))
  1333  0358  0020               	movlb	0	; select bank0
  1334  0359  00E6               	movwf	sprintf@fmt
  1335  035A  3090               	movlw	high (STR_1| (0+32768))
  1336  035B  00E7               	movwf	sprintf@fmt+1
  1337  035C  0025               	movlb	5	; select bank5
  1338  035D  0818               	movf	24,w	;volatile
  1339  035E  0020               	movlb	0	; select bank0
  1340  035F  00EA               	movwf	??_main
  1341  0360  01EB               	clrf	??_main+1
  1342  0361  086A               	movf	??_main,w
  1343  0362  00E8               	movwf	?_sprintf+2
  1344  0363  086B               	movf	??_main+1,w
  1345  0364  00E9               	movwf	?_sprintf+3
  1346  0365  30C6               	movlw	(low (_duty| 0))& (0+255)
  1347  0366  3180  2045  3183   	fcall	_sprintf
  1348  0369                     l1905:	
  1349                           
  1350                           ;main.c: 31:         Lcd_Set_Cursor(1,1);
  1351  0369  01FB               	clrf	Lcd_Set_Cursor@b
  1352  036A  0AFB               	incf	Lcd_Set_Cursor@b,f
  1353  036B  3001               	movlw	1
  1354  036C  3181  21A5  3183   	fcall	_Lcd_Set_Cursor
  1355  036F                     l1907:	
  1356                           
  1357                           ;main.c: 32:         Lcd_Write_String(duty);
  1358  036F  30C6               	movlw	low _duty
  1359  0370  00FA               	movwf	Lcd_Write_String@a
  1360  0371  3000               	movlw	high _duty
  1361  0372  00FB               	movwf	Lcd_Write_String@a+1
  1362  0373  3180  2026  3183   	fcall	_Lcd_Write_String
  1363  0376                     l1909:	
  1364                           
  1365                           ;main.c: 34:         if(PORTAbits.RA0 == 1){
  1366  0376  0020               	movlb	0	; select bank0
  1367  0377  1C0C               	btfss	12,0	;volatile
  1368  0378  2B7A               	goto	u1461
  1369  0379  2B7B               	goto	u1460
  1370  037A                     u1461:	
  1371  037A  2B8B               	goto	l28
  1372  037B                     u1460:	
  1373  037B                     l1911:	
  1374                           
  1375                           ;main.c: 35:             Lcd_Set_Cursor(2,1);
  1376  037B  01FB               	clrf	Lcd_Set_Cursor@b
  1377  037C  0AFB               	incf	Lcd_Set_Cursor@b,f
  1378  037D  3002               	movlw	2
  1379  037E  3181  21A5  3183   	fcall	_Lcd_Set_Cursor
  1380  0381                     l1913:	
  1381                           
  1382                           ;main.c: 36:             Lcd_Write_String("SST == PUSHED");
  1383  0381  301F               	movlw	low (STR_2| (0+32768))
  1384  0382  00FA               	movwf	Lcd_Write_String@a
  1385  0383  3090               	movlw	high (STR_2| (0+32768))
  1386  0384  00FB               	movwf	Lcd_Write_String@a+1
  1387  0385  3180  2026  3183   	fcall	_Lcd_Write_String
  1388  0388                     l1915:	
  1389                           
  1390                           ;main.c: 37:             CCPR2L = 0;
  1391  0388  0025               	movlb	5	; select bank5
  1392  0389  0198               	clrf	24	;volatile
  1393                           
  1394                           ;main.c: 39:         }
  1395  038A  2B57               	goto	l1903
  1396  038B                     l28:	
  1397                           ;main.c: 40:         else if(PORTAbits.RA1 == 1){
  1398                           
  1399  038B  1C8C               	btfss	12,1	;volatile
  1400  038C  2B8E               	goto	u1471
  1401  038D  2B8F               	goto	u1470
  1402  038E                     u1471:	
  1403  038E  2BAD               	goto	l30
  1404  038F                     u1470:	
  1405  038F                     l1917:	
  1406                           
  1407                           ;main.c: 41:             Lcd_Set_Cursor(2,1);
  1408  038F  01FB               	clrf	Lcd_Set_Cursor@b
  1409  0390  0AFB               	incf	Lcd_Set_Cursor@b,f
  1410  0391  3002               	movlw	2
  1411  0392  3181  21A5  3183   	fcall	_Lcd_Set_Cursor
  1412  0395                     l1919:	
  1413                           
  1414                           ;main.c: 42:             Lcd_Write_String("MINUS == PUSHED");
  1415  0395  3000               	movlw	low (STR_3| (0+32768))
  1416  0396  00FA               	movwf	Lcd_Write_String@a
  1417  0397  3090               	movlw	high (STR_3| (0+32768))
  1418  0398  00FB               	movwf	Lcd_Write_String@a+1
  1419  0399  3180  2026  3183   	fcall	_Lcd_Write_String
  1420  039C                     l1921:	
  1421                           
  1422                           ;main.c: 43:             CCPR2L--;
  1423  039C  3001               	movlw	1
  1424  039D  0025               	movlb	5	; select bank5
  1425  039E  0298               	subwf	24,f	;volatile
  1426  039F                     l1923:	
  1427                           
  1428                           ;main.c: 44:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1429  039F  3002               	movlw	2
  1430  03A0  0020               	movlb	0	; select bank0
  1431  03A1  00EB               	movwf	??_main+1
  1432  03A2  3004               	movlw	4
  1433  03A3  00EA               	movwf	??_main
  1434  03A4  30BA               	movlw	186
  1435  03A5                     u1517:	
  1436  03A5  0B89               	decfsz	9,f
  1437  03A6  2BA5               	goto	u1517
  1438  03A7  0BEA               	decfsz	??_main,f
  1439  03A8  2BA5               	goto	u1517
  1440  03A9  0BEB               	decfsz	??_main+1,f
  1441  03AA  2BA5               	goto	u1517
  1442  03AB  0000               	nop
  1443                           
  1444                           ;main.c: 48:         }
  1445  03AC  2B57               	goto	l1903
  1446  03AD                     l30:	
  1447                           ;main.c: 49:         else if(PORTAbits.RA2 == 1){
  1448                           
  1449  03AD  1D0C               	btfss	12,2	;volatile
  1450  03AE  2BB0               	goto	u1481
  1451  03AF  2BB1               	goto	u1480
  1452  03B0                     u1481:	
  1453  03B0  2B9F               	goto	l1923
  1454  03B1                     u1480:	
  1455  03B1                     l1925:	
  1456                           
  1457                           ;main.c: 50:             Lcd_Set_Cursor(2,1);
  1458  03B1  01FB               	clrf	Lcd_Set_Cursor@b
  1459  03B2  0AFB               	incf	Lcd_Set_Cursor@b,f
  1460  03B3  3002               	movlw	2
  1461  03B4  3181  21A5  3183   	fcall	_Lcd_Set_Cursor
  1462  03B7                     l1927:	
  1463                           
  1464                           ;main.c: 51:             Lcd_Write_String("PLUS == PUSHED");
  1465  03B7  3010               	movlw	low (STR_4| (0+32768))
  1466  03B8  00FA               	movwf	Lcd_Write_String@a
  1467  03B9  3090               	movlw	high (STR_4| (0+32768))
  1468  03BA  00FB               	movwf	Lcd_Write_String@a+1
  1469  03BB  3180  2026  3183   	fcall	_Lcd_Write_String
  1470  03BE                     l1929:	
  1471                           
  1472                           ;main.c: 53:             CCPR2L++;
  1473  03BE  3001               	movlw	1
  1474  03BF  0020               	movlb	0	; select bank0
  1475  03C0  00EA               	movwf	??_main
  1476  03C1  086A               	movf	??_main,w
  1477  03C2  0025               	movlb	5	; select bank5
  1478  03C3  0798               	addwf	24,f	;volatile
  1479  03C4  2B9F               	goto	l1923
  1480  03C5  3180  2802         	ljmp	start
  1481  03C7                     __end_of_main:	
  1482                           
  1483                           	psect	text1
  1484  0045                     __ptext1:	
  1485 ;; *************** function _sprintf *****************
  1486 ;; Defined at:
  1487 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  s               1    wreg     PTR unsigned char 
  1490 ;;		 -> duty(3), 
  1491 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1492 ;;		 -> STR_1(3), 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  s               1    3[BANK1 ] PTR unsigned char 
  1495 ;;		 -> duty(3), 
  1496 ;;  f               5    4[BANK1 ] struct _IO_FILE
  1497 ;;  ret             2    0        int 
  1498 ;;  ap              1    2[BANK1 ] PTR void [1]
  1499 ;;		 -> ?_sprintf(2), 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  2   70[BANK0 ] int 
  1502 ;; Registers used:
  1503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1509 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1510 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  1511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1512 ;;      Totals:         1       4       9       0       0       0       0       0       0       0       0       0       
      +0       0
  1513 ;;Total ram usage:       14 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    7
  1516 ;; This function calls:
  1517 ;;		_vfprintf
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function _sprintf
  1525  0045                     _sprintf:	
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1529                           ;sprintf@s stored from wreg
  1530  0045  0021               	movlb	1	; select bank1
  1531  0046  00CC               	movwf	sprintf@s^(0+128)
  1532  0047                     l1879:	
  1533  0047  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1534  0048  00FD               	movwf	??_sprintf
  1535  0049  087D               	movf	??_sprintf,w
  1536  004A  00CB               	movwf	sprintf@ap^(0+128)
  1537  004B  084C               	movf	sprintf@s^(0+128),w
  1538  004C  00FD               	movwf	??_sprintf
  1539  004D  087D               	movf	??_sprintf,w
  1540  004E  00CD               	movwf	sprintf@f^(0+128)
  1541  004F                     l1881:	
  1542  004F  01CE               	clrf	(sprintf@f^(0+128)+1)
  1543  0050  01CF               	clrf	((sprintf@f+1)^(0+128)+1)
  1544  0051                     l1883:	
  1545  0051  01D0               	clrf	(sprintf@f^(0+128)+3)
  1546  0052  01D1               	clrf	((sprintf@f+1)^(0+128)+3)
  1547  0053                     l1885:	
  1548  0053  0020               	movlb	0	; select bank0
  1549  0054  0867               	movf	sprintf@fmt+1,w
  1550  0055  00DF               	movwf	vfprintf@fmt+1
  1551  0056  0866               	movf	sprintf@fmt,w
  1552  0057  00DE               	movwf	vfprintf@fmt
  1553  0058  30CB               	movlw	(low (sprintf@ap| 0))& (0+255)
  1554  0059  00FD               	movwf	??_sprintf
  1555  005A  087D               	movf	??_sprintf,w
  1556  005B  00E0               	movwf	vfprintf@ap
  1557  005C  30CD               	movlw	(low (sprintf@f| 0))& (0+255)
  1558  005D  3180  20F2  3180   	fcall	_vfprintf
  1559  0060                     l1887:	
  1560  0060  0021               	movlb	1	; select bank1
  1561  0061  084E               	movf	(sprintf@f^(0+128)+1),w
  1562  0062  074C               	addwf	sprintf@s^(0+128),w
  1563  0063  00FD               	movwf	??_sprintf
  1564  0064  087D               	movf	??_sprintf,w
  1565  0065  0086               	movwf	6
  1566  0066  0187               	clrf	7
  1567  0067  0181               	clrf	1
  1568  0068                     l902:	
  1569  0068  0008               	return
  1570  0069                     __end_of_sprintf:	
  1571                           
  1572                           	psect	text2
  1573  00F2                     __ptext2:	
  1574 ;; *************** function _vfprintf *****************
  1575 ;; Defined at:
  1576 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  fp              1    wreg     PTR struct _IO_FILE
  1579 ;;		 -> sprintf@f(5), 
  1580 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1581 ;;		 -> STR_1(3), 
  1582 ;;  ap              1   64[BANK0 ] PTR PTR void 
  1583 ;;		 -> sprintf@ap(1), 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  1586 ;;		 -> sprintf@f(5), 
  1587 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1588 ;;		 -> STR_1(3), 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  2   62[BANK0 ] int 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1598 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1599 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1600 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1601 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1602 ;;Total ram usage:        8 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    6
  1605 ;; This function calls:
  1606 ;;		_vfpfcnvrt
  1607 ;; This function is called by:
  1608 ;;		_sprintf
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           
  1613                           ;psect for function _vfprintf
  1614  00F2                     _vfprintf:	
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1618                           ;vfprintf@fp stored from wreg
  1619  00F2  0020               	movlb	0	; select bank0
  1620  00F3  00E3               	movwf	vfprintf@fp
  1621  00F4                     l1813:	
  1622                           
  1623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1624  00F4  085F               	movf	vfprintf@fmt+1,w
  1625  00F5  00E5               	movwf	vfprintf@cfmt+1
  1626  00F6  085E               	movf	vfprintf@fmt,w
  1627  00F7  00E4               	movwf	vfprintf@cfmt
  1628  00F8                     l1815:	
  1629                           
  1630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1631  00F8  0021               	movlb	1	; select bank1
  1632  00F9  01A0               	clrf	_nout^(0+128)
  1633  00FA  01A1               	clrf	(_nout+1)^(0+128)
  1634                           
  1635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1636  00FB  2910               	goto	l1819
  1637  00FC                     l1817:	
  1638                           
  1639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1640  00FC  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1641  00FD  00E1               	movwf	??_vfprintf
  1642  00FE  0861               	movf	??_vfprintf,w
  1643  00FF  00CE               	movwf	vfpfcnvrt@fmt
  1644  0100  0860               	movf	vfprintf@ap,w
  1645  0101  00E2               	movwf	??_vfprintf+1
  1646  0102  0862               	movf	??_vfprintf+1,w
  1647  0103  00CF               	movwf	vfpfcnvrt@ap
  1648  0104  0863               	movf	vfprintf@fp,w
  1649  0105  3183  23C7  3180   	fcall	_vfpfcnvrt
  1650  0108  0020               	movlb	0	; select bank0
  1651  0109  084E               	movf	?_vfpfcnvrt,w
  1652  010A  0021               	movlb	1	; select bank1
  1653  010B  07A0               	addwf	_nout^(0+128),f
  1654  010C  0020               	movlb	0	; select bank0
  1655  010D  084F               	movf	?_vfpfcnvrt+1,w
  1656  010E  0021               	movlb	1	; select bank1
  1657  010F  3DA1               	addwfc	(_nout+1)^(0+128),f
  1658  0110                     l1819:	
  1659                           
  1660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1661  0110  0020               	movlb	0	; select bank0
  1662  0111  0864               	movf	vfprintf@cfmt,w
  1663  0112  0084               	movwf	4
  1664  0113  0865               	movf	vfprintf@cfmt+1,w
  1665  0114  0085               	movwf	5
  1666  0115  0012               	moviw fsr0++
  1667  0116  1D03               	btfss	3,2
  1668  0117  2919               	goto	u1451
  1669  0118  291A               	goto	u1450
  1670  0119                     u1451:	
  1671  0119  28FC               	goto	l1817
  1672  011A                     u1450:	
  1673  011A                     l1821:	
  1674                           
  1675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1676  011A  0021               	movlb	1	; select bank1
  1677  011B  0821               	movf	(_nout+1)^(0+128),w
  1678  011C  0020               	movlb	0	; select bank0
  1679  011D  00DF               	movwf	?_vfprintf+1
  1680  011E  0021               	movlb	1	; select bank1
  1681  011F  0820               	movf	_nout^(0+128),w
  1682  0120  0020               	movlb	0	; select bank0
  1683  0121  00DE               	movwf	?_vfprintf
  1684  0122                     l414:	
  1685  0122  0008               	return
  1686  0123                     __end_of_vfprintf:	
  1687                           
  1688                           	psect	text3
  1689  03C7                     __ptext3:	
  1690 ;; *************** function _vfpfcnvrt *****************
  1691 ;; Defined at:
  1692 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  fp              1    wreg     PTR struct _IO_FILE
  1695 ;;		 -> sprintf@f(5), 
  1696 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1697 ;;		 -> vfprintf@cfmt(2), 
  1698 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1699 ;;		 -> sprintf@ap(1), 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1702 ;;		 -> sprintf@f(5), 
  1703 ;;  ll              8   53[BANK0 ] long long 
  1704 ;;  llu             8    0        unsigned long long 
  1705 ;;  f               4    0        unsigned long long 
  1706 ;;  ct              3    0        unsigned char [3]
  1707 ;;  vp              2    0        PTR void 
  1708 ;;  i               2    0        int 
  1709 ;;  done            2    0        int 
  1710 ;;  cp              2    0        PTR unsigned char 
  1711 ;;  c               1    0        unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  2   46[BANK0 ] int 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1721 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1722 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1723 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1724 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1725 ;;Total ram usage:       16 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    5
  1728 ;; This function calls:
  1729 ;;		_dtoa
  1730 ;;		_fputc
  1731 ;; This function is called by:
  1732 ;;		_vfprintf
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _vfpfcnvrt
  1738  03C7                     _vfpfcnvrt:	
  1739                           
  1740                           ;incstack = 0
  1741                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1742                           ;vfpfcnvrt@fp stored from wreg
  1743  03C7  0020               	movlb	0	; select bank0
  1744  03C8  00DD               	movwf	vfpfcnvrt@fp
  1745  03C9                     l1691:	
  1746                           
  1747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1748  03C9  084E               	movf	vfpfcnvrt@fmt,w
  1749  03CA  0086               	movwf	6
  1750  03CB  0187               	clrf	7
  1751  03CC  3F40               	moviw [0]fsr1
  1752  03CD  00D0               	movwf	??_vfpfcnvrt
  1753  03CE  3F41               	moviw [1]fsr1
  1754  03CF  00D1               	movwf	??_vfpfcnvrt+1
  1755  03D0  0850               	movf	??_vfpfcnvrt,w
  1756  03D1  0084               	movwf	4
  1757  03D2  0851               	movf	??_vfpfcnvrt+1,w
  1758  03D3  0085               	movwf	5
  1759  03D4  0012               	moviw fsr0++
  1760  03D5  3A25               	xorlw	37
  1761  03D6  1D03               	btfss	3,2
  1762  03D7  2BD9               	goto	u1281
  1763  03D8  2BDA               	goto	u1280
  1764  03D9                     u1281:	
  1765  03D9  2C7E               	goto	l1727
  1766  03DA                     u1280:	
  1767  03DA                     l1693:	
  1768                           
  1769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1770  03DA  084E               	movf	vfpfcnvrt@fmt,w
  1771  03DB  0086               	movwf	6
  1772  03DC  0187               	clrf	7
  1773  03DD  3001               	movlw	1
  1774  03DE  0781               	addwf	1,f
  1775  03DF  3141               	addfsr 1,1
  1776  03E0  1803               	skipnc
  1777  03E1  0A81               	incf	1,f
  1778  03E2                     l1695:	
  1779                           
  1780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1781  03E2  0021               	movlb	1	; select bank1
  1782  03E3  01A2               	clrf	_width^(0+128)
  1783  03E4  01A3               	clrf	(_width+1)^(0+128)
  1784  03E5  0020               	movlb	0	; select bank0
  1785  03E6  01EE               	clrf	_flags
  1786  03E7  01EF               	clrf	_flags+1
  1787  03E8                     l1697:	
  1788                           
  1789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1790  03E8  30FF               	movlw	255
  1791  03E9  00EC               	movwf	_prec
  1792  03EA  30FF               	movlw	255
  1793  03EB  00ED               	movwf	_prec+1
  1794  03EC                     l1699:	
  1795                           
  1796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1797  03EC  084E               	movf	vfpfcnvrt@fmt,w
  1798  03ED  0086               	movwf	6
  1799  03EE  0187               	clrf	7
  1800  03EF  3F40               	moviw [0]fsr1
  1801  03F0  00D0               	movwf	??_vfpfcnvrt
  1802  03F1  3F41               	moviw [1]fsr1
  1803  03F2  00D1               	movwf	??_vfpfcnvrt+1
  1804  03F3  0850               	movf	??_vfpfcnvrt,w
  1805  03F4  0084               	movwf	4
  1806  03F5  0851               	movf	??_vfpfcnvrt+1,w
  1807  03F6  0085               	movwf	5
  1808  03F7  0012               	moviw fsr0++
  1809  03F8  3A64               	xorlw	100
  1810  03F9  1903               	btfsc	3,2
  1811  03FA  2BFC               	goto	u1291
  1812  03FB  2BFD               	goto	u1290
  1813  03FC                     u1291:	
  1814  03FC  2C0E               	goto	l1703
  1815  03FD                     u1290:	
  1816  03FD                     l1701:	
  1817  03FD  084E               	movf	vfpfcnvrt@fmt,w
  1818  03FE  0086               	movwf	6
  1819  03FF  0187               	clrf	7
  1820  0400  3F40               	moviw [0]fsr1
  1821  0401  00D0               	movwf	??_vfpfcnvrt
  1822  0402  3F41               	moviw [1]fsr1
  1823  0403  00D1               	movwf	??_vfpfcnvrt+1
  1824  0404  0850               	movf	??_vfpfcnvrt,w
  1825  0405  0084               	movwf	4
  1826  0406  0851               	movf	??_vfpfcnvrt+1,w
  1827  0407  0085               	movwf	5
  1828  0408  0012               	moviw fsr0++
  1829  0409  3A69               	xorlw	105
  1830  040A  1D03               	btfss	3,2
  1831  040B  2C0D               	goto	u1301
  1832  040C  2C0E               	goto	u1300
  1833  040D                     u1301:	
  1834  040D  2C49               	goto	l1711
  1835  040E                     u1300:	
  1836  040E                     l1703:	
  1837                           
  1838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1839  040E  084E               	movf	vfpfcnvrt@fmt,w
  1840  040F  0086               	movwf	6
  1841  0410  0187               	clrf	7
  1842  0411  3001               	movlw	1
  1843  0412  0781               	addwf	1,f
  1844  0413  3141               	addfsr 1,1
  1845  0414  1803               	skipnc
  1846  0415  0A81               	incf	1,f
  1847  0416                     l1705:	
  1848                           
  1849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1850  0416  084F               	movf	vfpfcnvrt@ap,w
  1851  0417  0086               	movwf	6
  1852  0418  0187               	clrf	7
  1853  0419  0801               	movf	1,w
  1854  041A  0084               	movwf	4
  1855  041B  0185               	clrf	5
  1856  041C  3002               	movlw	2
  1857  041D  0781               	addwf	1,f
  1858  041E  3F00               	moviw [0]fsr0
  1859  041F  00D0               	movwf	??_vfpfcnvrt
  1860  0420  3F01               	moviw [1]fsr0
  1861  0421  00D1               	movwf	??_vfpfcnvrt+1
  1862  0422  0850               	movf	??_vfpfcnvrt,w
  1863  0423  00D5               	movwf	vfpfcnvrt@ll
  1864  0424  0851               	movf	??_vfpfcnvrt+1,w
  1865  0425  00D6               	movwf	vfpfcnvrt@ll+1
  1866  0426  0D89               	rlf	9,f
  1867  0427  3B89               	subwfb	9,f
  1868  0428  0989               	comf	9,f
  1869  0429  00D7               	movwf	vfpfcnvrt@ll+2
  1870  042A  00D8               	movwf	vfpfcnvrt@ll+3
  1871  042B  00D9               	movwf	vfpfcnvrt@ll+4
  1872  042C  00DA               	movwf	vfpfcnvrt@ll+5
  1873  042D  00DB               	movwf	vfpfcnvrt@ll+6
  1874  042E  00DC               	movwf	vfpfcnvrt@ll+7
  1875  042F                     l1707:	
  1876                           
  1877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1878  042F  0855               	movf	vfpfcnvrt@ll,w
  1879  0430  00B0               	movwf	dtoa@d
  1880  0431  0856               	movf	vfpfcnvrt@ll+1,w
  1881  0432  00B1               	movwf	dtoa@d+1
  1882  0433  0857               	movf	vfpfcnvrt@ll+2,w
  1883  0434  00B2               	movwf	dtoa@d+2
  1884  0435  0858               	movf	vfpfcnvrt@ll+3,w
  1885  0436  00B3               	movwf	dtoa@d+3
  1886  0437  0859               	movf	vfpfcnvrt@ll+4,w
  1887  0438  00B4               	movwf	dtoa@d+4
  1888  0439  085A               	movf	vfpfcnvrt@ll+5,w
  1889  043A  00B5               	movwf	dtoa@d+5
  1890  043B  085B               	movf	vfpfcnvrt@ll+6,w
  1891  043C  00B6               	movwf	dtoa@d+6
  1892  043D  085C               	movf	vfpfcnvrt@ll+7,w
  1893  043E  00B7               	movwf	dtoa@d+7
  1894  043F  085D               	movf	vfpfcnvrt@fp,w
  1895  0440  3186  268D  3183   	fcall	_dtoa
  1896  0443  0020               	movlb	0	; select bank0
  1897  0444  0831               	movf	?_dtoa+1,w
  1898  0445  00CF               	movwf	?_vfpfcnvrt+1
  1899  0446  0830               	movf	?_dtoa,w
  1900  0447  00CE               	movwf	?_vfpfcnvrt
  1901  0448  2CA1               	goto	l407
  1902  0449                     l1711:	
  1903                           
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1905  0449  084E               	movf	vfpfcnvrt@fmt,w
  1906  044A  0086               	movwf	6
  1907  044B  0187               	clrf	7
  1908  044C  3F40               	moviw [0]fsr1
  1909  044D  00D0               	movwf	??_vfpfcnvrt
  1910  044E  3F41               	moviw [1]fsr1
  1911  044F  00D1               	movwf	??_vfpfcnvrt+1
  1912  0450  0850               	movf	??_vfpfcnvrt,w
  1913  0451  0084               	movwf	4
  1914  0452  0851               	movf	??_vfpfcnvrt+1,w
  1915  0453  0085               	movwf	5
  1916  0454  0012               	moviw fsr0++
  1917  0455  3A25               	xorlw	37
  1918  0456  1D03               	btfss	3,2
  1919  0457  2C59               	goto	u1311
  1920  0458  2C5A               	goto	u1310
  1921  0459                     u1311:	
  1922  0459  2C73               	goto	l1721
  1923  045A                     u1310:	
  1924  045A                     l1713:	
  1925                           
  1926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1927  045A  084E               	movf	vfpfcnvrt@fmt,w
  1928  045B  0086               	movwf	6
  1929  045C  0187               	clrf	7
  1930  045D  3001               	movlw	1
  1931  045E  0781               	addwf	1,f
  1932  045F  3141               	addfsr 1,1
  1933  0460  1803               	skipnc
  1934  0461  0A81               	incf	1,f
  1935  0462                     l1715:	
  1936                           
  1937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1938  0462  3025               	movlw	37
  1939  0463  00F0               	movwf	fputc@c
  1940  0464  3000               	movlw	0
  1941  0465  00F1               	movwf	fputc@c+1
  1942  0466  085D               	movf	vfpfcnvrt@fp,w
  1943  0467  00D0               	movwf	??_vfpfcnvrt
  1944  0468  0850               	movf	??_vfpfcnvrt,w
  1945  0469  00F2               	movwf	fputc@fp
  1946  046A  3181  21EE  3183   	fcall	_fputc
  1947  046D                     l1717:	
  1948                           
  1949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1950  046D  3001               	movlw	1
  1951  046E  0020               	movlb	0	; select bank0
  1952  046F  00CE               	movwf	?_vfpfcnvrt
  1953  0470  3000               	movlw	0
  1954  0471  00CF               	movwf	?_vfpfcnvrt+1
  1955  0472  2CA1               	goto	l407
  1956  0473                     l1721:	
  1957                           
  1958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1959  0473  084E               	movf	vfpfcnvrt@fmt,w
  1960  0474  0086               	movwf	6
  1961  0475  0187               	clrf	7
  1962  0476  3001               	movlw	1
  1963  0477  0781               	addwf	1,f
  1964  0478  3141               	addfsr 1,1
  1965  0479  1803               	skipnc
  1966  047A  0A81               	incf	1,f
  1967  047B                     l1723:	
  1968                           
  1969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1970  047B  01CE               	clrf	?_vfpfcnvrt
  1971  047C  01CF               	clrf	?_vfpfcnvrt+1
  1972  047D  2CA1               	goto	l407
  1973  047E                     l1727:	
  1974                           
  1975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1976  047E  084E               	movf	vfpfcnvrt@fmt,w
  1977  047F  0086               	movwf	6
  1978  0480  0187               	clrf	7
  1979  0481  3F40               	moviw [0]fsr1
  1980  0482  00D0               	movwf	??_vfpfcnvrt
  1981  0483  3F41               	moviw [1]fsr1
  1982  0484  00D1               	movwf	??_vfpfcnvrt+1
  1983  0485  0850               	movf	??_vfpfcnvrt,w
  1984  0486  0084               	movwf	4
  1985  0487  0851               	movf	??_vfpfcnvrt+1,w
  1986  0488  0085               	movwf	5
  1987  0489  0800               	movf	0,w	;code access
  1988  048A  00D2               	movwf	??_vfpfcnvrt+2
  1989  048B  01D3               	clrf	??_vfpfcnvrt+3
  1990  048C  0852               	movf	??_vfpfcnvrt+2,w
  1991  048D  00F0               	movwf	fputc@c
  1992  048E  0853               	movf	??_vfpfcnvrt+3,w
  1993  048F  00F1               	movwf	fputc@c+1
  1994  0490  085D               	movf	vfpfcnvrt@fp,w
  1995  0491  00D4               	movwf	??_vfpfcnvrt+4
  1996  0492  0854               	movf	??_vfpfcnvrt+4,w
  1997  0493  00F2               	movwf	fputc@fp
  1998  0494  3181  21EE  3183   	fcall	_fputc
  1999  0497                     l1729:	
  2000                           
  2001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2002  0497  0020               	movlb	0	; select bank0
  2003  0498  084E               	movf	vfpfcnvrt@fmt,w
  2004  0499  0086               	movwf	6
  2005  049A  0187               	clrf	7
  2006  049B  3001               	movlw	1
  2007  049C  0781               	addwf	1,f
  2008  049D  3141               	addfsr 1,1
  2009  049E  1803               	skipnc
  2010  049F  0A81               	incf	1,f
  2011  04A0  2C6D               	goto	l1717
  2012  04A1                     l407:	
  2013  04A1  0008               	return
  2014  04A2                     __end_of_vfpfcnvrt:	
  2015                           
  2016                           	psect	text4
  2017  068D                     __ptext4:	
  2018 ;; *************** function _dtoa *****************
  2019 ;; Defined at:
  2020 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  fp              1    wreg     PTR struct _IO_FILE
  2023 ;;		 -> sprintf@f(5), 
  2024 ;;  d               8   16[BANK0 ] long long 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  2027 ;;		 -> sprintf@f(5), 
  2028 ;;  n               8   36[BANK0 ] long long 
  2029 ;;  i               2   44[BANK0 ] int 
  2030 ;;  s               2   34[BANK0 ] int 
  2031 ;;  w               2   32[BANK0 ] int 
  2032 ;;  p               2   30[BANK0 ] int 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  2   16[BANK0 ] int 
  2035 ;; Registers used:
  2036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2042 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2043 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2044 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2045 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2046 ;;Total ram usage:       30 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    4
  2049 ;; This function calls:
  2050 ;;		___aodiv
  2051 ;;		___aomod
  2052 ;;		_abs
  2053 ;;		_pad
  2054 ;; This function is called by:
  2055 ;;		_vfpfcnvrt
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _dtoa
  2061  068D                     _dtoa:	
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2065                           ;dtoa@fp stored from wreg
  2066  068D  0020               	movlb	0	; select bank0
  2067  068E  00BD               	movwf	dtoa@fp
  2068  068F                     l1589:	
  2069                           
  2070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2071  068F  0830               	movf	dtoa@d,w
  2072  0690  00C4               	movwf	dtoa@n
  2073  0691  0831               	movf	dtoa@d+1,w
  2074  0692  00C5               	movwf	dtoa@n+1
  2075  0693  0832               	movf	dtoa@d+2,w
  2076  0694  00C6               	movwf	dtoa@n+2
  2077  0695  0833               	movf	dtoa@d+3,w
  2078  0696  00C7               	movwf	dtoa@n+3
  2079  0697  0834               	movf	dtoa@d+4,w
  2080  0698  00C8               	movwf	dtoa@n+4
  2081  0699  0835               	movf	dtoa@d+5,w
  2082  069A  00C9               	movwf	dtoa@n+5
  2083  069B  0836               	movf	dtoa@d+6,w
  2084  069C  00CA               	movwf	dtoa@n+6
  2085  069D  0837               	movf	dtoa@d+7,w
  2086  069E  00CB               	movwf	dtoa@n+7
  2087  069F                     l1591:	
  2088                           
  2089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2090  069F  3044               	movlw	low dtoa@n
  2091  06A0  0086               	movwf	6
  2092  06A1  3000               	movlw	high dtoa@n
  2093  06A2  0087               	movwf	7
  2094  06A3  3F47               	moviw [7]fsr1
  2095  06A4  00B8               	movwf	??_dtoa
  2096  06A5  1BB8               	btfsc	??_dtoa,7
  2097  06A6  2EA8               	goto	u1101
  2098  06A7  2EAA               	goto	u1100
  2099  06A8                     u1101:	
  2100  06A8  3001               	movlw	1
  2101  06A9  2EAB               	goto	u1110
  2102  06AA                     u1100:	
  2103  06AA  3000               	movlw	0
  2104  06AB                     u1110:	
  2105  06AB  0020               	movlb	0	; select bank0
  2106  06AC  00B9               	movwf	??_dtoa+1
  2107  06AD  01BA               	clrf	??_dtoa+2
  2108  06AE  0839               	movf	??_dtoa+1,w
  2109  06AF  00C2               	movwf	dtoa@s
  2110  06B0  083A               	movf	??_dtoa+2,w
  2111  06B1  00C3               	movwf	dtoa@s+1
  2112  06B2                     l1593:	
  2113                           
  2114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2115  06B2  0842               	movf	dtoa@s,w
  2116  06B3  0443               	iorwf	dtoa@s+1,w
  2117  06B4  1903               	btfsc	3,2
  2118  06B5  2EB7               	goto	u1121
  2119  06B6  2EB8               	goto	u1120
  2120  06B7                     u1121:	
  2121  06B7  2ED6               	goto	l377
  2122  06B8                     u1120:	
  2123  06B8                     l1595:	
  2124                           
  2125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2126  06B8  09C4               	comf	dtoa@n,f
  2127  06B9  09C5               	comf	dtoa@n+1,f
  2128  06BA  09C6               	comf	dtoa@n+2,f
  2129  06BB  09C7               	comf	dtoa@n+3,f
  2130  06BC  09C8               	comf	dtoa@n+4,f
  2131  06BD  09C9               	comf	dtoa@n+5,f
  2132  06BE  09CA               	comf	dtoa@n+6,f
  2133  06BF  09CB               	comf	dtoa@n+7,f
  2134  06C0  0AC4               	incf	dtoa@n,f
  2135  06C1  1D03               	skipz
  2136  06C2  2ED6               	goto	u113lld
  2137  06C3  0AC5               	incf	dtoa@n+1,f
  2138  06C4  1D03               	skipz
  2139  06C5  2ED6               	goto	u113lld
  2140  06C6  0AC6               	incf	dtoa@n+2,f
  2141  06C7  1D03               	skipz
  2142  06C8  2ED6               	goto	u113lld
  2143  06C9  0AC7               	incf	dtoa@n+3,f
  2144  06CA  1D03               	skipz
  2145  06CB  2ED6               	goto	u113lld
  2146  06CC  0AC8               	incf	dtoa@n+4,f
  2147  06CD  1D03               	skipz
  2148  06CE  2ED6               	goto	u113lld
  2149  06CF  0AC9               	incf	dtoa@n+5,f
  2150  06D0  1D03               	skipz
  2151  06D1  2ED6               	goto	u113lld
  2152  06D2  0ACA               	incf	dtoa@n+6,f
  2153  06D3  1D03               	skipz
  2154  06D4  2ED6               	goto	u113lld
  2155  06D5  0ACB               	incf	dtoa@n+7,f
  2156  06D6                     u113lld:	
  2157  06D6                     l377:	
  2158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 284:     }
  2159                           
  2160                           
  2161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2162  06D6  0020               	movlb	0	; select bank0
  2163  06D7  1BED               	btfsc	_prec+1,7
  2164  06D8  2EDA               	goto	u1141
  2165  06D9  2EDB               	goto	u1140
  2166  06DA                     u1141:	
  2167  06DA  2EDF               	goto	l378
  2168  06DB                     u1140:	
  2169  06DB                     l1597:	
  2170                           
  2171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2172  06DB  30FD               	movlw	253
  2173  06DC  05EE               	andwf	_flags,f
  2174  06DD  30FF               	movlw	255
  2175  06DE  05EF               	andwf	_flags+1,f
  2176  06DF                     l378:	
  2177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 289:     }
  2178                           
  2179                           
  2180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2181  06DF  086D               	movf	_prec+1,w
  2182  06E0  3A80               	xorlw	128
  2183  06E1  00B8               	movwf	??_dtoa
  2184  06E2  3080               	movlw	128
  2185  06E3  0238               	subwf	??_dtoa,w
  2186  06E4  1D03               	skipz
  2187  06E5  2EE8               	goto	u1155
  2188  06E6  3001               	movlw	1
  2189  06E7  026C               	subwf	_prec,w
  2190  06E8                     u1155:	
  2191  06E8  1803               	skipnc
  2192  06E9  2EEB               	goto	u1151
  2193  06EA  2EEC               	goto	u1150
  2194  06EB                     u1151:	
  2195  06EB  2EF2               	goto	l1601
  2196  06EC                     u1150:	
  2197  06EC                     l1599:	
  2198  06EC  3001               	movlw	1
  2199  06ED  0020               	movlb	0	; select bank0
  2200  06EE  00BE               	movwf	dtoa@p
  2201  06EF  3000               	movlw	0
  2202  06F0  00BF               	movwf	dtoa@p+1
  2203  06F1  2EF7               	goto	l382
  2204  06F2                     l1601:	
  2205  06F2  0020               	movlb	0	; select bank0
  2206  06F3  086D               	movf	_prec+1,w
  2207  06F4  00BF               	movwf	dtoa@p+1
  2208  06F5  086C               	movf	_prec,w
  2209  06F6  00BE               	movwf	dtoa@p
  2210  06F7                     l382:	
  2211                           
  2212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2213  06F7  0021               	movlb	1	; select bank1
  2214  06F8  0823               	movf	(_width+1)^(0+128),w
  2215  06F9  0020               	movlb	0	; select bank0
  2216  06FA  00C1               	movwf	dtoa@w+1
  2217  06FB  0021               	movlb	1	; select bank1
  2218  06FC  0822               	movf	_width^(0+128),w
  2219  06FD  0020               	movlb	0	; select bank0
  2220  06FE  00C0               	movwf	dtoa@w
  2221  06FF                     l1603:	
  2222                           
  2223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2224  06FF  0842               	movf	dtoa@s,w
  2225  0700  0443               	iorwf	dtoa@s+1,w
  2226  0701  1D03               	btfss	3,2
  2227  0702  2F04               	goto	u1161
  2228  0703  2F05               	goto	u1160
  2229  0704                     u1161:	
  2230  0704  2F09               	goto	l1607
  2231  0705                     u1160:	
  2232  0705                     l1605:	
  2233  0705  1D6E               	btfss	_flags,2
  2234  0706  2F08               	goto	u1171
  2235  0707  2F09               	goto	u1170
  2236  0708                     u1171:	
  2237  0708  2F0D               	goto	l383
  2238  0709                     u1170:	
  2239  0709                     l1607:	
  2240                           
  2241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2242  0709  30FF               	movlw	255
  2243  070A  07C0               	addwf	dtoa@w,f
  2244  070B  30FF               	movlw	255
  2245  070C  3DC1               	addwfc	dtoa@w+1,f
  2246  070D                     l383:	
  2247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 294:     }
  2248                           
  2249                           
  2250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2251  070D  301F               	movlw	31
  2252  070E  00CC               	movwf	dtoa@i
  2253  070F  3000               	movlw	0
  2254  0710  00CD               	movwf	dtoa@i+1
  2255  0711                     l1609:	
  2256                           
  2257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2258  0711  0021               	movlb	1	; select bank1
  2259  0712  01C5               	clrf	(_dbuf^(0+128)+31)
  2260                           
  2261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2262  0713  2F7C               	goto	l386
  2263  0714                     l1611:	
  2264                           
  2265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2266  0714  30FF               	movlw	255
  2267  0715  0020               	movlb	0	; select bank0
  2268  0716  07CC               	addwf	dtoa@i,f
  2269  0717  30FF               	movlw	255
  2270  0718  3DCD               	addwfc	dtoa@i+1,f
  2271  0719                     l1613:	
  2272                           
  2273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2274  0719  300A               	movlw	10
  2275  071A  00A0               	movwf	___aomod@divisor
  2276  071B  01A1               	clrf	___aomod@divisor+1
  2277  071C  01A2               	clrf	___aomod@divisor+2
  2278  071D  01A3               	clrf	___aomod@divisor+3
  2279  071E  01A4               	clrf	___aomod@divisor+4
  2280  071F  01A5               	clrf	___aomod@divisor+5
  2281  0720  01A6               	clrf	___aomod@divisor+6
  2282  0721  01A7               	clrf	___aomod@divisor+7
  2283  0722  0844               	movf	dtoa@n,w
  2284  0723  00A8               	movwf	___aomod@dividend
  2285  0724  0845               	movf	dtoa@n+1,w
  2286  0725  00A9               	movwf	___aomod@dividend+1
  2287  0726  0846               	movf	dtoa@n+2,w
  2288  0727  00AA               	movwf	___aomod@dividend+2
  2289  0728  0847               	movf	dtoa@n+3,w
  2290  0729  00AB               	movwf	___aomod@dividend+3
  2291  072A  0848               	movf	dtoa@n+4,w
  2292  072B  00AC               	movwf	___aomod@dividend+4
  2293  072C  0849               	movf	dtoa@n+5,w
  2294  072D  00AD               	movwf	___aomod@dividend+5
  2295  072E  084A               	movf	dtoa@n+6,w
  2296  072F  00AE               	movwf	___aomod@dividend+6
  2297  0730  084B               	movf	dtoa@n+7,w
  2298  0731  00AF               	movwf	___aomod@dividend+7
  2299  0732  3184  24A2  3186   	fcall	___aomod
  2300  0735  0020               	movlb	0	; select bank0
  2301  0736  0821               	movf	?___aomod+1,w
  2302  0737  00F4               	movwf	abs@a+1
  2303  0738  0820               	movf	?___aomod,w
  2304  0739  00F3               	movwf	abs@a
  2305  073A  3180  200C  3186   	fcall	_abs
  2306  073D  0873               	movf	?_abs,w
  2307  073E  3E30               	addlw	48
  2308  073F  0020               	movlb	0	; select bank0
  2309  0740  00B8               	movwf	??_dtoa
  2310  0741  084C               	movf	dtoa@i,w
  2311  0742  3EA6               	addlw	(low (_dbuf| 0))& (0+255)
  2312  0743  0086               	movwf	6
  2313  0744  0187               	clrf	7
  2314  0745  0838               	movf	??_dtoa,w
  2315  0746  0081               	movwf	1
  2316  0747                     l1615:	
  2317                           
  2318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2319  0747  30FF               	movlw	255
  2320  0748  07BE               	addwf	dtoa@p,f
  2321  0749  30FF               	movlw	255
  2322  074A  3DBF               	addwfc	dtoa@p+1,f
  2323  074B                     l1617:	
  2324                           
  2325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2326  074B  30FF               	movlw	255
  2327  074C  07C0               	addwf	dtoa@w,f
  2328  074D  30FF               	movlw	255
  2329  074E  3DC1               	addwfc	dtoa@w+1,f
  2330  074F                     l1619:	
  2331                           
  2332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2333  074F  300A               	movlw	10
  2334  0750  00A0               	movwf	___aodiv@divisor
  2335  0751  01A1               	clrf	___aodiv@divisor+1
  2336  0752  01A2               	clrf	___aodiv@divisor+2
  2337  0753  01A3               	clrf	___aodiv@divisor+3
  2338  0754  01A4               	clrf	___aodiv@divisor+4
  2339  0755  01A5               	clrf	___aodiv@divisor+5
  2340  0756  01A6               	clrf	___aodiv@divisor+6
  2341  0757  01A7               	clrf	___aodiv@divisor+7
  2342  0758  0844               	movf	dtoa@n,w
  2343  0759  00A8               	movwf	___aodiv@dividend
  2344  075A  0845               	movf	dtoa@n+1,w
  2345  075B  00A9               	movwf	___aodiv@dividend+1
  2346  075C  0846               	movf	dtoa@n+2,w
  2347  075D  00AA               	movwf	___aodiv@dividend+2
  2348  075E  0847               	movf	dtoa@n+3,w
  2349  075F  00AB               	movwf	___aodiv@dividend+3
  2350  0760  0848               	movf	dtoa@n+4,w
  2351  0761  00AC               	movwf	___aodiv@dividend+4
  2352  0762  0849               	movf	dtoa@n+5,w
  2353  0763  00AD               	movwf	___aodiv@dividend+5
  2354  0764  084A               	movf	dtoa@n+6,w
  2355  0765  00AE               	movwf	___aodiv@dividend+6
  2356  0766  084B               	movf	dtoa@n+7,w
  2357  0767  00AF               	movwf	___aodiv@dividend+7
  2358  0768  3185  258C  3186   	fcall	___aodiv
  2359  076B  0020               	movlb	0	; select bank0
  2360  076C  0820               	movf	?___aodiv,w
  2361  076D  00C4               	movwf	dtoa@n
  2362  076E  0821               	movf	?___aodiv+1,w
  2363  076F  00C5               	movwf	dtoa@n+1
  2364  0770  0822               	movf	?___aodiv+2,w
  2365  0771  00C6               	movwf	dtoa@n+2
  2366  0772  0823               	movf	?___aodiv+3,w
  2367  0773  00C7               	movwf	dtoa@n+3
  2368  0774  0824               	movf	?___aodiv+4,w
  2369  0775  00C8               	movwf	dtoa@n+4
  2370  0776  0825               	movf	?___aodiv+5,w
  2371  0777  00C9               	movwf	dtoa@n+5
  2372  0778  0826               	movf	?___aodiv+6,w
  2373  0779  00CA               	movwf	dtoa@n+6
  2374  077A  0827               	movf	?___aodiv+7,w
  2375  077B  00CB               	movwf	dtoa@n+7
  2376  077C                     l386:	
  2377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 305:     }
  2378                           
  2379                           
  2380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2381  077C  0020               	movlb	0	; select bank0
  2382  077D  084D               	movf	dtoa@i+1,w
  2383  077E  3A80               	xorlw	128
  2384  077F  00B8               	movwf	??_dtoa
  2385  0780  3080               	movlw	128
  2386  0781  0238               	subwf	??_dtoa,w
  2387  0782  1D03               	skipz
  2388  0783  2F86               	goto	u1185
  2389  0784  3001               	movlw	1
  2390  0785  024C               	subwf	dtoa@i,w
  2391  0786                     u1185:	
  2392  0786  1C03               	skipc
  2393  0787  2F89               	goto	u1181
  2394  0788  2F8A               	goto	u1180
  2395  0789                     u1181:	
  2396  0789  2FB7               	goto	l1629
  2397  078A                     u1180:	
  2398  078A                     l1621:	
  2399  078A  0020               	movlb	0	; select bank0
  2400  078B  0844               	movf	dtoa@n,w
  2401  078C  0445               	iorwf	dtoa@n+1,w
  2402  078D  0446               	iorwf	dtoa@n+2,w
  2403  078E  0447               	iorwf	dtoa@n+3,w
  2404  078F  0448               	iorwf	dtoa@n+4,w
  2405  0790  0449               	iorwf	dtoa@n+5,w
  2406  0791  044A               	iorwf	dtoa@n+6,w
  2407  0792  044B               	iorwf	dtoa@n+7,w
  2408  0793  1D03               	skipz
  2409  0794  2F96               	goto	u1191
  2410  0795  2F97               	goto	u1190
  2411  0796                     u1191:	
  2412  0796  2F14               	goto	l1611
  2413  0797                     u1190:	
  2414  0797                     l1623:	
  2415  0797  083F               	movf	dtoa@p+1,w
  2416  0798  3A80               	xorlw	128
  2417  0799  00B8               	movwf	??_dtoa
  2418  079A  3080               	movlw	128
  2419  079B  0238               	subwf	??_dtoa,w
  2420  079C  1D03               	skipz
  2421  079D  2FA0               	goto	u1205
  2422  079E  3001               	movlw	1
  2423  079F  023E               	subwf	dtoa@p,w
  2424  07A0                     u1205:	
  2425  07A0  1803               	skipnc
  2426  07A1  2FA3               	goto	u1201
  2427  07A2  2FA4               	goto	u1200
  2428  07A3                     u1201:	
  2429  07A3  2F14               	goto	l1611
  2430  07A4                     u1200:	
  2431  07A4                     l1625:	
  2432  07A4  0020               	movlb	0	; select bank0
  2433  07A5  0841               	movf	dtoa@w+1,w
  2434  07A6  3A80               	xorlw	128
  2435  07A7  00B8               	movwf	??_dtoa
  2436  07A8  3080               	movlw	128
  2437  07A9  0238               	subwf	??_dtoa,w
  2438  07AA  1D03               	skipz
  2439  07AB  2FAE               	goto	u1215
  2440  07AC  3001               	movlw	1
  2441  07AD  0240               	subwf	dtoa@w,w
  2442  07AE                     u1215:	
  2443  07AE  1C03               	skipc
  2444  07AF  2FB1               	goto	u1211
  2445  07B0  2FB2               	goto	u1210
  2446  07B1                     u1211:	
  2447  07B1  2FB7               	goto	l1629
  2448  07B2                     u1210:	
  2449  07B2                     l1627:	
  2450  07B2  0020               	movlb	0	; select bank0
  2451  07B3  18EE               	btfsc	_flags,1
  2452  07B4  2FB6               	goto	u1221
  2453  07B5  2FB7               	goto	u1220
  2454  07B6                     u1221:	
  2455  07B6  2F14               	goto	l1611
  2456  07B7                     u1220:	
  2457  07B7                     l1629:	
  2458                           
  2459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2460  07B7  0020               	movlb	0	; select bank0
  2461  07B8  0842               	movf	dtoa@s,w
  2462  07B9  0443               	iorwf	dtoa@s+1,w
  2463  07BA  1D03               	btfss	3,2
  2464  07BB  2FBD               	goto	u1231
  2465  07BC  2FBE               	goto	u1230
  2466  07BD                     u1231:	
  2467  07BD  2FC2               	goto	l1633
  2468  07BE                     u1230:	
  2469  07BE                     l1631:	
  2470  07BE  1D6E               	btfss	_flags,2
  2471  07BF  2FC1               	goto	u1241
  2472  07C0  2FC2               	goto	u1240
  2473  07C1                     u1241:	
  2474  07C1  2FDD               	goto	l1643
  2475  07C2                     u1240:	
  2476  07C2                     l1633:	
  2477                           
  2478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2479  07C2  30FF               	movlw	255
  2480  07C3  07CC               	addwf	dtoa@i,f
  2481  07C4  30FF               	movlw	255
  2482  07C5  3DCD               	addwfc	dtoa@i+1,f
  2483  07C6                     l1635:	
  2484                           
  2485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2486  07C6  0842               	movf	dtoa@s,w
  2487  07C7  0443               	iorwf	dtoa@s+1,w
  2488  07C8  1D03               	btfss	3,2
  2489  07C9  2FCB               	goto	u1251
  2490  07CA  2FCC               	goto	u1250
  2491  07CB                     u1251:	
  2492  07CB  2FD1               	goto	l1639
  2493  07CC                     u1250:	
  2494  07CC                     l1637:	
  2495  07CC  302B               	movlw	43
  2496  07CD  00BB               	movwf	_dtoa$635
  2497  07CE  3000               	movlw	0
  2498  07CF  00BC               	movwf	_dtoa$635+1
  2499  07D0  2FD5               	goto	l1641
  2500  07D1                     l1639:	
  2501  07D1  302D               	movlw	45
  2502  07D2  00BB               	movwf	_dtoa$635
  2503  07D3  3000               	movlw	0
  2504  07D4  00BC               	movwf	_dtoa$635+1
  2505  07D5                     l1641:	
  2506  07D5  083B               	movf	_dtoa$635,w
  2507  07D6  00B8               	movwf	??_dtoa
  2508  07D7  084C               	movf	dtoa@i,w
  2509  07D8  3EA6               	addlw	(low (_dbuf| 0))& (0+255)
  2510  07D9  0086               	movwf	6
  2511  07DA  0187               	clrf	7
  2512  07DB  0838               	movf	??_dtoa,w
  2513  07DC  0081               	movwf	1
  2514  07DD                     l1643:	
  2515                           
  2516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2517  07DD  084C               	movf	dtoa@i,w
  2518  07DE  3EA6               	addlw	(low (_dbuf| 0))& (0+255)
  2519  07DF  00B8               	movwf	??_dtoa
  2520  07E0  0838               	movf	??_dtoa,w
  2521  07E1  00A4               	movwf	pad@buf
  2522  07E2  0841               	movf	dtoa@w+1,w
  2523  07E3  00A6               	movwf	pad@p+1
  2524  07E4  0840               	movf	dtoa@w,w
  2525  07E5  00A5               	movwf	pad@p
  2526  07E6  083D               	movf	dtoa@fp,w
  2527  07E7  3182  223D  3186   	fcall	_pad
  2528  07EA  0020               	movlb	0	; select bank0
  2529  07EB  0825               	movf	?_pad+1,w
  2530  07EC  00B1               	movwf	?_dtoa+1
  2531  07ED  0824               	movf	?_pad,w
  2532  07EE  00B0               	movwf	?_dtoa
  2533  07EF                     l400:	
  2534  07EF  0008               	return
  2535  07F0                     __end_of_dtoa:	
  2536                           
  2537                           	psect	text5
  2538  023D                     __ptext5:	
  2539 ;; *************** function _pad *****************
  2540 ;; Defined at:
  2541 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  fp              1    wreg     PTR struct _IO_FILE
  2544 ;;		 -> sprintf@f(5), 
  2545 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2546 ;;		 -> dbuf(32), 
  2547 ;;  p               2    5[BANK0 ] int 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  2550 ;;		 -> sprintf@f(5), 
  2551 ;;  w               2    9[BANK0 ] int 
  2552 ;;  i               2    7[BANK0 ] int 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  2    4[BANK0 ] int 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2562 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2565 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;Total ram usage:        9 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    3
  2569 ;; This function calls:
  2570 ;;		_fputc
  2571 ;;		_fputs
  2572 ;;		_strlen
  2573 ;; This function is called by:
  2574 ;;		_dtoa
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function _pad
  2580  023D                     _pad:	
  2581                           
  2582                           ;incstack = 0
  2583                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2584                           ;pad@fp stored from wreg
  2585  023D  0020               	movlb	0	; select bank0
  2586  023E  00AB               	movwf	pad@fp
  2587  023F                     l1493:	
  2588                           
  2589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2590  023F  1C6E               	btfss	_flags,0
  2591  0240  2A42               	goto	u841
  2592  0241  2A43               	goto	u840
  2593  0242                     u841:	
  2594  0242  2A4B               	goto	l1497
  2595  0243                     u840:	
  2596  0243                     l1495:	
  2597                           
  2598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2599  0243  082B               	movf	pad@fp,w
  2600  0244  00FC               	movwf	??_pad
  2601  0245  087C               	movf	??_pad,w
  2602  0246  00F8               	movwf	fputs@fp
  2603  0247  0824               	movf	pad@buf,w
  2604  0248  3180  2069  3182   	fcall	_fputs
  2605  024B                     l1497:	
  2606                           
  2607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2608  024B  0020               	movlb	0	; select bank0
  2609  024C  1BA6               	btfsc	pad@p+1,7
  2610  024D  2A4F               	goto	u851
  2611  024E  2A50               	goto	u850
  2612  024F                     u851:	
  2613  024F  2A55               	goto	l1501
  2614  0250                     u850:	
  2615  0250                     l1499:	
  2616  0250  0826               	movf	pad@p+1,w
  2617  0251  00AA               	movwf	pad@w+1
  2618  0252  0825               	movf	pad@p,w
  2619  0253  00A9               	movwf	pad@w
  2620  0254  2A57               	goto	l369
  2621  0255                     l1501:	
  2622  0255  01A9               	clrf	pad@w
  2623  0256  01AA               	clrf	pad@w+1
  2624  0257                     l369:	
  2625                           
  2626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2627  0257  01A7               	clrf	pad@i
  2628  0258  01A8               	clrf	pad@i+1
  2629                           
  2630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2631  0259  2A6B               	goto	l1507
  2632  025A                     l1503:	
  2633                           
  2634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2635  025A  3020               	movlw	32
  2636  025B  00F0               	movwf	fputc@c
  2637  025C  3000               	movlw	0
  2638  025D  00F1               	movwf	fputc@c+1
  2639  025E  0020               	movlb	0	; select bank0
  2640  025F  082B               	movf	pad@fp,w
  2641  0260  00FC               	movwf	??_pad
  2642  0261  087C               	movf	??_pad,w
  2643  0262  00F2               	movwf	fputc@fp
  2644  0263  3181  21EE  3182   	fcall	_fputc
  2645  0266                     l1505:	
  2646                           
  2647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2648  0266  3001               	movlw	1
  2649  0267  0020               	movlb	0	; select bank0
  2650  0268  07A7               	addwf	pad@i,f
  2651  0269  3000               	movlw	0
  2652  026A  3DA8               	addwfc	pad@i+1,f
  2653  026B                     l1507:	
  2654                           
  2655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2656  026B  0828               	movf	pad@i+1,w
  2657  026C  3A80               	xorlw	128
  2658  026D  00FC               	movwf	??_pad
  2659  026E  082A               	movf	pad@w+1,w
  2660  026F  3A80               	xorlw	128
  2661  0270  027C               	subwf	??_pad,w
  2662  0271  1D03               	skipz
  2663  0272  2A75               	goto	u865
  2664  0273  0829               	movf	pad@w,w
  2665  0274  0227               	subwf	pad@i,w
  2666  0275                     u865:	
  2667  0275  1C03               	skipc
  2668  0276  2A78               	goto	u861
  2669  0277  2A79               	goto	u860
  2670  0278                     u861:	
  2671  0278  2A5A               	goto	l1503
  2672  0279                     u860:	
  2673  0279                     l372:	
  2674                           
  2675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2676  0279  0020               	movlb	0	; select bank0
  2677  027A  186E               	btfsc	_flags,0
  2678  027B  2A7D               	goto	u871
  2679  027C  2A7E               	goto	u870
  2680  027D                     u871:	
  2681  027D  2A86               	goto	l1511
  2682  027E                     u870:	
  2683  027E                     l1509:	
  2684                           
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2686  027E  082B               	movf	pad@fp,w
  2687  027F  00FC               	movwf	??_pad
  2688  0280  087C               	movf	??_pad,w
  2689  0281  00F8               	movwf	fputs@fp
  2690  0282  0824               	movf	pad@buf,w
  2691  0283  3180  2069  3182   	fcall	_fputs
  2692  0286                     l1511:	
  2693                           
  2694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2695  0286  0020               	movlb	0	; select bank0
  2696  0287  0824               	movf	pad@buf,w
  2697  0288  318F  27E7  3182   	fcall	_strlen
  2698  028B  0020               	movlb	0	; select bank0
  2699  028C  0829               	movf	pad@w,w
  2700  028D  0770               	addwf	?_strlen,w
  2701  028E  00A4               	movwf	?_pad
  2702  028F  082A               	movf	pad@w+1,w
  2703  0290  3D71               	addwfc	?_strlen+1,w
  2704  0291  00A5               	movwf	?_pad+1
  2705  0292                     l374:	
  2706  0292  0008               	return
  2707  0293                     __end_of_pad:	
  2708                           
  2709                           	psect	text6
  2710  0FE7                     __ptext6:	
  2711 ;; *************** function _strlen *****************
  2712 ;; Defined at:
  2713 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  s               1    wreg     PTR const unsigned char 
  2716 ;;		 -> dbuf(32), 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  s               1    4[COMMON] PTR const unsigned char 
  2719 ;;		 -> dbuf(32), 
  2720 ;;  a               1    3[COMMON] PTR const unsigned char 
  2721 ;;		 -> dbuf(32), 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  2    0[COMMON] unsigned int 
  2724 ;; Registers used:
  2725 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2734 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2735 ;;Total ram usage:        5 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_pad
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           
  2745                           ;psect for function _strlen
  2746  0FE7                     _strlen:	
  2747                           
  2748                           ;incstack = 0
  2749                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2750                           ;strlen@s stored from wreg
  2751  0FE7  00F4               	movwf	strlen@s
  2752  0FE8                     l1471:	
  2753  0FE8  0874               	movf	strlen@s,w
  2754  0FE9  00F2               	movwf	??_strlen
  2755  0FEA  0872               	movf	??_strlen,w
  2756  0FEB  00F3               	movwf	strlen@a
  2757  0FEC  2FF1               	goto	l1475
  2758  0FED                     l1473:	
  2759  0FED  3001               	movlw	1
  2760  0FEE  00F2               	movwf	??_strlen
  2761  0FEF  0872               	movf	??_strlen,w
  2762  0FF0  07F4               	addwf	strlen@s,f
  2763  0FF1                     l1475:	
  2764  0FF1  0874               	movf	strlen@s,w
  2765  0FF2  0086               	movwf	6
  2766  0FF3  0187               	clrf	7
  2767  0FF4  0801               	movf	1,w
  2768  0FF5  1D03               	btfss	3,2
  2769  0FF6  2FF8               	goto	u831
  2770  0FF7  2FF9               	goto	u830
  2771  0FF8                     u831:	
  2772  0FF8  2FED               	goto	l1473
  2773  0FF9                     u830:	
  2774  0FF9                     l1477:	
  2775  0FF9  0873               	movf	strlen@a,w
  2776  0FFA  0274               	subwf	strlen@s,w
  2777  0FFB  00F0               	movwf	?_strlen
  2778  0FFC  01F1               	clrf	?_strlen+1
  2779  0FFD  1BF0               	btfsc	?_strlen,7
  2780  0FFE  03F1               	decf	?_strlen+1,f
  2781  0FFF                     l911:	
  2782  0FFF  0008               	return
  2783  1000                     __end_of_strlen:	
  2784                           
  2785                           	psect	text7
  2786  0069                     __ptext7:	
  2787 ;; *************** function _fputs *****************
  2788 ;; Defined at:
  2789 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  s               1    wreg     PTR const unsigned char 
  2792 ;;		 -> dbuf(32), 
  2793 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2794 ;;		 -> sprintf@f(5), 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2797 ;;		 -> dbuf(32), 
  2798 ;;  i               2    1[BANK0 ] int 
  2799 ;;  c               1    0[BANK0 ] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  2    8[COMMON] int 
  2802 ;; Registers used:
  2803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2809 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;Total ram usage:        8 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:    2
  2816 ;; This function calls:
  2817 ;;		_fputc
  2818 ;; This function is called by:
  2819 ;;		_pad
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           
  2824                           ;psect for function _fputs
  2825  0069                     _fputs:	
  2826                           
  2827                           ;incstack = 0
  2828                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2829                           ;fputs@s stored from wreg
  2830  0069  0020               	movlb	0	; select bank0
  2831  006A  00A3               	movwf	fputs@s
  2832  006B                     l1463:	
  2833  006B  01A1               	clrf	fputs@i
  2834  006C  01A2               	clrf	fputs@i+1
  2835  006D  2881               	goto	l1469
  2836  006E                     l1465:	
  2837  006E  0820               	movf	fputs@c,w
  2838  006F  00F9               	movwf	??_fputs
  2839  0070  01FA               	clrf	??_fputs+1
  2840  0071  0879               	movf	??_fputs,w
  2841  0072  00F0               	movwf	fputc@c
  2842  0073  087A               	movf	??_fputs+1,w
  2843  0074  00F1               	movwf	fputc@c+1
  2844  0075  0878               	movf	fputs@fp,w
  2845  0076  00FB               	movwf	??_fputs+2
  2846  0077  087B               	movf	??_fputs+2,w
  2847  0078  00F2               	movwf	fputc@fp
  2848  0079  3181  21EE  3180   	fcall	_fputc
  2849  007C                     l1467:	
  2850  007C  3001               	movlw	1
  2851  007D  0020               	movlb	0	; select bank0
  2852  007E  07A1               	addwf	fputs@i,f
  2853  007F  3000               	movlw	0
  2854  0080  3DA2               	addwfc	fputs@i+1,f
  2855  0081                     l1469:	
  2856  0081  0821               	movf	fputs@i,w
  2857  0082  0723               	addwf	fputs@s,w
  2858  0083  00F9               	movwf	??_fputs
  2859  0084  0879               	movf	??_fputs,w
  2860  0085  0086               	movwf	6
  2861  0086  0187               	clrf	7
  2862  0087  0801               	movf	1,w
  2863  0088  00FA               	movwf	??_fputs+1
  2864  0089  087A               	movf	??_fputs+1,w
  2865  008A  00A0               	movwf	fputs@c
  2866  008B  0820               	movf	fputs@c,w
  2867  008C  1D03               	btfss	3,2
  2868  008D  288F               	goto	u821
  2869  008E  2890               	goto	u820
  2870  008F                     u821:	
  2871  008F  286E               	goto	l1465
  2872  0090                     u820:	
  2873  0090                     l895:	
  2874  0090  0008               	return
  2875  0091                     __end_of_fputs:	
  2876                           
  2877                           	psect	text8
  2878  01EE                     __ptext8:	
  2879 ;; *************** function _fputc *****************
  2880 ;; Defined at:
  2881 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  c               2    0[COMMON] int 
  2884 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  2885 ;;		 -> sprintf@f(5), 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  2    0[COMMON] int 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2897 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2899 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2900 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;Total ram usage:        8 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    1
  2904 ;; This function calls:
  2905 ;;		_putch
  2906 ;; This function is called by:
  2907 ;;		_pad
  2908 ;;		_vfpfcnvrt
  2909 ;;		_fputs
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function _fputc
  2915  01EE                     _fputc:	
  2916  01EE                     l1443:	
  2917                           ;incstack = 0
  2918                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2919                           
  2920  01EE  0872               	movf	fputc@fp,w
  2921  01EF  1903               	btfsc	3,2
  2922  01F0  29F2               	goto	u761
  2923  01F1  29F3               	goto	u760
  2924  01F2                     u761:	
  2925  01F2  29F8               	goto	l1447
  2926  01F3                     u760:	
  2927  01F3                     l1445:	
  2928  01F3  0872               	movf	fputc@fp,w
  2929  01F4  1D03               	btfss	3,2
  2930  01F5  29F7               	goto	u771
  2931  01F6  29F8               	goto	u770
  2932  01F7                     u771:	
  2933  01F7  29FD               	goto	l1449
  2934  01F8                     u770:	
  2935  01F8                     l1447:	
  2936  01F8  0870               	movf	fputc@c,w
  2937  01F9  3180  2004  3181   	fcall	_putch
  2938  01FC  2A3C               	goto	l887
  2939  01FD                     l1449:	
  2940  01FD  0872               	movf	fputc@fp,w
  2941  01FE  3E03               	addlw	3
  2942  01FF  0086               	movwf	6
  2943  0200  0187               	clrf	7
  2944  0201  0016               	moviw fsr1++
  2945  0202  0401               	iorwf	1,w
  2946  0203  1903               	btfsc	3,2
  2947  0204  2A06               	goto	u781
  2948  0205  2A07               	goto	u780
  2949  0206                     u781:	
  2950  0206  2A24               	goto	l1453
  2951  0207                     u780:	
  2952  0207                     l1451:	
  2953  0207  0872               	movf	fputc@fp,w
  2954  0208  3E03               	addlw	3
  2955  0209  0086               	movwf	6
  2956  020A  0187               	clrf	7
  2957  020B  3F40               	moviw [0]fsr1
  2958  020C  00F3               	movwf	??_fputc
  2959  020D  3F41               	moviw [1]fsr1
  2960  020E  00F4               	movwf	??_fputc+1
  2961  020F  0A72               	incf	fputc@fp,w
  2962  0210  0086               	movwf	6
  2963  0211  0187               	clrf	7
  2964  0212  3F40               	moviw [0]fsr1
  2965  0213  00F5               	movwf	??_fputc+2
  2966  0214  3F41               	moviw [1]fsr1
  2967  0215  00F6               	movwf	??_fputc+3
  2968  0216  0876               	movf	??_fputc+3,w
  2969  0217  3A80               	xorlw	128
  2970  0218  00F7               	movwf	??_fputc+4
  2971  0219  0874               	movf	??_fputc+1,w
  2972  021A  3A80               	xorlw	128
  2973  021B  0277               	subwf	??_fputc+4,w
  2974  021C  1D03               	skipz
  2975  021D  2A20               	goto	u795
  2976  021E  0873               	movf	??_fputc,w
  2977  021F  0275               	subwf	??_fputc+2,w
  2978  0220                     u795:	
  2979  0220  1803               	skipnc
  2980  0221  2A23               	goto	u791
  2981  0222  2A24               	goto	u790
  2982  0223                     u791:	
  2983  0223  2A3C               	goto	l887
  2984  0224                     u790:	
  2985  0224                     l1453:	
  2986  0224  0870               	movf	fputc@c,w
  2987  0225  00F3               	movwf	??_fputc
  2988  0226  0872               	movf	fputc@fp,w
  2989  0227  0086               	movwf	6
  2990  0228  0187               	clrf	7
  2991  0229  0A72               	incf	fputc@fp,w
  2992  022A  0084               	movwf	4
  2993  022B  0185               	clrf	5
  2994  022C  0800               	movf	0,w
  2995  022D  0701               	addwf	1,w
  2996  022E  00F4               	movwf	??_fputc+1
  2997  022F  0874               	movf	??_fputc+1,w
  2998  0230  0086               	movwf	6
  2999  0231  0187               	clrf	7
  3000  0232  0873               	movf	??_fputc,w
  3001  0233  0081               	movwf	1
  3002  0234                     l1455:	
  3003  0234  0A72               	incf	fputc@fp,w
  3004  0235  0086               	movwf	6
  3005  0236  0187               	clrf	7
  3006  0237  3001               	movlw	1
  3007  0238  0781               	addwf	1,f
  3008  0239  3141               	addfsr 1,1
  3009  023A  1803               	skipnc
  3010  023B  0A81               	incf	1,f
  3011  023C                     l887:	
  3012  023C  0008               	return
  3013  023D                     __end_of_fputc:	
  3014                           
  3015                           	psect	text9
  3016  0004                     __ptext9:	
  3017 ;; *************** function _putch *****************
  3018 ;; Defined at:
  3019 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  c               1    wreg     unsigned char 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  c               1    0[COMMON] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;Total ram usage:        0 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_fputc
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _putch
  3048  0004                     _putch:	
  3049  0004                     l905:	
  3050                           ;incstack = 0
  3051                           ; Regs used in _putch: [wreg]
  3052                           
  3053  0004  0008               	return
  3054  0005                     __end_of_putch:	
  3055                           
  3056                           	psect	text10
  3057  000C                     __ptext10:	
  3058 ;; *************** function _abs *****************
  3059 ;; Defined at:
  3060 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  a               2    3[COMMON] int 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  2    3[COMMON] int 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;Total ram usage:        4 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_dtoa
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           
  3088                           ;psect for function _abs
  3089  000C                     _abs:	
  3090  000C                     l1515:	
  3091                           ;incstack = 0
  3092                           ; Regs used in _abs: [wreg+status,2+status,0]
  3093                           
  3094  000C  0874               	movf	abs@a+1,w
  3095  000D  3A80               	xorlw	128
  3096  000E  00F5               	movwf	??_abs
  3097  000F  3080               	movlw	128
  3098  0010  0275               	subwf	??_abs,w
  3099  0011  1D03               	skipz
  3100  0012  2815               	goto	u885
  3101  0013  3001               	movlw	1
  3102  0014  0273               	subwf	abs@a,w
  3103  0015                     u885:	
  3104  0015  1803               	skipnc
  3105  0016  2818               	goto	u881
  3106  0017  2819               	goto	u880
  3107  0018                     u881:	
  3108  0018  2825               	goto	l872
  3109  0019                     u880:	
  3110  0019                     l1517:	
  3111  0019  0973               	comf	abs@a,w
  3112  001A  00F5               	movwf	??_abs
  3113  001B  0974               	comf	abs@a+1,w
  3114  001C  00F6               	movwf	??_abs+1
  3115  001D  0AF5               	incf	??_abs,f
  3116  001E  1903               	skipnz
  3117  001F  0AF6               	incf	??_abs+1,f
  3118  0020  0875               	movf	??_abs,w
  3119  0021  00F3               	movwf	?_abs
  3120  0022  0876               	movf	??_abs+1,w
  3121  0023  00F4               	movwf	?_abs+1
  3122  0024  2825               	goto	l875
  3123  0025                     l872:	
  3124  0025                     l875:	
  3125  0025  0008               	return
  3126  0026                     __end_of_abs:	
  3127                           
  3128                           	psect	text11
  3129  04A2                     __ptext11:	
  3130 ;; *************** function ___aomod *****************
  3131 ;; Defined at:
  3132 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  divisor         8    0[BANK0 ] long long 
  3135 ;;  dividend        8    8[BANK0 ] long long 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  sign            1    2[COMMON] unsigned char 
  3138 ;;  counter         1    1[COMMON] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  8    0[BANK0 ] long long 
  3141 ;; Registers used:
  3142 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3148 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3151 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;Total ram usage:       19 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_dtoa
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           
  3162                           ;psect for function ___aomod
  3163  04A2                     ___aomod:	
  3164  04A2                     l1557:	
  3165                           ;incstack = 0
  3166                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3167                           
  3168  04A2  01F2               	clrf	___aomod@sign
  3169  04A3                     l1559:	
  3170  04A3  3028               	movlw	low ___aomod@dividend
  3171  04A4  0086               	movwf	6
  3172  04A5  3000               	movlw	high ___aomod@dividend
  3173  04A6  0087               	movwf	7
  3174  04A7  3F47               	moviw [7]fsr1
  3175  04A8  00F0               	movwf	??___aomod
  3176  04A9  1FF0               	btfss	??___aomod,7
  3177  04AA  2CAC               	goto	u1001
  3178  04AB  2CAD               	goto	u1000
  3179  04AC                     u1001:	
  3180  04AC  2CCE               	goto	l1563
  3181  04AD                     u1000:	
  3182  04AD                     l1561:	
  3183  04AD  0020               	movlb	0	; select bank0
  3184  04AE  09A8               	comf	___aomod@dividend,f
  3185  04AF  09A9               	comf	___aomod@dividend+1,f
  3186  04B0  09AA               	comf	___aomod@dividend+2,f
  3187  04B1  09AB               	comf	___aomod@dividend+3,f
  3188  04B2  09AC               	comf	___aomod@dividend+4,f
  3189  04B3  09AD               	comf	___aomod@dividend+5,f
  3190  04B4  09AE               	comf	___aomod@dividend+6,f
  3191  04B5  09AF               	comf	___aomod@dividend+7,f
  3192  04B6  0AA8               	incf	___aomod@dividend,f
  3193  04B7  1D03               	skipz
  3194  04B8  2CCC               	goto	u101lld
  3195  04B9  0AA9               	incf	___aomod@dividend+1,f
  3196  04BA  1D03               	skipz
  3197  04BB  2CCC               	goto	u101lld
  3198  04BC  0AAA               	incf	___aomod@dividend+2,f
  3199  04BD  1D03               	skipz
  3200  04BE  2CCC               	goto	u101lld
  3201  04BF  0AAB               	incf	___aomod@dividend+3,f
  3202  04C0  1D03               	skipz
  3203  04C1  2CCC               	goto	u101lld
  3204  04C2  0AAC               	incf	___aomod@dividend+4,f
  3205  04C3  1D03               	skipz
  3206  04C4  2CCC               	goto	u101lld
  3207  04C5  0AAD               	incf	___aomod@dividend+5,f
  3208  04C6  1D03               	skipz
  3209  04C7  2CCC               	goto	u101lld
  3210  04C8  0AAE               	incf	___aomod@dividend+6,f
  3211  04C9  1D03               	skipz
  3212  04CA  2CCC               	goto	u101lld
  3213  04CB  0AAF               	incf	___aomod@dividend+7,f
  3214  04CC                     u101lld:	
  3215  04CC  01F2               	clrf	___aomod@sign
  3216  04CD  0AF2               	incf	___aomod@sign,f
  3217  04CE                     l1563:	
  3218  04CE  3020               	movlw	low ___aomod@divisor
  3219  04CF  0086               	movwf	6
  3220  04D0  3000               	movlw	high ___aomod@divisor
  3221  04D1  0087               	movwf	7
  3222  04D2  3F47               	moviw [7]fsr1
  3223  04D3  00F0               	movwf	??___aomod
  3224  04D4  1FF0               	btfss	??___aomod,7
  3225  04D5  2CD7               	goto	u1021
  3226  04D6  2CD8               	goto	u1020
  3227  04D7                     u1021:	
  3228  04D7  2CF7               	goto	l1567
  3229  04D8                     u1020:	
  3230  04D8                     l1565:	
  3231  04D8  0020               	movlb	0	; select bank0
  3232  04D9  09A0               	comf	___aomod@divisor,f
  3233  04DA  09A1               	comf	___aomod@divisor+1,f
  3234  04DB  09A2               	comf	___aomod@divisor+2,f
  3235  04DC  09A3               	comf	___aomod@divisor+3,f
  3236  04DD  09A4               	comf	___aomod@divisor+4,f
  3237  04DE  09A5               	comf	___aomod@divisor+5,f
  3238  04DF  09A6               	comf	___aomod@divisor+6,f
  3239  04E0  09A7               	comf	___aomod@divisor+7,f
  3240  04E1  0AA0               	incf	___aomod@divisor,f
  3241  04E2  1D03               	skipz
  3242  04E3  2CF7               	goto	u103lld
  3243  04E4  0AA1               	incf	___aomod@divisor+1,f
  3244  04E5  1D03               	skipz
  3245  04E6  2CF7               	goto	u103lld
  3246  04E7  0AA2               	incf	___aomod@divisor+2,f
  3247  04E8  1D03               	skipz
  3248  04E9  2CF7               	goto	u103lld
  3249  04EA  0AA3               	incf	___aomod@divisor+3,f
  3250  04EB  1D03               	skipz
  3251  04EC  2CF7               	goto	u103lld
  3252  04ED  0AA4               	incf	___aomod@divisor+4,f
  3253  04EE  1D03               	skipz
  3254  04EF  2CF7               	goto	u103lld
  3255  04F0  0AA5               	incf	___aomod@divisor+5,f
  3256  04F1  1D03               	skipz
  3257  04F2  2CF7               	goto	u103lld
  3258  04F3  0AA6               	incf	___aomod@divisor+6,f
  3259  04F4  1D03               	skipz
  3260  04F5  2CF7               	goto	u103lld
  3261  04F6  0AA7               	incf	___aomod@divisor+7,f
  3262  04F7                     u103lld:	
  3263  04F7                     l1567:	
  3264  04F7  0020               	movlb	0	; select bank0
  3265  04F8  0820               	movf	___aomod@divisor,w
  3266  04F9  0421               	iorwf	___aomod@divisor+1,w
  3267  04FA  0422               	iorwf	___aomod@divisor+2,w
  3268  04FB  0423               	iorwf	___aomod@divisor+3,w
  3269  04FC  0424               	iorwf	___aomod@divisor+4,w
  3270  04FD  0425               	iorwf	___aomod@divisor+5,w
  3271  04FE  0426               	iorwf	___aomod@divisor+6,w
  3272  04FF  0427               	iorwf	___aomod@divisor+7,w
  3273  0500  1903               	skipnz
  3274  0501  2D03               	goto	u1041
  3275  0502  2D04               	goto	u1040
  3276  0503                     u1041:	
  3277  0503  2D57               	goto	l1583
  3278  0504                     u1040:	
  3279  0504                     l1569:	
  3280  0504  01F1               	clrf	___aomod@counter
  3281  0505  0AF1               	incf	___aomod@counter,f
  3282  0506  2D13               	goto	l1575
  3283  0507                     l1571:	
  3284  0507  35A0               	lslf	___aomod@divisor,f
  3285  0508  0DA1               	rlf	___aomod@divisor+1,f
  3286  0509  0DA2               	rlf	___aomod@divisor+2,f
  3287  050A  0DA3               	rlf	___aomod@divisor+3,f
  3288  050B  0DA4               	rlf	___aomod@divisor+4,f
  3289  050C  0DA5               	rlf	___aomod@divisor+5,f
  3290  050D  0DA6               	rlf	___aomod@divisor+6,f
  3291  050E  0DA7               	rlf	___aomod@divisor+7,f
  3292  050F                     l1573:	
  3293  050F  3001               	movlw	1
  3294  0510  00F0               	movwf	??___aomod
  3295  0511  0870               	movf	??___aomod,w
  3296  0512  07F1               	addwf	___aomod@counter,f
  3297  0513                     l1575:	
  3298  0513  1FA7               	btfss	___aomod@divisor+7,7
  3299  0514  2D16               	goto	u1051
  3300  0515  2D17               	goto	u1050
  3301  0516                     u1051:	
  3302  0516  2D07               	goto	l1571
  3303  0517                     u1050:	
  3304  0517                     l1577:	
  3305  0517  0827               	movf	___aomod@divisor+7,w
  3306  0518  022F               	subwf	___aomod@dividend+7,w
  3307  0519  1D03               	skipz
  3308  051A  2D35               	goto	u1065
  3309  051B  0826               	movf	___aomod@divisor+6,w
  3310  051C  022E               	subwf	___aomod@dividend+6,w
  3311  051D  1D03               	skipz
  3312  051E  2D35               	goto	u1065
  3313  051F  0825               	movf	___aomod@divisor+5,w
  3314  0520  022D               	subwf	___aomod@dividend+5,w
  3315  0521  1D03               	skipz
  3316  0522  2D35               	goto	u1065
  3317  0523  0824               	movf	___aomod@divisor+4,w
  3318  0524  022C               	subwf	___aomod@dividend+4,w
  3319  0525  1D03               	skipz
  3320  0526  2D35               	goto	u1065
  3321  0527  0823               	movf	___aomod@divisor+3,w
  3322  0528  022B               	subwf	___aomod@dividend+3,w
  3323  0529  1D03               	skipz
  3324  052A  2D35               	goto	u1065
  3325  052B  0822               	movf	___aomod@divisor+2,w
  3326  052C  022A               	subwf	___aomod@dividend+2,w
  3327  052D  1D03               	skipz
  3328  052E  2D35               	goto	u1065
  3329  052F  0821               	movf	___aomod@divisor+1,w
  3330  0530  0229               	subwf	___aomod@dividend+1,w
  3331  0531  1D03               	skipz
  3332  0532  2D35               	goto	u1065
  3333  0533  0820               	movf	___aomod@divisor,w
  3334  0534  0228               	subwf	___aomod@dividend,w
  3335  0535                     u1065:	
  3336  0535  1C03               	skipc
  3337  0536  2D38               	goto	u1061
  3338  0537  2D39               	goto	u1060
  3339  0538                     u1061:	
  3340  0538  2D49               	goto	l1581
  3341  0539                     u1060:	
  3342  0539                     l1579:	
  3343  0539  0820               	movf	___aomod@divisor,w
  3344  053A  02A8               	subwf	___aomod@dividend,f
  3345  053B  0821               	movf	___aomod@divisor+1,w
  3346  053C  3BA9               	subwfb	___aomod@dividend+1,f
  3347  053D  0822               	movf	___aomod@divisor+2,w
  3348  053E  3BAA               	subwfb	___aomod@dividend+2,f
  3349  053F  0823               	movf	___aomod@divisor+3,w
  3350  0540  3BAB               	subwfb	___aomod@dividend+3,f
  3351  0541  0824               	movf	___aomod@divisor+4,w
  3352  0542  3BAC               	subwfb	___aomod@dividend+4,f
  3353  0543  0825               	movf	___aomod@divisor+5,w
  3354  0544  3BAD               	subwfb	___aomod@dividend+5,f
  3355  0545  0826               	movf	___aomod@divisor+6,w
  3356  0546  3BAE               	subwfb	___aomod@dividend+6,f
  3357  0547  0827               	movf	___aomod@divisor+7,w
  3358  0548  3BAF               	subwfb	___aomod@dividend+7,f
  3359  0549                     l1581:	
  3360  0549  36A7               	lsrf	___aomod@divisor+7,f
  3361  054A  0CA6               	rrf	___aomod@divisor+6,f
  3362  054B  0CA5               	rrf	___aomod@divisor+5,f
  3363  054C  0CA4               	rrf	___aomod@divisor+4,f
  3364  054D  0CA3               	rrf	___aomod@divisor+3,f
  3365  054E  0CA2               	rrf	___aomod@divisor+2,f
  3366  054F  0CA1               	rrf	___aomod@divisor+1,f
  3367  0550  0CA0               	rrf	___aomod@divisor,f
  3368  0551  3001               	movlw	1
  3369  0552  02F1               	subwf	___aomod@counter,f
  3370  0553  1D03               	btfss	3,2
  3371  0554  2D56               	goto	u1071
  3372  0555  2D57               	goto	u1070
  3373  0556                     u1071:	
  3374  0556  2D17               	goto	l1577
  3375  0557                     u1070:	
  3376  0557                     l1583:	
  3377  0557  0872               	movf	___aomod@sign,w
  3378  0558  1903               	btfsc	3,2
  3379  0559  2D5B               	goto	u1081
  3380  055A  2D5C               	goto	u1080
  3381  055B                     u1081:	
  3382  055B  2D7A               	goto	l531
  3383  055C                     u1080:	
  3384  055C                     l1585:	
  3385  055C  09A8               	comf	___aomod@dividend,f
  3386  055D  09A9               	comf	___aomod@dividend+1,f
  3387  055E  09AA               	comf	___aomod@dividend+2,f
  3388  055F  09AB               	comf	___aomod@dividend+3,f
  3389  0560  09AC               	comf	___aomod@dividend+4,f
  3390  0561  09AD               	comf	___aomod@dividend+5,f
  3391  0562  09AE               	comf	___aomod@dividend+6,f
  3392  0563  09AF               	comf	___aomod@dividend+7,f
  3393  0564  0AA8               	incf	___aomod@dividend,f
  3394  0565  1D03               	skipz
  3395  0566  2D7A               	goto	u109lld
  3396  0567  0AA9               	incf	___aomod@dividend+1,f
  3397  0568  1D03               	skipz
  3398  0569  2D7A               	goto	u109lld
  3399  056A  0AAA               	incf	___aomod@dividend+2,f
  3400  056B  1D03               	skipz
  3401  056C  2D7A               	goto	u109lld
  3402  056D  0AAB               	incf	___aomod@dividend+3,f
  3403  056E  1D03               	skipz
  3404  056F  2D7A               	goto	u109lld
  3405  0570  0AAC               	incf	___aomod@dividend+4,f
  3406  0571  1D03               	skipz
  3407  0572  2D7A               	goto	u109lld
  3408  0573  0AAD               	incf	___aomod@dividend+5,f
  3409  0574  1D03               	skipz
  3410  0575  2D7A               	goto	u109lld
  3411  0576  0AAE               	incf	___aomod@dividend+6,f
  3412  0577  1D03               	skipz
  3413  0578  2D7A               	goto	u109lld
  3414  0579  0AAF               	incf	___aomod@dividend+7,f
  3415  057A                     u109lld:	
  3416  057A                     l531:	
  3417  057A  0020               	movlb	0	; select bank0
  3418  057B  0828               	movf	___aomod@dividend,w
  3419  057C  00A0               	movwf	?___aomod
  3420  057D  0829               	movf	___aomod@dividend+1,w
  3421  057E  00A1               	movwf	?___aomod+1
  3422  057F  082A               	movf	___aomod@dividend+2,w
  3423  0580  00A2               	movwf	?___aomod+2
  3424  0581  082B               	movf	___aomod@dividend+3,w
  3425  0582  00A3               	movwf	?___aomod+3
  3426  0583  082C               	movf	___aomod@dividend+4,w
  3427  0584  00A4               	movwf	?___aomod+4
  3428  0585  082D               	movf	___aomod@dividend+5,w
  3429  0586  00A5               	movwf	?___aomod+5
  3430  0587  082E               	movf	___aomod@dividend+6,w
  3431  0588  00A6               	movwf	?___aomod+6
  3432  0589  082F               	movf	___aomod@dividend+7,w
  3433  058A  00A7               	movwf	?___aomod+7
  3434  058B                     l532:	
  3435  058B  0008               	return
  3436  058C                     __end_of___aomod:	
  3437                           
  3438                           	psect	text12
  3439  058C                     __ptext12:	
  3440 ;; *************** function ___aodiv *****************
  3441 ;; Defined at:
  3442 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  divisor         8    0[BANK0 ] long long 
  3445 ;;  dividend        8    8[BANK0 ] long long 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  quotient        8    3[COMMON] long long 
  3448 ;;  sign            1    2[COMMON] unsigned char 
  3449 ;;  counter         1    1[COMMON] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  8    0[BANK0 ] long long 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3459 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3461 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3462 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3463 ;;Total ram usage:       27 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_dtoa
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function ___aodiv
  3474  058C                     ___aodiv:	
  3475  058C                     l1519:	
  3476                           ;incstack = 0
  3477                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3478                           
  3479  058C  01F2               	clrf	___aodiv@sign
  3480  058D                     l1521:	
  3481  058D  3020               	movlw	low ___aodiv@divisor
  3482  058E  0086               	movwf	6
  3483  058F  3000               	movlw	high ___aodiv@divisor
  3484  0590  0087               	movwf	7
  3485  0591  3F47               	moviw [7]fsr1
  3486  0592  00F0               	movwf	??___aodiv
  3487  0593  1FF0               	btfss	??___aodiv,7
  3488  0594  2D96               	goto	u891
  3489  0595  2D97               	goto	u890
  3490  0596                     u891:	
  3491  0596  2DB8               	goto	l1525
  3492  0597                     u890:	
  3493  0597                     l1523:	
  3494  0597  0020               	movlb	0	; select bank0
  3495  0598  09A0               	comf	___aodiv@divisor,f
  3496  0599  09A1               	comf	___aodiv@divisor+1,f
  3497  059A  09A2               	comf	___aodiv@divisor+2,f
  3498  059B  09A3               	comf	___aodiv@divisor+3,f
  3499  059C  09A4               	comf	___aodiv@divisor+4,f
  3500  059D  09A5               	comf	___aodiv@divisor+5,f
  3501  059E  09A6               	comf	___aodiv@divisor+6,f
  3502  059F  09A7               	comf	___aodiv@divisor+7,f
  3503  05A0  0AA0               	incf	___aodiv@divisor,f
  3504  05A1  1D03               	skipz
  3505  05A2  2DB6               	goto	u90lld
  3506  05A3  0AA1               	incf	___aodiv@divisor+1,f
  3507  05A4  1D03               	skipz
  3508  05A5  2DB6               	goto	u90lld
  3509  05A6  0AA2               	incf	___aodiv@divisor+2,f
  3510  05A7  1D03               	skipz
  3511  05A8  2DB6               	goto	u90lld
  3512  05A9  0AA3               	incf	___aodiv@divisor+3,f
  3513  05AA  1D03               	skipz
  3514  05AB  2DB6               	goto	u90lld
  3515  05AC  0AA4               	incf	___aodiv@divisor+4,f
  3516  05AD  1D03               	skipz
  3517  05AE  2DB6               	goto	u90lld
  3518  05AF  0AA5               	incf	___aodiv@divisor+5,f
  3519  05B0  1D03               	skipz
  3520  05B1  2DB6               	goto	u90lld
  3521  05B2  0AA6               	incf	___aodiv@divisor+6,f
  3522  05B3  1D03               	skipz
  3523  05B4  2DB6               	goto	u90lld
  3524  05B5  0AA7               	incf	___aodiv@divisor+7,f
  3525  05B6                     u90lld:	
  3526  05B6  01F2               	clrf	___aodiv@sign
  3527  05B7  0AF2               	incf	___aodiv@sign,f
  3528  05B8                     l1525:	
  3529  05B8  3028               	movlw	low ___aodiv@dividend
  3530  05B9  0086               	movwf	6
  3531  05BA  3000               	movlw	high ___aodiv@dividend
  3532  05BB  0087               	movwf	7
  3533  05BC  3F47               	moviw [7]fsr1
  3534  05BD  00F0               	movwf	??___aodiv
  3535  05BE  1FF0               	btfss	??___aodiv,7
  3536  05BF  2DC1               	goto	u911
  3537  05C0  2DC2               	goto	u910
  3538  05C1                     u911:	
  3539  05C1  2DE5               	goto	l1531
  3540  05C2                     u910:	
  3541  05C2                     l1527:	
  3542  05C2  0020               	movlb	0	; select bank0
  3543  05C3  09A8               	comf	___aodiv@dividend,f
  3544  05C4  09A9               	comf	___aodiv@dividend+1,f
  3545  05C5  09AA               	comf	___aodiv@dividend+2,f
  3546  05C6  09AB               	comf	___aodiv@dividend+3,f
  3547  05C7  09AC               	comf	___aodiv@dividend+4,f
  3548  05C8  09AD               	comf	___aodiv@dividend+5,f
  3549  05C9  09AE               	comf	___aodiv@dividend+6,f
  3550  05CA  09AF               	comf	___aodiv@dividend+7,f
  3551  05CB  0AA8               	incf	___aodiv@dividend,f
  3552  05CC  1D03               	skipz
  3553  05CD  2DE1               	goto	u92lld
  3554  05CE  0AA9               	incf	___aodiv@dividend+1,f
  3555  05CF  1D03               	skipz
  3556  05D0  2DE1               	goto	u92lld
  3557  05D1  0AAA               	incf	___aodiv@dividend+2,f
  3558  05D2  1D03               	skipz
  3559  05D3  2DE1               	goto	u92lld
  3560  05D4  0AAB               	incf	___aodiv@dividend+3,f
  3561  05D5  1D03               	skipz
  3562  05D6  2DE1               	goto	u92lld
  3563  05D7  0AAC               	incf	___aodiv@dividend+4,f
  3564  05D8  1D03               	skipz
  3565  05D9  2DE1               	goto	u92lld
  3566  05DA  0AAD               	incf	___aodiv@dividend+5,f
  3567  05DB  1D03               	skipz
  3568  05DC  2DE1               	goto	u92lld
  3569  05DD  0AAE               	incf	___aodiv@dividend+6,f
  3570  05DE  1D03               	skipz
  3571  05DF  2DE1               	goto	u92lld
  3572  05E0  0AAF               	incf	___aodiv@dividend+7,f
  3573  05E1                     u92lld:	
  3574  05E1                     l1529:	
  3575  05E1  3001               	movlw	1
  3576  05E2  00F0               	movwf	??___aodiv
  3577  05E3  0870               	movf	??___aodiv,w
  3578  05E4  06F2               	xorwf	___aodiv@sign,f
  3579  05E5                     l1531:	
  3580  05E5  3073               	movlw	low ___aodiv@quotient
  3581  05E6  0086               	movwf	6
  3582  05E7  3000               	movlw	high ___aodiv@quotient
  3583  05E8  0087               	movwf	7
  3584  05E9  3008               	movlw	8
  3585  05EA  00F0               	movwf	??___aodiv
  3586  05EB  3000               	movlw	0
  3587  05EC                     u930:	
  3588  05EC  001E               	movwi fsr1++
  3589  05ED  0BF0               	decfsz	??___aodiv,f
  3590  05EE  2DEC               	goto	u930
  3591  05EF                     l1533:	
  3592  05EF  0020               	movlb	0	; select bank0
  3593  05F0  0820               	movf	___aodiv@divisor,w
  3594  05F1  0421               	iorwf	___aodiv@divisor+1,w
  3595  05F2  0422               	iorwf	___aodiv@divisor+2,w
  3596  05F3  0423               	iorwf	___aodiv@divisor+3,w
  3597  05F4  0424               	iorwf	___aodiv@divisor+4,w
  3598  05F5  0425               	iorwf	___aodiv@divisor+5,w
  3599  05F6  0426               	iorwf	___aodiv@divisor+6,w
  3600  05F7  0427               	iorwf	___aodiv@divisor+7,w
  3601  05F8  1903               	skipnz
  3602  05F9  2DFB               	goto	u941
  3603  05FA  2DFC               	goto	u940
  3604  05FB                     u941:	
  3605  05FB  2E58               	goto	l1553
  3606  05FC                     u940:	
  3607  05FC                     l1535:	
  3608  05FC  01F1               	clrf	___aodiv@counter
  3609  05FD  0AF1               	incf	___aodiv@counter,f
  3610  05FE  2E0B               	goto	l1541
  3611  05FF                     l1537:	
  3612  05FF  35A0               	lslf	___aodiv@divisor,f
  3613  0600  0DA1               	rlf	___aodiv@divisor+1,f
  3614  0601  0DA2               	rlf	___aodiv@divisor+2,f
  3615  0602  0DA3               	rlf	___aodiv@divisor+3,f
  3616  0603  0DA4               	rlf	___aodiv@divisor+4,f
  3617  0604  0DA5               	rlf	___aodiv@divisor+5,f
  3618  0605  0DA6               	rlf	___aodiv@divisor+6,f
  3619  0606  0DA7               	rlf	___aodiv@divisor+7,f
  3620  0607                     l1539:	
  3621  0607  3001               	movlw	1
  3622  0608  00F0               	movwf	??___aodiv
  3623  0609  0870               	movf	??___aodiv,w
  3624  060A  07F1               	addwf	___aodiv@counter,f
  3625  060B                     l1541:	
  3626  060B  1FA7               	btfss	___aodiv@divisor+7,7
  3627  060C  2E0E               	goto	u951
  3628  060D  2E0F               	goto	u950
  3629  060E                     u951:	
  3630  060E  2DFF               	goto	l1537
  3631  060F                     u950:	
  3632  060F                     l1543:	
  3633  060F  35F3               	lslf	___aodiv@quotient,f
  3634  0610  0DF4               	rlf	___aodiv@quotient+1,f
  3635  0611  0DF5               	rlf	___aodiv@quotient+2,f
  3636  0612  0DF6               	rlf	___aodiv@quotient+3,f
  3637  0613  0DF7               	rlf	___aodiv@quotient+4,f
  3638  0614  0DF8               	rlf	___aodiv@quotient+5,f
  3639  0615  0DF9               	rlf	___aodiv@quotient+6,f
  3640  0616  0DFA               	rlf	___aodiv@quotient+7,f
  3641  0617                     l1545:	
  3642  0617  0827               	movf	___aodiv@divisor+7,w
  3643  0618  022F               	subwf	___aodiv@dividend+7,w
  3644  0619  1D03               	skipz
  3645  061A  2E35               	goto	u965
  3646  061B  0826               	movf	___aodiv@divisor+6,w
  3647  061C  022E               	subwf	___aodiv@dividend+6,w
  3648  061D  1D03               	skipz
  3649  061E  2E35               	goto	u965
  3650  061F  0825               	movf	___aodiv@divisor+5,w
  3651  0620  022D               	subwf	___aodiv@dividend+5,w
  3652  0621  1D03               	skipz
  3653  0622  2E35               	goto	u965
  3654  0623  0824               	movf	___aodiv@divisor+4,w
  3655  0624  022C               	subwf	___aodiv@dividend+4,w
  3656  0625  1D03               	skipz
  3657  0626  2E35               	goto	u965
  3658  0627  0823               	movf	___aodiv@divisor+3,w
  3659  0628  022B               	subwf	___aodiv@dividend+3,w
  3660  0629  1D03               	skipz
  3661  062A  2E35               	goto	u965
  3662  062B  0822               	movf	___aodiv@divisor+2,w
  3663  062C  022A               	subwf	___aodiv@dividend+2,w
  3664  062D  1D03               	skipz
  3665  062E  2E35               	goto	u965
  3666  062F  0821               	movf	___aodiv@divisor+1,w
  3667  0630  0229               	subwf	___aodiv@dividend+1,w
  3668  0631  1D03               	skipz
  3669  0632  2E35               	goto	u965
  3670  0633  0820               	movf	___aodiv@divisor,w
  3671  0634  0228               	subwf	___aodiv@dividend,w
  3672  0635                     u965:	
  3673  0635  1C03               	skipc
  3674  0636  2E38               	goto	u961
  3675  0637  2E39               	goto	u960
  3676  0638                     u961:	
  3677  0638  2E4A               	goto	l1551
  3678  0639                     u960:	
  3679  0639                     l1547:	
  3680  0639  0820               	movf	___aodiv@divisor,w
  3681  063A  02A8               	subwf	___aodiv@dividend,f
  3682  063B  0821               	movf	___aodiv@divisor+1,w
  3683  063C  3BA9               	subwfb	___aodiv@dividend+1,f
  3684  063D  0822               	movf	___aodiv@divisor+2,w
  3685  063E  3BAA               	subwfb	___aodiv@dividend+2,f
  3686  063F  0823               	movf	___aodiv@divisor+3,w
  3687  0640  3BAB               	subwfb	___aodiv@dividend+3,f
  3688  0641  0824               	movf	___aodiv@divisor+4,w
  3689  0642  3BAC               	subwfb	___aodiv@dividend+4,f
  3690  0643  0825               	movf	___aodiv@divisor+5,w
  3691  0644  3BAD               	subwfb	___aodiv@dividend+5,f
  3692  0645  0826               	movf	___aodiv@divisor+6,w
  3693  0646  3BAE               	subwfb	___aodiv@dividend+6,f
  3694  0647  0827               	movf	___aodiv@divisor+7,w
  3695  0648  3BAF               	subwfb	___aodiv@dividend+7,f
  3696  0649                     l1549:	
  3697  0649  1473               	bsf	___aodiv@quotient,0
  3698  064A                     l1551:	
  3699  064A  36A7               	lsrf	___aodiv@divisor+7,f
  3700  064B  0CA6               	rrf	___aodiv@divisor+6,f
  3701  064C  0CA5               	rrf	___aodiv@divisor+5,f
  3702  064D  0CA4               	rrf	___aodiv@divisor+4,f
  3703  064E  0CA3               	rrf	___aodiv@divisor+3,f
  3704  064F  0CA2               	rrf	___aodiv@divisor+2,f
  3705  0650  0CA1               	rrf	___aodiv@divisor+1,f
  3706  0651  0CA0               	rrf	___aodiv@divisor,f
  3707  0652  3001               	movlw	1
  3708  0653  02F1               	subwf	___aodiv@counter,f
  3709  0654  1D03               	btfss	3,2
  3710  0655  2E57               	goto	u971
  3711  0656  2E58               	goto	u970
  3712  0657                     u971:	
  3713  0657  2E0F               	goto	l1543
  3714  0658                     u970:	
  3715  0658                     l1553:	
  3716  0658  0872               	movf	___aodiv@sign,w
  3717  0659  1903               	btfsc	3,2
  3718  065A  2E5C               	goto	u981
  3719  065B  2E5D               	goto	u980
  3720  065C                     u981:	
  3721  065C  2E7B               	goto	l518
  3722  065D                     u980:	
  3723  065D                     l1555:	
  3724  065D  09F3               	comf	___aodiv@quotient,f
  3725  065E  09F4               	comf	___aodiv@quotient+1,f
  3726  065F  09F5               	comf	___aodiv@quotient+2,f
  3727  0660  09F6               	comf	___aodiv@quotient+3,f
  3728  0661  09F7               	comf	___aodiv@quotient+4,f
  3729  0662  09F8               	comf	___aodiv@quotient+5,f
  3730  0663  09F9               	comf	___aodiv@quotient+6,f
  3731  0664  09FA               	comf	___aodiv@quotient+7,f
  3732  0665  0AF3               	incf	___aodiv@quotient,f
  3733  0666  1D03               	skipz
  3734  0667  2E7B               	goto	u99lld
  3735  0668  0AF4               	incf	___aodiv@quotient+1,f
  3736  0669  1D03               	skipz
  3737  066A  2E7B               	goto	u99lld
  3738  066B  0AF5               	incf	___aodiv@quotient+2,f
  3739  066C  1D03               	skipz
  3740  066D  2E7B               	goto	u99lld
  3741  066E  0AF6               	incf	___aodiv@quotient+3,f
  3742  066F  1D03               	skipz
  3743  0670  2E7B               	goto	u99lld
  3744  0671  0AF7               	incf	___aodiv@quotient+4,f
  3745  0672  1D03               	skipz
  3746  0673  2E7B               	goto	u99lld
  3747  0674  0AF8               	incf	___aodiv@quotient+5,f
  3748  0675  1D03               	skipz
  3749  0676  2E7B               	goto	u99lld
  3750  0677  0AF9               	incf	___aodiv@quotient+6,f
  3751  0678  1D03               	skipz
  3752  0679  2E7B               	goto	u99lld
  3753  067A  0AFA               	incf	___aodiv@quotient+7,f
  3754  067B                     u99lld:	
  3755  067B                     l518:	
  3756  067B  0873               	movf	___aodiv@quotient,w
  3757  067C  0020               	movlb	0	; select bank0
  3758  067D  00A0               	movwf	?___aodiv
  3759  067E  0874               	movf	___aodiv@quotient+1,w
  3760  067F  00A1               	movwf	?___aodiv+1
  3761  0680  0875               	movf	___aodiv@quotient+2,w
  3762  0681  00A2               	movwf	?___aodiv+2
  3763  0682  0876               	movf	___aodiv@quotient+3,w
  3764  0683  00A3               	movwf	?___aodiv+3
  3765  0684  0877               	movf	___aodiv@quotient+4,w
  3766  0685  00A4               	movwf	?___aodiv+4
  3767  0686  0878               	movf	___aodiv@quotient+5,w
  3768  0687  00A5               	movwf	?___aodiv+5
  3769  0688  0879               	movf	___aodiv@quotient+6,w
  3770  0689  00A6               	movwf	?___aodiv+6
  3771  068A  087A               	movf	___aodiv@quotient+7,w
  3772  068B  00A7               	movwf	?___aodiv+7
  3773  068C                     l519:	
  3774  068C  0008               	return
  3775  068D                     __end_of___aodiv:	
  3776                           
  3777                           	psect	text13
  3778  0FB8                     __ptext13:	
  3779 ;; *************** function _pwm_config *****************
  3780 ;; Defined at:
  3781 ;;		line 68 in file "config.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;		None
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      void 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;Total ram usage:        0 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_main
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           
  3809                           ;psect for function _pwm_config
  3810  0FB8                     _pwm_config:	
  3811  0FB8                     l1865:	
  3812                           ;incstack = 0
  3813                           ; Regs used in _pwm_config: [wreg+status,2]
  3814                           
  3815                           
  3816                           ;config.c: 70:     TRISAbits.TRISA5 = 1;
  3817  0FB8  0021               	movlb	1	; select bank1
  3818  0FB9  168C               	bsf	12,5	;volatile
  3819                           
  3820                           ;config.c: 71:     PIR1bits.TMR2IF = 0;
  3821  0FBA  0020               	movlb	0	; select bank0
  3822  0FBB  1091               	bcf	17,1	;volatile
  3823                           
  3824                           ;config.c: 72:     APFCON1bits.CCP2SEL = 1;
  3825  0FBC  0022               	movlb	2	; select bank2
  3826  0FBD  141E               	bsf	30,0	;volatile
  3827  0FBE                     l1867:	
  3828                           
  3829                           ;config.c: 73:     CCP2CON=0b00001100;
  3830  0FBE  300C               	movlw	12
  3831  0FBF  0025               	movlb	5	; select bank5
  3832  0FC0  009A               	movwf	26	;volatile
  3833  0FC1                     l1869:	
  3834                           
  3835                           ;config.c: 74:     CCPTMRS = 0b00000000;
  3836  0FC1  019E               	clrf	30	;volatile
  3837  0FC2                     l1871:	
  3838                           
  3839                           ;config.c: 75:     CCP2AS=0b00000000;
  3840  0FC2  019C               	clrf	28	;volatile
  3841                           
  3842                           ;config.c: 76:     PR2=0x65;
  3843  0FC3  3065               	movlw	101
  3844  0FC4  0020               	movlb	0	; select bank0
  3845  0FC5  009B               	movwf	27	;volatile
  3846  0FC6                     l1873:	
  3847                           
  3848                           ;config.c: 77:     CCPR2L=0;
  3849  0FC6  0025               	movlb	5	; select bank5
  3850  0FC7  0198               	clrf	24	;volatile
  3851  0FC8                     l1875:	
  3852                           
  3853                           ;config.c: 78:     T2CON=0b00000100;
  3854  0FC8  3004               	movlw	4
  3855  0FC9  0020               	movlb	0	; select bank0
  3856  0FCA  009C               	movwf	28	;volatile
  3857  0FCB                     l1877:	
  3858                           
  3859                           ;config.c: 79:     TRISAbits.TRISA5 = 0;
  3860  0FCB  0021               	movlb	1	; select bank1
  3861  0FCC  128C               	bcf	12,5	;volatile
  3862  0FCD                     l96:	
  3863  0FCD  0008               	return
  3864  0FCE                     __end_of_pwm_config:	
  3865                           
  3866                           	psect	text14
  3867  02ED                     __ptext14:	
  3868 ;; *************** function _config *****************
  3869 ;; Defined at:
  3870 ;;		line 13 in file "config.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3888 ;;Total ram usage:        2 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    5
  3891 ;; This function calls:
  3892 ;;		_Cursor_Off
  3893 ;;		_I2C_Master_Init
  3894 ;;		_Lcd_Clear
  3895 ;;		_Lcd_Init
  3896 ;;		_Lcd_Set_Cursor
  3897 ;;		_Lcd_Write_String
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           
  3904                           ;psect for function _config
  3905  02ED                     _config:	
  3906  02ED                     l1825:	
  3907                           ;incstack = 0
  3908                           ; Regs used in _config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3909                           
  3910                           
  3911                           ;config.c: 15:     OSCCONbits.IRCF0=0;
  3912  02ED  0021               	movlb	1	; select bank1
  3913  02EE  1199               	bcf	25,3	;volatile
  3914                           
  3915                           ;config.c: 16:     OSCCONbits.IRCF1=1;
  3916  02EF  1619               	bsf	25,4	;volatile
  3917                           
  3918                           ;config.c: 17:     OSCCONbits.IRCF2=1;
  3919  02F0  1699               	bsf	25,5	;volatile
  3920                           
  3921                           ;config.c: 18:     OSCCONbits.IRCF3=1;
  3922  02F1  1719               	bsf	25,6	;volatile
  3923                           
  3924                           ;config.c: 20:     INTCONbits.GIE = 0;
  3925  02F2  138B               	bcf	11,7	;volatile
  3926                           
  3927                           ;config.c: 21:     INTCONbits.INTE = 0;
  3928  02F3  120B               	bcf	11,4	;volatile
  3929                           
  3930                           ;config.c: 22:     INTCONbits.PEIE = 0;
  3931  02F4  130B               	bcf	11,6	;volatile
  3932  02F5                     l1827:	
  3933                           
  3934                           ;config.c: 24:     ANSELA=0X00;
  3935  02F5  0023               	movlb	3	; select bank3
  3936  02F6  018C               	clrf	12	;volatile
  3937                           
  3938                           ;config.c: 25:     ANSELC=0X00;
  3939  02F7  018E               	clrf	14	;volatile
  3940                           
  3941                           ;config.c: 26:     TRISA=0X00;
  3942  02F8  0021               	movlb	1	; select bank1
  3943  02F9  018C               	clrf	12	;volatile
  3944                           
  3945                           ;config.c: 27:     TRISC=0X00;
  3946  02FA  018E               	clrf	14	;volatile
  3947                           
  3948                           ;config.c: 28:     PORTA=0X00;
  3949  02FB  0020               	movlb	0	; select bank0
  3950  02FC  018C               	clrf	12	;volatile
  3951                           
  3952                           ;config.c: 29:     PORTC=0X00;
  3953  02FD  018E               	clrf	14	;volatile
  3954                           
  3955                           ;config.c: 30:     LATA=0X00;
  3956  02FE  0022               	movlb	2	; select bank2
  3957  02FF  018C               	clrf	12	;volatile
  3958                           
  3959                           ;config.c: 31:     LATC=0X00;
  3960  0300  018E               	clrf	14	;volatile
  3961  0301                     l1829:	
  3962                           
  3963                           ;config.c: 34:     TRISAbits.TRISA0 = 1;
  3964  0301  0021               	movlb	1	; select bank1
  3965  0302  140C               	bsf	12,0	;volatile
  3966  0303                     l1831:	
  3967                           
  3968                           ;config.c: 35:     TRISAbits.TRISA1 = 1;
  3969  0303  148C               	bsf	12,1	;volatile
  3970  0304                     l1833:	
  3971                           
  3972                           ;config.c: 36:     TRISAbits.TRISA2 = 1;
  3973  0304  150C               	bsf	12,2	;volatile
  3974  0305                     l1835:	
  3975                           
  3976                           ;config.c: 39:     TRISCbits.TRISC4 = 0;
  3977  0305  120E               	bcf	14,4	;volatile
  3978  0306                     l1837:	
  3979                           
  3980                           ;config.c: 40:     TRISCbits.TRISC5 = 0;
  3981  0306  128E               	bcf	14,5	;volatile
  3982  0307                     l1839:	
  3983                           
  3984                           ;config.c: 45:     TRISAbits.TRISA4 = 1;
  3985  0307  160C               	bsf	12,4	;volatile
  3986  0308                     l1841:	
  3987                           
  3988                           ;config.c: 46:     TRISCbits.TRISC2 = 1;
  3989  0308  150E               	bsf	14,2	;volatile
  3990  0309                     l1843:	
  3991                           
  3992                           ;config.c: 47:     TRISCbits.TRISC3 = 1;
  3993  0309  158E               	bsf	14,3	;volatile
  3994  030A                     l1845:	
  3995                           
  3996                           ;config.c: 50:     TRISCbits.TRISC0=1;
  3997  030A  140E               	bsf	14,0	;volatile
  3998  030B                     l1847:	
  3999                           
  4000                           ;config.c: 51:     TRISCbits.TRISC1=1;
  4001  030B  148E               	bsf	14,1	;volatile
  4002  030C                     l1849:	
  4003                           
  4004                           ;config.c: 52:     I2C_Master_Init(100000);
  4005  030C  3000               	movlw	0
  4006  030D  0020               	movlb	0	; select bank0
  4007  030E  00A3               	movwf	I2C_Master_Init@c+3
  4008  030F  3001               	movlw	1
  4009  0310  00A2               	movwf	I2C_Master_Init@c+2
  4010  0311  3086               	movlw	134
  4011  0312  00A1               	movwf	I2C_Master_Init@c+1
  4012  0313  30A0               	movlw	160
  4013  0314  00A0               	movwf	I2C_Master_Init@c
  4014  0315  3180  2091  3182   	fcall	_I2C_Master_Init
  4015  0318                     l1851:	
  4016                           
  4017                           ;config.c: 53:     _delay((unsigned long)((100)*(8000000/4000.0)));
  4018  0318  3002               	movlw	2
  4019  0319  0020               	movlb	0	; select bank0
  4020  031A  00A9               	movwf	??_config+1
  4021  031B  3004               	movlw	4
  4022  031C  00A8               	movwf	??_config
  4023  031D  30BA               	movlw	186
  4024  031E                     u1527:	
  4025  031E  0B89               	decfsz	9,f
  4026  031F  2B1E               	goto	u1527
  4027  0320  0BA8               	decfsz	??_config,f
  4028  0321  2B1E               	goto	u1527
  4029  0322  0BA9               	decfsz	??_config+1,f
  4030  0323  2B1E               	goto	u1527
  4031  0324  0000               	nop
  4032  0325                     l1853:	
  4033                           
  4034                           ;config.c: 54:     Lcd_Init();
  4035  0325  3181  2162  3182   	fcall	_Lcd_Init
  4036  0328                     l1855:	
  4037                           
  4038                           ;config.c: 55:     Lcd_Clear();
  4039  0328  318F  27A3  3182   	fcall	_Lcd_Clear
  4040  032B                     l1857:	
  4041                           
  4042                           ;config.c: 56:     Cursor_Off();
  4043  032B  318F  279A  3182   	fcall	_Cursor_Off
  4044  032E                     l1859:	
  4045                           
  4046                           ;config.c: 57:     Lcd_Set_Cursor(1,1);
  4047  032E  01FB               	clrf	Lcd_Set_Cursor@b
  4048  032F  0AFB               	incf	Lcd_Set_Cursor@b,f
  4049  0330  3001               	movlw	1
  4050  0331  3181  21A5  3182   	fcall	_Lcd_Set_Cursor
  4051  0334                     l1861:	
  4052                           
  4053                           ;config.c: 58:     Lcd_Write_String("Paul Iorga");
  4054  0334  302D               	movlw	low (STR_5| (0+32768))
  4055  0335  00FA               	movwf	Lcd_Write_String@a
  4056  0336  3090               	movlw	high (STR_5| (0+32768))
  4057  0337  00FB               	movwf	Lcd_Write_String@a+1
  4058  0338  3180  2026  3182   	fcall	_Lcd_Write_String
  4059  033B                     l1863:	
  4060                           
  4061                           ;config.c: 59:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4062  033B  3015               	movlw	21
  4063  033C  0020               	movlb	0	; select bank0
  4064  033D  00A9               	movwf	??_config+1
  4065  033E  304B               	movlw	75
  4066  033F  00A8               	movwf	??_config
  4067  0340  30BE               	movlw	190
  4068  0341                     u1537:	
  4069  0341  0B89               	decfsz	9,f
  4070  0342  2B41               	goto	u1537
  4071  0343  0BA8               	decfsz	??_config,f
  4072  0344  2B41               	goto	u1537
  4073  0345  0BA9               	decfsz	??_config+1,f
  4074  0346  2B41               	goto	u1537
  4075  0347  0000               	nop
  4076  0348                     l93:	
  4077  0348  0008               	return
  4078  0349                     __end_of_config:	
  4079                           
  4080                           	psect	text15
  4081  0026                     __ptext15:	
  4082 ;; *************** function _Lcd_Write_String *****************
  4083 ;; Defined at:
  4084 ;;		line 114 in file "i2c_display.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  a               2   10[COMMON] PTR unsigned char 
  4087 ;;		 -> STR_5(11), STR_4(15), STR_3(16), STR_2(14), 
  4088 ;;		 -> duty(3), 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  i               2    0[BANK0 ] int 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4100 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;Total ram usage:        5 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    4
  4107 ;; This function calls:
  4108 ;;		_Lcd_Write_Char
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;;		_config
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           
  4116                           ;psect for function _Lcd_Write_String
  4117  0026                     _Lcd_Write_String:	
  4118  0026                     l1781:	
  4119                           ;incstack = 0
  4120                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4121                           
  4122                           
  4123                           ;i2c_display.c: 114: void Lcd_Write_String(char *a);i2c_display.c: 115: {;i2c_display.c:
      +                           116:  int i;;i2c_display.c: 117:  for(i=0;a[i]!='\0';i++)
  4124  0026  0020               	movlb	0	; select bank0
  4125  0027  01A0               	clrf	Lcd_Write_String@i
  4126  0028  01A1               	clrf	Lcd_Write_String@i+1
  4127  0029  2839               	goto	l1787
  4128  002A                     l1783:	
  4129                           
  4130                           ;i2c_display.c: 118:     Lcd_Write_Char(a[i]);
  4131  002A  087A               	movf	Lcd_Write_String@a,w
  4132  002B  0720               	addwf	Lcd_Write_String@i,w
  4133  002C  0084               	movwf	4
  4134  002D  087B               	movf	Lcd_Write_String@a+1,w
  4135  002E  3D21               	addwfc	Lcd_Write_String@i+1,w
  4136  002F  0085               	movwf	5
  4137  0030  0800               	movf	0,w	;code access
  4138  0031  3181  2123  3180   	fcall	_Lcd_Write_Char
  4139  0034                     l1785:	
  4140  0034  3001               	movlw	1
  4141  0035  0020               	movlb	0	; select bank0
  4142  0036  07A0               	addwf	Lcd_Write_String@i,f
  4143  0037  3000               	movlw	0
  4144  0038  3DA1               	addwfc	Lcd_Write_String@i+1,f
  4145  0039                     l1787:	
  4146  0039  087A               	movf	Lcd_Write_String@a,w
  4147  003A  0720               	addwf	Lcd_Write_String@i,w
  4148  003B  0084               	movwf	4
  4149  003C  087B               	movf	Lcd_Write_String@a+1,w
  4150  003D  3D21               	addwfc	Lcd_Write_String@i+1,w
  4151  003E  0085               	movwf	5
  4152  003F  0012               	moviw fsr0++
  4153  0040  1D03               	btfss	3,2
  4154  0041  2843               	goto	u1431
  4155  0042  2844               	goto	u1430
  4156  0043                     u1431:	
  4157  0043  282A               	goto	l1783
  4158  0044                     u1430:	
  4159  0044                     l151:	
  4160  0044  0008               	return
  4161  0045                     __end_of_Lcd_Write_String:	
  4162                           
  4163                           	psect	text16
  4164  0123                     __ptext16:	
  4165 ;; *************** function _Lcd_Write_Char *****************
  4166 ;; Defined at:
  4167 ;;		line 90 in file "i2c_display.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  a               1    wreg     unsigned char 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  a               1    7[COMMON] unsigned char 
  4172 ;;  temp            1    9[COMMON] unsigned char 
  4173 ;;  y               1    8[COMMON] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0, pclath, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4186 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;Total ram usage:        5 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    3
  4190 ;; This function calls:
  4191 ;;		_Lcd_Port
  4192 ;; This function is called by:
  4193 ;;		_Lcd_Write_String
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _Lcd_Write_Char
  4199  0123                     _Lcd_Write_Char:	
  4200                           
  4201                           ;incstack = 0
  4202                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4203                           ;Lcd_Write_Char@a stored from wreg
  4204  0123  00F7               	movwf	Lcd_Write_Char@a
  4205  0124                     l1667:	
  4206                           
  4207                           ;i2c_display.c: 90: void Lcd_Write_Char(char a);i2c_display.c: 91: {;i2c_display.c: 92: 
      +                             char temp,y;;i2c_display.c: 93:    temp = a&0x0F;
  4208  0124  0877               	movf	Lcd_Write_Char@a,w
  4209  0125  390F               	andlw	15
  4210  0126  00F5               	movwf	??_Lcd_Write_Char
  4211  0127  0875               	movf	??_Lcd_Write_Char,w
  4212  0128  00F9               	movwf	Lcd_Write_Char@temp
  4213  0129                     l1669:	
  4214                           
  4215                           ;i2c_display.c: 94:    temp=temp<<4;
  4216  0129  0879               	movf	Lcd_Write_Char@temp,w
  4217  012A  00F5               	movwf	??_Lcd_Write_Char
  4218  012B  3003               	movlw	3
  4219  012C                     u1275:	
  4220  012C  35F5               	lslf	??_Lcd_Write_Char,f
  4221  012D  3EFF               	addlw	-1
  4222  012E  1D03               	skipz
  4223  012F  292C               	goto	u1275
  4224  0130  3575               	lslf	??_Lcd_Write_Char,w
  4225  0131  00F6               	movwf	??_Lcd_Write_Char+1
  4226  0132  0876               	movf	??_Lcd_Write_Char+1,w
  4227  0133  00F9               	movwf	Lcd_Write_Char@temp
  4228  0134                     l1671:	
  4229                           
  4230                           ;i2c_display.c: 95:    y = a&0xF0;
  4231  0134  0877               	movf	Lcd_Write_Char@a,w
  4232  0135  39F0               	andlw	240
  4233  0136  00F5               	movwf	??_Lcd_Write_Char
  4234  0137  0875               	movf	??_Lcd_Write_Char,w
  4235  0138  00F8               	movwf	Lcd_Write_Char@y
  4236  0139                     l1673:	
  4237                           
  4238                           ;i2c_display.c: 98:    Lcd_Port(0x00 | 0x01 | 0x00 | 0x00);
  4239  0139  3001               	movlw	1
  4240  013A  318F  27CE  3181   	fcall	_Lcd_Port
  4241  013D                     l1675:	
  4242                           
  4243                           ;i2c_display.c: 99:    Lcd_Port(y);
  4244  013D  0878               	movf	Lcd_Write_Char@y,w
  4245  013E  318F  27CE  3181   	fcall	_Lcd_Port
  4246  0141                     l1677:	
  4247                           
  4248                           ;i2c_display.c: 101:    Lcd_Port(y | 0x01 | 0x04 | 0x00);
  4249  0141  0878               	movf	Lcd_Write_Char@y,w
  4250  0142  3805               	iorlw	5
  4251  0143  318F  27CE  3181   	fcall	_Lcd_Port
  4252  0146                     l1679:	
  4253                           
  4254                           ;i2c_display.c: 102:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  4255  0146  301A               	movlw	26
  4256  0147                     u1547:	
  4257  0147  0B89               	decfsz	9,f
  4258  0148  2947               	goto	u1547
  4259  0149  3200               	nop2
  4260  014A                     l1681:	
  4261                           
  4262                           ;i2c_display.c: 104:    Lcd_Port(y | 0x01 | 0x00 | 0x00);
  4263  014A  0878               	movf	Lcd_Write_Char@y,w
  4264  014B  3801               	iorlw	1
  4265  014C  318F  27CE  3181   	fcall	_Lcd_Port
  4266  014F                     l1683:	
  4267                           
  4268                           ;i2c_display.c: 105:    Lcd_Port(temp);
  4269  014F  0879               	movf	Lcd_Write_Char@temp,w
  4270  0150  318F  27CE  3181   	fcall	_Lcd_Port
  4271  0153                     l1685:	
  4272                           
  4273                           ;i2c_display.c: 108:    Lcd_Port(temp | 0x01 | 0x04 | 0x00);
  4274  0153  0879               	movf	Lcd_Write_Char@temp,w
  4275  0154  3805               	iorlw	5
  4276  0155  318F  27CE  3181   	fcall	_Lcd_Port
  4277  0158                     l1687:	
  4278                           
  4279                           ;i2c_display.c: 109:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  4280  0158  301A               	movlw	26
  4281  0159                     u1557:	
  4282  0159  0B89               	decfsz	9,f
  4283  015A  2959               	goto	u1557
  4284  015B  3200               	nop2
  4285  015C                     l1689:	
  4286                           
  4287                           ;i2c_display.c: 111:    Lcd_Port(temp | 0x01 | 0x00 | 0x00);
  4288  015C  0879               	movf	Lcd_Write_Char@temp,w
  4289  015D  3801               	iorlw	1
  4290  015E  318F  27CE  3181   	fcall	_Lcd_Port
  4291  0161                     l145:	
  4292  0161  0008               	return
  4293  0162                     __end_of_Lcd_Write_Char:	
  4294                           
  4295                           	psect	text17
  4296  01A5                     __ptext17:	
  4297 ;; *************** function _Lcd_Set_Cursor *****************
  4298 ;; Defined at:
  4299 ;;		line 50 in file "i2c_display.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  a               1    wreg     unsigned char 
  4302 ;;  b               1   11[COMMON] unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  a               1    0[BANK0 ] unsigned char 
  4305 ;;  temp            1    3[BANK0 ] unsigned char 
  4306 ;;  y               1    2[BANK0 ] unsigned char 
  4307 ;;  z               1    1[BANK0 ] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4317 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;Total ram usage:        7 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    4
  4324 ;; This function calls:
  4325 ;;		_Lcd_Cmd
  4326 ;; This function is called by:
  4327 ;;		_main
  4328 ;;		_config
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           
  4333                           ;psect for function _Lcd_Set_Cursor
  4334  01A5                     _Lcd_Set_Cursor:	
  4335                           
  4336                           ;incstack = 0
  4337                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4338                           ;Lcd_Set_Cursor@a stored from wreg
  4339  01A5  0020               	movlb	0	; select bank0
  4340  01A6  00A0               	movwf	Lcd_Set_Cursor@a
  4341  01A7                     l1761:	
  4342                           
  4343                           ;i2c_display.c: 50: void Lcd_Set_Cursor(char a, char b);i2c_display.c: 51: {;i2c_display
      +                          .c: 52:  char temp,z,y;;i2c_display.c: 53:  if(a == 1)
  4344  01A7  0320               	decf	Lcd_Set_Cursor@a,w
  4345  01A8  1D03               	btfss	3,2
  4346  01A9  29AB               	goto	u1391
  4347  01AA  29AC               	goto	u1390
  4348  01AB                     u1391:	
  4349  01AB  29CA               	goto	l1771
  4350  01AC                     u1390:	
  4351  01AC                     l1763:	
  4352                           
  4353                           ;i2c_display.c: 54:  {;i2c_display.c: 55:    temp = 0x80 + b - 1;
  4354  01AC  087B               	movf	Lcd_Set_Cursor@b,w
  4355  01AD  3E7F               	addlw	127
  4356  01AE  00FC               	movwf	??_Lcd_Set_Cursor
  4357  01AF  087C               	movf	??_Lcd_Set_Cursor,w
  4358  01B0  00A3               	movwf	Lcd_Set_Cursor@temp
  4359                           
  4360                           ;i2c_display.c: 56:   z = temp>>4;
  4361  01B1  0823               	movf	Lcd_Set_Cursor@temp,w
  4362  01B2  00FC               	movwf	??_Lcd_Set_Cursor
  4363  01B3  3004               	movlw	4
  4364  01B4                     u1405:	
  4365  01B4  36FC               	lsrf	??_Lcd_Set_Cursor,f
  4366  01B5  0B89               	decfsz	9,f
  4367  01B6  29B4               	goto	u1405
  4368  01B7  087C               	movf	??_Lcd_Set_Cursor,w
  4369  01B8  00FD               	movwf	??_Lcd_Set_Cursor+1
  4370  01B9  087D               	movf	??_Lcd_Set_Cursor+1,w
  4371  01BA  00A1               	movwf	Lcd_Set_Cursor@z
  4372  01BB                     l1765:	
  4373                           
  4374                           ;i2c_display.c: 57:   y = temp & 0x0F;
  4375  01BB  0823               	movf	Lcd_Set_Cursor@temp,w
  4376  01BC  390F               	andlw	15
  4377  01BD  00FC               	movwf	??_Lcd_Set_Cursor
  4378  01BE  087C               	movf	??_Lcd_Set_Cursor,w
  4379  01BF  00A2               	movwf	Lcd_Set_Cursor@y
  4380  01C0                     l1767:	
  4381                           
  4382                           ;i2c_display.c: 58:   Lcd_Cmd(z);
  4383  01C0  0821               	movf	Lcd_Set_Cursor@z,w
  4384  01C1  3180  20C1  3181   	fcall	_Lcd_Cmd
  4385  01C4                     l1769:	
  4386                           
  4387                           ;i2c_display.c: 59:   Lcd_Cmd(y);
  4388  01C4  0020               	movlb	0	; select bank0
  4389  01C5  0822               	movf	Lcd_Set_Cursor@y,w
  4390  01C6  3180  20C1  3181   	fcall	_Lcd_Cmd
  4391                           
  4392                           ;i2c_display.c: 60:  }
  4393  01C9  29ED               	goto	l139
  4394  01CA                     l1771:	
  4395  01CA  3002               	movlw	2
  4396  01CB  0620               	xorwf	Lcd_Set_Cursor@a,w
  4397  01CC  1D03               	btfss	3,2
  4398  01CD  29CF               	goto	u1411
  4399  01CE  29D0               	goto	u1410
  4400  01CF                     u1411:	
  4401  01CF  29ED               	goto	l139
  4402  01D0                     u1410:	
  4403  01D0                     l1773:	
  4404                           
  4405                           ;i2c_display.c: 62:  {;i2c_display.c: 63:   temp = 0xC0 + b - 1;
  4406  01D0  087B               	movf	Lcd_Set_Cursor@b,w
  4407  01D1  3EBF               	addlw	191
  4408  01D2  00FC               	movwf	??_Lcd_Set_Cursor
  4409  01D3  087C               	movf	??_Lcd_Set_Cursor,w
  4410  01D4  00A3               	movwf	Lcd_Set_Cursor@temp
  4411                           
  4412                           ;i2c_display.c: 64:   z = temp>>4;
  4413  01D5  0823               	movf	Lcd_Set_Cursor@temp,w
  4414  01D6  00FC               	movwf	??_Lcd_Set_Cursor
  4415  01D7  3004               	movlw	4
  4416  01D8                     u1425:	
  4417  01D8  36FC               	lsrf	??_Lcd_Set_Cursor,f
  4418  01D9  0B89               	decfsz	9,f
  4419  01DA  29D8               	goto	u1425
  4420  01DB  087C               	movf	??_Lcd_Set_Cursor,w
  4421  01DC  00FD               	movwf	??_Lcd_Set_Cursor+1
  4422  01DD  087D               	movf	??_Lcd_Set_Cursor+1,w
  4423  01DE  00A1               	movwf	Lcd_Set_Cursor@z
  4424  01DF                     l1775:	
  4425                           
  4426                           ;i2c_display.c: 65:   y = temp & 0x0F;
  4427  01DF  0823               	movf	Lcd_Set_Cursor@temp,w
  4428  01E0  390F               	andlw	15
  4429  01E1  00FC               	movwf	??_Lcd_Set_Cursor
  4430  01E2  087C               	movf	??_Lcd_Set_Cursor,w
  4431  01E3  00A2               	movwf	Lcd_Set_Cursor@y
  4432  01E4                     l1777:	
  4433                           
  4434                           ;i2c_display.c: 66:   Lcd_Cmd(z);
  4435  01E4  0821               	movf	Lcd_Set_Cursor@z,w
  4436  01E5  3180  20C1  3181   	fcall	_Lcd_Cmd
  4437  01E8                     l1779:	
  4438                           
  4439                           ;i2c_display.c: 67:   Lcd_Cmd(y);
  4440  01E8  0020               	movlb	0	; select bank0
  4441  01E9  0822               	movf	Lcd_Set_Cursor@y,w
  4442  01EA  3180  20C1  3181   	fcall	_Lcd_Cmd
  4443  01ED                     l139:	
  4444  01ED  0008               	return
  4445  01EE                     __end_of_Lcd_Set_Cursor:	
  4446                           
  4447                           	psect	text18
  4448  0162                     __ptext18:	
  4449 ;; *************** function _Lcd_Init *****************
  4450 ;; Defined at:
  4451 ;;		line 71 in file "i2c_display.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2, status,0, pclath, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;Total ram usage:        1 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:    4
  4472 ;; This function calls:
  4473 ;;		_Lcd_Cmd
  4474 ;;		_Lcd_Port
  4475 ;; This function is called by:
  4476 ;;		_config
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           
  4481                           ;psect for function _Lcd_Init
  4482  0162                     _Lcd_Init:	
  4483  0162                     l1801:	
  4484                           ;incstack = 0
  4485                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4486                           
  4487                           
  4488                           ;i2c_display.c: 73:   Lcd_Port(0x00);
  4489  0162  3000               	movlw	0
  4490  0163  318F  27CE  3181   	fcall	_Lcd_Port
  4491  0166                     l1803:	
  4492                           
  4493                           ;i2c_display.c: 74:    _delay((unsigned long)((20)*(8000000/4000.0)));
  4494  0166  3034               	movlw	52
  4495  0167  00FB               	movwf	??_Lcd_Init
  4496  0168  30F2               	movlw	242
  4497  0169                     u1567:	
  4498  0169  0B89               	decfsz	9,f
  4499  016A  2969               	goto	u1567
  4500  016B  0BFB               	decfsz	??_Lcd_Init,f
  4501  016C  2969               	goto	u1567
  4502  016D                     l1805:	
  4503                           
  4504                           ;i2c_display.c: 75:   Lcd_Cmd(0x03);
  4505  016D  3003               	movlw	3
  4506  016E  3180  20C1  3181   	fcall	_Lcd_Cmd
  4507                           
  4508                           ;i2c_display.c: 76:  _delay((unsigned long)((5)*(8000000/4000.0)));
  4509  0171  300D               	movlw	13
  4510  0172  00FB               	movwf	??_Lcd_Init
  4511  0173  30FC               	movlw	252
  4512  0174                     u1577:	
  4513  0174  0B89               	decfsz	9,f
  4514  0175  2974               	goto	u1577
  4515  0176  0BFB               	decfsz	??_Lcd_Init,f
  4516  0177  2974               	goto	u1577
  4517  0178                     l1807:	
  4518                           
  4519                           ;i2c_display.c: 77:   Lcd_Cmd(0x03);
  4520  0178  3003               	movlw	3
  4521  0179  3180  20C1  3181   	fcall	_Lcd_Cmd
  4522  017C                     l1809:	
  4523                           
  4524                           ;i2c_display.c: 78:  _delay((unsigned long)((11)*(8000000/4000.0)));
  4525  017C  301D               	movlw	29
  4526  017D  00FB               	movwf	??_Lcd_Init
  4527  017E  3091               	movlw	145
  4528  017F                     u1587:	
  4529  017F  0B89               	decfsz	9,f
  4530  0180  297F               	goto	u1587
  4531  0181  0BFB               	decfsz	??_Lcd_Init,f
  4532  0182  297F               	goto	u1587
  4533  0183  0000               	nop
  4534                           
  4535                           ;i2c_display.c: 79:   Lcd_Cmd(0x03);
  4536  0184  3003               	movlw	3
  4537  0185  3180  20C1  3181   	fcall	_Lcd_Cmd
  4538                           
  4539                           ;i2c_display.c: 81:   Lcd_Cmd(0x02);
  4540  0188  3002               	movlw	2
  4541  0189  3180  20C1  3181   	fcall	_Lcd_Cmd
  4542                           
  4543                           ;i2c_display.c: 82:   Lcd_Cmd(0x02);
  4544  018C  3002               	movlw	2
  4545  018D  3180  20C1  3181   	fcall	_Lcd_Cmd
  4546                           
  4547                           ;i2c_display.c: 83:   Lcd_Cmd(0x08);
  4548  0190  3008               	movlw	8
  4549  0191  3180  20C1  3181   	fcall	_Lcd_Cmd
  4550                           
  4551                           ;i2c_display.c: 84:   Lcd_Cmd(0x00);
  4552  0194  3000               	movlw	0
  4553  0195  3180  20C1  3181   	fcall	_Lcd_Cmd
  4554                           
  4555                           ;i2c_display.c: 85:   Lcd_Cmd(0x0C);
  4556  0198  300C               	movlw	12
  4557  0199  3180  20C1  3181   	fcall	_Lcd_Cmd
  4558                           
  4559                           ;i2c_display.c: 86:   Lcd_Cmd(0x00);
  4560  019C  3000               	movlw	0
  4561  019D  3180  20C1  3181   	fcall	_Lcd_Cmd
  4562                           
  4563                           ;i2c_display.c: 87:   Lcd_Cmd(0x06);
  4564  01A0  3006               	movlw	6
  4565  01A1  3180  20C1  3181   	fcall	_Lcd_Cmd
  4566  01A4                     l142:	
  4567  01A4  0008               	return
  4568  01A5                     __end_of_Lcd_Init:	
  4569                           
  4570                           	psect	text19
  4571  0FA3                     __ptext19:	
  4572 ;; *************** function _Lcd_Clear *****************
  4573 ;; Defined at:
  4574 ;;		line 44 in file "i2c_display.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0, pclath, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4592 ;;Total ram usage:        0 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    4
  4595 ;; This function calls:
  4596 ;;		_Lcd_Cmd
  4597 ;; This function is called by:
  4598 ;;		_main
  4599 ;;		_config
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _Lcd_Clear
  4605  0FA3                     _Lcd_Clear:	
  4606  0FA3                     l1759:	
  4607                           ;incstack = 0
  4608                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4609                           
  4610                           
  4611                           ;i2c_display.c: 46:  Lcd_Cmd(0);
  4612  0FA3  3000               	movlw	0
  4613  0FA4  3180  20C1  318F   	fcall	_Lcd_Cmd
  4614                           
  4615                           ;i2c_display.c: 47:  Lcd_Cmd(1);
  4616  0FA7  3001               	movlw	1
  4617  0FA8  3180  20C1  318F   	fcall	_Lcd_Cmd
  4618  0FAB                     l133:	
  4619  0FAB  0008               	return
  4620  0FAC                     __end_of_Lcd_Clear:	
  4621                           
  4622                           	psect	text20
  4623  0091                     __ptext20:	
  4624 ;; *************** function _I2C_Master_Init *****************
  4625 ;; Defined at:
  4626 ;;		line 164 in file "i2c_display.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  c               4    0[BANK0 ] const unsigned long 
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0, pclath, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4640 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;Total ram usage:        8 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    1
  4647 ;; This function calls:
  4648 ;;		___lldiv
  4649 ;; This function is called by:
  4650 ;;		_config
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           
  4655                           ;psect for function _I2C_Master_Init
  4656  0091                     _I2C_Master_Init:	
  4657  0091                     l1789:	
  4658                           ;incstack = 0
  4659                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4660                           
  4661                           
  4662                           ;i2c_display.c: 164: void I2C_Master_Init(const unsigned long c);i2c_display.c: 165: {;i
      +                          2c_display.c: 166:     SSP1CON1 = 0b00101000;
  4663  0091  3028               	movlw	40
  4664  0092  0024               	movlb	4	; select bank4
  4665  0093  0095               	movwf	21	;volatile
  4666  0094                     l1791:	
  4667                           
  4668                           ;i2c_display.c: 167:     SSP1CON2 = 0x00;
  4669  0094  0196               	clrf	22	;volatile
  4670  0095                     l1793:	
  4671                           
  4672                           ;i2c_display.c: 168:     SSP1ADD = (8000000/(4*c))-1;
  4673  0095  0020               	movlb	0	; select bank0
  4674  0096  0820               	movf	I2C_Master_Init@c,w
  4675  0097  00A4               	movwf	??_I2C_Master_Init
  4676  0098  0821               	movf	I2C_Master_Init@c+1,w
  4677  0099  00A5               	movwf	??_I2C_Master_Init+1
  4678  009A  0822               	movf	I2C_Master_Init@c+2,w
  4679  009B  00A6               	movwf	??_I2C_Master_Init+2
  4680  009C  0823               	movf	I2C_Master_Init@c+3,w
  4681  009D  00A7               	movwf	??_I2C_Master_Init+3
  4682  009E  3002               	movlw	2
  4683  009F                     u1445:	
  4684  009F  35A4               	lslf	??_I2C_Master_Init,f
  4685  00A0  0DA5               	rlf	??_I2C_Master_Init+1,f
  4686  00A1  0DA6               	rlf	??_I2C_Master_Init+2,f
  4687  00A2  0DA7               	rlf	??_I2C_Master_Init+3,f
  4688  00A3                     u1440:	
  4689  00A3  0B89               	decfsz	9,f
  4690  00A4  289F               	goto	u1445
  4691  00A5  0827               	movf	??_I2C_Master_Init+3,w
  4692  00A6  00F3               	movwf	___lldiv@divisor+3
  4693  00A7  0826               	movf	??_I2C_Master_Init+2,w
  4694  00A8  00F2               	movwf	___lldiv@divisor+2
  4695  00A9  0825               	movf	??_I2C_Master_Init+1,w
  4696  00AA  00F1               	movwf	___lldiv@divisor+1
  4697  00AB  0824               	movf	??_I2C_Master_Init,w
  4698  00AC  00F0               	movwf	___lldiv@divisor
  4699  00AD  3000               	movlw	0
  4700  00AE  00F7               	movwf	___lldiv@dividend+3
  4701  00AF  307A               	movlw	122
  4702  00B0  00F6               	movwf	___lldiv@dividend+2
  4703  00B1  3012               	movlw	18
  4704  00B2  00F5               	movwf	___lldiv@dividend+1
  4705  00B3  3000               	movlw	0
  4706  00B4  00F4               	movwf	___lldiv@dividend
  4707  00B5  3182  2293  3180   	fcall	___lldiv
  4708  00B8  0870               	movf	?___lldiv,w
  4709  00B9  3EFF               	addlw	255
  4710  00BA  0024               	movlb	4	; select bank4
  4711  00BB  0092               	movwf	18	;volatile
  4712  00BC                     l1795:	
  4713                           
  4714                           ;i2c_display.c: 169:     SSP1STAT = 0x00;
  4715  00BC  0194               	clrf	20	;volatile
  4716  00BD                     l1797:	
  4717                           
  4718                           ;i2c_display.c: 170:     TRISCbits.TRISC0=1;
  4719  00BD  0021               	movlb	1	; select bank1
  4720  00BE  140E               	bsf	14,0	;volatile
  4721  00BF                     l1799:	
  4722                           
  4723                           ;i2c_display.c: 171:     TRISCbits.TRISC1=1;
  4724  00BF  148E               	bsf	14,1	;volatile
  4725  00C0                     l172:	
  4726  00C0  0008               	return
  4727  00C1                     __end_of_I2C_Master_Init:	
  4728                           
  4729                           	psect	text21
  4730  0293                     __ptext21:	
  4731 ;; *************** function ___lldiv *****************
  4732 ;; Defined at:
  4733 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  divisor         4    0[COMMON] unsigned long 
  4736 ;;  dividend        4    4[COMMON] unsigned long 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  quotient        4    9[COMMON] unsigned long 
  4739 ;;  counter         1   13[COMMON] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  4    0[COMMON] unsigned long 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4749 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;Total ram usage:       14 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_I2C_Master_Init
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           
  4763                           ;psect for function ___lldiv
  4764  0293                     ___lldiv:	
  4765  0293                     l1735:	
  4766                           ;incstack = 0
  4767                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4768                           
  4769  0293  3000               	movlw	0
  4770  0294  00FC               	movwf	___lldiv@quotient+3
  4771  0295  3000               	movlw	0
  4772  0296  00FB               	movwf	___lldiv@quotient+2
  4773  0297  3000               	movlw	0
  4774  0298  00FA               	movwf	___lldiv@quotient+1
  4775  0299  3000               	movlw	0
  4776  029A  00F9               	movwf	___lldiv@quotient
  4777  029B  0873               	movf	___lldiv@divisor+3,w
  4778  029C  0472               	iorwf	___lldiv@divisor+2,w
  4779  029D  0471               	iorwf	___lldiv@divisor+1,w
  4780  029E  0470               	iorwf	___lldiv@divisor,w
  4781  029F  1903               	skipnz
  4782  02A0  2AA2               	goto	u1321
  4783  02A1  2AA3               	goto	u1320
  4784  02A2                     u1321:	
  4785  02A2  2AE4               	goto	l1755
  4786  02A3                     u1320:	
  4787  02A3                     l1737:	
  4788  02A3  01FD               	clrf	___lldiv@counter
  4789  02A4  0AFD               	incf	___lldiv@counter,f
  4790  02A5  2AB1               	goto	l1741
  4791  02A6                     l1739:	
  4792  02A6  3001               	movlw	1
  4793  02A7                     u1335:	
  4794  02A7  35F0               	lslf	___lldiv@divisor,f
  4795  02A8  0DF1               	rlf	___lldiv@divisor+1,f
  4796  02A9  0DF2               	rlf	___lldiv@divisor+2,f
  4797  02AA  0DF3               	rlf	___lldiv@divisor+3,f
  4798  02AB  0B89               	decfsz	9,f
  4799  02AC  2AA7               	goto	u1335
  4800  02AD  3001               	movlw	1
  4801  02AE  00F8               	movwf	??___lldiv
  4802  02AF  0878               	movf	??___lldiv,w
  4803  02B0  07FD               	addwf	___lldiv@counter,f
  4804  02B1                     l1741:	
  4805  02B1  1FF3               	btfss	___lldiv@divisor+3,7
  4806  02B2  2AB4               	goto	u1341
  4807  02B3  2AB5               	goto	u1340
  4808  02B4                     u1341:	
  4809  02B4  2AA6               	goto	l1739
  4810  02B5                     u1340:	
  4811  02B5                     l1743:	
  4812  02B5  3001               	movlw	1
  4813  02B6                     u1355:	
  4814  02B6  35F9               	lslf	___lldiv@quotient,f
  4815  02B7  0DFA               	rlf	___lldiv@quotient+1,f
  4816  02B8  0DFB               	rlf	___lldiv@quotient+2,f
  4817  02B9  0DFC               	rlf	___lldiv@quotient+3,f
  4818  02BA  0B89               	decfsz	9,f
  4819  02BB  2AB6               	goto	u1355
  4820  02BC                     l1745:	
  4821  02BC  0873               	movf	___lldiv@divisor+3,w
  4822  02BD  0277               	subwf	___lldiv@dividend+3,w
  4823  02BE  1D03               	skipz
  4824  02BF  2ACA               	goto	u1365
  4825  02C0  0872               	movf	___lldiv@divisor+2,w
  4826  02C1  0276               	subwf	___lldiv@dividend+2,w
  4827  02C2  1D03               	skipz
  4828  02C3  2ACA               	goto	u1365
  4829  02C4  0871               	movf	___lldiv@divisor+1,w
  4830  02C5  0275               	subwf	___lldiv@dividend+1,w
  4831  02C6  1D03               	skipz
  4832  02C7  2ACA               	goto	u1365
  4833  02C8  0870               	movf	___lldiv@divisor,w
  4834  02C9  0274               	subwf	___lldiv@dividend,w
  4835  02CA                     u1365:	
  4836  02CA  1C03               	skipc
  4837  02CB  2ACD               	goto	u1361
  4838  02CC  2ACE               	goto	u1360
  4839  02CD                     u1361:	
  4840  02CD  2AD7               	goto	l1751
  4841  02CE                     u1360:	
  4842  02CE                     l1747:	
  4843  02CE  0870               	movf	___lldiv@divisor,w
  4844  02CF  02F4               	subwf	___lldiv@dividend,f
  4845  02D0  0871               	movf	___lldiv@divisor+1,w
  4846  02D1  3BF5               	subwfb	___lldiv@dividend+1,f
  4847  02D2  0872               	movf	___lldiv@divisor+2,w
  4848  02D3  3BF6               	subwfb	___lldiv@dividend+2,f
  4849  02D4  0873               	movf	___lldiv@divisor+3,w
  4850  02D5  3BF7               	subwfb	___lldiv@dividend+3,f
  4851  02D6                     l1749:	
  4852  02D6  1479               	bsf	___lldiv@quotient,0
  4853  02D7                     l1751:	
  4854  02D7  3001               	movlw	1
  4855  02D8                     u1375:	
  4856  02D8  36F3               	lsrf	___lldiv@divisor+3,f
  4857  02D9  0CF2               	rrf	___lldiv@divisor+2,f
  4858  02DA  0CF1               	rrf	___lldiv@divisor+1,f
  4859  02DB  0CF0               	rrf	___lldiv@divisor,f
  4860  02DC  0B89               	decfsz	9,f
  4861  02DD  2AD8               	goto	u1375
  4862  02DE                     l1753:	
  4863  02DE  3001               	movlw	1
  4864  02DF  02FD               	subwf	___lldiv@counter,f
  4865  02E0  1D03               	btfss	3,2
  4866  02E1  2AE3               	goto	u1381
  4867  02E2  2AE4               	goto	u1380
  4868  02E3                     u1381:	
  4869  02E3  2AB5               	goto	l1743
  4870  02E4                     u1380:	
  4871  02E4                     l1755:	
  4872  02E4  087C               	movf	___lldiv@quotient+3,w
  4873  02E5  00F3               	movwf	?___lldiv+3
  4874  02E6  087B               	movf	___lldiv@quotient+2,w
  4875  02E7  00F2               	movwf	?___lldiv+2
  4876  02E8  087A               	movf	___lldiv@quotient+1,w
  4877  02E9  00F1               	movwf	?___lldiv+1
  4878  02EA  0879               	movf	___lldiv@quotient,w
  4879  02EB  00F0               	movwf	?___lldiv
  4880  02EC                     l454:	
  4881  02EC  0008               	return
  4882  02ED                     __end_of___lldiv:	
  4883                           
  4884                           	psect	text22
  4885  0F9A                     __ptext22:	
  4886 ;; *************** function _Cursor_Off *****************
  4887 ;; Defined at:
  4888 ;;		line 139 in file "i2c_display.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;		None
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0, pclath, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4906 ;;Total ram usage:        0 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    4
  4909 ;; This function calls:
  4910 ;;		_Lcd_Cmd
  4911 ;; This function is called by:
  4912 ;;		_config
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           
  4917                           ;psect for function _Cursor_Off
  4918  0F9A                     _Cursor_Off:	
  4919  0F9A                     l1811:	
  4920                           ;incstack = 0
  4921                           ; Regs used in _Cursor_Off: [wreg+status,2+status,0+pclath+cstack]
  4922                           
  4923                           
  4924                           ;i2c_display.c: 141: Lcd_Cmd(0x00);
  4925  0F9A  3000               	movlw	0
  4926  0F9B  3180  20C1  318F   	fcall	_Lcd_Cmd
  4927                           
  4928                           ;i2c_display.c: 142: Lcd_Cmd(0x0C);
  4929  0F9E  300C               	movlw	12
  4930  0F9F  3180  20C1  318F   	fcall	_Lcd_Cmd
  4931  0FA2                     l163:	
  4932  0FA2  0008               	return
  4933  0FA3                     __end_of_Cursor_Off:	
  4934                           
  4935                           	psect	text23
  4936  00C1                     __ptext23:	
  4937 ;; *************** function _Lcd_Cmd *****************
  4938 ;; Defined at:
  4939 ;;		line 25 in file "i2c_display.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  a               1    wreg     unsigned char 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  a               1   10[COMMON] unsigned char 
  4944 ;;  buff            2    8[COMMON] int 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0, pclath, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;Total ram usage:        6 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    3
  4961 ;; This function calls:
  4962 ;;		_Lcd_Port
  4963 ;; This function is called by:
  4964 ;;		_Lcd_Clear
  4965 ;;		_Lcd_Set_Cursor
  4966 ;;		_Lcd_Init
  4967 ;;		_Cursor_Off
  4968 ;;		_Lcd_Shift_Right
  4969 ;;		_Lcd_Shift_Left
  4970 ;;		_Cursor_On
  4971 ;;		_Cursor_Left
  4972 ;;		_Cursor_Right
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           
  4977                           ;psect for function _Lcd_Cmd
  4978  00C1                     _Lcd_Cmd:	
  4979                           
  4980                           ;incstack = 0
  4981                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4982                           ;Lcd_Cmd@a stored from wreg
  4983  00C1  00FA               	movwf	Lcd_Cmd@a
  4984  00C2                     l1647:	
  4985                           
  4986                           ;i2c_display.c: 25: void Lcd_Cmd(char a);i2c_display.c: 26: {;i2c_display.c: 27:     int
      +                           buff;;i2c_display.c: 28:     a=a<<4;
  4987  00C2  087A               	movf	Lcd_Cmd@a,w
  4988  00C3  00F5               	movwf	??_Lcd_Cmd
  4989  00C4  3003               	movlw	3
  4990  00C5                     u1265:	
  4991  00C5  35F5               	lslf	??_Lcd_Cmd,f
  4992  00C6  3EFF               	addlw	-1
  4993  00C7  1D03               	skipz
  4994  00C8  28C5               	goto	u1265
  4995  00C9  3575               	lslf	??_Lcd_Cmd,w
  4996  00CA  00F6               	movwf	??_Lcd_Cmd+1
  4997  00CB  0876               	movf	??_Lcd_Cmd+1,w
  4998  00CC  00FA               	movwf	Lcd_Cmd@a
  4999  00CD                     l1649:	
  5000  00CD                     l1651:	
  5001  00CD                     l1653:	
  5002  00CD  3000               	movlw	0
  5003  00CE  318F  27CE  3180   	fcall	_Lcd_Port
  5004  00D1                     l1655:	
  5005                           
  5006                           ;i2c_display.c: 33:  Lcd_Port(a);
  5007  00D1  087A               	movf	Lcd_Cmd@a,w
  5008  00D2  318F  27CE  3180   	fcall	_Lcd_Port
  5009  00D5                     l1657:	
  5010                           
  5011                           ;i2c_display.c: 36:     buff=a | 0x00 | 0x04 | 0x00;
  5012  00D5  3004               	movlw	4
  5013  00D6  047A               	iorwf	Lcd_Cmd@a,w
  5014  00D7  00F8               	movwf	Lcd_Cmd@buff
  5015  00D8  3000               	movlw	0
  5016  00D9  00F9               	movwf	Lcd_Cmd@buff+1
  5017  00DA                     l1659:	
  5018                           
  5019                           ;i2c_display.c: 37:     Lcd_Port(buff);
  5020  00DA  0878               	movf	Lcd_Cmd@buff,w
  5021  00DB  318F  27CE  3180   	fcall	_Lcd_Port
  5022  00DE                     l1661:	
  5023                           
  5024                           ;i2c_display.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  5025  00DE  300B               	movlw	11
  5026  00DF  00F5               	movwf	??_Lcd_Cmd
  5027  00E0  3062               	movlw	98
  5028  00E1                     u1597:	
  5029  00E1  0B89               	decfsz	9,f
  5030  00E2  28E1               	goto	u1597
  5031  00E3  0BF5               	decfsz	??_Lcd_Cmd,f
  5032  00E4  28E1               	goto	u1597
  5033  00E5  3200               	nop2
  5034  00E6                     l1663:	
  5035                           
  5036                           ;i2c_display.c: 40:     buff=a | 0x00 | 0x00 | 0x00;
  5037  00E6  087A               	movf	Lcd_Cmd@a,w
  5038  00E7  00F5               	movwf	??_Lcd_Cmd
  5039  00E8  01F6               	clrf	??_Lcd_Cmd+1
  5040  00E9  0875               	movf	??_Lcd_Cmd,w
  5041  00EA  00F8               	movwf	Lcd_Cmd@buff
  5042  00EB  0876               	movf	??_Lcd_Cmd+1,w
  5043  00EC  00F9               	movwf	Lcd_Cmd@buff+1
  5044  00ED                     l1665:	
  5045                           
  5046                           ;i2c_display.c: 41:     Lcd_Port(buff);
  5047  00ED  0878               	movf	Lcd_Cmd@buff,w
  5048  00EE  318F  27CE  3180   	fcall	_Lcd_Port
  5049  00F1                     l130:	
  5050  00F1  0008               	return
  5051  00F2                     __end_of_Lcd_Cmd:	
  5052                           
  5053                           	psect	text24
  5054  0FCE                     __ptext24:	
  5055 ;; *************** function _Lcd_Port *****************
  5056 ;; Defined at:
  5057 ;;		line 19 in file "i2c_display.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  data            1    wreg     unsigned char 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  data            1    4[COMMON] unsigned char 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		wreg, status,2, status,0, pclath, cstack
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;Total ram usage:        3 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:    2
  5078 ;; This function calls:
  5079 ;;		_I2C_Master_Start
  5080 ;;		_I2C_Master_Stop
  5081 ;;		_I2C_Write_Display
  5082 ;; This function is called by:
  5083 ;;		_Lcd_Cmd
  5084 ;;		_Lcd_Init
  5085 ;;		_Lcd_Write_Char
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           
  5090                           ;psect for function _Lcd_Port
  5091  0FCE                     _Lcd_Port:	
  5092                           
  5093                           ;incstack = 0
  5094                           ; Regs used in _Lcd_Port: [wreg+status,2+status,0+pclath+cstack]
  5095                           ;Lcd_Port@data stored from wreg
  5096  0FCE  00F4               	movwf	Lcd_Port@data
  5097  0FCF                     l1587:	
  5098                           
  5099                           ;i2c_display.c: 19: void Lcd_Port(char data);i2c_display.c: 20: { I2C_Master_Start();
  5100  0FCF  318F  2788  318F   	fcall	_I2C_Master_Start
  5101                           
  5102                           ;i2c_display.c: 21:     I2C_Write_Display(0x70);
  5103  0FD2  3070               	movlw	112
  5104  0FD3  00F0               	movwf	I2C_Write_Display@d
  5105  0FD4  3000               	movlw	0
  5106  0FD5  00F1               	movwf	I2C_Write_Display@d+1
  5107  0FD6  3180  2005  318F   	fcall	_I2C_Write_Display
  5108                           
  5109                           ;i2c_display.c: 22:  I2C_Write_Display(data);
  5110  0FD9  0874               	movf	Lcd_Port@data,w
  5111  0FDA  00F2               	movwf	??_Lcd_Port
  5112  0FDB  01F3               	clrf	??_Lcd_Port+1
  5113  0FDC  0872               	movf	??_Lcd_Port,w
  5114  0FDD  00F0               	movwf	I2C_Write_Display@d
  5115  0FDE  0873               	movf	??_Lcd_Port+1,w
  5116  0FDF  00F1               	movwf	I2C_Write_Display@d+1
  5117  0FE0  3180  2005  318F   	fcall	_I2C_Write_Display
  5118                           
  5119                           ;i2c_display.c: 23:     I2C_Master_Stop();
  5120  0FE3  318F  278E  318F   	fcall	_I2C_Master_Stop
  5121  0FE6                     l125:	
  5122  0FE6  0008               	return
  5123  0FE7                     __end_of_Lcd_Port:	
  5124                           
  5125                           	psect	text25
  5126  0005                     __ptext25:	
  5127 ;; *************** function _I2C_Write_Display *****************
  5128 ;; Defined at:
  5129 ;;		line 205 in file "i2c_display.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  d               2    0[COMMON] unsigned int 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1    wreg      void 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0, pclath, cstack
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;Total ram usage:        2 bytes
  5148 ;; Hardware stack levels used:    1
  5149 ;; Hardware stack levels required when called:    1
  5150 ;; This function calls:
  5151 ;;		_I2C_Master_Wait
  5152 ;; This function is called by:
  5153 ;;		_Lcd_Port
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           
  5158                           ;psect for function _I2C_Write_Display
  5159  0005                     _I2C_Write_Display:	
  5160  0005                     l1485:	
  5161                           ;incstack = 0
  5162                           ; Regs used in _I2C_Write_Display: [wreg+status,2+status,0+pclath+cstack]
  5163                           
  5164                           
  5165                           ;i2c_display.c: 205: void I2C_Write_Display(unsigned d);i2c_display.c: 206: {;i2c_displa
      +                          y.c: 207:     I2C_Master_Wait();
  5166  0005  318F  27AC  3180   	fcall	_I2C_Master_Wait
  5167  0008                     l1487:	
  5168                           
  5169                           ;i2c_display.c: 208:     SSP1BUF = d;
  5170  0008  0870               	movf	I2C_Write_Display@d,w
  5171  0009  0024               	movlb	4	; select bank4
  5172  000A  0091               	movwf	17	;volatile
  5173  000B                     l193:	
  5174  000B  0008               	return
  5175  000C                     __end_of_I2C_Write_Display:	
  5176                           
  5177                           	psect	text26
  5178  0F8E                     __ptext26:	
  5179 ;; *************** function _I2C_Master_Stop *****************
  5180 ;; Defined at:
  5181 ;;		line 193 in file "i2c_display.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0, pclath, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;Total ram usage:        0 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    1
  5202 ;; This function calls:
  5203 ;;		_I2C_Master_Wait
  5204 ;; This function is called by:
  5205 ;;		_Lcd_Port
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function _I2C_Master_Stop
  5211  0F8E                     _I2C_Master_Stop:	
  5212  0F8E                     l1489:	
  5213                           ;incstack = 0
  5214                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5215                           
  5216                           
  5217                           ;i2c_display.c: 195:     I2C_Master_Wait();
  5218  0F8E  318F  27AC  318F   	fcall	_I2C_Master_Wait
  5219  0F91                     l1491:	
  5220                           
  5221                           ;i2c_display.c: 196:     SSP1CON2bits.PEN = 1;
  5222  0F91  0024               	movlb	4	; select bank4
  5223  0F92  1516               	bsf	22,2	;volatile
  5224  0F93                     l187:	
  5225  0F93  0008               	return
  5226  0F94                     __end_of_I2C_Master_Stop:	
  5227                           
  5228                           	psect	text27
  5229  0F88                     __ptext27:	
  5230 ;; *************** function _I2C_Master_Start *****************
  5231 ;; Defined at:
  5232 ;;		line 181 in file "i2c_display.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;		None
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;		None
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      void 
  5239 ;; Registers used:
  5240 ;;		wreg, status,2, status,0, pclath, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5250 ;;Total ram usage:        0 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:    1
  5253 ;; This function calls:
  5254 ;;		_I2C_Master_Wait
  5255 ;; This function is called by:
  5256 ;;		_Lcd_Port
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           
  5261                           ;psect for function _I2C_Master_Start
  5262  0F88                     _I2C_Master_Start:	
  5263  0F88                     l1481:	
  5264                           ;incstack = 0
  5265                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5266                           
  5267                           
  5268                           ;i2c_display.c: 183:     I2C_Master_Wait();
  5269  0F88  318F  27AC  318F   	fcall	_I2C_Master_Wait
  5270  0F8B                     l1483:	
  5271                           
  5272                           ;i2c_display.c: 184:     SSP1CON2bits.SEN = 1;
  5273  0F8B  0024               	movlb	4	; select bank4
  5274  0F8C  1416               	bsf	22,0	;volatile
  5275  0F8D                     l181:	
  5276  0F8D  0008               	return
  5277  0F8E                     __end_of_I2C_Master_Start:	
  5278                           
  5279                           	psect	text28
  5280  0FAC                     __ptext28:	
  5281 ;; *************** function _I2C_Master_Wait *****************
  5282 ;; Defined at:
  5283 ;;		line 174 in file "i2c_display.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		wreg, status,2
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5301 ;;Total ram usage:        0 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_I2C_Master_Start
  5307 ;;		_I2C_Master_Stop
  5308 ;;		_I2C_Write_Display
  5309 ;;		_I2C_Master_RepeatedStart
  5310 ;;		_I2C_Master_Write
  5311 ;;		_I2C_Master_Read
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           
  5316                           ;psect for function _I2C_Master_Wait
  5317  0FAC                     _I2C_Master_Wait:	
  5318  0FAC                     l1459:	
  5319                           ;incstack = 0
  5320                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5321                           
  5322  0FAC                     l175:	
  5323                           ;i2c_display.c: 176:    while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  5324                           
  5325  0FAC  0024               	movlb	4	; select bank4
  5326  0FAD  1914               	btfsc	20,2	;volatile
  5327  0FAE  2FB0               	goto	u801
  5328  0FAF  2FB1               	goto	u800
  5329  0FB0                     u801:	
  5330  0FB0  2FAC               	goto	l175
  5331  0FB1                     u800:	
  5332  0FB1                     l1461:	
  5333  0FB1  0816               	movf	22,w	;volatile
  5334  0FB2  391F               	andlw	31
  5335  0FB3  1D03               	btfss	3,2
  5336  0FB4  2FB6               	goto	u811
  5337  0FB5  2FB7               	goto	u810
  5338  0FB6                     u811:	
  5339  0FB6  2FAC               	goto	l175
  5340  0FB7                     u810:	
  5341  0FB7                     l178:	
  5342  0FB7  0008               	return
  5343  0FB8                     __end_of_I2C_Master_Wait:	
  5344  007E                     btemp	set	126	;btemp
  5345  007E                     wtemp0	set	126


Data Sizes:
    Strings     59
    Constant    0
    Data        0
    BSS         45
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      80
    BANK1            80      9      50
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 3
		 -> duty(BANK1[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 3
		 -> duty(BANK1[3]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    S934_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 3
		 -> duty(BANK1[3]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 3
		 -> duty(BANK1[3]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[11]), STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[14]), 
		 -> duty(BANK1[3]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _config->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Cursor_Off->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Lcd_Port->_I2C_Write_Display

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _config->_I2C_Master_Init

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11884
                                             74 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _config
                         _pwm_config
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    6112
                                             13 COMMON     1     1      0
                                             70 BANK0      4     0      4
                                              0 BANK1      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5804
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5493
                                             46 BANK0     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _pwm_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               2     2      0    3545
                                              8 BANK0      2     2      0
                         _Cursor_Off
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     5     3      2     867
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       5     5      0     397
                                              5 COMMON     5     5      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1005
                                             11 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     551
                                             11 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _Cursor_Off                                           0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              6     6      0     355
                                              5 COMMON     6     6      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             3     3      0     196
                                              2 COMMON     3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                  _I2C_Write_Display
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Display                                    2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   _config
     _Cursor_Off
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
   _pwm_config
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      9      32       7       62.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      90      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      90      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 16 18:07:04 2020

               __CFG_CP$OFF 0000                          l30 03AD                          l28 038B  
                        l93 0348                          l96 0FCD                 __CFG_LVP$ON 0000  
                       l130 00F1                         l125 0FE6                         l133 0FAB  
                       l142 01A4          I2C_Write_Display@d 0070                         l151 0044  
                       l400 07EF                         l145 0161                         l163 0FA2  
                       l139 01ED                         l172 00C0                         l181 0F8D  
                       l414 0122                         l175 0FAC                         l407 04A1  
                       l193 000B                         l178 0FB7                         l187 0F93  
                       l531 057A                         l532 058B                         l372 0279  
                       l454 02EC                         l518 067B                         l374 0292  
                       l382 06F7                         l519 068C                         l383 070D  
                       l369 0257                         l377 06D6                         l386 077C  
                       l378 06DF                         l902 0068                         l911 0FFF  
                       l905 0004                         l872 0025                         l875 0025  
                       l887 023C                         l895 0090                         _PR2 001B  
              __CFG_CPD$OFF 0000                         u800 0FB1                         u801 0FB0  
                       u810 0FB7                         u811 0FB6                         u820 0090  
                       u821 008F                         u910 05C2                         u830 0FF9  
                       u911 05C1                         u831 0FF8                         u760 01F3  
                       u840 0243                         u761 01F2                         u841 0242  
                       u930 05EC                         u770 01F8                         u850 0250  
                       u771 01F7                         u851 024F                         u940 05FC  
                       u780 0207                         u860 0279                         u941 05FB  
                       u781 0206                         u861 0278                         u950 060F  
                       u790 0224                         u870 027E                         u951 060E  
                       u791 0223                         u871 027D                         u960 0639  
                       u880 0019                         u961 0638                         u881 0018  
                       u865 0275                         u970 0658                         u890 0597  
                       u971 0657                         u891 0596                         u795 0220  
                       u980 065D                         u981 065C                         u965 0635  
                       u885 0015                         _abs 000C                         _pad 023D  
              __CFG_BORV$LO 0000                         wreg 0009                        ?_abs 0073  
                      l1501 0255                        l1511 0286                        l1503 025A  
                      l1521 058D                        l1505 0266                        l1601 06F2  
                      l1531 05E5                        l1523 0597                        l1515 000C  
                      l1451 0207                        l1443 01EE                        l1507 026B  
                      l1611 0714                        l1603 06FF                        l1461 0FB1  
                      l1541 060B                        l1533 05EF                        l1525 05B8  
                      l1517 0019                        l1453 0224                        l1445 01F3  
                      l1509 027E                        l1621 078A                        l1613 0719  
                      l1605 0705                        l1701 03FD                        l1551 064A  
                      l1543 060F                        l1535 05FC                        l1527 05C2  
                      l1519 058C                        l1455 0234                        l1447 01F8  
                      l1463 006B                        l1471 0FE8                        l1631 07BE  
                      l1623 0797                        l1615 0747                        l1607 0709  
                      l1711 0449                        l1703 040E                        l1481 0F88  
                      l1801 0162                        l1545 0617                        l1537 05FF  
                      l1553 0658                        l1529 05E1                        l1561 04AD  
                      l1449 01FD                        l1465 006E                        l1473 0FED  
                      l1641 07D5                        l1633 07C2                        l1625 07A4  
                      l1617 074B                        l1609 0711                        l1713 045A  
                      l1721 0473                        l1705 0416                        l1459 0FAC  
                      l1483 0F8B                        l1491 0F91                        l1651 00CD  
                      l1811 0F9A                        l1803 0166                        l1555 065D  
                      l1547 0639                        l1539 0607                        l1571 0507  
                      l1563 04CE                        l1467 007C                        l1475 0FF1  
                      l1635 07C6                        l1643 07DD                        l1627 07B2  
                      l1619 074F                        l1723 047B                        l1715 0462  
                      l1707 042F                        l1485 0005                        l1661 00DE  
                      l1653 00CD                        l1741 02B1                        l1805 016D  
                      l1549 0649                        l1581 0549                        l1573 050F  
                      l1565 04D8                        l1557 04A2                        l1469 0081  
                      l1477 0FF9                        l1493 023F                        l1637 07CC  
                      l1629 07B7                        l1717 046D                        l1821 011A  
                      l1813 00F4                        l1901 0354                        l1487 0008  
                      l1663 00E6                        l1655 00D1                        l1647 00C2  
                      l1751 02D7                        l1743 02B5                        l1735 0293  
                      l1807 0178                        l1671 0134                        l1831 0303  
                      l1575 0513                        l1583 0557                        l1567 04F7  
                      l1559 04A3                        l1495 0243                        l1639 07D1  
                      l1591 069F                        l1727 047E                        l1815 00F8  
                      l1911 037B                        l1903 0357                        l1489 0F8E  
                      l1665 00ED                        l1657 00D5                        l1649 00CD  
                      l1753 02DE                        l1745 02BC                        l1737 02A3  
                      l1809 017C                        l1761 01A7                        l1681 014A  
                      l1673 0139                        l1841 0308                        l1833 0304  
                      l1825 02ED                        l1585 055C                        l1577 0517  
                      l1569 0504                        l1497 024B                        l1593 06B2  
                      l1729 0497                        l1817 00FC                        l1921 039C  
                      l1913 0381                        l1905 0369                        l1587 0FCF  
                      l1659 00DA                        l1747 02CE                        l1739 02A6  
                      l1755 02E4                        l1763 01AC                        l1771 01CA  
                      l1683 014F                        l1675 013D                        l1667 0124  
                      l1851 0318                        l1843 0309                        l1835 0305  
                      l1827 02F5                        l1579 0539                        l1499 0250  
                      l1595 06B8                        l1691 03C9                        l1819 0110  
                      l1923 039F                        l1915 0388                        l1907 036F  
                      l1749 02D6                        l1773 01D0                        l1765 01BB  
                      l1685 0153                        l1677 0141                        l1669 0129  
                      l1781 0026                        l1861 0334                        l1853 0325  
                      l1845 030A                        l1837 0306                        l1829 0301  
                      l1597 06DB                        l1589 068F                        l1693 03DA  
                      l1925 03B1                        l1917 038F                        l1909 0376  
                      l1791 0094                        l1759 0FA3                        l1775 01DF  
                      l1767 01C0                        l1687 0158                        l1679 0146  
                      l1783 002A                        l1863 033B                        l1855 0328  
                      l1847 030B                        l1839 0307                        l1871 0FC2  
                      l1599 06EC                        l1695 03E2                        l1927 03B7  
                      l1919 0395                        l1793 0095                        l1777 01E4  
                      l1769 01C4                        l1689 015C                        l1785 0034  
                      l1857 032B                        l1849 030C                        l1873 0FC6  
                      l1865 0FB8                        l1697 03E8                        l1881 004F  
                      l1929 03BE                        l1795 00BC                        l1779 01E8  
                      l1787 0039                        l1859 032E                        l1875 0FC8  
                      l1867 0FBE                        l1699 03EC                        l1883 0051  
                      l1891 0349                        l1797 00BD                        l1789 0091  
                      l1877 0FCB                        l1869 0FC1                        l1885 0053  
                      l1893 034C                        ?_pad 0024                        l1799 00BF  
                      l1887 0060                        l1879 0047                        l1895 034F  
                      l1897 0351                        l1899 0353                        STR_1 1038  
                      STR_2 101F                        STR_3 1000                        STR_4 1010  
                      STR_5 102D                        u1000 04AD                        u1001 04AC  
                      u1020 04D8                        u1100 06AA                        u1021 04D7  
                      u1101 06A8                        u1110 06AB                        u1040 0504  
                      u1200 07A4                        u1120 06B8                        u1041 0503  
                      u1201 07A3                        u1121 06B7                        u1050 0517  
                      u1210 07B2                        u1051 0516                        u1211 07B1  
                      u1060 0539                        u1220 07B7                        u1140 06DB  
                      u1300 040E                        u1061 0538                        u1221 07B6  
                      u1205 07A0                        u1141 06DA                        u1301 040D  
                      u1070 0557                        u1230 07BE                        u1150 06EC  
                      u1310 045A                        u1071 0556                        u1231 07BD  
                      u1215 07AE                        u1151 06EB                        u1311 0459  
                      u1320 02A3                        u1080 055C                        u1240 07C2  
                      u1160 0705                        u1321 02A2                        u1081 055B  
                      u1065 0535                        u1241 07C1                        u1161 0704  
                      u1410 01D0                        u1250 07CC                        u1170 0709  
                      u1411 01CF                        u1251 07CB                        u1171 0708  
                      u1155 06E8                        u1340 02B5                        u1180 078A  
                      u1341 02B4                        u1405 01B4                        u1181 0789  
                      _LATA 010C                        u1430 0044                        u1190 0797  
                      u1335 02A7                        u1431 0043                        u1191 0796  
                      _LATC 010E                        u1360 02CE                        u1440 00A3  
                      u1280 03DA                        u1265 00C5                        u1361 02CD  
                      u1425 01D8                        u1185 0786                        u1281 03D9  
                      u1290 03FD                        u1450 011A                        u1355 02B6  
                      u1275 012C                        u1291 03FC                        u1451 0119  
                      u1380 02E4                        u1460 037B                        u1381 02E3  
                      u1365 02CA                        u1445 009F                        u1517 03A5  
                      u1461 037A                        u1390 01AC                        u1470 038F  
                      u1375 02D8                        u1391 01AB                        u1527 031E  
                      u1471 038E                        u1480 03B1                        u1537 0341  
                      u1481 03B0                        u1547 0147                        u1557 0159  
                      u1567 0169                        u1577 0174                        u1587 017F  
                      u1597 00E1                __CFG_WRT$OFF 0000                        abs@a 0073  
                      _data 00A4           ?_Lcd_Write_String 007A                        _dbuf 00A6  
                      _main 0349                        _dtoa 068D                        _duty 00C6  
                      _prec 006C                        _nout 00A0                        pad@i 0027  
                      pad@p 0025                        fsr0h 0005                        fsr1h 0007  
                      indf0 0000                        fsr0l 0004                        indf1 0001  
                      fsr1l 0006                        pad@w 0029                        btemp 007E  
                      start 0002          ??_Lcd_Write_String 007C               __CFG_IESO$OFF 0000  
           __end_of_Lcd_Cmd 00F2               __CFG_MCLRE$ON 0000                       ??_abs 0075  
                     ??_pad 007C            ?_I2C_Master_Init 0020            ?_I2C_Master_Wait 0070  
          ?_I2C_Master_Stop 0070             __end_of___aodiv 068D                       ?_main 0070  
                     ?_dtoa 0030             __end_of___aomod 058C               __CFG_WDTE$OFF 0000  
           __end_of___lldiv 02ED                       _T2CON 001C                vfpfcnvrt@fmt 004E  
                     _PORTA 000C                       _PORTC 000E     __size_of_Lcd_Set_Cursor 0049  
                     _TRISA 008C                       _TRISC 008E                       u90lld 05B6  
                     u92lld 05E1                       u99lld 067B              __CFG_FCMEN$OFF 0000  
                     _flags 006E                       _fputc 01EE                       _fputs 0069  
                     pad@fp 002B                       _width 00A2                       _putch 0004  
                     dtoa@d 0030                       dtoa@i 004C                       dtoa@n 0044  
                     dtoa@p 003E                       dtoa@s 0042                       dtoa@w 0040  
            __CFG_BOREN$OFF 0000                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0069            __end_of_Lcd_Init 01A5            __end_of_Lcd_Port 0FE7  
           __initialization 07F0                __end_of_main 03C7                __end_of_dtoa 07F0  
                _Cursor_Off 0F9A                      ??_main 006A                      ??_dtoa 0038  
        __size_of_Lcd_Clear 0009              __CFG_PLLEN$OFF 0000           ?_I2C_Master_Start 0070  
        ??_I2C_Master_Start 0070                      _CCP2AS 029C                      ?_fputc 0070  
                    ?_fputs 0078                      _CCPR2L 0298                      _ANSELA 018C  
                    ?_putch 0070                      _ANSELC 018E                      u101lld 04CC  
                    u103lld 04F7                      u113lld 06D6                      u109lld 057A  
                 ??_Lcd_Cmd 0075     __size_of_Lcd_Write_Char 003F                      _SSPBUF 0211  
            __CFG_PWRTE$OFF 0000                vfprintf@cfmt 0064                   ??___aodiv 0070  
                 ??___aomod 0070                   ??___lldiv 0078                      _config 02ED  
                    pad@buf 0024                      dtoa@fp 003D                      _strlen 0FE7  
                    fputc@c 0070                      fputs@c 0020                      fputs@i 0021  
                    fputs@s 0023                      putch@c 0070            __end_of_vfprintf 0123  
                 ??_sprintf 007D             Lcd_Set_Cursor@a 0020             Lcd_Set_Cursor@b 007B  
           Lcd_Set_Cursor@y 0022             Lcd_Set_Cursor@z 0021     __end_of__initialization 07FD  
         __end_of_Lcd_Clear 0FAC              __pcstackCOMMON 0070               __end_of_fputc 023D  
             __end_of_fputs 0091                 ?_Cursor_Off 0070               __end_of_putch 0005  
            _Lcd_Set_Cursor 01A5                   ?_Lcd_Init 0070                   ?_Lcd_Port 0070  
                   ??_fputc 0073                     ??_fputs 0079                     ??_putch 0070  
                __pbssBANK0 006C                  __pbssBANK1 00A0                  __pmaintext 0349  
                   ?_config 0070           _I2C_Write_Display 0005                     _CCP2CON 029A  
 __size_of_Lcd_Write_String 001F      __end_of_Lcd_Set_Cursor 01EE                     _CCPTMRS 029E  
        ?_I2C_Write_Display 0070                     ?_strlen 0070          __size_of_vfpfcnvrt 00DB  
       ??_I2C_Write_Display 0072                  ??_Lcd_Init 007B                     _SSP1ADD 0212  
                   _SSP1BUF 0211                  ??_Lcd_Port 0072              _Lcd_Write_Char 0123  
                   _Lcd_Cmd 00C1         __size_of_Cursor_Off 0009   __end_of_I2C_Write_Display 000C  
                   ___aodiv 058C                     ___aomod 04A2                     ___lldiv 0293  
                 ?_vfprintf 005E             __size_of_config 005C             __CFG_STVREN$OFF 0000  
           ?_Lcd_Set_Cursor 007B                     __ptext1 0045                     __ptext2 00F2  
                   __ptext3 03C7                     __ptext4 068D                     __ptext5 023D  
                   __ptext6 0FE7                     __ptext7 0069                     __ptext8 01EE  
                   __ptext9 0004             __size_of_strlen 0019                __size_of_abs 001A  
              __size_of_pad 0056    __size_of_I2C_Master_Init 0030    __size_of_I2C_Master_Wait 000C  
  __size_of_I2C_Master_Stop 0006                     _sprintf 0045                     clrloop0 0F95  
    __end_of_Lcd_Write_Char 0162        end_of_initialization 07FD                     fputc@fp 0072  
                   fputs@fp 0078   __size_of_I2C_Master_Start 0006             ___lldiv@divisor 0070  
           ___lldiv@counter 007D           __end_of_vfpfcnvrt 04A2            I2C_Master_Init@c 0020  
                ??_vfprintf 0061                     strlen@a 0073                     strlen@s 0074  
                 _PORTAbits 000C            __CFG_FOSC$INTOSC 0000                   _TRISAbits 008C  
                 _TRISCbits 008E                  _pwm_config 0FB8             ?_Lcd_Write_Char 0070  
         Lcd_Write_String@a 007A           Lcd_Write_String@i 0020                   _Lcd_Clear 0FA3  
__size_of_I2C_Write_Display 0007                ??_Cursor_Off 007B                 vfpfcnvrt@ap 004F  
               vfpfcnvrt@fp 005D                 vfpfcnvrt@ll 0055            _Lcd_Write_String 0026  
            __end_of_config 0349              __end_of_strlen 1000         start_initialization 07F0  
               __end_of_abs 0026                 __end_of_pad 0293           __size_of_Lcd_Init 0043  
         __size_of_Lcd_Port 0019           ??_I2C_Master_Init 0024           ??_I2C_Master_Wait 0070  
         ??_I2C_Master_Stop 0070          __end_of_Cursor_Off 0FA3                 _APFCON1bits 011E  
               vfprintf@fmt 005E                  ?_Lcd_Clear 0070                    ??_config 0028  
           Lcd_Write_Char@a 0077             Lcd_Write_Char@y 0078                    ??_strlen 0072  
                 ___latbits 0002               __pcstackBANK0 0020               __pcstackBANK1 00C9  
          ___aodiv@dividend 0028                 ?_pwm_config 0070                    ?_Lcd_Cmd 0070  
          _I2C_Master_Start 0F88            ??_Lcd_Set_Cursor 007C                    ?___aodiv 0020  
                  ?___aomod 0020            ___aodiv@quotient 0073                    ?___lldiv 0070  
         __size_of_vfprintf 0031                    ?_sprintf 0066              __size_of_fputc 004F  
            __size_of_fputs 0028              __size_of_putch 0001                    _LATCbits 010E  
                 clear_ram0 0F94                    Lcd_Cmd@a 007A                    _PIR1bits 0011  
               ??_Lcd_Clear 007B         __size_of_pwm_config 0016                    _SSP1CON1 0215  
                  _SSP1CON2 0216                    _SSP1STAT 0214                   _vfpfcnvrt 03C7  
          ??_Lcd_Write_Char 0075                    _Lcd_Init 0162                    _Lcd_Port 0FCE  
  __end_of_Lcd_Write_String 0045            __size_of_Lcd_Cmd 0031                Lcd_Port@data 0074  
                vfprintf@ap 0060                  vfprintf@fp 0063            __size_of___aodiv 0101  
          __size_of___aomod 00EA            __size_of___lldiv 005A                  ?_vfpfcnvrt 004E  
           ___aodiv@divisor 0020             ___aodiv@counter 0071                  sprintf@fmt 0066  
           _I2C_Master_Init 0091             _I2C_Master_Wait 0FAC             _I2C_Master_Stop 0F8E  
                  _dtoa$635 003B                    __ptext10 000C                    __ptext11 04A2  
                  __ptext20 0091                    __ptext12 058C                    __ptext21 0293  
                  __ptext13 0FB8                    __ptext22 0F9A                    __ptext14 02ED  
                  __ptext23 00C1                    __ptext15 0026                    __ptext24 0FCE  
                  __ptext16 0123                    __ptext25 0005                    __ptext17 01A5  
                  __ptext26 0F8E                    __ptext18 0162                    __ptext27 0F88  
                  __ptext19 0FA3                    __ptext28 0FAC                _SSP1CON2bits 0216  
          __size_of_sprintf 0024                 Lcd_Cmd@buff 0078               __size_of_main 007E  
             __size_of_dtoa 0163                    _vfprintf 00F2            ___aomod@dividend 0028  
  __end_of_I2C_Master_Start 0F8E                  _INTCONbits 000B                ??_pwm_config 0070  
        Lcd_Write_Char@temp 0079                   sprintf@ap 00CB            ___lldiv@dividend 0074  
         __CFG_CLKOUTEN$OFF 0000                  _OSCCONbits 0099          __end_of_pwm_config 0FCE  
   __end_of_I2C_Master_Init 00C1             ___aomod@divisor 0020     __end_of_I2C_Master_Wait 0FB8  
   __end_of_I2C_Master_Stop 0F94                 ??_vfpfcnvrt 0050             ___aomod@counter 0071  
        Lcd_Set_Cursor@temp 0023               __pstringtext1 1000               __pstringtext2 1010  
             __pstringtext3 101F               __pstringtext4 102D               __pstringtext5 1038  
             __pstringtext6 0000                    sprintf@f 00CD                    sprintf@s 00CC  
          ___lldiv@quotient 0079                ___aodiv@sign 0072                ___aomod@sign 0072  

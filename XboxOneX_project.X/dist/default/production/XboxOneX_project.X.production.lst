

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 16 17:11:44 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F1825 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000E                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  010C                     	;# 
   107  010E                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011D                     	;# 
   120  011E                     	;# 
   121  018C                     	;# 
   122  018E                     	;# 
   123  0191                     	;# 
   124  0191                     	;# 
   125  0192                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0194                     	;# 
   130  0195                     	;# 
   131  0196                     	;# 
   132  0199                     	;# 
   133  019A                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  020E                     	;# 
   142  0211                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0212                     	;# 
   146  0213                     	;# 
   147  0213                     	;# 
   148  0214                     	;# 
   149  0214                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0216                     	;# 
   154  0216                     	;# 
   155  0217                     	;# 
   156  0217                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0294                     	;# 
   162  0295                     	;# 
   163  0295                     	;# 
   164  0296                     	;# 
   165  0298                     	;# 
   166  0298                     	;# 
   167  0299                     	;# 
   168  029A                     	;# 
   169  029B                     	;# 
   170  029C                     	;# 
   171  029D                     	;# 
   172  029E                     	;# 
   173  0311                     	;# 
   174  0311                     	;# 
   175  0312                     	;# 
   176  0313                     	;# 
   177  0318                     	;# 
   178  0318                     	;# 
   179  0319                     	;# 
   180  031A                     	;# 
   181  038C                     	;# 
   182  038E                     	;# 
   183  0391                     	;# 
   184  0392                     	;# 
   185  0393                     	;# 
   186  039A                     	;# 
   187  039C                     	;# 
   188  039D                     	;# 
   189  039E                     	;# 
   190  039F                     	;# 
   191  0415                     	;# 
   192  0416                     	;# 
   193  0417                     	;# 
   194  041C                     	;# 
   195  041D                     	;# 
   196  041E                     	;# 
   197  0FE4                     	;# 
   198  0FE5                     	;# 
   199  0FE6                     	;# 
   200  0FE7                     	;# 
   201  0FE8                     	;# 
   202  0FE9                     	;# 
   203  0FEA                     	;# 
   204  0FEB                     	;# 
   205  0FED                     	;# 
   206  0FEE                     	;# 
   207  0FEF                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000E                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  008C                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009B                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  010C                     	;# 
   253  010E                     	;# 
   254  0111                     	;# 
   255  0112                     	;# 
   256  0113                     	;# 
   257  0114                     	;# 
   258  0115                     	;# 
   259  0116                     	;# 
   260  0117                     	;# 
   261  0118                     	;# 
   262  0119                     	;# 
   263  011A                     	;# 
   264  011B                     	;# 
   265  011D                     	;# 
   266  011E                     	;# 
   267  018C                     	;# 
   268  018E                     	;# 
   269  0191                     	;# 
   270  0191                     	;# 
   271  0192                     	;# 
   272  0193                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0194                     	;# 
   276  0195                     	;# 
   277  0196                     	;# 
   278  0199                     	;# 
   279  019A                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019C                     	;# 
   283  019D                     	;# 
   284  019E                     	;# 
   285  019F                     	;# 
   286  020C                     	;# 
   287  020E                     	;# 
   288  0211                     	;# 
   289  0211                     	;# 
   290  0212                     	;# 
   291  0212                     	;# 
   292  0213                     	;# 
   293  0213                     	;# 
   294  0214                     	;# 
   295  0214                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0216                     	;# 
   300  0216                     	;# 
   301  0217                     	;# 
   302  0217                     	;# 
   303  0291                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0293                     	;# 
   307  0294                     	;# 
   308  0295                     	;# 
   309  0295                     	;# 
   310  0296                     	;# 
   311  0298                     	;# 
   312  0298                     	;# 
   313  0299                     	;# 
   314  029A                     	;# 
   315  029B                     	;# 
   316  029C                     	;# 
   317  029D                     	;# 
   318  029E                     	;# 
   319  0311                     	;# 
   320  0311                     	;# 
   321  0312                     	;# 
   322  0313                     	;# 
   323  0318                     	;# 
   324  0318                     	;# 
   325  0319                     	;# 
   326  031A                     	;# 
   327  038C                     	;# 
   328  038E                     	;# 
   329  0391                     	;# 
   330  0392                     	;# 
   331  0393                     	;# 
   332  039A                     	;# 
   333  039C                     	;# 
   334  039D                     	;# 
   335  039E                     	;# 
   336  039F                     	;# 
   337  0415                     	;# 
   338  0416                     	;# 
   339  0417                     	;# 
   340  041C                     	;# 
   341  041D                     	;# 
   342  041E                     	;# 
   343  0FE4                     	;# 
   344  0FE5                     	;# 
   345  0FE6                     	;# 
   346  0FE7                     	;# 
   347  0FE8                     	;# 
   348  0FE9                     	;# 
   349  0FEA                     	;# 
   350  0FEB                     	;# 
   351  0FED                     	;# 
   352  0FEE                     	;# 
   353  0FEF                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0008                     	;# 
   363  0009                     	;# 
   364  000A                     	;# 
   365  000B                     	;# 
   366  000C                     	;# 
   367  000E                     	;# 
   368  0011                     	;# 
   369  0012                     	;# 
   370  0013                     	;# 
   371  0015                     	;# 
   372  0016                     	;# 
   373  0016                     	;# 
   374  0017                     	;# 
   375  0018                     	;# 
   376  0019                     	;# 
   377  001A                     	;# 
   378  001B                     	;# 
   379  001C                     	;# 
   380  001E                     	;# 
   381  001F                     	;# 
   382  008C                     	;# 
   383  008E                     	;# 
   384  0091                     	;# 
   385  0092                     	;# 
   386  0093                     	;# 
   387  0095                     	;# 
   388  0096                     	;# 
   389  0097                     	;# 
   390  0098                     	;# 
   391  0099                     	;# 
   392  009A                     	;# 
   393  009B                     	;# 
   394  009B                     	;# 
   395  009C                     	;# 
   396  009D                     	;# 
   397  009E                     	;# 
   398  010C                     	;# 
   399  010E                     	;# 
   400  0111                     	;# 
   401  0112                     	;# 
   402  0113                     	;# 
   403  0114                     	;# 
   404  0115                     	;# 
   405  0116                     	;# 
   406  0117                     	;# 
   407  0118                     	;# 
   408  0119                     	;# 
   409  011A                     	;# 
   410  011B                     	;# 
   411  011D                     	;# 
   412  011E                     	;# 
   413  018C                     	;# 
   414  018E                     	;# 
   415  0191                     	;# 
   416  0191                     	;# 
   417  0192                     	;# 
   418  0193                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0194                     	;# 
   422  0195                     	;# 
   423  0196                     	;# 
   424  0199                     	;# 
   425  019A                     	;# 
   426  019B                     	;# 
   427  019B                     	;# 
   428  019C                     	;# 
   429  019D                     	;# 
   430  019E                     	;# 
   431  019F                     	;# 
   432  020C                     	;# 
   433  020E                     	;# 
   434  0211                     	;# 
   435  0211                     	;# 
   436  0212                     	;# 
   437  0212                     	;# 
   438  0213                     	;# 
   439  0213                     	;# 
   440  0214                     	;# 
   441  0214                     	;# 
   442  0215                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0216                     	;# 
   446  0216                     	;# 
   447  0217                     	;# 
   448  0217                     	;# 
   449  0291                     	;# 
   450  0291                     	;# 
   451  0292                     	;# 
   452  0293                     	;# 
   453  0294                     	;# 
   454  0295                     	;# 
   455  0295                     	;# 
   456  0296                     	;# 
   457  0298                     	;# 
   458  0298                     	;# 
   459  0299                     	;# 
   460  029A                     	;# 
   461  029B                     	;# 
   462  029C                     	;# 
   463  029D                     	;# 
   464  029E                     	;# 
   465  0311                     	;# 
   466  0311                     	;# 
   467  0312                     	;# 
   468  0313                     	;# 
   469  0318                     	;# 
   470  0318                     	;# 
   471  0319                     	;# 
   472  031A                     	;# 
   473  038C                     	;# 
   474  038E                     	;# 
   475  0391                     	;# 
   476  0392                     	;# 
   477  0393                     	;# 
   478  039A                     	;# 
   479  039C                     	;# 
   480  039D                     	;# 
   481  039E                     	;# 
   482  039F                     	;# 
   483  0415                     	;# 
   484  0416                     	;# 
   485  0417                     	;# 
   486  041C                     	;# 
   487  041D                     	;# 
   488  041E                     	;# 
   489  0FE4                     	;# 
   490  0FE5                     	;# 
   491  0FE6                     	;# 
   492  0FE7                     	;# 
   493  0FE8                     	;# 
   494  0FE9                     	;# 
   495  0FEA                     	;# 
   496  0FEB                     	;# 
   497  0FED                     	;# 
   498  0FEE                     	;# 
   499  0FEF                     	;# 
   500  0000                     	;# 
   501  0001                     	;# 
   502  0002                     	;# 
   503  0003                     	;# 
   504  0004                     	;# 
   505  0005                     	;# 
   506  0006                     	;# 
   507  0007                     	;# 
   508  0008                     	;# 
   509  0009                     	;# 
   510  000A                     	;# 
   511  000B                     	;# 
   512  000C                     	;# 
   513  000E                     	;# 
   514  0011                     	;# 
   515  0012                     	;# 
   516  0013                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0016                     	;# 
   520  0017                     	;# 
   521  0018                     	;# 
   522  0019                     	;# 
   523  001A                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001E                     	;# 
   527  001F                     	;# 
   528  008C                     	;# 
   529  008E                     	;# 
   530  0091                     	;# 
   531  0092                     	;# 
   532  0093                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009A                     	;# 
   539  009B                     	;# 
   540  009B                     	;# 
   541  009C                     	;# 
   542  009D                     	;# 
   543  009E                     	;# 
   544  010C                     	;# 
   545  010E                     	;# 
   546  0111                     	;# 
   547  0112                     	;# 
   548  0113                     	;# 
   549  0114                     	;# 
   550  0115                     	;# 
   551  0116                     	;# 
   552  0117                     	;# 
   553  0118                     	;# 
   554  0119                     	;# 
   555  011A                     	;# 
   556  011B                     	;# 
   557  011D                     	;# 
   558  011E                     	;# 
   559  018C                     	;# 
   560  018E                     	;# 
   561  0191                     	;# 
   562  0191                     	;# 
   563  0192                     	;# 
   564  0193                     	;# 
   565  0193                     	;# 
   566  0193                     	;# 
   567  0194                     	;# 
   568  0195                     	;# 
   569  0196                     	;# 
   570  0199                     	;# 
   571  019A                     	;# 
   572  019B                     	;# 
   573  019B                     	;# 
   574  019C                     	;# 
   575  019D                     	;# 
   576  019E                     	;# 
   577  019F                     	;# 
   578  020C                     	;# 
   579  020E                     	;# 
   580  0211                     	;# 
   581  0211                     	;# 
   582  0212                     	;# 
   583  0212                     	;# 
   584  0213                     	;# 
   585  0213                     	;# 
   586  0214                     	;# 
   587  0214                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0216                     	;# 
   592  0216                     	;# 
   593  0217                     	;# 
   594  0217                     	;# 
   595  0291                     	;# 
   596  0291                     	;# 
   597  0292                     	;# 
   598  0293                     	;# 
   599  0294                     	;# 
   600  0295                     	;# 
   601  0295                     	;# 
   602  0296                     	;# 
   603  0298                     	;# 
   604  0298                     	;# 
   605  0299                     	;# 
   606  029A                     	;# 
   607  029B                     	;# 
   608  029C                     	;# 
   609  029D                     	;# 
   610  029E                     	;# 
   611  0311                     	;# 
   612  0311                     	;# 
   613  0312                     	;# 
   614  0313                     	;# 
   615  0318                     	;# 
   616  0318                     	;# 
   617  0319                     	;# 
   618  031A                     	;# 
   619  038C                     	;# 
   620  038E                     	;# 
   621  0391                     	;# 
   622  0392                     	;# 
   623  0393                     	;# 
   624  039A                     	;# 
   625  039C                     	;# 
   626  039D                     	;# 
   627  039E                     	;# 
   628  039F                     	;# 
   629  0415                     	;# 
   630  0416                     	;# 
   631  0417                     	;# 
   632  041C                     	;# 
   633  041D                     	;# 
   634  041E                     	;# 
   635  0FE4                     	;# 
   636  0FE5                     	;# 
   637  0FE6                     	;# 
   638  0FE7                     	;# 
   639  0FE8                     	;# 
   640  0FE9                     	;# 
   641  0FEA                     	;# 
   642  0FEB                     	;# 
   643  0FED                     	;# 
   644  0FEE                     	;# 
   645  0FEF                     	;# 
   646  000E                     _PORTC	set	14
   647  000C                     _PORTA	set	12
   648  000B                     _INTCONbits	set	11
   649  008E                     _TRISCbits	set	142
   650  008C                     _TRISAbits	set	140
   651  008E                     _TRISC	set	142
   652  008C                     _TRISA	set	140
   653  0099                     _OSCCONbits	set	153
   654  010E                     _LATC	set	270
   655  010C                     _LATA	set	268
   656  018E                     _ANSELC	set	398
   657  018C                     _ANSELA	set	396
   658  0211                     _SSPBUF	set	529
   659  0211                     _SSP1BUF	set	529
   660  0216                     _SSP1CON2bits	set	534
   661  0214                     _SSP1STAT	set	532
   662  0212                     _SSP1ADD	set	530
   663  0216                     _SSP1CON2	set	534
   664  0215                     _SSP1CON1	set	533
   665                           
   666                           	psect	stringtext1
   667  0800                     __pstringtext1:	
   668  0800                     STR_1:	
   669  0800  3450               	retlw	80	;'P'
   670  0801  3461               	retlw	97	;'a'
   671  0802  3475               	retlw	117	;'u'
   672  0803  346C               	retlw	108	;'l'
   673  0804  3420               	retlw	32	;' '
   674  0805  3449               	retlw	73	;'I'
   675  0806  346F               	retlw	111	;'o'
   676  0807  3472               	retlw	114	;'r'
   677  0808  3467               	retlw	103	;'g'
   678  0809  3461               	retlw	97	;'a'
   679  080A  3400               	retlw	0
   680                           
   681                           	psect	stringtext2
   682  0000                     __pstringtext2:	
   683                           
   684                           ; #config settings
   685  0000                     
   686                           	psect	cinit
   687  07FA                     start_initialization:	
   688  07FA                     __initialization:	
   689                           
   690                           ; Clear objects allocated to BANK0
   691  07FA  0020               	movlb	0	; select bank0
   692  07FB  01AA               	clrf	__pbssBANK0& (0+127)
   693  07FC  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   694  07FD                     end_of_initialization:	
   695                           ;End of C runtime variable initialization code
   696                           
   697  07FD                     __end_of__initialization:	
   698  07FD  0020               	movlb	0
   699  07FE  3185  2DB4         	ljmp	_main	;jump to C main() function
   700                           
   701                           	psect	bssBANK0
   702  002A                     __pbssBANK0:	
   703  002A                     _data:	
   704  002A                     	ds	2
   705                           
   706                           	psect	cstackCOMMON
   707  0070                     __pcstackCOMMON:	
   708  0070                     ?_config:	
   709  0070                     ?_Lcd_Init:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_Lcd_Clear:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_Cursor_Off:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_I2C_Master_Start:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ??_I2C_Master_Start:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_I2C_Write_Display:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_I2C_Master_Stop:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ??_I2C_Master_Stop:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_main:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_Lcd_Port:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_Lcd_Cmd:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_Lcd_Write_Char:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_I2C_Master_Wait:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ??_I2C_Master_Wait:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?___lldiv:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     I2C_Write_Display@d:	
   755                           ; 4 bytes @ 0x0
   756                           
   757  0070                     ___lldiv@divisor:	
   758                           ; 2 bytes @ 0x0
   759                           
   760                           
   761                           ; 4 bytes @ 0x0
   762  0070                     	ds	2
   763  0072                     ??_I2C_Write_Display:	
   764  0072                     ??_Lcd_Port:	
   765                           ; 1 bytes @ 0x2
   766                           
   767                           
   768                           ; 1 bytes @ 0x2
   769  0072                     	ds	2
   770  0074                     Lcd_Port@data:	
   771  0074                     ___lldiv@dividend:	
   772                           ; 1 bytes @ 0x4
   773                           
   774                           
   775                           ; 4 bytes @ 0x4
   776  0074                     	ds	1
   777  0075                     ??_Lcd_Cmd:	
   778  0075                     ??_Lcd_Write_Char:	
   779                           ; 1 bytes @ 0x5
   780                           
   781                           
   782                           ; 1 bytes @ 0x5
   783  0075                     	ds	2
   784  0077                     Lcd_Write_Char@a:	
   785                           
   786                           ; 1 bytes @ 0x7
   787  0077                     	ds	1
   788  0078                     ??___lldiv:	
   789  0078                     Lcd_Write_Char@y:	
   790                           ; 1 bytes @ 0x8
   791                           
   792  0078                     Lcd_Cmd@buff:	
   793                           ; 1 bytes @ 0x8
   794                           
   795                           
   796                           ; 2 bytes @ 0x8
   797  0078                     	ds	1
   798  0079                     Lcd_Write_Char@temp:	
   799  0079                     ___lldiv@quotient:	
   800                           ; 1 bytes @ 0x9
   801                           
   802                           
   803                           ; 4 bytes @ 0x9
   804  0079                     	ds	1
   805  007A                     ?_Lcd_Write_String:	
   806  007A                     Lcd_Cmd@a:	
   807                           ; 1 bytes @ 0xA
   808                           
   809  007A                     Lcd_Write_String@a:	
   810                           ; 1 bytes @ 0xA
   811                           
   812                           
   813                           ; 2 bytes @ 0xA
   814  007A                     	ds	1
   815  007B                     ??_Lcd_Init:	
   816  007B                     ??_Lcd_Clear:	
   817                           ; 1 bytes @ 0xB
   818                           
   819  007B                     ??_Cursor_Off:	
   820                           ; 1 bytes @ 0xB
   821                           
   822  007B                     ?_Lcd_Set_Cursor:	
   823                           ; 1 bytes @ 0xB
   824                           
   825  007B                     Lcd_Set_Cursor@b:	
   826                           ; 1 bytes @ 0xB
   827                           
   828                           
   829                           ; 1 bytes @ 0xB
   830  007B                     	ds	1
   831  007C                     ??_Lcd_Set_Cursor:	
   832  007C                     ??_Lcd_Write_String:	
   833                           ; 1 bytes @ 0xC
   834                           
   835                           
   836                           ; 1 bytes @ 0xC
   837  007C                     	ds	1
   838  007D                     ___lldiv@counter:	
   839                           
   840                           ; 1 bytes @ 0xD
   841  007D                     	ds	1
   842  007E                     ??_main:	
   843                           
   844                           	psect	cstackBANK0
   845  0020                     __pcstackBANK0:	
   846                           ; 1 bytes @ 0xE
   847                           
   848  0020                     ?_I2C_Master_Init:	
   849  0020                     Lcd_Set_Cursor@a:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0020                     Lcd_Write_String@i:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0020                     I2C_Master_Init@c:	
   856                           ; 2 bytes @ 0x0
   857                           
   858                           
   859                           ; 4 bytes @ 0x0
   860  0020                     	ds	1
   861  0021                     Lcd_Set_Cursor@z:	
   862                           
   863                           ; 1 bytes @ 0x1
   864  0021                     	ds	1
   865  0022                     Lcd_Set_Cursor@y:	
   866                           
   867                           ; 1 bytes @ 0x2
   868  0022                     	ds	1
   869  0023                     Lcd_Set_Cursor@temp:	
   870                           
   871                           ; 1 bytes @ 0x3
   872  0023                     	ds	1
   873  0024                     ??_I2C_Master_Init:	
   874                           
   875                           ; 1 bytes @ 0x4
   876  0024                     	ds	4
   877  0028                     ??_config:	
   878                           
   879                           ; 1 bytes @ 0x8
   880  0028                     	ds	2
   881                           
   882                           	psect	maintext
   883  05B4                     __pmaintext:	
   884 ;;
   885 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   886 ;;
   887 ;; *************** function _main *****************
   888 ;; Defined at:
   889 ;;		line 14 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : B1F/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   907 ;;Total ram usage:        0 bytes
   908 ;; Hardware stack levels required when called:    6
   909 ;; This function calls:
   910 ;;		_config
   911 ;; This function is called by:
   912 ;;		Startup code after reset
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function _main
   918  05B4                     _main:	
   919  05B4                     l1157:	
   920                           ;incstack = 0
   921                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   922                           
   923                           
   924                           ;main.c: 15:     config();
   925  05B4  3187  279D  3185   	fcall	_config
   926  05B7                     l7:	
   927                           ;main.c: 17:     while(1){
   928                           
   929  05B7                     l8:	
   930                           ;main.c: 19:     }
   931                           
   932  05B7  2DB7               	goto	l7
   933  05B8  3180  2802         	ljmp	start
   934  05BA                     __end_of_main:	
   935                           
   936                           	psect	text1
   937  079D                     __ptext1:	
   938 ;; *************** function _config *****************
   939 ;; Defined at:
   940 ;;		line 13 in file "config.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   956 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   957 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   958 ;;Total ram usage:        2 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    5
   961 ;; This function calls:
   962 ;;		_Cursor_Off
   963 ;;		_I2C_Master_Init
   964 ;;		_Lcd_Clear
   965 ;;		_Lcd_Init
   966 ;;		_Lcd_Set_Cursor
   967 ;;		_Lcd_Write_String
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _config
   975  079D                     _config:	
   976  079D                     l1115:	
   977                           ;incstack = 0
   978                           ; Regs used in _config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   979                           
   980                           
   981                           ;config.c: 15:     OSCCONbits.IRCF0=0;
   982  079D  0021               	movlb	1	; select bank1
   983  079E  1199               	bcf	25,3	;volatile
   984                           
   985                           ;config.c: 16:     OSCCONbits.IRCF1=1;
   986  079F  1619               	bsf	25,4	;volatile
   987                           
   988                           ;config.c: 17:     OSCCONbits.IRCF2=1;
   989  07A0  1699               	bsf	25,5	;volatile
   990                           
   991                           ;config.c: 18:     OSCCONbits.IRCF3=1;
   992  07A1  1719               	bsf	25,6	;volatile
   993                           
   994                           ;config.c: 20:     INTCONbits.GIE = 0;
   995  07A2  138B               	bcf	11,7	;volatile
   996                           
   997                           ;config.c: 21:     INTCONbits.INTE = 0;
   998  07A3  120B               	bcf	11,4	;volatile
   999                           
  1000                           ;config.c: 22:     INTCONbits.PEIE = 0;
  1001  07A4  130B               	bcf	11,6	;volatile
  1002  07A5                     l1117:	
  1003                           
  1004                           ;config.c: 24:     ANSELA=0X00;
  1005  07A5  0023               	movlb	3	; select bank3
  1006  07A6  018C               	clrf	12	;volatile
  1007                           
  1008                           ;config.c: 25:     ANSELC=0X00;
  1009  07A7  018E               	clrf	14	;volatile
  1010                           
  1011                           ;config.c: 26:     TRISA=0X00;
  1012  07A8  0021               	movlb	1	; select bank1
  1013  07A9  018C               	clrf	12	;volatile
  1014                           
  1015                           ;config.c: 27:     TRISC=0X00;
  1016  07AA  018E               	clrf	14	;volatile
  1017                           
  1018                           ;config.c: 28:     PORTA=0X00;
  1019  07AB  0020               	movlb	0	; select bank0
  1020  07AC  018C               	clrf	12	;volatile
  1021                           
  1022                           ;config.c: 29:     PORTC=0X00;
  1023  07AD  018E               	clrf	14	;volatile
  1024                           
  1025                           ;config.c: 30:     LATA=0X00;
  1026  07AE  0022               	movlb	2	; select bank2
  1027  07AF  018C               	clrf	12	;volatile
  1028                           
  1029                           ;config.c: 31:     LATC=0X00;
  1030  07B0  018E               	clrf	14	;volatile
  1031  07B1                     l1119:	
  1032                           
  1033                           ;config.c: 34:     TRISAbits.TRISA0 = 1;
  1034  07B1  0021               	movlb	1	; select bank1
  1035  07B2  140C               	bsf	12,0	;volatile
  1036  07B3                     l1121:	
  1037                           
  1038                           ;config.c: 35:     TRISAbits.TRISA1 = 1;
  1039  07B3  148C               	bsf	12,1	;volatile
  1040  07B4                     l1123:	
  1041                           
  1042                           ;config.c: 36:     TRISAbits.TRISA2 = 1;
  1043  07B4  150C               	bsf	12,2	;volatile
  1044  07B5                     l1125:	
  1045                           
  1046                           ;config.c: 39:     TRISCbits.TRISC4 = 0;
  1047  07B5  120E               	bcf	14,4	;volatile
  1048  07B6                     l1127:	
  1049                           
  1050                           ;config.c: 40:     TRISCbits.TRISC5 = 0;
  1051  07B6  128E               	bcf	14,5	;volatile
  1052  07B7                     l1129:	
  1053                           
  1054                           ;config.c: 41:     TRISAbits.TRISA5 = 0;
  1055  07B7  128C               	bcf	12,5	;volatile
  1056  07B8                     l1131:	
  1057                           
  1058                           ;config.c: 45:     TRISAbits.TRISA4 = 1;
  1059  07B8  160C               	bsf	12,4	;volatile
  1060  07B9                     l1133:	
  1061                           
  1062                           ;config.c: 46:     TRISCbits.TRISC2 = 0;
  1063  07B9  110E               	bcf	14,2	;volatile
  1064  07BA                     l1135:	
  1065                           
  1066                           ;config.c: 47:     TRISCbits.TRISC3 = 0;
  1067  07BA  118E               	bcf	14,3	;volatile
  1068  07BB                     l1137:	
  1069                           
  1070                           ;config.c: 50:     TRISCbits.TRISC0=1;
  1071  07BB  140E               	bsf	14,0	;volatile
  1072  07BC                     l1139:	
  1073                           
  1074                           ;config.c: 51:     TRISCbits.TRISC1=1;
  1075  07BC  148E               	bsf	14,1	;volatile
  1076  07BD                     l1141:	
  1077                           
  1078                           ;config.c: 52:     I2C_Master_Init(100000);
  1079  07BD  3000               	movlw	0
  1080  07BE  0020               	movlb	0	; select bank0
  1081  07BF  00A3               	movwf	I2C_Master_Init@c+3
  1082  07C0  3001               	movlw	1
  1083  07C1  00A2               	movwf	I2C_Master_Init@c+2
  1084  07C2  3086               	movlw	134
  1085  07C3  00A1               	movwf	I2C_Master_Init@c+1
  1086  07C4  30A0               	movlw	160
  1087  07C5  00A0               	movwf	I2C_Master_Init@c
  1088  07C6  3186  2617  3187   	fcall	_I2C_Master_Init
  1089  07C9                     l1143:	
  1090                           
  1091                           ;config.c: 53:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1092  07C9  3002               	movlw	2
  1093  07CA  0020               	movlb	0	; select bank0
  1094  07CB  00A9               	movwf	??_config+1
  1095  07CC  3004               	movlw	4
  1096  07CD  00A8               	movwf	??_config
  1097  07CE  30BA               	movlw	186
  1098  07CF                     u397:	
  1099  07CF  0B89               	decfsz	9,f
  1100  07D0  2FCF               	goto	u397
  1101  07D1  0BA8               	decfsz	??_config,f
  1102  07D2  2FCF               	goto	u397
  1103  07D3  0BA9               	decfsz	??_config+1,f
  1104  07D4  2FCF               	goto	u397
  1105  07D5  0000               	nop
  1106  07D6                     l1145:	
  1107                           
  1108                           ;config.c: 54:     Lcd_Init();
  1109  07D6  3186  26B7  3187   	fcall	_Lcd_Init
  1110  07D9                     l1147:	
  1111                           
  1112                           ;config.c: 55:     Lcd_Clear();
  1113  07D9  3185  25CA  3187   	fcall	_Lcd_Clear
  1114  07DC                     l1149:	
  1115                           
  1116                           ;config.c: 56:     Cursor_Off();
  1117  07DC  3185  25C1  3187   	fcall	_Cursor_Off
  1118  07DF                     l1151:	
  1119                           
  1120                           ;config.c: 57:     Lcd_Set_Cursor(1,1);
  1121  07DF  01FB               	clrf	Lcd_Set_Cursor@b
  1122  07E0  0AFB               	incf	Lcd_Set_Cursor@b,f
  1123  07E1  3001               	movlw	1
  1124  07E2  3186  26FA  3187   	fcall	_Lcd_Set_Cursor
  1125  07E5                     l1153:	
  1126                           
  1127                           ;config.c: 58:     Lcd_Write_String("Paul Iorga");
  1128  07E5  3000               	movlw	low (STR_1| (0+32768))
  1129  07E6  00FA               	movwf	Lcd_Write_String@a
  1130  07E7  3088               	movlw	high (STR_1| (0+32768))
  1131  07E8  00FB               	movwf	Lcd_Write_String@a+1
  1132  07E9  3185  25F8  3187   	fcall	_Lcd_Write_String
  1133  07EC                     l1155:	
  1134                           
  1135                           ;config.c: 59:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1136  07EC  3015               	movlw	21
  1137  07ED  0020               	movlb	0	; select bank0
  1138  07EE  00A9               	movwf	??_config+1
  1139  07EF  304B               	movlw	75
  1140  07F0  00A8               	movwf	??_config
  1141  07F1  30BE               	movlw	190
  1142  07F2                     u407:	
  1143  07F2  0B89               	decfsz	9,f
  1144  07F3  2FF2               	goto	u407
  1145  07F4  0BA8               	decfsz	??_config,f
  1146  07F5  2FF2               	goto	u407
  1147  07F6  0BA9               	decfsz	??_config+1,f
  1148  07F7  2FF2               	goto	u407
  1149  07F8  0000               	nop
  1150  07F9                     l51:	
  1151  07F9  0008               	return
  1152  07FA                     __end_of_config:	
  1153                           
  1154                           	psect	text2
  1155  05F8                     __ptext2:	
  1156 ;; *************** function _Lcd_Write_String *****************
  1157 ;; Defined at:
  1158 ;;		line 114 in file "i2c_display.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  a               2   10[COMMON] PTR unsigned char 
  1161 ;;		 -> STR_1(11), 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  i               2    0[BANK0 ] int 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1176 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1177 ;;Total ram usage:        5 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    4
  1180 ;; This function calls:
  1181 ;;		_Lcd_Write_Char
  1182 ;; This function is called by:
  1183 ;;		_config
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _Lcd_Write_String
  1189  05F8                     _Lcd_Write_String:	
  1190  05F8                     l1107:	
  1191                           ;incstack = 0
  1192                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1193                           
  1194                           
  1195                           ;i2c_display.c: 114: void Lcd_Write_String(char *a);i2c_display.c: 115: {;i2c_display.c:
      +                           116:  int i;;i2c_display.c: 117:  for(i=0;a[i]!='\0';i++)
  1196  05F8  0020               	movlb	0	; select bank0
  1197  05F9  01A0               	clrf	Lcd_Write_String@i
  1198  05FA  01A1               	clrf	Lcd_Write_String@i+1
  1199  05FB  2E0B               	goto	l1113
  1200  05FC                     l1109:	
  1201                           
  1202                           ;i2c_display.c: 118:     Lcd_Write_Char(a[i]);
  1203  05FC  087A               	movf	Lcd_Write_String@a,w
  1204  05FD  0720               	addwf	Lcd_Write_String@i,w
  1205  05FE  0084               	movwf	4
  1206  05FF  087B               	movf	Lcd_Write_String@a+1,w
  1207  0600  3D21               	addwfc	Lcd_Write_String@i+1,w
  1208  0601  0085               	movwf	5
  1209  0602  0800               	movf	0,w	;code access
  1210  0603  3186  2678  3185   	fcall	_Lcd_Write_Char
  1211  0606                     l1111:	
  1212  0606  3001               	movlw	1
  1213  0607  0020               	movlb	0	; select bank0
  1214  0608  07A0               	addwf	Lcd_Write_String@i,f
  1215  0609  3000               	movlw	0
  1216  060A  3DA1               	addwfc	Lcd_Write_String@i+1,f
  1217  060B                     l1113:	
  1218  060B  087A               	movf	Lcd_Write_String@a,w
  1219  060C  0720               	addwf	Lcd_Write_String@i,w
  1220  060D  0084               	movwf	4
  1221  060E  087B               	movf	Lcd_Write_String@a+1,w
  1222  060F  3D21               	addwfc	Lcd_Write_String@i+1,w
  1223  0610  0085               	movwf	5
  1224  0611  0012               	moviw fsr0++
  1225  0612  1D03               	btfss	3,2
  1226  0613  2E15               	goto	u361
  1227  0614  2E16               	goto	u360
  1228  0615                     u361:	
  1229  0615  2DFC               	goto	l1109
  1230  0616                     u360:	
  1231  0616                     l106:	
  1232  0616  0008               	return
  1233  0617                     __end_of_Lcd_Write_String:	
  1234                           
  1235                           	psect	text3
  1236  0678                     __ptext3:	
  1237 ;; *************** function _Lcd_Write_Char *****************
  1238 ;; Defined at:
  1239 ;;		line 90 in file "i2c_display.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  a               1    wreg     unsigned char 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  a               1    7[COMMON] unsigned char 
  1244 ;;  temp            1    9[COMMON] unsigned char 
  1245 ;;  y               1    8[COMMON] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, pclath, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1256 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1257 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1258 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1259 ;;Total ram usage:        5 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    3
  1262 ;; This function calls:
  1263 ;;		_Lcd_Port
  1264 ;; This function is called by:
  1265 ;;		_Lcd_Write_String
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function _Lcd_Write_Char
  1271  0678                     _Lcd_Write_Char:	
  1272                           
  1273                           ;incstack = 0
  1274                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1275                           ;Lcd_Write_Char@a stored from wreg
  1276  0678  00F7               	movwf	Lcd_Write_Char@a
  1277  0679                     l1013:	
  1278                           
  1279                           ;i2c_display.c: 90: void Lcd_Write_Char(char a);i2c_display.c: 91: {;i2c_display.c: 92: 
      +                             char temp,y;;i2c_display.c: 93:    temp = a&0x0F;
  1280  0679  0877               	movf	Lcd_Write_Char@a,w
  1281  067A  390F               	andlw	15
  1282  067B  00F5               	movwf	??_Lcd_Write_Char
  1283  067C  0875               	movf	??_Lcd_Write_Char,w
  1284  067D  00F9               	movwf	Lcd_Write_Char@temp
  1285  067E                     l1015:	
  1286                           
  1287                           ;i2c_display.c: 94:    temp=temp<<4;
  1288  067E  0879               	movf	Lcd_Write_Char@temp,w
  1289  067F  00F5               	movwf	??_Lcd_Write_Char
  1290  0680  3003               	movlw	3
  1291  0681                     u235:	
  1292  0681  35F5               	lslf	??_Lcd_Write_Char,f
  1293  0682  3EFF               	addlw	-1
  1294  0683  1D03               	skipz
  1295  0684  2E81               	goto	u235
  1296  0685  3575               	lslf	??_Lcd_Write_Char,w
  1297  0686  00F6               	movwf	??_Lcd_Write_Char+1
  1298  0687  0876               	movf	??_Lcd_Write_Char+1,w
  1299  0688  00F9               	movwf	Lcd_Write_Char@temp
  1300  0689                     l1017:	
  1301                           
  1302                           ;i2c_display.c: 95:    y = a&0xF0;
  1303  0689  0877               	movf	Lcd_Write_Char@a,w
  1304  068A  39F0               	andlw	240
  1305  068B  00F5               	movwf	??_Lcd_Write_Char
  1306  068C  0875               	movf	??_Lcd_Write_Char,w
  1307  068D  00F8               	movwf	Lcd_Write_Char@y
  1308  068E                     l1019:	
  1309                           
  1310                           ;i2c_display.c: 98:    Lcd_Port(0x00 | 0x01 | 0x00 | 0x00);
  1311  068E  3001               	movlw	1
  1312  068F  3185  25DF  3186   	fcall	_Lcd_Port
  1313  0692                     l1021:	
  1314                           
  1315                           ;i2c_display.c: 99:    Lcd_Port(y);
  1316  0692  0878               	movf	Lcd_Write_Char@y,w
  1317  0693  3185  25DF  3186   	fcall	_Lcd_Port
  1318  0696                     l1023:	
  1319                           
  1320                           ;i2c_display.c: 101:    Lcd_Port(y | 0x01 | 0x04 | 0x00);
  1321  0696  0878               	movf	Lcd_Write_Char@y,w
  1322  0697  3805               	iorlw	5
  1323  0698  3185  25DF  3186   	fcall	_Lcd_Port
  1324  069B                     l1025:	
  1325                           
  1326                           ;i2c_display.c: 102:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1327  069B  301A               	movlw	26
  1328  069C                     u417:	
  1329  069C  0B89               	decfsz	9,f
  1330  069D  2E9C               	goto	u417
  1331  069E  3200               	nop2
  1332  069F                     l1027:	
  1333                           
  1334                           ;i2c_display.c: 104:    Lcd_Port(y | 0x01 | 0x00 | 0x00);
  1335  069F  0878               	movf	Lcd_Write_Char@y,w
  1336  06A0  3801               	iorlw	1
  1337  06A1  3185  25DF  3186   	fcall	_Lcd_Port
  1338  06A4                     l1029:	
  1339                           
  1340                           ;i2c_display.c: 105:    Lcd_Port(temp);
  1341  06A4  0879               	movf	Lcd_Write_Char@temp,w
  1342  06A5  3185  25DF  3186   	fcall	_Lcd_Port
  1343  06A8                     l1031:	
  1344                           
  1345                           ;i2c_display.c: 108:    Lcd_Port(temp | 0x01 | 0x04 | 0x00);
  1346  06A8  0879               	movf	Lcd_Write_Char@temp,w
  1347  06A9  3805               	iorlw	5
  1348  06AA  3185  25DF  3186   	fcall	_Lcd_Port
  1349  06AD                     l1033:	
  1350                           
  1351                           ;i2c_display.c: 109:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1352  06AD  301A               	movlw	26
  1353  06AE                     u427:	
  1354  06AE  0B89               	decfsz	9,f
  1355  06AF  2EAE               	goto	u427
  1356  06B0  3200               	nop2
  1357  06B1                     l1035:	
  1358                           
  1359                           ;i2c_display.c: 111:    Lcd_Port(temp | 0x01 | 0x00 | 0x00);
  1360  06B1  0879               	movf	Lcd_Write_Char@temp,w
  1361  06B2  3801               	iorlw	1
  1362  06B3  3185  25DF  3186   	fcall	_Lcd_Port
  1363  06B6                     l100:	
  1364  06B6  0008               	return
  1365  06B7                     __end_of_Lcd_Write_Char:	
  1366                           
  1367                           	psect	text4
  1368  06FA                     __ptext4:	
  1369 ;; *************** function _Lcd_Set_Cursor *****************
  1370 ;; Defined at:
  1371 ;;		line 50 in file "i2c_display.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  a               1    wreg     unsigned char 
  1374 ;;  b               1   11[COMMON] unsigned char 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  a               1    0[BANK0 ] unsigned char 
  1377 ;;  temp            1    3[BANK0 ] unsigned char 
  1378 ;;  y               1    2[BANK0 ] unsigned char 
  1379 ;;  z               1    1[BANK0 ] unsigned char 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0, pclath, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1389 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1390 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1392 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1393 ;;Total ram usage:        7 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    4
  1396 ;; This function calls:
  1397 ;;		_Lcd_Cmd
  1398 ;; This function is called by:
  1399 ;;		_config
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _Lcd_Set_Cursor
  1405  06FA                     _Lcd_Set_Cursor:	
  1406                           
  1407                           ;incstack = 0
  1408                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1409                           ;Lcd_Set_Cursor@a stored from wreg
  1410  06FA  0020               	movlb	0	; select bank0
  1411  06FB  00A0               	movwf	Lcd_Set_Cursor@a
  1412  06FC                     l1087:	
  1413                           
  1414                           ;i2c_display.c: 50: void Lcd_Set_Cursor(char a, char b);i2c_display.c: 51: {;i2c_display
      +                          .c: 52:  char temp,z,y;;i2c_display.c: 53:  if(a == 1)
  1415  06FC  0320               	decf	Lcd_Set_Cursor@a,w
  1416  06FD  1D03               	btfss	3,2
  1417  06FE  2F00               	goto	u321
  1418  06FF  2F01               	goto	u320
  1419  0700                     u321:	
  1420  0700  2F1F               	goto	l1097
  1421  0701                     u320:	
  1422  0701                     l1089:	
  1423                           
  1424                           ;i2c_display.c: 54:  {;i2c_display.c: 55:    temp = 0x80 + b - 1;
  1425  0701  087B               	movf	Lcd_Set_Cursor@b,w
  1426  0702  3E7F               	addlw	127
  1427  0703  00FC               	movwf	??_Lcd_Set_Cursor
  1428  0704  087C               	movf	??_Lcd_Set_Cursor,w
  1429  0705  00A3               	movwf	Lcd_Set_Cursor@temp
  1430                           
  1431                           ;i2c_display.c: 56:   z = temp>>4;
  1432  0706  0823               	movf	Lcd_Set_Cursor@temp,w
  1433  0707  00FC               	movwf	??_Lcd_Set_Cursor
  1434  0708  3004               	movlw	4
  1435  0709                     u335:	
  1436  0709  36FC               	lsrf	??_Lcd_Set_Cursor,f
  1437  070A  0B89               	decfsz	9,f
  1438  070B  2F09               	goto	u335
  1439  070C  087C               	movf	??_Lcd_Set_Cursor,w
  1440  070D  00FD               	movwf	??_Lcd_Set_Cursor+1
  1441  070E  087D               	movf	??_Lcd_Set_Cursor+1,w
  1442  070F  00A1               	movwf	Lcd_Set_Cursor@z
  1443  0710                     l1091:	
  1444                           
  1445                           ;i2c_display.c: 57:   y = temp & 0x0F;
  1446  0710  0823               	movf	Lcd_Set_Cursor@temp,w
  1447  0711  390F               	andlw	15
  1448  0712  00FC               	movwf	??_Lcd_Set_Cursor
  1449  0713  087C               	movf	??_Lcd_Set_Cursor,w
  1450  0714  00A2               	movwf	Lcd_Set_Cursor@y
  1451  0715                     l1093:	
  1452                           
  1453                           ;i2c_display.c: 58:   Lcd_Cmd(z);
  1454  0715  0821               	movf	Lcd_Set_Cursor@z,w
  1455  0716  3186  2647  3186   	fcall	_Lcd_Cmd
  1456  0719                     l1095:	
  1457                           
  1458                           ;i2c_display.c: 59:   Lcd_Cmd(y);
  1459  0719  0020               	movlb	0	; select bank0
  1460  071A  0822               	movf	Lcd_Set_Cursor@y,w
  1461  071B  3186  2647  3186   	fcall	_Lcd_Cmd
  1462                           
  1463                           ;i2c_display.c: 60:  }
  1464  071E  2F42               	goto	l94
  1465  071F                     l1097:	
  1466  071F  3002               	movlw	2
  1467  0720  0620               	xorwf	Lcd_Set_Cursor@a,w
  1468  0721  1D03               	btfss	3,2
  1469  0722  2F24               	goto	u341
  1470  0723  2F25               	goto	u340
  1471  0724                     u341:	
  1472  0724  2F42               	goto	l94
  1473  0725                     u340:	
  1474  0725                     l1099:	
  1475                           
  1476                           ;i2c_display.c: 62:  {;i2c_display.c: 63:   temp = 0xC0 + b - 1;
  1477  0725  087B               	movf	Lcd_Set_Cursor@b,w
  1478  0726  3EBF               	addlw	191
  1479  0727  00FC               	movwf	??_Lcd_Set_Cursor
  1480  0728  087C               	movf	??_Lcd_Set_Cursor,w
  1481  0729  00A3               	movwf	Lcd_Set_Cursor@temp
  1482                           
  1483                           ;i2c_display.c: 64:   z = temp>>4;
  1484  072A  0823               	movf	Lcd_Set_Cursor@temp,w
  1485  072B  00FC               	movwf	??_Lcd_Set_Cursor
  1486  072C  3004               	movlw	4
  1487  072D                     u355:	
  1488  072D  36FC               	lsrf	??_Lcd_Set_Cursor,f
  1489  072E  0B89               	decfsz	9,f
  1490  072F  2F2D               	goto	u355
  1491  0730  087C               	movf	??_Lcd_Set_Cursor,w
  1492  0731  00FD               	movwf	??_Lcd_Set_Cursor+1
  1493  0732  087D               	movf	??_Lcd_Set_Cursor+1,w
  1494  0733  00A1               	movwf	Lcd_Set_Cursor@z
  1495  0734                     l1101:	
  1496                           
  1497                           ;i2c_display.c: 65:   y = temp & 0x0F;
  1498  0734  0823               	movf	Lcd_Set_Cursor@temp,w
  1499  0735  390F               	andlw	15
  1500  0736  00FC               	movwf	??_Lcd_Set_Cursor
  1501  0737  087C               	movf	??_Lcd_Set_Cursor,w
  1502  0738  00A2               	movwf	Lcd_Set_Cursor@y
  1503  0739                     l1103:	
  1504                           
  1505                           ;i2c_display.c: 66:   Lcd_Cmd(z);
  1506  0739  0821               	movf	Lcd_Set_Cursor@z,w
  1507  073A  3186  2647  3186   	fcall	_Lcd_Cmd
  1508  073D                     l1105:	
  1509                           
  1510                           ;i2c_display.c: 67:   Lcd_Cmd(y);
  1511  073D  0020               	movlb	0	; select bank0
  1512  073E  0822               	movf	Lcd_Set_Cursor@y,w
  1513  073F  3186  2647  3186   	fcall	_Lcd_Cmd
  1514  0742                     l94:	
  1515  0742  0008               	return
  1516  0743                     __end_of_Lcd_Set_Cursor:	
  1517                           
  1518                           	psect	text5
  1519  06B7                     __ptext5:	
  1520 ;; *************** function _Lcd_Init *****************
  1521 ;; Defined at:
  1522 ;;		line 71 in file "i2c_display.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0, pclath, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1540 ;;Total ram usage:        1 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    4
  1543 ;; This function calls:
  1544 ;;		_Lcd_Cmd
  1545 ;;		_Lcd_Port
  1546 ;; This function is called by:
  1547 ;;		_config
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function _Lcd_Init
  1553  06B7                     _Lcd_Init:	
  1554  06B7                     l1073:	
  1555                           ;incstack = 0
  1556                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1557                           
  1558                           
  1559                           ;i2c_display.c: 73:   Lcd_Port(0x00);
  1560  06B7  3000               	movlw	0
  1561  06B8  3185  25DF  3186   	fcall	_Lcd_Port
  1562  06BB                     l1075:	
  1563                           
  1564                           ;i2c_display.c: 74:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1565  06BB  3034               	movlw	52
  1566  06BC  00FB               	movwf	??_Lcd_Init
  1567  06BD  30F2               	movlw	242
  1568  06BE                     u437:	
  1569  06BE  0B89               	decfsz	9,f
  1570  06BF  2EBE               	goto	u437
  1571  06C0  0BFB               	decfsz	??_Lcd_Init,f
  1572  06C1  2EBE               	goto	u437
  1573  06C2                     l1077:	
  1574                           
  1575                           ;i2c_display.c: 75:   Lcd_Cmd(0x03);
  1576  06C2  3003               	movlw	3
  1577  06C3  3186  2647  3186   	fcall	_Lcd_Cmd
  1578                           
  1579                           ;i2c_display.c: 76:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1580  06C6  300D               	movlw	13
  1581  06C7  00FB               	movwf	??_Lcd_Init
  1582  06C8  30FC               	movlw	252
  1583  06C9                     u447:	
  1584  06C9  0B89               	decfsz	9,f
  1585  06CA  2EC9               	goto	u447
  1586  06CB  0BFB               	decfsz	??_Lcd_Init,f
  1587  06CC  2EC9               	goto	u447
  1588  06CD                     l1079:	
  1589                           
  1590                           ;i2c_display.c: 77:   Lcd_Cmd(0x03);
  1591  06CD  3003               	movlw	3
  1592  06CE  3186  2647  3186   	fcall	_Lcd_Cmd
  1593  06D1                     l1081:	
  1594                           
  1595                           ;i2c_display.c: 78:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1596  06D1  301D               	movlw	29
  1597  06D2  00FB               	movwf	??_Lcd_Init
  1598  06D3  3091               	movlw	145
  1599  06D4                     u457:	
  1600  06D4  0B89               	decfsz	9,f
  1601  06D5  2ED4               	goto	u457
  1602  06D6  0BFB               	decfsz	??_Lcd_Init,f
  1603  06D7  2ED4               	goto	u457
  1604  06D8  0000               	nop
  1605                           
  1606                           ;i2c_display.c: 79:   Lcd_Cmd(0x03);
  1607  06D9  3003               	movlw	3
  1608  06DA  3186  2647  3186   	fcall	_Lcd_Cmd
  1609                           
  1610                           ;i2c_display.c: 81:   Lcd_Cmd(0x02);
  1611  06DD  3002               	movlw	2
  1612  06DE  3186  2647  3186   	fcall	_Lcd_Cmd
  1613                           
  1614                           ;i2c_display.c: 82:   Lcd_Cmd(0x02);
  1615  06E1  3002               	movlw	2
  1616  06E2  3186  2647  3186   	fcall	_Lcd_Cmd
  1617                           
  1618                           ;i2c_display.c: 83:   Lcd_Cmd(0x08);
  1619  06E5  3008               	movlw	8
  1620  06E6  3186  2647  3186   	fcall	_Lcd_Cmd
  1621                           
  1622                           ;i2c_display.c: 84:   Lcd_Cmd(0x00);
  1623  06E9  3000               	movlw	0
  1624  06EA  3186  2647  3186   	fcall	_Lcd_Cmd
  1625                           
  1626                           ;i2c_display.c: 85:   Lcd_Cmd(0x0C);
  1627  06ED  300C               	movlw	12
  1628  06EE  3186  2647  3186   	fcall	_Lcd_Cmd
  1629                           
  1630                           ;i2c_display.c: 86:   Lcd_Cmd(0x00);
  1631  06F1  3000               	movlw	0
  1632  06F2  3186  2647  3186   	fcall	_Lcd_Cmd
  1633                           
  1634                           ;i2c_display.c: 87:   Lcd_Cmd(0x06);
  1635  06F5  3006               	movlw	6
  1636  06F6  3186  2647  3186   	fcall	_Lcd_Cmd
  1637  06F9                     l97:	
  1638  06F9  0008               	return
  1639  06FA                     __end_of_Lcd_Init:	
  1640                           
  1641                           	psect	text6
  1642  05CA                     __ptext6:	
  1643 ;; *************** function _Lcd_Clear *****************
  1644 ;; Defined at:
  1645 ;;		line 44 in file "i2c_display.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, pclath, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1663 ;;Total ram usage:        0 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; Hardware stack levels required when called:    4
  1666 ;; This function calls:
  1667 ;;		_Lcd_Cmd
  1668 ;; This function is called by:
  1669 ;;		_config
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           
  1674                           ;psect for function _Lcd_Clear
  1675  05CA                     _Lcd_Clear:	
  1676  05CA                     l1083:	
  1677                           ;incstack = 0
  1678                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1679                           
  1680                           
  1681                           ;i2c_display.c: 46:  Lcd_Cmd(0);
  1682  05CA  3000               	movlw	0
  1683  05CB  3186  2647  3185   	fcall	_Lcd_Cmd
  1684                           
  1685                           ;i2c_display.c: 47:  Lcd_Cmd(1);
  1686  05CE  3001               	movlw	1
  1687  05CF  3186  2647  3185   	fcall	_Lcd_Cmd
  1688  05D2                     l88:	
  1689  05D2  0008               	return
  1690  05D3                     __end_of_Lcd_Clear:	
  1691                           
  1692                           	psect	text7
  1693  0617                     __ptext7:	
  1694 ;; *************** function _I2C_Master_Init *****************
  1695 ;; Defined at:
  1696 ;;		line 164 in file "i2c_display.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  c               4    0[BANK0 ] const unsigned long 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1712 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1714 ;;Total ram usage:        8 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    1
  1717 ;; This function calls:
  1718 ;;		___lldiv
  1719 ;; This function is called by:
  1720 ;;		_config
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _I2C_Master_Init
  1726  0617                     _I2C_Master_Init:	
  1727  0617                     l1061:	
  1728                           ;incstack = 0
  1729                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1730                           
  1731                           
  1732                           ;i2c_display.c: 164: void I2C_Master_Init(const unsigned long c);i2c_display.c: 165: {;i
      +                          2c_display.c: 166:     SSP1CON1 = 0b00101000;
  1733  0617  3028               	movlw	40
  1734  0618  0024               	movlb	4	; select bank4
  1735  0619  0095               	movwf	21	;volatile
  1736  061A                     l1063:	
  1737                           
  1738                           ;i2c_display.c: 167:     SSP1CON2 = 0x00;
  1739  061A  0196               	clrf	22	;volatile
  1740  061B                     l1065:	
  1741                           
  1742                           ;i2c_display.c: 168:     SSP1ADD = (8000000/(4*c))-1;
  1743  061B  0020               	movlb	0	; select bank0
  1744  061C  0820               	movf	I2C_Master_Init@c,w
  1745  061D  00A4               	movwf	??_I2C_Master_Init
  1746  061E  0821               	movf	I2C_Master_Init@c+1,w
  1747  061F  00A5               	movwf	??_I2C_Master_Init+1
  1748  0620  0822               	movf	I2C_Master_Init@c+2,w
  1749  0621  00A6               	movwf	??_I2C_Master_Init+2
  1750  0622  0823               	movf	I2C_Master_Init@c+3,w
  1751  0623  00A7               	movwf	??_I2C_Master_Init+3
  1752  0624  3002               	movlw	2
  1753  0625                     u315:	
  1754  0625  35A4               	lslf	??_I2C_Master_Init,f
  1755  0626  0DA5               	rlf	??_I2C_Master_Init+1,f
  1756  0627  0DA6               	rlf	??_I2C_Master_Init+2,f
  1757  0628  0DA7               	rlf	??_I2C_Master_Init+3,f
  1758  0629                     u310:	
  1759  0629  0B89               	decfsz	9,f
  1760  062A  2E25               	goto	u315
  1761  062B  0827               	movf	??_I2C_Master_Init+3,w
  1762  062C  00F3               	movwf	___lldiv@divisor+3
  1763  062D  0826               	movf	??_I2C_Master_Init+2,w
  1764  062E  00F2               	movwf	___lldiv@divisor+2
  1765  062F  0825               	movf	??_I2C_Master_Init+1,w
  1766  0630  00F1               	movwf	___lldiv@divisor+1
  1767  0631  0824               	movf	??_I2C_Master_Init,w
  1768  0632  00F0               	movwf	___lldiv@divisor
  1769  0633  3000               	movlw	0
  1770  0634  00F7               	movwf	___lldiv@dividend+3
  1771  0635  307A               	movlw	122
  1772  0636  00F6               	movwf	___lldiv@dividend+2
  1773  0637  3012               	movlw	18
  1774  0638  00F5               	movwf	___lldiv@dividend+1
  1775  0639  3000               	movlw	0
  1776  063A  00F4               	movwf	___lldiv@dividend
  1777  063B  3187  2743  3186   	fcall	___lldiv
  1778  063E  0870               	movf	?___lldiv,w
  1779  063F  3EFF               	addlw	255
  1780  0640  0024               	movlb	4	; select bank4
  1781  0641  0092               	movwf	18	;volatile
  1782  0642                     l1067:	
  1783                           
  1784                           ;i2c_display.c: 169:     SSP1STAT = 0x00;
  1785  0642  0194               	clrf	20	;volatile
  1786  0643                     l1069:	
  1787                           
  1788                           ;i2c_display.c: 170:     TRISCbits.TRISC0=1;
  1789  0643  0021               	movlb	1	; select bank1
  1790  0644  140E               	bsf	14,0	;volatile
  1791  0645                     l1071:	
  1792                           
  1793                           ;i2c_display.c: 171:     TRISCbits.TRISC1=1;
  1794  0645  148E               	bsf	14,1	;volatile
  1795  0646                     l127:	
  1796  0646  0008               	return
  1797  0647                     __end_of_I2C_Master_Init:	
  1798                           
  1799                           	psect	text8
  1800  0743                     __ptext8:	
  1801 ;; *************** function ___lldiv *****************
  1802 ;; Defined at:
  1803 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  divisor         4    0[COMMON] unsigned long 
  1806 ;;  dividend        4    4[COMMON] unsigned long 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  quotient        4    9[COMMON] unsigned long 
  1809 ;;  counter         1   13[COMMON] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  4    0[COMMON] unsigned long 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1819 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1820 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1822 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1823 ;;Total ram usage:       14 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_I2C_Master_Init
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           
  1833                           ;psect for function ___lldiv
  1834  0743                     ___lldiv:	
  1835  0743                     l1037:	
  1836                           ;incstack = 0
  1837                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1838                           
  1839  0743  3000               	movlw	0
  1840  0744  00FC               	movwf	___lldiv@quotient+3
  1841  0745  3000               	movlw	0
  1842  0746  00FB               	movwf	___lldiv@quotient+2
  1843  0747  3000               	movlw	0
  1844  0748  00FA               	movwf	___lldiv@quotient+1
  1845  0749  3000               	movlw	0
  1846  074A  00F9               	movwf	___lldiv@quotient
  1847  074B  0873               	movf	___lldiv@divisor+3,w
  1848  074C  0472               	iorwf	___lldiv@divisor+2,w
  1849  074D  0471               	iorwf	___lldiv@divisor+1,w
  1850  074E  0470               	iorwf	___lldiv@divisor,w
  1851  074F  1903               	skipnz
  1852  0750  2F52               	goto	u241
  1853  0751  2F53               	goto	u240
  1854  0752                     u241:	
  1855  0752  2F94               	goto	l1057
  1856  0753                     u240:	
  1857  0753                     l1039:	
  1858  0753  01FD               	clrf	___lldiv@counter
  1859  0754  0AFD               	incf	___lldiv@counter,f
  1860  0755  2F61               	goto	l1043
  1861  0756                     l1041:	
  1862  0756  3001               	movlw	1
  1863  0757                     u255:	
  1864  0757  35F0               	lslf	___lldiv@divisor,f
  1865  0758  0DF1               	rlf	___lldiv@divisor+1,f
  1866  0759  0DF2               	rlf	___lldiv@divisor+2,f
  1867  075A  0DF3               	rlf	___lldiv@divisor+3,f
  1868  075B  0B89               	decfsz	9,f
  1869  075C  2F57               	goto	u255
  1870  075D  3001               	movlw	1
  1871  075E  00F8               	movwf	??___lldiv
  1872  075F  0878               	movf	??___lldiv,w
  1873  0760  07FD               	addwf	___lldiv@counter,f
  1874  0761                     l1043:	
  1875  0761  1FF3               	btfss	___lldiv@divisor+3,7
  1876  0762  2F64               	goto	u261
  1877  0763  2F65               	goto	u260
  1878  0764                     u261:	
  1879  0764  2F56               	goto	l1041
  1880  0765                     u260:	
  1881  0765                     l1045:	
  1882  0765  3001               	movlw	1
  1883  0766                     u275:	
  1884  0766  35F9               	lslf	___lldiv@quotient,f
  1885  0767  0DFA               	rlf	___lldiv@quotient+1,f
  1886  0768  0DFB               	rlf	___lldiv@quotient+2,f
  1887  0769  0DFC               	rlf	___lldiv@quotient+3,f
  1888  076A  0B89               	decfsz	9,f
  1889  076B  2F66               	goto	u275
  1890  076C                     l1047:	
  1891  076C  0873               	movf	___lldiv@divisor+3,w
  1892  076D  0277               	subwf	___lldiv@dividend+3,w
  1893  076E  1D03               	skipz
  1894  076F  2F7A               	goto	u285
  1895  0770  0872               	movf	___lldiv@divisor+2,w
  1896  0771  0276               	subwf	___lldiv@dividend+2,w
  1897  0772  1D03               	skipz
  1898  0773  2F7A               	goto	u285
  1899  0774  0871               	movf	___lldiv@divisor+1,w
  1900  0775  0275               	subwf	___lldiv@dividend+1,w
  1901  0776  1D03               	skipz
  1902  0777  2F7A               	goto	u285
  1903  0778  0870               	movf	___lldiv@divisor,w
  1904  0779  0274               	subwf	___lldiv@dividend,w
  1905  077A                     u285:	
  1906  077A  1C03               	skipc
  1907  077B  2F7D               	goto	u281
  1908  077C  2F7E               	goto	u280
  1909  077D                     u281:	
  1910  077D  2F87               	goto	l1053
  1911  077E                     u280:	
  1912  077E                     l1049:	
  1913  077E  0870               	movf	___lldiv@divisor,w
  1914  077F  02F4               	subwf	___lldiv@dividend,f
  1915  0780  0871               	movf	___lldiv@divisor+1,w
  1916  0781  3BF5               	subwfb	___lldiv@dividend+1,f
  1917  0782  0872               	movf	___lldiv@divisor+2,w
  1918  0783  3BF6               	subwfb	___lldiv@dividend+2,f
  1919  0784  0873               	movf	___lldiv@divisor+3,w
  1920  0785  3BF7               	subwfb	___lldiv@dividend+3,f
  1921  0786                     l1051:	
  1922  0786  1479               	bsf	___lldiv@quotient,0
  1923  0787                     l1053:	
  1924  0787  3001               	movlw	1
  1925  0788                     u295:	
  1926  0788  36F3               	lsrf	___lldiv@divisor+3,f
  1927  0789  0CF2               	rrf	___lldiv@divisor+2,f
  1928  078A  0CF1               	rrf	___lldiv@divisor+1,f
  1929  078B  0CF0               	rrf	___lldiv@divisor,f
  1930  078C  0B89               	decfsz	9,f
  1931  078D  2F88               	goto	u295
  1932  078E                     l1055:	
  1933  078E  3001               	movlw	1
  1934  078F  02FD               	subwf	___lldiv@counter,f
  1935  0790  1D03               	btfss	3,2
  1936  0791  2F93               	goto	u301
  1937  0792  2F94               	goto	u300
  1938  0793                     u301:	
  1939  0793  2F65               	goto	l1045
  1940  0794                     u300:	
  1941  0794                     l1057:	
  1942  0794  087C               	movf	___lldiv@quotient+3,w
  1943  0795  00F3               	movwf	?___lldiv+3
  1944  0796  087B               	movf	___lldiv@quotient+2,w
  1945  0797  00F2               	movwf	?___lldiv+2
  1946  0798  087A               	movf	___lldiv@quotient+1,w
  1947  0799  00F1               	movwf	?___lldiv+1
  1948  079A  0879               	movf	___lldiv@quotient,w
  1949  079B  00F0               	movwf	?___lldiv
  1950  079C                     l337:	
  1951  079C  0008               	return
  1952  079D                     __end_of___lldiv:	
  1953                           
  1954                           	psect	text9
  1955  05C1                     __ptext9:	
  1956 ;; *************** function _Cursor_Off *****************
  1957 ;; Defined at:
  1958 ;;		line 139 in file "i2c_display.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0, pclath, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    4
  1979 ;; This function calls:
  1980 ;;		_Lcd_Cmd
  1981 ;; This function is called by:
  1982 ;;		_config
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _Cursor_Off
  1988  05C1                     _Cursor_Off:	
  1989  05C1                     l1085:	
  1990                           ;incstack = 0
  1991                           ; Regs used in _Cursor_Off: [wreg+status,2+status,0+pclath+cstack]
  1992                           
  1993                           
  1994                           ;i2c_display.c: 141: Lcd_Cmd(0x00);
  1995  05C1  3000               	movlw	0
  1996  05C2  3186  2647  3185   	fcall	_Lcd_Cmd
  1997                           
  1998                           ;i2c_display.c: 142: Lcd_Cmd(0x0C);
  1999  05C5  300C               	movlw	12
  2000  05C6  3186  2647  3185   	fcall	_Lcd_Cmd
  2001  05C9                     l118:	
  2002  05C9  0008               	return
  2003  05CA                     __end_of_Cursor_Off:	
  2004                           
  2005                           	psect	text10
  2006  0647                     __ptext10:	
  2007 ;; *************** function _Lcd_Cmd *****************
  2008 ;; Defined at:
  2009 ;;		line 25 in file "i2c_display.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  a               1    wreg     unsigned char 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  a               1   10[COMMON] unsigned char 
  2014 ;;  buff            2    8[COMMON] int 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, pclath, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2025 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;Total ram usage:        6 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    3
  2031 ;; This function calls:
  2032 ;;		_Lcd_Port
  2033 ;; This function is called by:
  2034 ;;		_Lcd_Clear
  2035 ;;		_Lcd_Set_Cursor
  2036 ;;		_Lcd_Init
  2037 ;;		_Cursor_Off
  2038 ;;		_Lcd_Shift_Right
  2039 ;;		_Lcd_Shift_Left
  2040 ;;		_Cursor_On
  2041 ;;		_Cursor_Left
  2042 ;;		_Cursor_Right
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _Lcd_Cmd
  2048  0647                     _Lcd_Cmd:	
  2049                           
  2050                           ;incstack = 0
  2051                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2052                           ;Lcd_Cmd@a stored from wreg
  2053  0647  00FA               	movwf	Lcd_Cmd@a
  2054  0648                     l993:	
  2055                           
  2056                           ;i2c_display.c: 25: void Lcd_Cmd(char a);i2c_display.c: 26: {;i2c_display.c: 27:     int
      +                           buff;;i2c_display.c: 28:     a=a<<4;
  2057  0648  087A               	movf	Lcd_Cmd@a,w
  2058  0649  00F5               	movwf	??_Lcd_Cmd
  2059  064A  3003               	movlw	3
  2060  064B                     u225:	
  2061  064B  35F5               	lslf	??_Lcd_Cmd,f
  2062  064C  3EFF               	addlw	-1
  2063  064D  1D03               	skipz
  2064  064E  2E4B               	goto	u225
  2065  064F  3575               	lslf	??_Lcd_Cmd,w
  2066  0650  00F6               	movwf	??_Lcd_Cmd+1
  2067  0651  0876               	movf	??_Lcd_Cmd+1,w
  2068  0652  00FA               	movwf	Lcd_Cmd@a
  2069  0653                     l995:	
  2070  0653                     l997:	
  2071  0653                     l999:	
  2072  0653  3000               	movlw	0
  2073  0654  3185  25DF  3186   	fcall	_Lcd_Port
  2074  0657                     l1001:	
  2075                           
  2076                           ;i2c_display.c: 33:  Lcd_Port(a);
  2077  0657  087A               	movf	Lcd_Cmd@a,w
  2078  0658  3185  25DF  3186   	fcall	_Lcd_Port
  2079  065B                     l1003:	
  2080                           
  2081                           ;i2c_display.c: 36:     buff=a | 0x00 | 0x04 | 0x00;
  2082  065B  3004               	movlw	4
  2083  065C  047A               	iorwf	Lcd_Cmd@a,w
  2084  065D  00F8               	movwf	Lcd_Cmd@buff
  2085  065E  3000               	movlw	0
  2086  065F  00F9               	movwf	Lcd_Cmd@buff+1
  2087  0660                     l1005:	
  2088                           
  2089                           ;i2c_display.c: 37:     Lcd_Port(buff);
  2090  0660  0878               	movf	Lcd_Cmd@buff,w
  2091  0661  3185  25DF  3186   	fcall	_Lcd_Port
  2092  0664                     l1007:	
  2093                           
  2094                           ;i2c_display.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2095  0664  300B               	movlw	11
  2096  0665  00F5               	movwf	??_Lcd_Cmd
  2097  0666  3062               	movlw	98
  2098  0667                     u467:	
  2099  0667  0B89               	decfsz	9,f
  2100  0668  2E67               	goto	u467
  2101  0669  0BF5               	decfsz	??_Lcd_Cmd,f
  2102  066A  2E67               	goto	u467
  2103  066B  3200               	nop2
  2104  066C                     l1009:	
  2105                           
  2106                           ;i2c_display.c: 40:     buff=a | 0x00 | 0x00 | 0x00;
  2107  066C  087A               	movf	Lcd_Cmd@a,w
  2108  066D  00F5               	movwf	??_Lcd_Cmd
  2109  066E  01F6               	clrf	??_Lcd_Cmd+1
  2110  066F  0875               	movf	??_Lcd_Cmd,w
  2111  0670  00F8               	movwf	Lcd_Cmd@buff
  2112  0671  0876               	movf	??_Lcd_Cmd+1,w
  2113  0672  00F9               	movwf	Lcd_Cmd@buff+1
  2114  0673                     l1011:	
  2115                           
  2116                           ;i2c_display.c: 41:     Lcd_Port(buff);
  2117  0673  0878               	movf	Lcd_Cmd@buff,w
  2118  0674  3185  25DF  3186   	fcall	_Lcd_Port
  2119  0677                     l85:	
  2120  0677  0008               	return
  2121  0678                     __end_of_Lcd_Cmd:	
  2122                           
  2123                           	psect	text11
  2124  05DF                     __ptext11:	
  2125 ;; *************** function _Lcd_Port *****************
  2126 ;; Defined at:
  2127 ;;		line 19 in file "i2c_display.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  data            1    wreg     unsigned char 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  data            1    4[COMMON] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0, pclath, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;Total ram usage:        3 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    2
  2148 ;; This function calls:
  2149 ;;		_I2C_Master_Start
  2150 ;;		_I2C_Master_Stop
  2151 ;;		_I2C_Write_Display
  2152 ;; This function is called by:
  2153 ;;		_Lcd_Cmd
  2154 ;;		_Lcd_Init
  2155 ;;		_Lcd_Write_Char
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _Lcd_Port
  2161  05DF                     _Lcd_Port:	
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _Lcd_Port: [wreg+status,2+status,0+pclath+cstack]
  2165                           ;Lcd_Port@data stored from wreg
  2166  05DF  00F4               	movwf	Lcd_Port@data
  2167  05E0                     l991:	
  2168                           
  2169                           ;i2c_display.c: 19: void Lcd_Port(char data);i2c_display.c: 20: { I2C_Master_Start();
  2170  05E0  3185  25A8  3185   	fcall	_I2C_Master_Start
  2171                           
  2172                           ;i2c_display.c: 21:     I2C_Write_Display(0x70);
  2173  05E3  3070               	movlw	112
  2174  05E4  00F0               	movwf	I2C_Write_Display@d
  2175  05E5  3000               	movlw	0
  2176  05E6  00F1               	movwf	I2C_Write_Display@d+1
  2177  05E7  3185  25BA  3185   	fcall	_I2C_Write_Display
  2178                           
  2179                           ;i2c_display.c: 22:  I2C_Write_Display(data);
  2180  05EA  0874               	movf	Lcd_Port@data,w
  2181  05EB  00F2               	movwf	??_Lcd_Port
  2182  05EC  01F3               	clrf	??_Lcd_Port+1
  2183  05ED  0872               	movf	??_Lcd_Port,w
  2184  05EE  00F0               	movwf	I2C_Write_Display@d
  2185  05EF  0873               	movf	??_Lcd_Port+1,w
  2186  05F0  00F1               	movwf	I2C_Write_Display@d+1
  2187  05F1  3185  25BA  3185   	fcall	_I2C_Write_Display
  2188                           
  2189                           ;i2c_display.c: 23:     I2C_Master_Stop();
  2190  05F4  3185  25AE  3185   	fcall	_I2C_Master_Stop
  2191  05F7                     l80:	
  2192  05F7  0008               	return
  2193  05F8                     __end_of_Lcd_Port:	
  2194                           
  2195                           	psect	text12
  2196  05BA                     __ptext12:	
  2197 ;; *************** function _I2C_Write_Display *****************
  2198 ;; Defined at:
  2199 ;;		line 205 in file "i2c_display.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  d               2    0[COMMON] unsigned int 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, pclath, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;Total ram usage:        2 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    1
  2220 ;; This function calls:
  2221 ;;		_I2C_Master_Wait
  2222 ;; This function is called by:
  2223 ;;		_Lcd_Port
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           
  2228                           ;psect for function _I2C_Write_Display
  2229  05BA                     _I2C_Write_Display:	
  2230  05BA                     l983:	
  2231                           ;incstack = 0
  2232                           ; Regs used in _I2C_Write_Display: [wreg+status,2+status,0+pclath+cstack]
  2233                           
  2234                           
  2235                           ;i2c_display.c: 205: void I2C_Write_Display(unsigned d);i2c_display.c: 206: {;i2c_displa
      +                          y.c: 207:     I2C_Master_Wait();
  2236  05BA  3185  25D3  3185   	fcall	_I2C_Master_Wait
  2237  05BD                     l985:	
  2238                           
  2239                           ;i2c_display.c: 208:     SSP1BUF = d;
  2240  05BD  0870               	movf	I2C_Write_Display@d,w
  2241  05BE  0024               	movlb	4	; select bank4
  2242  05BF  0091               	movwf	17	;volatile
  2243  05C0                     l148:	
  2244  05C0  0008               	return
  2245  05C1                     __end_of_I2C_Write_Display:	
  2246                           
  2247                           	psect	text13
  2248  05AE                     __ptext13:	
  2249 ;; *************** function _I2C_Master_Stop *****************
  2250 ;; Defined at:
  2251 ;;		line 193 in file "i2c_display.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    1
  2272 ;; This function calls:
  2273 ;;		_I2C_Master_Wait
  2274 ;; This function is called by:
  2275 ;;		_Lcd_Port
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           
  2280                           ;psect for function _I2C_Master_Stop
  2281  05AE                     _I2C_Master_Stop:	
  2282  05AE                     l987:	
  2283                           ;incstack = 0
  2284                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2285                           
  2286                           
  2287                           ;i2c_display.c: 195:     I2C_Master_Wait();
  2288  05AE  3185  25D3  3185   	fcall	_I2C_Master_Wait
  2289  05B1                     l989:	
  2290                           
  2291                           ;i2c_display.c: 196:     SSP1CON2bits.PEN = 1;
  2292  05B1  0024               	movlb	4	; select bank4
  2293  05B2  1516               	bsf	22,2	;volatile
  2294  05B3                     l142:	
  2295  05B3  0008               	return
  2296  05B4                     __end_of_I2C_Master_Stop:	
  2297                           
  2298                           	psect	text14
  2299  05A8                     __ptext14:	
  2300 ;; *************** function _I2C_Master_Start *****************
  2301 ;; Defined at:
  2302 ;;		line 181 in file "i2c_display.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0, pclath, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    1
  2323 ;; This function calls:
  2324 ;;		_I2C_Master_Wait
  2325 ;; This function is called by:
  2326 ;;		_Lcd_Port
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           
  2331                           ;psect for function _I2C_Master_Start
  2332  05A8                     _I2C_Master_Start:	
  2333  05A8                     l979:	
  2334                           ;incstack = 0
  2335                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2336                           
  2337                           
  2338                           ;i2c_display.c: 183:     I2C_Master_Wait();
  2339  05A8  3185  25D3  3185   	fcall	_I2C_Master_Wait
  2340  05AB                     l981:	
  2341                           
  2342                           ;i2c_display.c: 184:     SSP1CON2bits.SEN = 1;
  2343  05AB  0024               	movlb	4	; select bank4
  2344  05AC  1416               	bsf	22,0	;volatile
  2345  05AD                     l136:	
  2346  05AD  0008               	return
  2347  05AE                     __end_of_I2C_Master_Start:	
  2348                           
  2349                           	psect	text15
  2350  05D3                     __ptext15:	
  2351 ;; *************** function _I2C_Master_Wait *****************
  2352 ;; Defined at:
  2353 ;;		line 174 in file "i2c_display.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_I2C_Master_Start
  2377 ;;		_I2C_Master_Stop
  2378 ;;		_I2C_Write_Display
  2379 ;;		_I2C_Master_RepeatedStart
  2380 ;;		_I2C_Master_Write
  2381 ;;		_I2C_Master_Read
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _I2C_Master_Wait
  2387  05D3                     _I2C_Master_Wait:	
  2388  05D3                     l975:	
  2389                           ;incstack = 0
  2390                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2391                           
  2392  05D3                     l130:	
  2393                           ;i2c_display.c: 176:    while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  2394                           
  2395  05D3  0024               	movlb	4	; select bank4
  2396  05D4  1914               	btfsc	20,2	;volatile
  2397  05D5  2DD7               	goto	u201
  2398  05D6  2DD8               	goto	u200
  2399  05D7                     u201:	
  2400  05D7  2DD3               	goto	l130
  2401  05D8                     u200:	
  2402  05D8                     l977:	
  2403  05D8  0816               	movf	22,w	;volatile
  2404  05D9  391F               	andlw	31
  2405  05DA  1D03               	btfss	3,2
  2406  05DB  2DDD               	goto	u211
  2407  05DC  2DDE               	goto	u210
  2408  05DD                     u211:	
  2409  05DD  2DD3               	goto	l130
  2410  05DE                     u210:	
  2411  05DE                     l133:	
  2412  05DE  0008               	return
  2413  05DF                     __end_of_I2C_Master_Wait:	
  2414  007E                     btemp	set	126	;btemp
  2415  007E                     wtemp0	set	126


Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      12
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _config->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Cursor_Off->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Lcd_Port->_I2C_Write_Display

Critical Paths under _main in BANK0

    _main->_config
    _config->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2937
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               2     2      0    2937
                                              8 BANK0      2     2      0
                         _Cursor_Off
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     5     3      2     563
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       5     5      0     397
                                              5 COMMON     5     5      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     701
                                             11 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     551
                                             11 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _Cursor_Off                                           0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              6     6      0     355
                                              5 COMMON     6     6      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             3     3      0     196
                                              2 COMMON     3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                  _I2C_Write_Display
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Display                                    2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
     _Cursor_Off
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       C       5       15.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      1A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      1A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 16 17:11:44 2020

                         l7 05B7                           l8 05B7                 __CFG_CP$OFF 0000  
                        l51 07F9                          l80 05F7                          l85 0677  
                        l94 0742                          l88 05D2                          l97 06F9  
               __CFG_LVP$ON 0000                         l100 06B6                         l130 05D3  
                       l106 0616                         l133 05DE                         l142 05B3  
                       l118 05C9          I2C_Write_Display@d 0070                         l127 0646  
                       l136 05AD                         l148 05C0                         l337 079C  
                       l981 05AB                         l975 05D3                         l983 05BA  
                       l991 05E0                         l977 05D8                         l985 05BD  
                       l993 0648                         l979 05A8                         l987 05AE  
                       l995 0653                         l989 05B1                         l997 0653  
                       l999 0653                         u200 05D8                         u201 05D7  
                       u210 05DE                         u211 05DD                         u300 0794  
                       u301 0793                         u310 0629                         u240 0753  
                       u320 0701                         u225 064B                         u241 0752  
                       u321 0700                         u315 0625                         u235 0681  
                       u260 0765                         u340 0725                         u261 0764  
                       u341 0724                         u255 0757                         u335 0709  
                       u407 07F2                         u280 077E                         u360 0616  
                       u281 077D                         u417 069C                         u361 0615  
              __CFG_CPD$OFF 0000                         u275 0766                         u355 072D  
                       u427 06AE                         u285 077A                         u437 06BE  
                       u295 0788                         u447 06C9                         u457 06D4  
                       u467 0667                         u397 07CF                __CFG_BORV$LO 0000  
                       wreg 0009                        l1001 0657                        l1011 0673  
                      l1003 065B                        l1005 0660                        l1101 0734  
                      l1021 0692                        l1013 0679                        l1007 0664  
                      l1103 0739                        l1031 06A8                        l1023 0696  
                      l1015 067E                        l1111 0606                        l1009 066C  
                      l1041 0756                        l1105 073D                        l1033 06AD  
                      l1025 069B                        l1017 0689                        l1113 060B  
                      l1121 07B3                        l1051 0786                        l1043 0761  
                      l1035 06B1                        l1027 069F                        l1019 068E  
                      l1107 05F8                        l1131 07B8                        l1123 07B4  
                      l1115 079D                        l1053 0787                        l1045 0765  
                      l1037 0743                        l1061 0617                        l1029 06A4  
                      l1109 05FC                        l1141 07BD                        l1133 07B9  
                      l1125 07B5                        l1117 07A5                        l1055 078E  
                      l1047 076C                        l1039 0753                        l1071 0645  
                      l1063 061A                        l1151 07DF                        l1143 07C9  
                      l1135 07BA                        l1127 07B6                        l1119 07B1  
                      l1049 077E                        l1057 0794                        l1065 061B  
                      l1081 06D1                        l1073 06B7                        l1153 07E5  
                      l1145 07D6                        l1137 07BB                        l1129 07B7  
                      l1067 0642                        l1083 05CA                        l1075 06BB  
                      l1091 0710                        l1155 07EC                        l1147 07D9  
                      l1139 07BC                        l1085 05C1                        l1069 0643  
                      l1077 06C2                        l1093 0715                        l1149 07DC  
                      l1157 05B4                        l1079 06CD                        l1095 0719  
                      l1087 06FC                        l1089 0701                        l1097 071F  
                      l1099 0725                        STR_1 0800                        _LATA 010C  
                      _LATC 010E                __CFG_WRT$OFF 0000                        _data 002A  
         ?_Lcd_Write_String 007A                        _main 05B4                        fsr0h 0005  
                      indf0 0000                        fsr0l 0004                        btemp 007E  
                      start 0002          ??_Lcd_Write_String 007C               __CFG_IESO$OFF 0000  
           __end_of_Lcd_Cmd 0678               __CFG_MCLRE$ON 0000            ?_I2C_Master_Init 0020  
          ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070                       ?_main 0070  
             __CFG_WDTE$OFF 0000             __end_of___lldiv 079D                       _PORTA 000C  
                     _PORTC 000E     __size_of_Lcd_Set_Cursor 0049                       _TRISA 008C  
                     _TRISC 008E              __CFG_FCMEN$OFF 0000              __CFG_BOREN$OFF 0000  
                     status 0003                       wtemp0 007E            __end_of_Lcd_Init 06FA  
          __end_of_Lcd_Port 05F8             __initialization 07FA                __end_of_main 05BA  
                _Cursor_Off 05C1                      ??_main 007E          __size_of_Lcd_Clear 0009  
            __CFG_PLLEN$OFF 0000           ?_I2C_Master_Start 0070          ??_I2C_Master_Start 0070  
                    _ANSELA 018C                      _ANSELC 018E                   ??_Lcd_Cmd 0075  
   __size_of_Lcd_Write_Char 003F                      _SSPBUF 0211              __CFG_PWRTE$OFF 0000  
                 ??___lldiv 0078                      _config 079D             Lcd_Set_Cursor@a 0020  
           Lcd_Set_Cursor@b 007B             Lcd_Set_Cursor@y 0022             Lcd_Set_Cursor@z 0021  
   __end_of__initialization 07FD           __end_of_Lcd_Clear 05D3              __pcstackCOMMON 0070  
               ?_Cursor_Off 0070              _Lcd_Set_Cursor 06FA                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                  __pbssBANK0 002A                  __pmaintext 05B4  
                   ?_config 0070           _I2C_Write_Display 05BA   __size_of_Lcd_Write_String 001F  
    __end_of_Lcd_Set_Cursor 0743          ?_I2C_Write_Display 0070         ??_I2C_Write_Display 0072  
                ??_Lcd_Init 007B                     _SSP1ADD 0212                     _SSP1BUF 0211  
                ??_Lcd_Port 0072              _Lcd_Write_Char 0678                     _Lcd_Cmd 0647  
       __size_of_Cursor_Off 0009   __end_of_I2C_Write_Display 05C1                     ___lldiv 0743  
           __size_of_config 005D             __CFG_STVREN$OFF 0000             ?_Lcd_Set_Cursor 007B  
                   __ptext1 079D                     __ptext2 05F8                     __ptext3 0678  
                   __ptext4 06FA                     __ptext5 06B7                     __ptext6 05CA  
                   __ptext7 0617                     __ptext8 0743                     __ptext9 05C1  
  __size_of_I2C_Master_Init 0030    __size_of_I2C_Master_Wait 000C    __size_of_I2C_Master_Stop 0006  
    __end_of_Lcd_Write_Char 06B7        end_of_initialization 07FD   __size_of_I2C_Master_Start 0006  
           ___lldiv@divisor 0070             ___lldiv@counter 007D            I2C_Master_Init@c 0020  
          __CFG_FOSC$INTOSC 0000                   _TRISAbits 008C                   _TRISCbits 008E  
           ?_Lcd_Write_Char 0070           Lcd_Write_String@a 007A           Lcd_Write_String@i 0020  
                 _Lcd_Clear 05CA  __size_of_I2C_Write_Display 0007                ??_Cursor_Off 007B  
          _Lcd_Write_String 05F8              __end_of_config 07FA         start_initialization 07FA  
         __size_of_Lcd_Init 0043           __size_of_Lcd_Port 0019           ??_I2C_Master_Init 0024  
         ??_I2C_Master_Wait 0070           ??_I2C_Master_Stop 0070          __end_of_Cursor_Off 05CA  
                ?_Lcd_Clear 0070                    ??_config 0028             Lcd_Write_Char@a 0077  
           Lcd_Write_Char@y 0078                   ___latbits 0002               __pcstackBANK0 0020  
                  ?_Lcd_Cmd 0070            _I2C_Master_Start 05A8            ??_Lcd_Set_Cursor 007C  
                  ?___lldiv 0070                    Lcd_Cmd@a 007A                 ??_Lcd_Clear 007B  
                  _SSP1CON1 0215                    _SSP1CON2 0216                    _SSP1STAT 0214  
          ??_Lcd_Write_Char 0075                    _Lcd_Init 06B7                    _Lcd_Port 05DF  
  __end_of_Lcd_Write_String 0617            __size_of_Lcd_Cmd 0031                Lcd_Port@data 0074  
          __size_of___lldiv 005A             _I2C_Master_Init 0617             _I2C_Master_Wait 05D3  
           _I2C_Master_Stop 05AE                    __ptext10 0647                    __ptext11 05DF  
                  __ptext12 05BA                    __ptext13 05AE                    __ptext14 05A8  
                  __ptext15 05D3                _SSP1CON2bits 0216                 Lcd_Cmd@buff 0078  
             __size_of_main 0006    __end_of_I2C_Master_Start 05AE                  _INTCONbits 000B  
        Lcd_Write_Char@temp 0079            ___lldiv@dividend 0074           __CFG_CLKOUTEN$OFF 0000  
                _OSCCONbits 0099     __end_of_I2C_Master_Init 0647     __end_of_I2C_Master_Wait 05DF  
   __end_of_I2C_Master_Stop 05B4          Lcd_Set_Cursor@temp 0023               __pstringtext1 0800  
             __pstringtext2 0000            ___lldiv@quotient 0079  

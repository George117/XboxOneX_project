

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jun 21 10:56:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	stringtext12,global,class=STRCODE,delta=2
    16                           	psect	stringtext13,global,class=STRCODE,delta=2
    17                           	psect	stringtext14,global,class=STRCODE,delta=2
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text43,local,class=CODE,merge=1,delta=2
    71                           	psect	text44,local,class=CODE,merge=1,delta=2
    72                           	psect	text45,local,class=CODE,merge=1,delta=2
    73                           	psect	text46,local,class=CODE,merge=1,delta=2
    74                           	psect	text47,local,class=CODE,merge=1,delta=2
    75                           	psect	text48,local,class=CODE,merge=1,delta=2
    76                           	psect	text49,local,class=CODE,merge=1,delta=2
    77                           	psect	text50,local,class=CODE,merge=1,delta=2
    78                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 2.10
    82                           ; Generated 31/07/2019 GMT
    83                           ; 
    84                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F1825 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000E                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  008C                     	;# 
   144  008E                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  010C                     	;# 
   160  010E                     	;# 
   161  0111                     	;# 
   162  0112                     	;# 
   163  0113                     	;# 
   164  0114                     	;# 
   165  0115                     	;# 
   166  0116                     	;# 
   167  0117                     	;# 
   168  0118                     	;# 
   169  0119                     	;# 
   170  011A                     	;# 
   171  011B                     	;# 
   172  011D                     	;# 
   173  011E                     	;# 
   174  018C                     	;# 
   175  018E                     	;# 
   176  0191                     	;# 
   177  0191                     	;# 
   178  0192                     	;# 
   179  0193                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0194                     	;# 
   183  0195                     	;# 
   184  0196                     	;# 
   185  0199                     	;# 
   186  019A                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019C                     	;# 
   190  019D                     	;# 
   191  019E                     	;# 
   192  019F                     	;# 
   193  020C                     	;# 
   194  020E                     	;# 
   195  0211                     	;# 
   196  0211                     	;# 
   197  0212                     	;# 
   198  0212                     	;# 
   199  0213                     	;# 
   200  0213                     	;# 
   201  0214                     	;# 
   202  0214                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0216                     	;# 
   207  0216                     	;# 
   208  0217                     	;# 
   209  0217                     	;# 
   210  0291                     	;# 
   211  0291                     	;# 
   212  0292                     	;# 
   213  0293                     	;# 
   214  0294                     	;# 
   215  0295                     	;# 
   216  0295                     	;# 
   217  0296                     	;# 
   218  0298                     	;# 
   219  0298                     	;# 
   220  0299                     	;# 
   221  029A                     	;# 
   222  029B                     	;# 
   223  029C                     	;# 
   224  029D                     	;# 
   225  029E                     	;# 
   226  0311                     	;# 
   227  0311                     	;# 
   228  0312                     	;# 
   229  0313                     	;# 
   230  0318                     	;# 
   231  0318                     	;# 
   232  0319                     	;# 
   233  031A                     	;# 
   234  038C                     	;# 
   235  038E                     	;# 
   236  0391                     	;# 
   237  0392                     	;# 
   238  0393                     	;# 
   239  039A                     	;# 
   240  039C                     	;# 
   241  039D                     	;# 
   242  039E                     	;# 
   243  039F                     	;# 
   244  0415                     	;# 
   245  0416                     	;# 
   246  0417                     	;# 
   247  041C                     	;# 
   248  041D                     	;# 
   249  041E                     	;# 
   250  0FE4                     	;# 
   251  0FE5                     	;# 
   252  0FE6                     	;# 
   253  0FE7                     	;# 
   254  0FE8                     	;# 
   255  0FE9                     	;# 
   256  0FEA                     	;# 
   257  0FEB                     	;# 
   258  0FED                     	;# 
   259  0FEE                     	;# 
   260  0FEF                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0008                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000E                     	;# 
   275  0011                     	;# 
   276  0012                     	;# 
   277  0013                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0016                     	;# 
   281  0017                     	;# 
   282  0018                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001B                     	;# 
   286  001C                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  008C                     	;# 
   290  008E                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  010C                     	;# 
   306  010E                     	;# 
   307  0111                     	;# 
   308  0112                     	;# 
   309  0113                     	;# 
   310  0114                     	;# 
   311  0115                     	;# 
   312  0116                     	;# 
   313  0117                     	;# 
   314  0118                     	;# 
   315  0119                     	;# 
   316  011A                     	;# 
   317  011B                     	;# 
   318  011D                     	;# 
   319  011E                     	;# 
   320  018C                     	;# 
   321  018E                     	;# 
   322  0191                     	;# 
   323  0191                     	;# 
   324  0192                     	;# 
   325  0193                     	;# 
   326  0193                     	;# 
   327  0193                     	;# 
   328  0194                     	;# 
   329  0195                     	;# 
   330  0196                     	;# 
   331  0199                     	;# 
   332  019A                     	;# 
   333  019B                     	;# 
   334  019B                     	;# 
   335  019C                     	;# 
   336  019D                     	;# 
   337  019E                     	;# 
   338  019F                     	;# 
   339  020C                     	;# 
   340  020E                     	;# 
   341  0211                     	;# 
   342  0211                     	;# 
   343  0212                     	;# 
   344  0212                     	;# 
   345  0213                     	;# 
   346  0213                     	;# 
   347  0214                     	;# 
   348  0214                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0216                     	;# 
   353  0216                     	;# 
   354  0217                     	;# 
   355  0217                     	;# 
   356  0291                     	;# 
   357  0291                     	;# 
   358  0292                     	;# 
   359  0293                     	;# 
   360  0294                     	;# 
   361  0295                     	;# 
   362  0295                     	;# 
   363  0296                     	;# 
   364  0298                     	;# 
   365  0298                     	;# 
   366  0299                     	;# 
   367  029A                     	;# 
   368  029B                     	;# 
   369  029C                     	;# 
   370  029D                     	;# 
   371  029E                     	;# 
   372  0311                     	;# 
   373  0311                     	;# 
   374  0312                     	;# 
   375  0313                     	;# 
   376  0318                     	;# 
   377  0318                     	;# 
   378  0319                     	;# 
   379  031A                     	;# 
   380  038C                     	;# 
   381  038E                     	;# 
   382  0391                     	;# 
   383  0392                     	;# 
   384  0393                     	;# 
   385  039A                     	;# 
   386  039C                     	;# 
   387  039D                     	;# 
   388  039E                     	;# 
   389  039F                     	;# 
   390  0415                     	;# 
   391  0416                     	;# 
   392  0417                     	;# 
   393  041C                     	;# 
   394  041D                     	;# 
   395  041E                     	;# 
   396  0FE4                     	;# 
   397  0FE5                     	;# 
   398  0FE6                     	;# 
   399  0FE7                     	;# 
   400  0FE8                     	;# 
   401  0FE9                     	;# 
   402  0FEA                     	;# 
   403  0FEB                     	;# 
   404  0FED                     	;# 
   405  0FEE                     	;# 
   406  0FEF                     	;# 
   407  0000                     	;# 
   408  0001                     	;# 
   409  0002                     	;# 
   410  0003                     	;# 
   411  0004                     	;# 
   412  0005                     	;# 
   413  0006                     	;# 
   414  0007                     	;# 
   415  0008                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000E                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001E                     	;# 
   434  001F                     	;# 
   435  008C                     	;# 
   436  008E                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  010C                     	;# 
   452  010E                     	;# 
   453  0111                     	;# 
   454  0112                     	;# 
   455  0113                     	;# 
   456  0114                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011D                     	;# 
   465  011E                     	;# 
   466  018C                     	;# 
   467  018E                     	;# 
   468  0191                     	;# 
   469  0191                     	;# 
   470  0192                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0199                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019C                     	;# 
   482  019D                     	;# 
   483  019E                     	;# 
   484  019F                     	;# 
   485  020C                     	;# 
   486  020E                     	;# 
   487  0211                     	;# 
   488  0211                     	;# 
   489  0212                     	;# 
   490  0212                     	;# 
   491  0213                     	;# 
   492  0213                     	;# 
   493  0214                     	;# 
   494  0214                     	;# 
   495  0215                     	;# 
   496  0215                     	;# 
   497  0215                     	;# 
   498  0216                     	;# 
   499  0216                     	;# 
   500  0217                     	;# 
   501  0217                     	;# 
   502  0291                     	;# 
   503  0291                     	;# 
   504  0292                     	;# 
   505  0293                     	;# 
   506  0294                     	;# 
   507  0295                     	;# 
   508  0295                     	;# 
   509  0296                     	;# 
   510  0298                     	;# 
   511  0298                     	;# 
   512  0299                     	;# 
   513  029A                     	;# 
   514  029B                     	;# 
   515  029C                     	;# 
   516  029D                     	;# 
   517  029E                     	;# 
   518  0311                     	;# 
   519  0311                     	;# 
   520  0312                     	;# 
   521  0313                     	;# 
   522  0318                     	;# 
   523  0318                     	;# 
   524  0319                     	;# 
   525  031A                     	;# 
   526  038C                     	;# 
   527  038E                     	;# 
   528  0391                     	;# 
   529  0392                     	;# 
   530  0393                     	;# 
   531  039A                     	;# 
   532  039C                     	;# 
   533  039D                     	;# 
   534  039E                     	;# 
   535  039F                     	;# 
   536  0415                     	;# 
   537  0416                     	;# 
   538  0417                     	;# 
   539  041C                     	;# 
   540  041D                     	;# 
   541  041E                     	;# 
   542  0FE4                     	;# 
   543  0FE5                     	;# 
   544  0FE6                     	;# 
   545  0FE7                     	;# 
   546  0FE8                     	;# 
   547  0FE9                     	;# 
   548  0FEA                     	;# 
   549  0FEB                     	;# 
   550  0FED                     	;# 
   551  0FEE                     	;# 
   552  0FEF                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000E                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0016                     	;# 
   573  0017                     	;# 
   574  0018                     	;# 
   575  0019                     	;# 
   576  001A                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  008C                     	;# 
   582  008E                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0095                     	;# 
   587  0096                     	;# 
   588  0097                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009A                     	;# 
   592  009B                     	;# 
   593  009B                     	;# 
   594  009C                     	;# 
   595  009D                     	;# 
   596  009E                     	;# 
   597  010C                     	;# 
   598  010E                     	;# 
   599  0111                     	;# 
   600  0112                     	;# 
   601  0113                     	;# 
   602  0114                     	;# 
   603  0115                     	;# 
   604  0116                     	;# 
   605  0117                     	;# 
   606  0118                     	;# 
   607  0119                     	;# 
   608  011A                     	;# 
   609  011B                     	;# 
   610  011D                     	;# 
   611  011E                     	;# 
   612  018C                     	;# 
   613  018E                     	;# 
   614  0191                     	;# 
   615  0191                     	;# 
   616  0192                     	;# 
   617  0193                     	;# 
   618  0193                     	;# 
   619  0193                     	;# 
   620  0194                     	;# 
   621  0195                     	;# 
   622  0196                     	;# 
   623  0199                     	;# 
   624  019A                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019C                     	;# 
   628  019D                     	;# 
   629  019E                     	;# 
   630  019F                     	;# 
   631  020C                     	;# 
   632  020E                     	;# 
   633  0211                     	;# 
   634  0211                     	;# 
   635  0212                     	;# 
   636  0212                     	;# 
   637  0213                     	;# 
   638  0213                     	;# 
   639  0214                     	;# 
   640  0214                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0216                     	;# 
   645  0216                     	;# 
   646  0217                     	;# 
   647  0217                     	;# 
   648  0291                     	;# 
   649  0291                     	;# 
   650  0292                     	;# 
   651  0293                     	;# 
   652  0294                     	;# 
   653  0295                     	;# 
   654  0295                     	;# 
   655  0296                     	;# 
   656  0298                     	;# 
   657  0298                     	;# 
   658  0299                     	;# 
   659  029A                     	;# 
   660  029B                     	;# 
   661  029C                     	;# 
   662  029D                     	;# 
   663  029E                     	;# 
   664  0311                     	;# 
   665  0311                     	;# 
   666  0312                     	;# 
   667  0313                     	;# 
   668  0318                     	;# 
   669  0318                     	;# 
   670  0319                     	;# 
   671  031A                     	;# 
   672  038C                     	;# 
   673  038E                     	;# 
   674  0391                     	;# 
   675  0392                     	;# 
   676  0393                     	;# 
   677  039A                     	;# 
   678  039C                     	;# 
   679  039D                     	;# 
   680  039E                     	;# 
   681  039F                     	;# 
   682  0415                     	;# 
   683  0416                     	;# 
   684  0417                     	;# 
   685  041C                     	;# 
   686  041D                     	;# 
   687  041E                     	;# 
   688  0FE4                     	;# 
   689  0FE5                     	;# 
   690  0FE6                     	;# 
   691  0FE7                     	;# 
   692  0FE8                     	;# 
   693  0FE9                     	;# 
   694  0FEA                     	;# 
   695  0FEB                     	;# 
   696  0FED                     	;# 
   697  0FEE                     	;# 
   698  0FEF                     	;# 
   699  001C                     _T2CON	set	28
   700  001B                     _PR2	set	27
   701  0011                     _PIR1bits	set	17
   702  000E                     _PORTC	set	14
   703  000C                     _PORTA	set	12
   704  000B                     _INTCONbits	set	11
   705  000C                     _PORTAbits	set	12
   706  009E                     _ADCON1	set	158
   707  008E                     _TRISCbits	set	142
   708  008C                     _TRISAbits	set	140
   709  008E                     _TRISC	set	142
   710  008C                     _TRISA	set	140
   711  0099                     _OSCCONbits	set	153
   712  009C                     _ADRESH	set	156
   713  009D                     _ADCON0bits	set	157
   714  009D                     _ADCON0	set	157
   715  011E                     _APFCON1bits	set	286
   716  010E                     _LATC	set	270
   717  010C                     _LATA	set	268
   718  010E                     _LATCbits	set	270
   719  018E                     _ANSELCbits	set	398
   720  018C                     _ANSELAbits	set	396
   721  018E                     _ANSELC	set	398
   722  018C                     _ANSELA	set	396
   723  0211                     _SSPBUF	set	529
   724  0211                     _SSP1BUF	set	529
   725  0216                     _SSP1CON2bits	set	534
   726  0214                     _SSP1STAT	set	532
   727  0212                     _SSP1ADD	set	530
   728  0216                     _SSP1CON2	set	534
   729  0215                     _SSP1CON1	set	533
   730  029C                     _CCP2AS	set	668
   731  029E                     _CCPTMRS	set	670
   732  029A                     _CCP2CON	set	666
   733  0298                     _CCPR2L	set	664
   734                           
   735                           	psect	stringtext1
   736  1800                     __pstringtext1:	
   737  1800                     STR_8:	
   738  1800  344F               	retlw	79	;'O'
   739  1801  3476               	retlw	118	;'v'
   740  1802  3465               	retlw	101	;'e'
   741  1803  3472               	retlw	114	;'r'
   742  1804  3474               	retlw	116	;'t'
   743  1805  3465               	retlw	101	;'e'
   744  1806  346D               	retlw	109	;'m'
   745  1807  3470               	retlw	112	;'p'
   746  1808  3465               	retlw	101	;'e'
   747  1809  3472               	retlw	114	;'r'
   748  180A  3461               	retlw	97	;'a'
   749  180B  3474               	retlw	116	;'t'
   750  180C  3475               	retlw	117	;'u'
   751  180D  3472               	retlw	114	;'r'
   752  180E  3465               	retlw	101	;'e'
   753  180F  3400               	retlw	0
   754                           
   755                           	psect	stringtext2
   756  1810                     __pstringtext2:	
   757  1810                     STR_7:	
   758  1810  344F               	retlw	79	;'O'
   759  1811  3476               	retlw	118	;'v'
   760  1812  3465               	retlw	101	;'e'
   761  1813  3472               	retlw	114	;'r'
   762  1814  3476               	retlw	118	;'v'
   763  1815  346F               	retlw	111	;'o'
   764  1816  346C               	retlw	108	;'l'
   765  1817  3474               	retlw	116	;'t'
   766  1818  3461               	retlw	97	;'a'
   767  1819  3467               	retlw	103	;'g'
   768  181A  3465               	retlw	101	;'e'
   769  181B  3400               	retlw	0
   770                           
   771                           	psect	stringtext3
   772  181C                     __pstringtext3:	
   773  181C                     STR_9:	
   774  181C  344F               	retlw	79	;'O'
   775  181D  3476               	retlw	118	;'v'
   776  181E  3465               	retlw	101	;'e'
   777  181F  3472               	retlw	114	;'r'
   778  1820  3463               	retlw	99	;'c'
   779  1821  3475               	retlw	117	;'u'
   780  1822  3472               	retlw	114	;'r'
   781  1823  3472               	retlw	114	;'r'
   782  1824  3465               	retlw	101	;'e'
   783  1825  346E               	retlw	110	;'n'
   784  1826  3474               	retlw	116	;'t'
   785  1827  3400               	retlw	0
   786                           
   787                           	psect	stringtext4
   788  1828                     __pstringtext4:	
   789  1828                     STR_10:	
   790  1828  3450               	retlw	80	;'P'
   791  1829  3461               	retlw	97	;'a'
   792  182A  3475               	retlw	117	;'u'
   793  182B  346C               	retlw	108	;'l'
   794  182C  3420               	retlw	32	;' '
   795  182D  3449               	retlw	73	;'I'
   796  182E  346F               	retlw	111	;'o'
   797  182F  3472               	retlw	114	;'r'
   798  1830  3467               	retlw	103	;'g'
   799  1831  3461               	retlw	97	;'a'
   800  1832  3400               	retlw	0
   801                           
   802                           	psect	stringtext5
   803  1833                     __pstringtext5:	
   804  1833                     STR_1:	
   805  1833  3425               	retlw	37	;'%'
   806  1834  3432               	retlw	50	;'2'
   807  1835  342E               	retlw	46	;'.'
   808  1836  3431               	retlw	49	;'1'
   809  1837  3466               	retlw	102	;'f'
   810  1838  3400               	retlw	0
   811                           
   812                           	psect	stringtext6
   813  1839                     __pstringtext6:	
   814  1839                     STR_11:	
   815  1839  3449               	retlw	73	;'I'
   816  183A  344E               	retlw	78	;'N'
   817  183B  3446               	retlw	70	;'F'
   818  183C  3400               	retlw	0
   819                           
   820                           	psect	stringtext7
   821  183D                     __pstringtext7:	
   822  183D                     STR_15:	
   823  183D  344E               	retlw	78	;'N'
   824  183E  3441               	retlw	65	;'A'
   825  183F  344E               	retlw	78	;'N'
   826  1840  3400               	retlw	0
   827                           
   828                           	psect	stringtext8
   829  1841                     __pstringtext8:	
   830  1841                     STR_12:	
   831  1841  3469               	retlw	105	;'i'
   832  1842  346E               	retlw	110	;'n'
   833  1843  3466               	retlw	102	;'f'
   834  1844  3400               	retlw	0
   835                           
   836                           	psect	stringtext9
   837  1845                     __pstringtext9:	
   838  1845                     STR_16:	
   839  1845  346E               	retlw	110	;'n'
   840  1846  3461               	retlw	97	;'a'
   841  1847  346E               	retlw	110	;'n'
   842  1848  3400               	retlw	0
   843                           
   844                           	psect	stringtext10
   845  1849                     __pstringtext10:	
   846  1849                     STR_19:	
   847  1849  346C               	retlw	108	;'l'
   848  184A  3466               	retlw	102	;'f'
   849  184B  3400               	retlw	0
   850                           
   851                           	psect	stringtext11
   852  184C                     __pstringtext11:	
   853  184C                     STR_4:	
   854  184C  3420               	retlw	32	;' '
   855  184D  3441               	retlw	65	;'A'
   856  184E  3400               	retlw	0
   857                           
   858                           	psect	stringtext12
   859  184F                     __pstringtext12:	
   860  184F                     STR_6:	
   861  184F  3420               	retlw	32	;' '
   862  1850  3443               	retlw	67	;'C'
   863  1851  3400               	retlw	0
   864                           
   865                           	psect	stringtext13
   866  1852                     __pstringtext13:	
   867  1852                     STR_2:	
   868  1852  3420               	retlw	32	;' '
   869  1853  3456               	retlw	86	;'V'
   870  1854  3400               	retlw	0
   871                           
   872                           	psect	stringtext14
   873  0000                     __pstringtext14:	
   874  1833                     
   875                           ; #config settings
   876  0000                     
   877                           	psect	cinit
   878  07E5                     start_initialization:	
   879  07E5                     __initialization:	
   880                           
   881                           ; Clear objects allocated to BANK2
   882  07E5  3051               	movlw	low __pbssBANK2
   883  07E6  0084               	movwf	4
   884  07E7  3001               	movlw	high __pbssBANK2
   885  07E8  0085               	movwf	5
   886  07E9  301F               	movlw	31
   887  07EA  3199  21FE  3187   	fcall	clear_ram0
   888                           
   889                           ; Clear objects allocated to BANK3
   890  07ED  30A0               	movlw	low __pbssBANK3
   891  07EE  0084               	movwf	4
   892  07EF  3001               	movlw	high __pbssBANK3
   893  07F0  0085               	movwf	5
   894  07F1  3033               	movlw	51
   895  07F2  3199  21FE  3187   	fcall	clear_ram0
   896                           
   897                           ; Clear objects allocated to BANK4
   898  07F5  3020               	movlw	low __pbssBANK4
   899  07F6  0084               	movwf	4
   900  07F7  3002               	movlw	high __pbssBANK4
   901  07F8  0085               	movwf	5
   902  07F9  3050               	movlw	80
   903  07FA  3199  21FE  3187   	fcall	clear_ram0
   904  07FD                     end_of_initialization:	
   905                           ;End of C runtime variable initialization code
   906                           
   907  07FD                     __end_of__initialization:	
   908  07FD  0020               	movlb	0
   909  07FE  318A  2A15         	ljmp	_main	;jump to C main() function
   910                           
   911                           	psect	bssBANK2
   912  0151                     __pbssBANK2:	
   913  0151                     _voltage:	
   914  0151                     	ds	4
   915  0155                     _current:	
   916  0155                     	ds	4
   917  0159                     _temperature:	
   918  0159                     	ds	4
   919  015D                     _nout:	
   920  015D                     	ds	2
   921  015F                     _width:	
   922  015F                     	ds	2
   923  0161                     _prec:	
   924  0161                     	ds	2
   925  0163                     _flags:	
   926  0163                     	ds	2
   927  0165                     _esantion_curent_t:	
   928  0165                     	ds	2
   929  0167                     _esantion_curent_i:	
   930  0167                     	ds	2
   931  0169                     _esantion_curent_u:	
   932  0169                     	ds	2
   933  016B                     _low_i:	
   934  016B                     	ds	2
   935  016D                     _high_i:	
   936  016D                     	ds	2
   937  016F                     _sst_button:	
   938  016F                     	ds	1
   939                           
   940                           	psect	bssBANK3
   941  01A0                     __pbssBANK3:	
   942  01A0                     _esantioane_t:	
   943  01A0                     	ds	8
   944  01A8                     _esantioane_i:	
   945  01A8                     	ds	8
   946  01B0                     _esantioane_u:	
   947  01B0                     	ds	8
   948  01B8                     floorf@F524:	
   949  01B8                     	ds	4
   950  01BC                     ___fpclassifyf@F463:	
   951  01BC                     	ds	4
   952  01C0                     _buffer:	
   953  01C0                     	ds	4
   954  01C4                     _data:	
   955  01C4                     	ds	2
   956  01C6                     _low_t:	
   957  01C6                     	ds	2
   958  01C8                     _high_t:	
   959  01C8                     	ds	2
   960  01CA                     _low_u:	
   961  01CA                     	ds	2
   962  01CC                     _high_u:	
   963  01CC                     	ds	2
   964  01CE                     _temp:	
   965  01CE                     	ds	5
   966                           
   967                           	psect	bssBANK4
   968  0220                     __pbssBANK4:	
   969  0220                     _dbuf:	
   970  0220                     	ds	80
   971                           
   972                           	psect	clrtext
   973  19FE                     clear_ram0:	
   974                           ;	Called with FSR0 containing the base address, and
   975                           ;	WREG with the size to clear
   976                           
   977  19FE  0064               	clrwdt	;clear the watchdog before getting into this loop
   978  19FF                     clrloop0:	
   979  19FF  0180               	clrf	0	;clear RAM location pointed to by FSR
   980  1A00  3101               	addfsr 0,1
   981  1A01  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   982  1A02  29FF               	goto	clrloop0	;have we reached the end yet?
   983  1A03  3400               	retlw	0	;all done for this memory range, return
   984                           
   985                           	psect	cstackBANK2
   986  0120                     __pcstackBANK2:	
   987  0120                     _vfpfcnvrt$844:	
   988                           
   989                           ; 2 bytes @ 0x0
   990  0120                     	ds	2
   991  0122                     _vfpfcnvrt$845:	
   992                           
   993                           ; 2 bytes @ 0x2
   994  0122                     	ds	2
   995  0124                     _vfpfcnvrt$849:	
   996                           
   997                           ; 2 bytes @ 0x4
   998  0124                     	ds	2
   999  0126                     vfpfcnvrt@f:	
  1000                           
  1001                           ; 4 bytes @ 0x6
  1002  0126                     	ds	4
  1003  012A                     vfpfcnvrt@ct:	
  1004                           
  1005                           ; 3 bytes @ 0xA
  1006  012A                     	ds	3
  1007  012D                     vfpfcnvrt@c:	
  1008                           
  1009                           ; 1 bytes @ 0xD
  1010  012D                     	ds	1
  1011  012E                     vfpfcnvrt@fp:	
  1012                           
  1013                           ; 1 bytes @ 0xE
  1014  012E                     	ds	1
  1015  012F                     ?_vfprintf:	
  1016  012F                     vfprintf@fmt:	
  1017                           ; 2 bytes @ 0xF
  1018                           
  1019                           
  1020                           ; 2 bytes @ 0xF
  1021  012F                     	ds	2
  1022  0131                     vfprintf@ap:	
  1023                           
  1024                           ; 1 bytes @ 0x11
  1025  0131                     	ds	1
  1026  0132                     ??_vfprintf:	
  1027                           
  1028                           ; 1 bytes @ 0x12
  1029  0132                     	ds	2
  1030  0134                     vfprintf@fp:	
  1031                           
  1032                           ; 1 bytes @ 0x14
  1033  0134                     	ds	1
  1034  0135                     vfprintf@cfmt:	
  1035                           
  1036                           ; 2 bytes @ 0x15
  1037  0135                     	ds	2
  1038  0137                     ?_sprintf:	
  1039  0137                     sprintf@fmt:	
  1040                           ; 2 bytes @ 0x17
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x17
  1044  0137                     	ds	6
  1045  013D                     ??_sprintf:	
  1046                           
  1047                           ; 1 bytes @ 0x1D
  1048  013D                     	ds	3
  1049  0140                     sprintf@s:	
  1050                           
  1051                           ; 1 bytes @ 0x20
  1052  0140                     	ds	1
  1053  0141                     sprintf@ap:	
  1054                           
  1055                           ; 1 bytes @ 0x21
  1056  0141                     	ds	1
  1057  0142                     sprintf@f:	
  1058                           
  1059                           ; 5 bytes @ 0x22
  1060  0142                     	ds	5
  1061  0147                     ??_main:	
  1062                           
  1063                           ; 1 bytes @ 0x27
  1064  0147                     	ds	4
  1065  014B                     _main$1494:	
  1066                           
  1067                           ; 4 bytes @ 0x2B
  1068  014B                     	ds	4
  1069  014F                     main@i:	
  1070                           
  1071                           ; 2 bytes @ 0x2F
  1072  014F                     	ds	2
  1073                           
  1074                           	psect	cstackBANK1
  1075  00A0                     __pcstackBANK1:	
  1076  00A0                     ?___flsub:	
  1077  00A0                     ___flsub@a:	
  1078                           ; 4 bytes @ 0x0
  1079                           
  1080                           
  1081                           ; 4 bytes @ 0x0
  1082  00A0                     	ds	4
  1083  00A4                     ___flsub@b:	
  1084                           
  1085                           ; 4 bytes @ 0x4
  1086  00A4                     	ds	4
  1087  00A8                     ?_efgtoa:	
  1088  00A8                     efgtoa@f:	
  1089                           ; 2 bytes @ 0x8
  1090                           
  1091                           
  1092                           ; 4 bytes @ 0x8
  1093  00A8                     	ds	4
  1094  00AC                     efgtoa@c:	
  1095                           
  1096                           ; 1 bytes @ 0xC
  1097  00AC                     	ds	1
  1098  00AD                     ??_efgtoa:	
  1099                           
  1100                           ; 1 bytes @ 0xD
  1101  00AD                     	ds	4
  1102  00B1                     efgtoa@ou:	
  1103                           
  1104                           ; 4 bytes @ 0x11
  1105  00B1                     	ds	4
  1106  00B5                     _efgtoa$818:	
  1107                           
  1108                           ; 2 bytes @ 0x15
  1109  00B5                     	ds	2
  1110  00B7                     _efgtoa$819:	
  1111                           
  1112                           ; 2 bytes @ 0x17
  1113  00B7                     	ds	2
  1114  00B9                     _efgtoa$824:	
  1115                           
  1116                           ; 2 bytes @ 0x19
  1117  00B9                     	ds	2
  1118  00BB                     _efgtoa$828:	
  1119                           
  1120                           ; 2 bytes @ 0x1B
  1121  00BB                     	ds	2
  1122  00BD                     _efgtoa$829:	
  1123                           
  1124                           ; 2 bytes @ 0x1D
  1125  00BD                     	ds	2
  1126  00BF                     _efgtoa$830:	
  1127                           
  1128                           ; 2 bytes @ 0x1F
  1129  00BF                     	ds	2
  1130  00C1                     efgtoa@t:	
  1131                           
  1132                           ; 2 bytes @ 0x21
  1133  00C1                     	ds	2
  1134  00C3                     efgtoa@pp:	
  1135                           
  1136                           ; 2 bytes @ 0x23
  1137  00C3                     	ds	2
  1138  00C5                     efgtoa@m:	
  1139                           
  1140                           ; 2 bytes @ 0x25
  1141  00C5                     	ds	2
  1142  00C7                     efgtoa@ne:	
  1143                           
  1144                           ; 2 bytes @ 0x27
  1145  00C7                     	ds	2
  1146  00C9                     efgtoa@d:	
  1147                           
  1148                           ; 2 bytes @ 0x29
  1149  00C9                     	ds	2
  1150  00CB                     efgtoa@sign:	
  1151                           
  1152                           ; 2 bytes @ 0x2B
  1153  00CB                     	ds	2
  1154  00CD                     efgtoa@fp:	
  1155                           
  1156                           ; 1 bytes @ 0x2D
  1157  00CD                     	ds	1
  1158  00CE                     efgtoa@p:	
  1159                           
  1160                           ; 2 bytes @ 0x2E
  1161  00CE                     	ds	2
  1162  00D0                     efgtoa@nmode:	
  1163                           
  1164                           ; 1 bytes @ 0x30
  1165  00D0                     	ds	1
  1166  00D1                     efgtoa@w:	
  1167                           
  1168                           ; 2 bytes @ 0x31
  1169  00D1                     	ds	2
  1170  00D3                     efgtoa@mode:	
  1171                           
  1172                           ; 1 bytes @ 0x33
  1173  00D3                     	ds	1
  1174  00D4                     efgtoa@h:	
  1175                           
  1176                           ; 4 bytes @ 0x34
  1177  00D4                     	ds	4
  1178  00D8                     efgtoa@l:	
  1179                           
  1180                           ; 4 bytes @ 0x38
  1181  00D8                     	ds	4
  1182  00DC                     efgtoa@i:	
  1183                           
  1184                           ; 2 bytes @ 0x3C
  1185  00DC                     	ds	2
  1186  00DE                     efgtoa@g:	
  1187                           
  1188                           ; 4 bytes @ 0x3E
  1189  00DE                     	ds	4
  1190  00E2                     efgtoa@e:	
  1191                           
  1192                           ; 2 bytes @ 0x42
  1193  00E2                     	ds	2
  1194  00E4                     efgtoa@n:	
  1195                           
  1196                           ; 2 bytes @ 0x44
  1197  00E4                     	ds	2
  1198  00E6                     efgtoa@u:	
  1199                           
  1200                           ; 4 bytes @ 0x46
  1201  00E6                     	ds	4
  1202  00EA                     ??_vfpfcnvrt:	
  1203                           
  1204                           ; 1 bytes @ 0x4A
  1205  00EA                     	ds	6
  1206                           
  1207                           	psect	cstackCOMMON
  1208  0070                     __pcstackCOMMON:	
  1209  0070                     ?___fleq:	
  1210  0070                     ?_config:	
  1211                           ; 1 bit 
  1212                           
  1213  0070                     ?_pwm_config:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ??_pwm_config:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ?_adc_config:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     ??_adc_config:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     ?_Lcd_Clear:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     ?_read_Temp:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ??_read_Temp:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     ?_read_I:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0070                     ??_read_I:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0070                     ?_read_U:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ??_read_U:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?_Lcd_Init:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?_Cursor_Off:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ?_I2C_Master_Start:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ??_I2C_Master_Start:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_I2C_Write_Display:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?_I2C_Master_Stop:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ??_I2C_Master_Stop:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_strcpy:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ?_putch:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ??_putch:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ?_main:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     ?_Lcd_Port:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ?_Lcd_Cmd:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ?_Lcd_Write_Char:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ?_I2C_Master_Wait:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0070                     ??_I2C_Master_Wait:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294  0070                     ?_fputc:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ?_strlen:	
  1298                           ; 2 bytes @ 0x0
  1299                           
  1300  0070                     ?___fpclassifyf:	
  1301                           ; 2 bytes @ 0x0
  1302                           
  1303  0070                     ?_isupper:	
  1304                           ; 2 bytes @ 0x0
  1305                           
  1306  0070                     ?_isdigit:	
  1307                           ; 2 bytes @ 0x0
  1308                           
  1309  0070                     ?_strncmp:	
  1310                           ; 2 bytes @ 0x0
  1311                           
  1312  0070                     ?__Umul8_16:	
  1313                           ; 2 bytes @ 0x0
  1314                           
  1315  0070                     ?_isspace:	
  1316                           ; 2 bytes @ 0x0
  1317                           
  1318  0070                     ?___wmul:	
  1319                           ; 2 bytes @ 0x0
  1320                           
  1321  0070                     ?___awdiv:	
  1322                           ; 2 bytes @ 0x0
  1323                           
  1324  0070                     ?___awmod:	
  1325                           ; 2 bytes @ 0x0
  1326                           
  1327  0070                     ?___lldiv:	
  1328                           ; 2 bytes @ 0x0
  1329                           
  1330  0070                     ?___flneg:	
  1331                           ; 4 bytes @ 0x0
  1332                           
  1333  0070                     ?___fltol:	
  1334                           ; 4 bytes @ 0x0
  1335                           
  1336  0070                     putch@c:	
  1337                           ; 4 bytes @ 0x0
  1338                           
  1339  0070                     __Umul8_16@multiplicand:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     I2C_Write_Display@d:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ___wmul@multiplier:	
  1346                           ; 2 bytes @ 0x0
  1347                           
  1348  0070                     ___awdiv@divisor:	
  1349                           ; 2 bytes @ 0x0
  1350                           
  1351  0070                     ___awmod@divisor:	
  1352                           ; 2 bytes @ 0x0
  1353                           
  1354  0070                     isdigit@c:	
  1355                           ; 2 bytes @ 0x0
  1356                           
  1357  0070                     isspace@c:	
  1358                           ; 2 bytes @ 0x0
  1359                           
  1360  0070                     isupper@c:	
  1361                           ; 2 bytes @ 0x0
  1362                           
  1363  0070                     fputc@c:	
  1364                           ; 2 bytes @ 0x0
  1365                           
  1366  0070                     strcpy@src:	
  1367                           ; 2 bytes @ 0x0
  1368                           
  1369  0070                     strncmp@_r:	
  1370                           ; 2 bytes @ 0x0
  1371                           
  1372  0070                     ___lldiv@divisor:	
  1373                           ; 2 bytes @ 0x0
  1374                           
  1375  0070                     ___fleq@ff1:	
  1376                           ; 4 bytes @ 0x0
  1377                           
  1378  0070                     ___flneg@f1:	
  1379                           ; 4 bytes @ 0x0
  1380                           
  1381  0070                     ___fltol@f1:	
  1382                           ; 4 bytes @ 0x0
  1383                           
  1384  0070                     ___fpclassifyf@x:	
  1385                           ; 4 bytes @ 0x0
  1386                           
  1387                           
  1388                           ; 4 bytes @ 0x0
  1389  0070                     	ds	2
  1390  0072                     ??_I2C_Write_Display:	
  1391  0072                     ??_strlen:	
  1392                           ; 1 bytes @ 0x2
  1393                           
  1394  0072                     ??_isupper:	
  1395                           ; 1 bytes @ 0x2
  1396                           
  1397  0072                     ??_strcpy:	
  1398                           ; 1 bytes @ 0x2
  1399                           
  1400  0072                     ??_isdigit:	
  1401                           ; 1 bytes @ 0x2
  1402                           
  1403  0072                     ??__Umul8_16:	
  1404                           ; 1 bytes @ 0x2
  1405                           
  1406  0072                     ??_isspace:	
  1407                           ; 1 bytes @ 0x2
  1408                           
  1409  0072                     ??_Lcd_Port:	
  1410                           ; 1 bytes @ 0x2
  1411                           
  1412  0072                     fputc@fp:	
  1413                           ; 1 bytes @ 0x2
  1414                           
  1415  0072                     ___wmul@multiplicand:	
  1416                           ; 1 bytes @ 0x2
  1417                           
  1418  0072                     ___awdiv@dividend:	
  1419                           ; 2 bytes @ 0x2
  1420                           
  1421  0072                     ___awmod@dividend:	
  1422                           ; 2 bytes @ 0x2
  1423                           
  1424  0072                     strncmp@n:	
  1425                           ; 2 bytes @ 0x2
  1426                           
  1427                           
  1428                           ; 2 bytes @ 0x2
  1429  0072                     	ds	1
  1430  0073                     ??_fputc:	
  1431  0073                     strlen@a:	
  1432                           ; 1 bytes @ 0x3
  1433                           
  1434                           
  1435                           ; 1 bytes @ 0x3
  1436  0073                     	ds	1
  1437  0074                     ??___fpclassifyf:	
  1438  0074                     ??_strncmp:	
  1439                           ; 1 bytes @ 0x4
  1440                           
  1441  0074                     ??___wmul:	
  1442                           ; 1 bytes @ 0x4
  1443                           
  1444  0074                     ??___awdiv:	
  1445                           ; 1 bytes @ 0x4
  1446                           
  1447  0074                     ??___awmod:	
  1448                           ; 1 bytes @ 0x4
  1449                           
  1450  0074                     ??___flneg:	
  1451                           ; 1 bytes @ 0x4
  1452                           
  1453  0074                     ??___fltol:	
  1454                           ; 1 bytes @ 0x4
  1455                           
  1456  0074                     Lcd_Port@data:	
  1457                           ; 1 bytes @ 0x4
  1458                           
  1459  0074                     _isspace$1189:	
  1460                           ; 1 bytes @ 0x4
  1461                           
  1462  0074                     strlen@s:	
  1463                           ; 1 bytes @ 0x4
  1464                           
  1465  0074                     ___wmul@product:	
  1466                           ; 1 bytes @ 0x4
  1467                           
  1468  0074                     strcpy@s:	
  1469                           ; 2 bytes @ 0x4
  1470                           
  1471  0074                     __Umul8_16@product:	
  1472                           ; 2 bytes @ 0x4
  1473                           
  1474  0074                     ___lldiv@dividend:	
  1475                           ; 2 bytes @ 0x4
  1476                           
  1477  0074                     ___fleq@ff2:	
  1478                           ; 4 bytes @ 0x4
  1479                           
  1480                           
  1481                           ; 4 bytes @ 0x4
  1482  0074                     	ds	1
  1483  0075                     ??_Lcd_Cmd:	
  1484  0075                     ??_Lcd_Write_Char:	
  1485                           ; 1 bytes @ 0x5
  1486                           
  1487  0075                     ___awdiv@counter:	
  1488                           ; 1 bytes @ 0x5
  1489                           
  1490  0075                     ___awmod@counter:	
  1491                           ; 1 bytes @ 0x5
  1492                           
  1493  0075                     strncmp@_l:	
  1494                           ; 1 bytes @ 0x5
  1495                           
  1496                           
  1497                           ; 1 bytes @ 0x5
  1498  0075                     	ds	1
  1499  0076                     ?_tolower:	
  1500  0076                     ?_atoi:	
  1501                           ; 2 bytes @ 0x6
  1502                           
  1503  0076                     ?___xxtofl:	
  1504                           ; 2 bytes @ 0x6
  1505                           
  1506  0076                     ___awdiv@sign:	
  1507                           ; 4 bytes @ 0x6
  1508                           
  1509  0076                     ___awmod@sign:	
  1510                           ; 1 bytes @ 0x6
  1511                           
  1512  0076                     strcpy@d:	
  1513                           ; 1 bytes @ 0x6
  1514                           
  1515  0076                     atoi@s:	
  1516                           ; 1 bytes @ 0x6
  1517                           
  1518  0076                     strncmp@r:	
  1519                           ; 2 bytes @ 0x6
  1520                           
  1521  0076                     tolower@c:	
  1522                           ; 2 bytes @ 0x6
  1523                           
  1524  0076                     __Umul8_16@word_mpld:	
  1525                           ; 2 bytes @ 0x6
  1526                           
  1527  0076                     ___xxtofl@val:	
  1528                           ; 2 bytes @ 0x6
  1529                           
  1530                           
  1531                           ; 4 bytes @ 0x6
  1532  0076                     	ds	1
  1533  0077                     Lcd_Write_Char@a:	
  1534  0077                     strcpy@dest:	
  1535                           ; 1 bytes @ 0x7
  1536                           
  1537  0077                     ___awdiv@quotient:	
  1538                           ; 1 bytes @ 0x7
  1539                           
  1540                           
  1541                           ; 2 bytes @ 0x7
  1542  0077                     	ds	1
  1543  0078                     ??_tolower:	
  1544  0078                     ??_atoi:	
  1545                           ; 1 bytes @ 0x8
  1546                           
  1547  0078                     ??___lldiv:	
  1548                           ; 1 bytes @ 0x8
  1549                           
  1550  0078                     ??___fleq:	
  1551                           ; 1 bytes @ 0x8
  1552                           
  1553  0078                     ?_fputs:	
  1554                           ; 1 bytes @ 0x8
  1555                           
  1556  0078                     Lcd_Write_Char@y:	
  1557                           ; 2 bytes @ 0x8
  1558                           
  1559  0078                     fputs@fp:	
  1560                           ; 1 bytes @ 0x8
  1561                           
  1562  0078                     strncmp@l:	
  1563                           ; 1 bytes @ 0x8
  1564                           
  1565  0078                     __Umul8_16@multiplier:	
  1566                           ; 1 bytes @ 0x8
  1567                           
  1568  0078                     Lcd_Cmd@buff:	
  1569                           ; 1 bytes @ 0x8
  1570                           
  1571                           
  1572                           ; 2 bytes @ 0x8
  1573  0078                     	ds	1
  1574  0079                     ??_fputs:	
  1575  0079                     Lcd_Write_Char@temp:	
  1576                           ; 1 bytes @ 0x9
  1577                           
  1578  0079                     ___fltol@sign1:	
  1579                           ; 1 bytes @ 0x9
  1580                           
  1581  0079                     ___lldiv@quotient:	
  1582                           ; 1 bytes @ 0x9
  1583                           
  1584                           
  1585                           ; 4 bytes @ 0x9
  1586  0079                     	ds	1
  1587  007A                     ?_Lcd_Write_String:	
  1588  007A                     ??___xxtofl:	
  1589                           ; 1 bytes @ 0xA
  1590                           
  1591  007A                     Lcd_Cmd@a:	
  1592                           ; 1 bytes @ 0xA
  1593                           
  1594  007A                     ___fltol@exp1:	
  1595                           ; 1 bytes @ 0xA
  1596                           
  1597  007A                     Lcd_Write_String@a:	
  1598                           ; 1 bytes @ 0xA
  1599                           
  1600                           
  1601                           ; 2 bytes @ 0xA
  1602  007A                     	ds	1
  1603  007B                     ??_Lcd_Clear:	
  1604  007B                     ?_Lcd_Set_Cursor:	
  1605                           ; 1 bytes @ 0xB
  1606                           
  1607  007B                     ??_Lcd_Init:	
  1608                           ; 1 bytes @ 0xB
  1609                           
  1610  007B                     ??_Cursor_Off:	
  1611                           ; 1 bytes @ 0xB
  1612                           
  1613  007B                     Lcd_Set_Cursor@b:	
  1614                           ; 1 bytes @ 0xB
  1615                           
  1616                           
  1617                           ; 1 bytes @ 0xB
  1618  007B                     	ds	1
  1619  007C                     ??_Lcd_Set_Cursor:	
  1620  007C                     ??_Lcd_Write_String:	
  1621                           ; 1 bytes @ 0xC
  1622                           
  1623  007C                     ??_pad:	
  1624                           ; 1 bytes @ 0xC
  1625                           
  1626  007C                     _tolower$1274:	
  1627                           ; 1 bytes @ 0xC
  1628                           
  1629                           
  1630                           ; 2 bytes @ 0xC
  1631  007C                     	ds	1
  1632  007D                     ___lldiv@counter:	
  1633                           
  1634                           ; 1 bytes @ 0xD
  1635  007D                     	ds	1
  1636  007E                     ??___flsub:	
  1637                           
  1638                           	psect	cstackBANK0
  1639  0020                     __pcstackBANK0:	
  1640                           ; 1 bytes @ 0xE
  1641                           
  1642  0020                     ?_I2C_Master_Init:	
  1643  0020                     Lcd_Set_Cursor@a:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646  0020                     ___xxtofl@sign:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649  0020                     fputs@c:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652  0020                     Lcd_Write_String@i:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655  0020                     ___fpclassifyf@e:	
  1656                           ; 2 bytes @ 0x0
  1657                           
  1658  0020                     atoi@neg:	
  1659                           ; 2 bytes @ 0x0
  1660                           
  1661  0020                     I2C_Master_Init@c:	
  1662                           ; 2 bytes @ 0x0
  1663                           
  1664                           
  1665                           ; 4 bytes @ 0x0
  1666  0020                     	ds	1
  1667  0021                     Lcd_Set_Cursor@z:	
  1668  0021                     ___xxtofl@exp:	
  1669                           ; 1 bytes @ 0x1
  1670                           
  1671  0021                     fputs@i:	
  1672                           ; 1 bytes @ 0x1
  1673                           
  1674                           
  1675                           ; 2 bytes @ 0x1
  1676  0021                     	ds	1
  1677  0022                     Lcd_Set_Cursor@y:	
  1678  0022                     _atoi$1158:	
  1679                           ; 1 bytes @ 0x2
  1680                           
  1681  0022                     ___xxtofl@arg:	
  1682                           ; 2 bytes @ 0x2
  1683                           
  1684  0022                     ___fpclassifyf@u:	
  1685                           ; 4 bytes @ 0x2
  1686                           
  1687                           
  1688                           ; 4 bytes @ 0x2
  1689  0022                     	ds	1
  1690  0023                     Lcd_Set_Cursor@temp:	
  1691  0023                     fputs@s:	
  1692                           ; 1 bytes @ 0x3
  1693                           
  1694                           
  1695                           ; 1 bytes @ 0x3
  1696  0023                     	ds	1
  1697  0024                     ??_I2C_Master_Init:	
  1698  0024                     ?_pad:	
  1699                           ; 1 bytes @ 0x4
  1700                           
  1701  0024                     pad@buf:	
  1702                           ; 2 bytes @ 0x4
  1703                           
  1704  0024                     _atoi$1160:	
  1705                           ; 1 bytes @ 0x4
  1706                           
  1707                           
  1708                           ; 2 bytes @ 0x4
  1709  0024                     	ds	1
  1710  0025                     pad@p:	
  1711                           
  1712                           ; 2 bytes @ 0x5
  1713  0025                     	ds	1
  1714  0026                     ?___flmul:	
  1715  0026                     _atoi$1159:	
  1716                           ; 4 bytes @ 0x6
  1717                           
  1718  0026                     ___flmul@b:	
  1719                           ; 1 bytes @ 0x6
  1720                           
  1721                           
  1722                           ; 4 bytes @ 0x6
  1723  0026                     	ds	1
  1724  0027                     pad@i:	
  1725  0027                     atoi@n:	
  1726                           ; 2 bytes @ 0x7
  1727                           
  1728                           
  1729                           ; 2 bytes @ 0x7
  1730  0027                     	ds	1
  1731  0028                     ??_config:	
  1732                           
  1733                           ; 1 bytes @ 0x8
  1734  0028                     	ds	1
  1735  0029                     pad@w:	
  1736                           
  1737                           ; 2 bytes @ 0x9
  1738  0029                     	ds	1
  1739  002A                     ___flmul@a:	
  1740                           
  1741                           ; 4 bytes @ 0xA
  1742  002A                     	ds	1
  1743  002B                     pad@fp:	
  1744                           
  1745                           ; 1 bytes @ 0xB
  1746  002B                     	ds	3
  1747  002E                     ??___flmul:	
  1748                           
  1749                           ; 1 bytes @ 0xE
  1750  002E                     	ds	5
  1751  0033                     ___flmul@sign:	
  1752                           
  1753                           ; 1 bytes @ 0x13
  1754  0033                     	ds	1
  1755  0034                     ___flmul@grs:	
  1756                           
  1757                           ; 4 bytes @ 0x14
  1758  0034                     	ds	4
  1759  0038                     ___flmul@aexp:	
  1760                           
  1761                           ; 1 bytes @ 0x18
  1762  0038                     	ds	1
  1763  0039                     ___flmul@bexp:	
  1764                           
  1765                           ; 1 bytes @ 0x19
  1766  0039                     	ds	1
  1767  003A                     ___flmul@prod:	
  1768                           
  1769                           ; 4 bytes @ 0x1A
  1770  003A                     	ds	4
  1771  003E                     ___flmul@temp:	
  1772                           
  1773                           ; 2 bytes @ 0x1E
  1774  003E                     	ds	2
  1775  0040                     ?___flge:	
  1776  0040                     ?___fldiv:	
  1777                           ; 1 bit 
  1778                           
  1779  0040                     ___flge@ff1:	
  1780                           ; 4 bytes @ 0x20
  1781                           
  1782  0040                     ___fldiv@a:	
  1783                           ; 4 bytes @ 0x20
  1784                           
  1785                           
  1786                           ; 4 bytes @ 0x20
  1787  0040                     	ds	4
  1788  0044                     ___flge@ff2:	
  1789  0044                     ___fldiv@b:	
  1790                           ; 4 bytes @ 0x24
  1791                           
  1792                           
  1793                           ; 4 bytes @ 0x24
  1794  0044                     	ds	4
  1795  0048                     ??___flge:	
  1796  0048                     ??___fldiv:	
  1797                           ; 1 bytes @ 0x28
  1798                           
  1799                           
  1800                           ; 1 bytes @ 0x28
  1801  0048                     	ds	5
  1802  004D                     ___fldiv@rem:	
  1803                           
  1804                           ; 4 bytes @ 0x2D
  1805  004D                     	ds	4
  1806  0051                     ___fldiv@sign:	
  1807                           
  1808                           ; 1 bytes @ 0x31
  1809  0051                     	ds	1
  1810  0052                     ___fldiv@new_exp:	
  1811                           
  1812                           ; 2 bytes @ 0x32
  1813  0052                     	ds	2
  1814  0054                     ___fldiv@grs:	
  1815                           
  1816                           ; 4 bytes @ 0x34
  1817  0054                     	ds	4
  1818  0058                     ___fldiv@bexp:	
  1819                           
  1820                           ; 1 bytes @ 0x38
  1821  0058                     	ds	1
  1822  0059                     ___fldiv@aexp:	
  1823                           
  1824                           ; 1 bytes @ 0x39
  1825  0059                     	ds	1
  1826  005A                     ?_floorf:	
  1827  005A                     ?___fladd:	
  1828                           ; 4 bytes @ 0x3A
  1829                           
  1830  005A                     ___fladd@b:	
  1831                           ; 4 bytes @ 0x3A
  1832                           
  1833  005A                     floorf@x:	
  1834                           ; 4 bytes @ 0x3A
  1835                           
  1836                           
  1837                           ; 4 bytes @ 0x3A
  1838  005A                     	ds	4
  1839  005E                     ??_floorf:	
  1840  005E                     ___fladd@a:	
  1841                           ; 1 bytes @ 0x3E
  1842                           
  1843                           
  1844                           ; 4 bytes @ 0x3E
  1845  005E                     	ds	4
  1846  0062                     ??___fladd:	
  1847                           
  1848                           ; 1 bytes @ 0x42
  1849  0062                     	ds	2
  1850  0064                     floorf@m:	
  1851                           
  1852                           ; 4 bytes @ 0x44
  1853  0064                     	ds	4
  1854  0068                     floorf@e:	
  1855                           
  1856                           ; 2 bytes @ 0x48
  1857  0068                     	ds	2
  1858  006A                     ___fladd@signs:	
  1859  006A                     floorf@u:	
  1860                           ; 1 bytes @ 0x4A
  1861                           
  1862                           
  1863                           ; 4 bytes @ 0x4A
  1864  006A                     	ds	1
  1865  006B                     ___fladd@aexp:	
  1866                           
  1867                           ; 1 bytes @ 0x4B
  1868  006B                     	ds	1
  1869  006C                     ___fladd@bexp:	
  1870                           
  1871                           ; 1 bytes @ 0x4C
  1872  006C                     	ds	1
  1873  006D                     ___fladd@grs:	
  1874                           
  1875                           ; 1 bytes @ 0x4D
  1876  006D                     	ds	1
  1877  006E                     ?_vfpfcnvrt:	
  1878  006E                     vfpfcnvrt@fmt:	
  1879                           ; 2 bytes @ 0x4E
  1880                           
  1881                           
  1882                           ; 1 bytes @ 0x4E
  1883  006E                     	ds	1
  1884  006F                     vfpfcnvrt@ap:	
  1885                           
  1886                           ; 1 bytes @ 0x4F
  1887  006F                     	ds	1
  1888                           
  1889                           	psect	maintext
  1890  0A15                     __pmaintext:	
  1891 ;;
  1892 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1893 ;;
  1894 ;; *************** function _main *****************
  1895 ;; Defined at:
  1896 ;;		line 40 in file "main.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  i               2   47[BANK2 ] int 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : B1F/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1911 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;Total ram usage:       10 bytes
  1915 ;; Hardware stack levels required when called:    8
  1916 ;; This function calls:
  1917 ;;		_Lcd_Clear
  1918 ;;		_Lcd_Set_Cursor
  1919 ;;		_Lcd_Write_String
  1920 ;;		___fladd
  1921 ;;		___fldiv
  1922 ;;		___flge
  1923 ;;		___flmul
  1924 ;;		___xxtofl
  1925 ;;		_adc_config
  1926 ;;		_config
  1927 ;;		_pwm_config
  1928 ;;		_read_I
  1929 ;;		_read_Temp
  1930 ;;		_read_U
  1931 ;;		_sprintf
  1932 ;; This function is called by:
  1933 ;;		Startup code after reset
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _main
  1939  0A15                     _main:	
  1940  0A15                     l4599:	
  1941                           ;incstack = 0
  1942                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1943                           
  1944                           
  1945                           ;main.c: 41:     config();
  1946  0A15  3190  203B  318A   	fcall	_config
  1947  0A18                     l4601:	
  1948                           
  1949                           ;main.c: 42:     pwm_config();
  1950  0A18  319A  2234  318A   	fcall	_pwm_config
  1951  0A1B                     l4603:	
  1952                           
  1953                           ;main.c: 43:     adc_config();
  1954  0A1B  3180  2007  318A   	fcall	_adc_config
  1955  0A1E                     l4605:	
  1956                           
  1957                           ;main.c: 45:     CCPR2L = 0;
  1958  0A1E  0025               	movlb	5	; select bank5
  1959  0A1F  0198               	clrf	24	;volatile
  1960  0A20                     l4607:	
  1961                           
  1962                           ;main.c: 46:     LATCbits.LATC4 = 0;
  1963  0A20  0022               	movlb	2	; select bank2
  1964  0A21  120E               	bcf	14,4	;volatile
  1965  0A22                     l4609:	
  1966                           
  1967                           ;main.c: 47:     LATCbits.LATC5 = 1;
  1968  0A22  168E               	bsf	14,5	;volatile
  1969  0A23                     l4611:	
  1970                           
  1971                           ;main.c: 49:     Lcd_Clear();
  1972  0A23  319A  2214  318A   	fcall	_Lcd_Clear
  1973  0A26                     l4613:	
  1974                           
  1975                           ;main.c: 52:     for(int i=0;i<30;i++){
  1976  0A26  0022               	movlb	2	; select bank2
  1977  0A27  01CF               	clrf	main@i^(0+256)
  1978  0A28  01D0               	clrf	(main@i+1)^(0+256)
  1979  0A29                     l4619:	
  1980                           
  1981                           ;main.c: 53:         read_Temp();
  1982  0A29  319D  2567  318A   	fcall	_read_Temp
  1983                           
  1984                           ;main.c: 54:         read_I();
  1985  0A2C  319D  251D  318A   	fcall	_read_I
  1986                           
  1987                           ;main.c: 55:         read_U();
  1988  0A2F  319D  25B1  318A   	fcall	_read_U
  1989  0A32                     l4621:	
  1990                           
  1991                           ;main.c: 56:     }
  1992  0A32  3001               	movlw	1
  1993  0A33  0022               	movlb	2	; select bank2
  1994  0A34  07CF               	addwf	main@i^(0+256),f
  1995  0A35  3000               	movlw	0
  1996  0A36  3DD0               	addwfc	(main@i+1)^(0+256),f
  1997  0A37                     l4623:	
  1998  0A37  0850               	movf	(main@i+1)^(0+256),w
  1999  0A38  3A80               	xorlw	128
  2000  0A39  00C7               	movwf	??_main^(0+256)
  2001  0A3A  3080               	movlw	128
  2002  0A3B  0247               	subwf	??_main^(0+256),w
  2003  0A3C  1D03               	skipz
  2004  0A3D  2A40               	goto	u6115
  2005  0A3E  301E               	movlw	30
  2006  0A3F  024F               	subwf	main@i^(0+256),w
  2007  0A40                     u6115:	
  2008  0A40  1C03               	skipc
  2009  0A41  2A43               	goto	u6111
  2010  0A42  2A44               	goto	u6110
  2011  0A43                     u6111:	
  2012  0A43  2A29               	goto	l4619
  2013  0A44                     u6110:	
  2014  0A44                     l4625:	
  2015                           
  2016                           ;main.c: 61:         temperature = (float)((read_Temp() * 0.01953)/0.01) - 273.5;
  2017  0A44  30C3               	movlw	195
  2018  0A45  0020               	movlb	0	; select bank0
  2019  0A46  00DD               	movwf	___fladd@b+3
  2020  0A47  3088               	movlw	136
  2021  0A48  00DC               	movwf	___fladd@b+2
  2022  0A49  30C0               	movlw	192
  2023  0A4A  00DB               	movwf	___fladd@b+1
  2024  0A4B  3000               	movlw	0
  2025  0A4C  00DA               	movwf	___fladd@b
  2026  0A4D  303C               	movlw	60
  2027  0A4E  00C3               	movwf	___fldiv@a+3
  2028  0A4F  3023               	movlw	35
  2029  0A50  00C2               	movwf	___fldiv@a+2
  2030  0A51  30D7               	movlw	215
  2031  0A52  00C1               	movwf	___fldiv@a+1
  2032  0A53  300A               	movlw	10
  2033  0A54  00C0               	movwf	___fldiv@a
  2034  0A55  303C               	movlw	60
  2035  0A56  00A9               	movwf	___flmul@b+3
  2036  0A57  309F               	movlw	159
  2037  0A58  00A8               	movwf	___flmul@b+2
  2038  0A59  30FD               	movlw	253
  2039  0A5A  00A7               	movwf	___flmul@b+1
  2040  0A5B  3061               	movlw	97
  2041  0A5C  00A6               	movwf	___flmul@b
  2042  0A5D  319D  2567  318A   	fcall	_read_Temp
  2043  0A60  0022               	movlb	2	; select bank2
  2044  0A61  00C7               	movwf	??_main^(0+256)
  2045  0A62  01C8               	clrf	(??_main^(0+256)+1)
  2046  0A63  01C9               	clrf	(??_main^(0+256)+2)
  2047  0A64  01CA               	clrf	(??_main^(0+256)+3)
  2048  0A65  084A               	movf	(??_main+3)^(0+256),w
  2049  0A66  00F9               	movwf	___xxtofl@val+3
  2050  0A67  0849               	movf	(??_main+2)^(0+256),w
  2051  0A68  00F8               	movwf	___xxtofl@val+2
  2052  0A69  0848               	movf	(??_main+1)^(0+256),w
  2053  0A6A  00F7               	movwf	___xxtofl@val+1
  2054  0A6B  0847               	movf	??_main^(0+256),w
  2055  0A6C  00F6               	movwf	___xxtofl@val
  2056  0A6D  3001               	movlw	1
  2057  0A6E  3192  2215  318A   	fcall	___xxtofl
  2058  0A71  0879               	movf	?___xxtofl+3,w
  2059  0A72  0020               	movlb	0	; select bank0
  2060  0A73  00AD               	movwf	___flmul@a+3
  2061  0A74  0878               	movf	?___xxtofl+2,w
  2062  0A75  00AC               	movwf	___flmul@a+2
  2063  0A76  0877               	movf	?___xxtofl+1,w
  2064  0A77  00AB               	movwf	___flmul@a+1
  2065  0A78  0876               	movf	?___xxtofl,w
  2066  0A79  00AA               	movwf	___flmul@a
  2067  0A7A  3195  25A9  318A   	fcall	___flmul
  2068  0A7D  0020               	movlb	0	; select bank0
  2069  0A7E  0829               	movf	?___flmul+3,w
  2070  0A7F  00C7               	movwf	___fldiv@b+3
  2071  0A80  0828               	movf	?___flmul+2,w
  2072  0A81  00C6               	movwf	___fldiv@b+2
  2073  0A82  0827               	movf	?___flmul+1,w
  2074  0A83  00C5               	movwf	___fldiv@b+1
  2075  0A84  0826               	movf	?___flmul,w
  2076  0A85  00C4               	movwf	___fldiv@b
  2077  0A86  3188  2061  318A   	fcall	___fldiv
  2078  0A89  0020               	movlb	0	; select bank0
  2079  0A8A  0843               	movf	?___fldiv+3,w
  2080  0A8B  00E1               	movwf	___fladd@a+3
  2081  0A8C  0842               	movf	?___fldiv+2,w
  2082  0A8D  00E0               	movwf	___fladd@a+2
  2083  0A8E  0841               	movf	?___fldiv+1,w
  2084  0A8F  00DF               	movwf	___fladd@a+1
  2085  0A90  0840               	movf	?___fldiv,w
  2086  0A91  00DE               	movwf	___fladd@a
  2087  0A92  3193  2371  318A   	fcall	___fladd
  2088  0A95  0020               	movlb	0	; select bank0
  2089  0A96  085D               	movf	?___fladd+3,w
  2090  0A97  0022               	movlb	2	; select bank2
  2091  0A98  00DC               	movwf	(_temperature+3)^(0+256)
  2092  0A99  0020               	movlb	0	; select bank0
  2093  0A9A  085C               	movf	?___fladd+2,w
  2094  0A9B  0022               	movlb	2	; select bank2
  2095  0A9C  00DB               	movwf	(_temperature+2)^(0+256)
  2096  0A9D  0020               	movlb	0	; select bank0
  2097  0A9E  085B               	movf	?___fladd+1,w
  2098  0A9F  0022               	movlb	2	; select bank2
  2099  0AA0  00DA               	movwf	(_temperature+1)^(0+256)
  2100  0AA1  0020               	movlb	0	; select bank0
  2101  0AA2  085A               	movf	?___fladd,w
  2102  0AA3  0022               	movlb	2	; select bank2
  2103  0AA4  00D9               	movwf	_temperature^(0+256)
  2104                           
  2105                           ;main.c: 63:         current = ((read_I() * 0.01953)/11)/0.11;
  2106  0AA5  3041               	movlw	65
  2107  0AA6  0020               	movlb	0	; select bank0
  2108  0AA7  00C3               	movwf	___fldiv@a+3
  2109  0AA8  3030               	movlw	48
  2110  0AA9  00C2               	movwf	___fldiv@a+2
  2111  0AAA  3000               	movlw	0
  2112  0AAB  00C1               	movwf	___fldiv@a+1
  2113  0AAC  3000               	movlw	0
  2114  0AAD  00C0               	movwf	___fldiv@a
  2115  0AAE  303C               	movlw	60
  2116  0AAF  00A9               	movwf	___flmul@b+3
  2117  0AB0  309F               	movlw	159
  2118  0AB1  00A8               	movwf	___flmul@b+2
  2119  0AB2  30FD               	movlw	253
  2120  0AB3  00A7               	movwf	___flmul@b+1
  2121  0AB4  3061               	movlw	97
  2122  0AB5  00A6               	movwf	___flmul@b
  2123  0AB6  319D  251D  318A   	fcall	_read_I
  2124  0AB9  0022               	movlb	2	; select bank2
  2125  0ABA  00C7               	movwf	??_main^(0+256)
  2126  0ABB  01C8               	clrf	(??_main^(0+256)+1)
  2127  0ABC  01C9               	clrf	(??_main^(0+256)+2)
  2128  0ABD  01CA               	clrf	(??_main^(0+256)+3)
  2129  0ABE  084A               	movf	(??_main+3)^(0+256),w
  2130  0ABF  00F9               	movwf	___xxtofl@val+3
  2131  0AC0  0849               	movf	(??_main+2)^(0+256),w
  2132  0AC1  00F8               	movwf	___xxtofl@val+2
  2133  0AC2  0848               	movf	(??_main+1)^(0+256),w
  2134  0AC3  00F7               	movwf	___xxtofl@val+1
  2135  0AC4  0847               	movf	??_main^(0+256),w
  2136  0AC5  00F6               	movwf	___xxtofl@val
  2137  0AC6  3001               	movlw	1
  2138  0AC7  3192  2215  318A   	fcall	___xxtofl
  2139  0ACA  0879               	movf	?___xxtofl+3,w
  2140  0ACB  0020               	movlb	0	; select bank0
  2141  0ACC  00AD               	movwf	___flmul@a+3
  2142  0ACD  0878               	movf	?___xxtofl+2,w
  2143  0ACE  00AC               	movwf	___flmul@a+2
  2144  0ACF  0877               	movf	?___xxtofl+1,w
  2145  0AD0  00AB               	movwf	___flmul@a+1
  2146  0AD1  0876               	movf	?___xxtofl,w
  2147  0AD2  00AA               	movwf	___flmul@a
  2148  0AD3  3195  25A9  318A   	fcall	___flmul
  2149  0AD6  0020               	movlb	0	; select bank0
  2150  0AD7  0829               	movf	?___flmul+3,w
  2151  0AD8  00C7               	movwf	___fldiv@b+3
  2152  0AD9  0828               	movf	?___flmul+2,w
  2153  0ADA  00C6               	movwf	___fldiv@b+2
  2154  0ADB  0827               	movf	?___flmul+1,w
  2155  0ADC  00C5               	movwf	___fldiv@b+1
  2156  0ADD  0826               	movf	?___flmul,w
  2157  0ADE  00C4               	movwf	___fldiv@b
  2158  0ADF  3188  2061  318A   	fcall	___fldiv
  2159  0AE2  0020               	movlb	0	; select bank0
  2160  0AE3  0843               	movf	?___fldiv+3,w
  2161  0AE4  0022               	movlb	2	; select bank2
  2162  0AE5  00CE               	movwf	(_main$1494+3)^(0+256)
  2163  0AE6  0020               	movlb	0	; select bank0
  2164  0AE7  0842               	movf	?___fldiv+2,w
  2165  0AE8  0022               	movlb	2	; select bank2
  2166  0AE9  00CD               	movwf	(_main$1494+2)^(0+256)
  2167  0AEA  0020               	movlb	0	; select bank0
  2168  0AEB  0841               	movf	?___fldiv+1,w
  2169  0AEC  0022               	movlb	2	; select bank2
  2170  0AED  00CC               	movwf	(_main$1494+1)^(0+256)
  2171  0AEE  0020               	movlb	0	; select bank0
  2172  0AEF  0840               	movf	?___fldiv,w
  2173  0AF0  0022               	movlb	2	; select bank2
  2174  0AF1  00CB               	movwf	_main$1494^(0+256)
  2175  0AF2                     l4627:	
  2176                           
  2177                           ;main.c: 63:         current = ((read_I() * 0.01953)/11)/0.11;
  2178  0AF2  303D               	movlw	61
  2179  0AF3  0020               	movlb	0	; select bank0
  2180  0AF4  00C3               	movwf	___fldiv@a+3
  2181  0AF5  30E1               	movlw	225
  2182  0AF6  00C2               	movwf	___fldiv@a+2
  2183  0AF7  3047               	movlw	71
  2184  0AF8  00C1               	movwf	___fldiv@a+1
  2185  0AF9  30AE               	movlw	174
  2186  0AFA  00C0               	movwf	___fldiv@a
  2187  0AFB  0022               	movlb	2	; select bank2
  2188  0AFC  084E               	movf	(_main$1494+3)^(0+256),w
  2189  0AFD  0020               	movlb	0	; select bank0
  2190  0AFE  00C7               	movwf	___fldiv@b+3
  2191  0AFF  0022               	movlb	2	; select bank2
  2192  0B00  084D               	movf	(_main$1494+2)^(0+256),w
  2193  0B01  0020               	movlb	0	; select bank0
  2194  0B02  00C6               	movwf	___fldiv@b+2
  2195  0B03  0022               	movlb	2	; select bank2
  2196  0B04  084C               	movf	(_main$1494+1)^(0+256),w
  2197  0B05  0020               	movlb	0	; select bank0
  2198  0B06  00C5               	movwf	___fldiv@b+1
  2199  0B07  0022               	movlb	2	; select bank2
  2200  0B08  084B               	movf	_main$1494^(0+256),w
  2201  0B09  0020               	movlb	0	; select bank0
  2202  0B0A  00C4               	movwf	___fldiv@b
  2203  0B0B  3188  2061  318A   	fcall	___fldiv
  2204  0B0E  0020               	movlb	0	; select bank0
  2205  0B0F  0843               	movf	?___fldiv+3,w
  2206  0B10  0022               	movlb	2	; select bank2
  2207  0B11  00D8               	movwf	(_current+3)^(0+256)
  2208  0B12  0020               	movlb	0	; select bank0
  2209  0B13  0842               	movf	?___fldiv+2,w
  2210  0B14  0022               	movlb	2	; select bank2
  2211  0B15  00D7               	movwf	(_current+2)^(0+256)
  2212  0B16  0020               	movlb	0	; select bank0
  2213  0B17  0841               	movf	?___fldiv+1,w
  2214  0B18  0022               	movlb	2	; select bank2
  2215  0B19  00D6               	movwf	(_current+1)^(0+256)
  2216  0B1A  0020               	movlb	0	; select bank0
  2217  0B1B  0840               	movf	?___fldiv,w
  2218  0B1C  0022               	movlb	2	; select bank2
  2219  0B1D  00D5               	movwf	_current^(0+256)
  2220  0B1E                     l4629:	
  2221                           
  2222                           ;main.c: 65:         voltage = (read_U() *0.01953)/0.25;
  2223  0B1E  303E               	movlw	62
  2224  0B1F  0020               	movlb	0	; select bank0
  2225  0B20  00C3               	movwf	___fldiv@a+3
  2226  0B21  3080               	movlw	128
  2227  0B22  00C2               	movwf	___fldiv@a+2
  2228  0B23  3000               	movlw	0
  2229  0B24  00C1               	movwf	___fldiv@a+1
  2230  0B25  3000               	movlw	0
  2231  0B26  00C0               	movwf	___fldiv@a
  2232  0B27  303C               	movlw	60
  2233  0B28  00A9               	movwf	___flmul@b+3
  2234  0B29  309F               	movlw	159
  2235  0B2A  00A8               	movwf	___flmul@b+2
  2236  0B2B  30FD               	movlw	253
  2237  0B2C  00A7               	movwf	___flmul@b+1
  2238  0B2D  3061               	movlw	97
  2239  0B2E  00A6               	movwf	___flmul@b
  2240  0B2F  319D  25B1  318A   	fcall	_read_U
  2241  0B32  0022               	movlb	2	; select bank2
  2242  0B33  00C7               	movwf	??_main^(0+256)
  2243  0B34  01C8               	clrf	(??_main^(0+256)+1)
  2244  0B35  01C9               	clrf	(??_main^(0+256)+2)
  2245  0B36  01CA               	clrf	(??_main^(0+256)+3)
  2246  0B37  084A               	movf	(??_main+3)^(0+256),w
  2247  0B38  00F9               	movwf	___xxtofl@val+3
  2248  0B39  0849               	movf	(??_main+2)^(0+256),w
  2249  0B3A  00F8               	movwf	___xxtofl@val+2
  2250  0B3B  0848               	movf	(??_main+1)^(0+256),w
  2251  0B3C  00F7               	movwf	___xxtofl@val+1
  2252  0B3D  0847               	movf	??_main^(0+256),w
  2253  0B3E  00F6               	movwf	___xxtofl@val
  2254  0B3F  3001               	movlw	1
  2255  0B40  3192  2215  318A   	fcall	___xxtofl
  2256  0B43  0879               	movf	?___xxtofl+3,w
  2257  0B44  0020               	movlb	0	; select bank0
  2258  0B45  00AD               	movwf	___flmul@a+3
  2259  0B46  0878               	movf	?___xxtofl+2,w
  2260  0B47  00AC               	movwf	___flmul@a+2
  2261  0B48  0877               	movf	?___xxtofl+1,w
  2262  0B49  00AB               	movwf	___flmul@a+1
  2263  0B4A  0876               	movf	?___xxtofl,w
  2264  0B4B  00AA               	movwf	___flmul@a
  2265  0B4C  3195  25A9  318A   	fcall	___flmul
  2266  0B4F  0020               	movlb	0	; select bank0
  2267  0B50  0829               	movf	?___flmul+3,w
  2268  0B51  00C7               	movwf	___fldiv@b+3
  2269  0B52  0828               	movf	?___flmul+2,w
  2270  0B53  00C6               	movwf	___fldiv@b+2
  2271  0B54  0827               	movf	?___flmul+1,w
  2272  0B55  00C5               	movwf	___fldiv@b+1
  2273  0B56  0826               	movf	?___flmul,w
  2274  0B57  00C4               	movwf	___fldiv@b
  2275  0B58  3188  2061  318A   	fcall	___fldiv
  2276  0B5B  0020               	movlb	0	; select bank0
  2277  0B5C  0843               	movf	?___fldiv+3,w
  2278  0B5D  0022               	movlb	2	; select bank2
  2279  0B5E  00D4               	movwf	(_voltage+3)^(0+256)
  2280  0B5F  0020               	movlb	0	; select bank0
  2281  0B60  0842               	movf	?___fldiv+2,w
  2282  0B61  0022               	movlb	2	; select bank2
  2283  0B62  00D3               	movwf	(_voltage+2)^(0+256)
  2284  0B63  0020               	movlb	0	; select bank0
  2285  0B64  0841               	movf	?___fldiv+1,w
  2286  0B65  0022               	movlb	2	; select bank2
  2287  0B66  00D2               	movwf	(_voltage+1)^(0+256)
  2288  0B67  0020               	movlb	0	; select bank0
  2289  0B68  0840               	movf	?___fldiv,w
  2290  0B69  0022               	movlb	2	; select bank2
  2291  0B6A  00D1               	movwf	_voltage^(0+256)
  2292                           
  2293                           ;main.c: 67:         Lcd_Set_Cursor(1,1);
  2294  0B6B  01FB               	clrf	Lcd_Set_Cursor@b
  2295  0B6C  0AFB               	incf	Lcd_Set_Cursor@b,f
  2296  0B6D  3001               	movlw	1
  2297  0B6E  319C  24D4  318A   	fcall	_Lcd_Set_Cursor
  2298  0B71                     l4631:	
  2299                           
  2300                           ;main.c: 68:         sprintf(temp, "%2.1f",voltage);
  2301  0B71  3033               	movlw	low (STR_1| (0+32768))
  2302  0B72  0022               	movlb	2	; select bank2
  2303  0B73  00B7               	movwf	sprintf@fmt^(0+256)
  2304  0B74  3098               	movlw	high (STR_1| (0+32768))
  2305  0B75  00B8               	movwf	(sprintf@fmt^(0+256)+1)
  2306  0B76  0854               	movf	(_voltage+3)^(0+256),w
  2307  0B77  00BC               	movwf	((?_sprintf+3)^(0+256)+2)
  2308  0B78  0853               	movf	(_voltage+2)^(0+256),w
  2309  0B79  00BB               	movwf	((?_sprintf+2)^(0+256)+2)
  2310  0B7A  0852               	movf	(_voltage+1)^(0+256),w
  2311  0B7B  00BA               	movwf	((?_sprintf+1)^(0+256)+2)
  2312  0B7C  0851               	movf	_voltage^(0+256),w
  2313  0B7D  00B9               	movwf	(?_sprintf^(0+256)+2)
  2314  0B7E  30CE               	movlw	(low (_temp| (0+256)))& (0+255)
  2315  0B7F  319B  2350  318A   	fcall	_sprintf
  2316  0B82                     l4633:	
  2317                           
  2318                           ;main.c: 69:         Lcd_Write_String(temp);
  2319  0B82  30CE               	movlw	low _temp
  2320  0B83  00FA               	movwf	Lcd_Write_String@a
  2321  0B84  3001               	movlw	high _temp
  2322  0B85  00FB               	movwf	Lcd_Write_String@a+1
  2323  0B86  319A  22AD  318A   	fcall	_Lcd_Write_String
  2324  0B89                     l4635:	
  2325                           
  2326                           ;main.c: 70:         Lcd_Write_String(" V");
  2327  0B89  3052               	movlw	low (STR_2| (0+32768))
  2328  0B8A  00FA               	movwf	Lcd_Write_String@a
  2329  0B8B  3098               	movlw	high (STR_2| (0+32768))
  2330  0B8C  00FB               	movwf	Lcd_Write_String@a+1
  2331  0B8D  319A  22AD  318A   	fcall	_Lcd_Write_String
  2332  0B90                     l4637:	
  2333                           
  2334                           ;main.c: 72:         Lcd_Set_Cursor(1,12);
  2335  0B90  300C               	movlw	12
  2336  0B91  0022               	movlb	2	; select bank2
  2337  0B92  00C7               	movwf	??_main^(0+256)
  2338  0B93  0847               	movf	??_main^(0+256),w
  2339  0B94  00FB               	movwf	Lcd_Set_Cursor@b
  2340  0B95  3001               	movlw	1
  2341  0B96  319C  24D4  318A   	fcall	_Lcd_Set_Cursor
  2342                           
  2343                           ;main.c: 73:         sprintf(temp, "%2.1f",current);
  2344  0B99  3033               	movlw	low (STR_1| (0+32768))
  2345  0B9A  0022               	movlb	2	; select bank2
  2346  0B9B  00B7               	movwf	sprintf@fmt^(0+256)
  2347  0B9C  3098               	movlw	high (STR_1| (0+32768))
  2348  0B9D  00B8               	movwf	(sprintf@fmt^(0+256)+1)
  2349  0B9E  0858               	movf	(_current+3)^(0+256),w
  2350  0B9F  00BC               	movwf	((?_sprintf+3)^(0+256)+2)
  2351  0BA0  0857               	movf	(_current+2)^(0+256),w
  2352  0BA1  00BB               	movwf	((?_sprintf+2)^(0+256)+2)
  2353  0BA2  0856               	movf	(_current+1)^(0+256),w
  2354  0BA3  00BA               	movwf	((?_sprintf+1)^(0+256)+2)
  2355  0BA4  0855               	movf	_current^(0+256),w
  2356  0BA5  00B9               	movwf	(?_sprintf^(0+256)+2)
  2357  0BA6  30CE               	movlw	(low (_temp| (0+256)))& (0+255)
  2358  0BA7  319B  2350  318A   	fcall	_sprintf
  2359  0BAA                     l4639:	
  2360                           
  2361                           ;main.c: 74:         Lcd_Write_String(temp);
  2362  0BAA  30CE               	movlw	low _temp
  2363  0BAB  00FA               	movwf	Lcd_Write_String@a
  2364  0BAC  3001               	movlw	high _temp
  2365  0BAD  00FB               	movwf	Lcd_Write_String@a+1
  2366  0BAE  319A  22AD  318A   	fcall	_Lcd_Write_String
  2367  0BB1                     l4641:	
  2368                           
  2369                           ;main.c: 75:         Lcd_Write_String(" A");
  2370  0BB1  304C               	movlw	low (STR_4| (0+32768))
  2371  0BB2  00FA               	movwf	Lcd_Write_String@a
  2372  0BB3  3098               	movlw	high (STR_4| (0+32768))
  2373  0BB4  00FB               	movwf	Lcd_Write_String@a+1
  2374  0BB5  319A  22AD  318A   	fcall	_Lcd_Write_String
  2375  0BB8                     l4643:	
  2376                           
  2377                           ;main.c: 77:         Lcd_Set_Cursor(2,1);
  2378  0BB8  01FB               	clrf	Lcd_Set_Cursor@b
  2379  0BB9  0AFB               	incf	Lcd_Set_Cursor@b,f
  2380  0BBA  3002               	movlw	2
  2381  0BBB  319C  24D4  318A   	fcall	_Lcd_Set_Cursor
  2382  0BBE                     l4645:	
  2383                           
  2384                           ;main.c: 78:         sprintf(temp, "%2.1f",temperature);
  2385  0BBE  3033               	movlw	low (STR_1| (0+32768))
  2386  0BBF  0022               	movlb	2	; select bank2
  2387  0BC0  00B7               	movwf	sprintf@fmt^(0+256)
  2388  0BC1  3098               	movlw	high (STR_1| (0+32768))
  2389  0BC2  00B8               	movwf	(sprintf@fmt^(0+256)+1)
  2390  0BC3  085C               	movf	(_temperature+3)^(0+256),w
  2391  0BC4  00BC               	movwf	((?_sprintf+3)^(0+256)+2)
  2392  0BC5  085B               	movf	(_temperature+2)^(0+256),w
  2393  0BC6  00BB               	movwf	((?_sprintf+2)^(0+256)+2)
  2394  0BC7  085A               	movf	(_temperature+1)^(0+256),w
  2395  0BC8  00BA               	movwf	((?_sprintf+1)^(0+256)+2)
  2396  0BC9  0859               	movf	_temperature^(0+256),w
  2397  0BCA  00B9               	movwf	(?_sprintf^(0+256)+2)
  2398  0BCB  30CE               	movlw	(low (_temp| (0+256)))& (0+255)
  2399  0BCC  319B  2350  318A   	fcall	_sprintf
  2400  0BCF                     l4647:	
  2401                           
  2402                           ;main.c: 79:         Lcd_Write_String(temp);
  2403  0BCF  30CE               	movlw	low _temp
  2404  0BD0  00FA               	movwf	Lcd_Write_String@a
  2405  0BD1  3001               	movlw	high _temp
  2406  0BD2  00FB               	movwf	Lcd_Write_String@a+1
  2407  0BD3  319A  22AD  318A   	fcall	_Lcd_Write_String
  2408  0BD6                     l4649:	
  2409                           
  2410                           ;main.c: 80:         Lcd_Write_String(" C");
  2411  0BD6  304F               	movlw	low (STR_6| (0+32768))
  2412  0BD7  00FA               	movwf	Lcd_Write_String@a
  2413  0BD8  3098               	movlw	high (STR_6| (0+32768))
  2414  0BD9  00FB               	movwf	Lcd_Write_String@a+1
  2415  0BDA  319A  22AD  318A   	fcall	_Lcd_Write_String
  2416  0BDD                     l4651:	
  2417                           
  2418                           ;main.c: 83:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2419  0BDD  3002               	movlw	2
  2420  0BDE  0022               	movlb	2	; select bank2
  2421  0BDF  00C8               	movwf	(??_main^(0+256)+1)
  2422  0BE0  3004               	movlw	4
  2423  0BE1  00C7               	movwf	??_main^(0+256)
  2424  0BE2  30BA               	movlw	186
  2425  0BE3                     u6217:	
  2426  0BE3  0B89               	decfsz	9,f
  2427  0BE4  2BE3               	goto	u6217
  2428  0BE5  0BC7               	decfsz	??_main^(0+256),f
  2429  0BE6  2BE3               	goto	u6217
  2430  0BE7  0BC8               	decfsz	(??_main^(0+256)+1),f
  2431  0BE8  2BE3               	goto	u6217
  2432  0BE9  0000               	nop
  2433  0BEA                     l4653:	
  2434                           
  2435                           ;main.c: 84:         if(PORTAbits.RA0 == 1){
  2436  0BEA  0020               	movlb	0	; select bank0
  2437  0BEB  1C0C               	btfss	12,0	;volatile
  2438  0BEC  2BEE               	goto	u6121
  2439  0BED  2BEF               	goto	u6120
  2440  0BEE                     u6121:	
  2441  0BEE  2C1B               	goto	l78
  2442  0BEF                     u6120:	
  2443  0BEF                     l4655:	
  2444                           
  2445                           ;main.c: 85:             if(sst_button == 0){
  2446  0BEF  0022               	movlb	2	; select bank2
  2447  0BF0  086F               	movf	_sst_button^(0+256),w
  2448  0BF1  1D03               	btfss	3,2
  2449  0BF2  2BF4               	goto	u6131
  2450  0BF3  2BF5               	goto	u6130
  2451  0BF4                     u6131:	
  2452  0BF4  2C09               	goto	l4661
  2453  0BF5                     u6130:	
  2454  0BF5                     l4657:	
  2455                           
  2456                           ;main.c: 86:                 CCPR2L = 80;
  2457  0BF5  3050               	movlw	80
  2458  0BF6  0025               	movlb	5	; select bank5
  2459  0BF7  0098               	movwf	24	;volatile
  2460  0BF8                     l4659:	
  2461                           
  2462                           ;main.c: 87:                 sst_button = 1;
  2463  0BF8  0022               	movlb	2	; select bank2
  2464  0BF9  01EF               	clrf	_sst_button^(0+256)
  2465  0BFA  0AEF               	incf	_sst_button^(0+256),f
  2466                           
  2467                           ;main.c: 88:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  2468  0BFB  300B               	movlw	11
  2469  0BFC  0022               	movlb	2	; select bank2
  2470  0BFD  00C8               	movwf	(??_main^(0+256)+1)
  2471  0BFE  3026               	movlw	38
  2472  0BFF  00C7               	movwf	??_main^(0+256)
  2473  0C00  305D               	movlw	93
  2474  0C01                     u6227:	
  2475  0C01  0B89               	decfsz	9,f
  2476  0C02  2C01               	goto	u6227
  2477  0C03  0BC7               	decfsz	??_main^(0+256),f
  2478  0C04  2C01               	goto	u6227
  2479  0C05  0BC8               	decfsz	(??_main^(0+256)+1),f
  2480  0C06  2C01               	goto	u6227
  2481  0C07  3200               	nop2
  2482                           
  2483                           ;main.c: 89:             }
  2484  0C08  2C3A               	goto	l4675
  2485  0C09                     l4661:	
  2486                           
  2487                           ;main.c: 91:                 CCPR2L = 0;
  2488  0C09  0025               	movlb	5	; select bank5
  2489  0C0A  0198               	clrf	24	;volatile
  2490                           
  2491                           ;main.c: 92:                 sst_button = 0;
  2492  0C0B  0022               	movlb	2	; select bank2
  2493  0C0C  01EF               	clrf	_sst_button^(0+256)
  2494  0C0D                     l4663:	
  2495                           
  2496                           ;main.c: 93:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  2497  0C0D  300B               	movlw	11
  2498  0C0E  0022               	movlb	2	; select bank2
  2499  0C0F  00C8               	movwf	(??_main^(0+256)+1)
  2500  0C10  3026               	movlw	38
  2501  0C11  00C7               	movwf	??_main^(0+256)
  2502  0C12  305D               	movlw	93
  2503  0C13                     u6237:	
  2504  0C13  0B89               	decfsz	9,f
  2505  0C14  2C13               	goto	u6237
  2506  0C15  0BC7               	decfsz	??_main^(0+256),f
  2507  0C16  2C13               	goto	u6237
  2508  0C17  0BC8               	decfsz	(??_main^(0+256)+1),f
  2509  0C18  2C13               	goto	u6237
  2510  0C19  3200               	nop2
  2511  0C1A  2C3A               	goto	l4675
  2512  0C1B                     l78:	
  2513                           ;main.c: 98:         else if(PORTAbits.RA1 == 1){
  2514                           
  2515  0C1B  1C8C               	btfss	12,1	;volatile
  2516  0C1C  2C1E               	goto	u6141
  2517  0C1D  2C1F               	goto	u6140
  2518  0C1E                     u6141:	
  2519  0C1E  2C31               	goto	l82
  2520  0C1F                     u6140:	
  2521  0C1F                     l4665:	
  2522                           
  2523                           ;main.c: 99:               CCPR2L = CCPR2L - 10;
  2524  0C1F  0025               	movlb	5	; select bank5
  2525  0C20  0818               	movf	24,w	;volatile
  2526  0C21  3EF6               	addlw	246
  2527  0C22  0098               	movwf	24	;volatile
  2528  0C23                     l4667:	
  2529                           
  2530                           ;main.c: 100:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2531  0C23  3002               	movlw	2
  2532  0C24  0022               	movlb	2	; select bank2
  2533  0C25  00C8               	movwf	(??_main^(0+256)+1)
  2534  0C26  3004               	movlw	4
  2535  0C27  00C7               	movwf	??_main^(0+256)
  2536  0C28  30BA               	movlw	186
  2537  0C29                     u6247:	
  2538  0C29  0B89               	decfsz	9,f
  2539  0C2A  2C29               	goto	u6247
  2540  0C2B  0BC7               	decfsz	??_main^(0+256),f
  2541  0C2C  2C29               	goto	u6247
  2542  0C2D  0BC8               	decfsz	(??_main^(0+256)+1),f
  2543  0C2E  2C29               	goto	u6247
  2544  0C2F  0000               	nop
  2545                           
  2546                           ;main.c: 101:         }
  2547  0C30  2C3A               	goto	l4675
  2548  0C31                     l82:	
  2549                           ;main.c: 102:         else if(PORTAbits.RA2 == 1){
  2550                           
  2551  0C31  1D0C               	btfss	12,2	;volatile
  2552  0C32  2C34               	goto	u6151
  2553  0C33  2C35               	goto	u6150
  2554  0C34                     u6151:	
  2555  0C34  2C23               	goto	l4667
  2556  0C35                     u6150:	
  2557  0C35                     l4669:	
  2558                           
  2559                           ;main.c: 103:             CCPR2L= CCPR2L + 10;
  2560  0C35  0025               	movlb	5	; select bank5
  2561  0C36  0818               	movf	24,w	;volatile
  2562  0C37  3E0A               	addlw	10
  2563  0C38  0098               	movwf	24	;volatile
  2564  0C39  2C23               	goto	l4667
  2565  0C3A                     l4675:	
  2566                           
  2567                           ;main.c: 112:         if(voltage>17){
  2568  0C3A  3041               	movlw	65
  2569  0C3B  0020               	movlb	0	; select bank0
  2570  0C3C  00C3               	movwf	___flge@ff1+3
  2571  0C3D  3088               	movlw	136
  2572  0C3E  00C2               	movwf	___flge@ff1+2
  2573  0C3F  3000               	movlw	0
  2574  0C40  00C1               	movwf	___flge@ff1+1
  2575  0C41  3000               	movlw	0
  2576  0C42  00C0               	movwf	___flge@ff1
  2577  0C43  0022               	movlb	2	; select bank2
  2578  0C44  0854               	movf	(_voltage+3)^(0+256),w
  2579  0C45  0020               	movlb	0	; select bank0
  2580  0C46  00C7               	movwf	___flge@ff2+3
  2581  0C47  0022               	movlb	2	; select bank2
  2582  0C48  0853               	movf	(_voltage+2)^(0+256),w
  2583  0C49  0020               	movlb	0	; select bank0
  2584  0C4A  00C6               	movwf	___flge@ff2+2
  2585  0C4B  0022               	movlb	2	; select bank2
  2586  0C4C  0852               	movf	(_voltage+1)^(0+256),w
  2587  0C4D  0020               	movlb	0	; select bank0
  2588  0C4E  00C5               	movwf	___flge@ff2+1
  2589  0C4F  0022               	movlb	2	; select bank2
  2590  0C50  0851               	movf	_voltage^(0+256),w
  2591  0C51  0020               	movlb	0	; select bank0
  2592  0C52  00C4               	movwf	___flge@ff2
  2593  0C53  3191  218A  318A   	fcall	___flge
  2594  0C56  1803               	btfsc	3,0
  2595  0C57  2C59               	goto	u6161
  2596  0C58  2C5A               	goto	u6160
  2597  0C59                     u6161:	
  2598  0C59  2C7A               	goto	l4687
  2599  0C5A                     u6160:	
  2600  0C5A                     l4677:	
  2601                           
  2602                           ;main.c: 113:             CCPR2L=0;
  2603  0C5A  0025               	movlb	5	; select bank5
  2604  0C5B  0198               	clrf	24	;volatile
  2605  0C5C                     l4679:	
  2606                           
  2607                           ;main.c: 114:             Lcd_Clear();
  2608  0C5C  319A  2214  318A   	fcall	_Lcd_Clear
  2609  0C5F                     l4681:	
  2610                           
  2611                           ;main.c: 115:             Lcd_Set_Cursor(1,1);
  2612  0C5F  01FB               	clrf	Lcd_Set_Cursor@b
  2613  0C60  0AFB               	incf	Lcd_Set_Cursor@b,f
  2614  0C61  3001               	movlw	1
  2615  0C62  319C  24D4  318A   	fcall	_Lcd_Set_Cursor
  2616  0C65                     l4683:	
  2617                           
  2618                           ;main.c: 116:             Lcd_Write_String("Overvoltage");
  2619  0C65  3010               	movlw	low (STR_7| (0+32768))
  2620  0C66  00FA               	movwf	Lcd_Write_String@a
  2621  0C67  3098               	movlw	high (STR_7| (0+32768))
  2622  0C68  00FB               	movwf	Lcd_Write_String@a+1
  2623  0C69  319A  22AD  318A   	fcall	_Lcd_Write_String
  2624  0C6C                     l4685:	
  2625                           
  2626                           ;main.c: 117:             _delay((unsigned long)((5000)*(8000000/4000.0)));
  2627  0C6C  3033               	movlw	51
  2628  0C6D  0022               	movlb	2	; select bank2
  2629  0C6E  00C8               	movwf	(??_main^(0+256)+1)
  2630  0C6F  30BB               	movlw	187
  2631  0C70  00C7               	movwf	??_main^(0+256)
  2632  0C71  30DF               	movlw	223
  2633  0C72                     u6257:	
  2634  0C72  0B89               	decfsz	9,f
  2635  0C73  2C72               	goto	u6257
  2636  0C74  0BC7               	decfsz	??_main^(0+256),f
  2637  0C75  2C72               	goto	u6257
  2638  0C76  0BC8               	decfsz	(??_main^(0+256)+1),f
  2639  0C77  2C72               	goto	u6257
  2640  0C78  3200               	nop2
  2641                           
  2642                           ;main.c: 118:             break;
  2643  0C79  2CE0               	goto	l91
  2644  0C7A                     l4687:	
  2645                           
  2646                           ;main.c: 120:         if(temperature>55){
  2647  0C7A  3042               	movlw	66
  2648  0C7B  0020               	movlb	0	; select bank0
  2649  0C7C  00C3               	movwf	___flge@ff1+3
  2650  0C7D  305C               	movlw	92
  2651  0C7E  00C2               	movwf	___flge@ff1+2
  2652  0C7F  3000               	movlw	0
  2653  0C80  00C1               	movwf	___flge@ff1+1
  2654  0C81  3000               	movlw	0
  2655  0C82  00C0               	movwf	___flge@ff1
  2656  0C83  0022               	movlb	2	; select bank2
  2657  0C84  085C               	movf	(_temperature+3)^(0+256),w
  2658  0C85  0020               	movlb	0	; select bank0
  2659  0C86  00C7               	movwf	___flge@ff2+3
  2660  0C87  0022               	movlb	2	; select bank2
  2661  0C88  085B               	movf	(_temperature+2)^(0+256),w
  2662  0C89  0020               	movlb	0	; select bank0
  2663  0C8A  00C6               	movwf	___flge@ff2+2
  2664  0C8B  0022               	movlb	2	; select bank2
  2665  0C8C  085A               	movf	(_temperature+1)^(0+256),w
  2666  0C8D  0020               	movlb	0	; select bank0
  2667  0C8E  00C5               	movwf	___flge@ff2+1
  2668  0C8F  0022               	movlb	2	; select bank2
  2669  0C90  0859               	movf	_temperature^(0+256),w
  2670  0C91  0020               	movlb	0	; select bank0
  2671  0C92  00C4               	movwf	___flge@ff2
  2672  0C93  3191  218A  318A   	fcall	___flge
  2673  0C96  1803               	btfsc	3,0
  2674  0C97  2C99               	goto	u6171
  2675  0C98  2C9A               	goto	u6170
  2676  0C99                     u6171:	
  2677  0C99  2CAD               	goto	l4699
  2678  0C9A                     u6170:	
  2679  0C9A                     l4689:	
  2680                           
  2681                           ;main.c: 121:             CCPR2L=0;
  2682  0C9A  0025               	movlb	5	; select bank5
  2683  0C9B  0198               	clrf	24	;volatile
  2684  0C9C                     l4691:	
  2685                           
  2686                           ;main.c: 122:             Lcd_Clear();
  2687  0C9C  319A  2214  318A   	fcall	_Lcd_Clear
  2688  0C9F                     l4693:	
  2689                           
  2690                           ;main.c: 123:             Lcd_Set_Cursor(1,1);
  2691  0C9F  01FB               	clrf	Lcd_Set_Cursor@b
  2692  0CA0  0AFB               	incf	Lcd_Set_Cursor@b,f
  2693  0CA1  3001               	movlw	1
  2694  0CA2  319C  24D4  318A   	fcall	_Lcd_Set_Cursor
  2695  0CA5                     l4695:	
  2696                           
  2697                           ;main.c: 124:             Lcd_Write_String("Overtemperature");
  2698  0CA5  3000               	movlw	low (STR_8| (0+32768))
  2699  0CA6  00FA               	movwf	Lcd_Write_String@a
  2700  0CA7  3098               	movlw	high (STR_8| (0+32768))
  2701  0CA8  00FB               	movwf	Lcd_Write_String@a+1
  2702  0CA9  319A  22AD  318A   	fcall	_Lcd_Write_String
  2703  0CAC  2C6C               	goto	l4685
  2704  0CAD                     l4699:	
  2705                           
  2706                           ;main.c: 129:          if(current>1.5){
  2707  0CAD  303F               	movlw	63
  2708  0CAE  0020               	movlb	0	; select bank0
  2709  0CAF  00C3               	movwf	___flge@ff1+3
  2710  0CB0  30C0               	movlw	192
  2711  0CB1  00C2               	movwf	___flge@ff1+2
  2712  0CB2  3000               	movlw	0
  2713  0CB3  00C1               	movwf	___flge@ff1+1
  2714  0CB4  3000               	movlw	0
  2715  0CB5  00C0               	movwf	___flge@ff1
  2716  0CB6  0022               	movlb	2	; select bank2
  2717  0CB7  0858               	movf	(_current+3)^(0+256),w
  2718  0CB8  0020               	movlb	0	; select bank0
  2719  0CB9  00C7               	movwf	___flge@ff2+3
  2720  0CBA  0022               	movlb	2	; select bank2
  2721  0CBB  0857               	movf	(_current+2)^(0+256),w
  2722  0CBC  0020               	movlb	0	; select bank0
  2723  0CBD  00C6               	movwf	___flge@ff2+2
  2724  0CBE  0022               	movlb	2	; select bank2
  2725  0CBF  0856               	movf	(_current+1)^(0+256),w
  2726  0CC0  0020               	movlb	0	; select bank0
  2727  0CC1  00C5               	movwf	___flge@ff2+1
  2728  0CC2  0022               	movlb	2	; select bank2
  2729  0CC3  0855               	movf	_current^(0+256),w
  2730  0CC4  0020               	movlb	0	; select bank0
  2731  0CC5  00C4               	movwf	___flge@ff2
  2732  0CC6  3191  218A  318A   	fcall	___flge
  2733  0CC9  1803               	btfsc	3,0
  2734  0CCA  2CCC               	goto	u6181
  2735  0CCB  2CCD               	goto	u6180
  2736  0CCC                     u6181:	
  2737  0CCC  2A44               	goto	l4625
  2738  0CCD                     u6180:	
  2739  0CCD                     l4701:	
  2740                           
  2741                           ;main.c: 130:             CCPR2L=0;
  2742  0CCD  0025               	movlb	5	; select bank5
  2743  0CCE  0198               	clrf	24	;volatile
  2744  0CCF                     l4703:	
  2745                           
  2746                           ;main.c: 131:             Lcd_Clear();
  2747  0CCF  319A  2214  318A   	fcall	_Lcd_Clear
  2748  0CD2                     l4705:	
  2749                           
  2750                           ;main.c: 132:             Lcd_Set_Cursor(1,1);
  2751  0CD2  01FB               	clrf	Lcd_Set_Cursor@b
  2752  0CD3  0AFB               	incf	Lcd_Set_Cursor@b,f
  2753  0CD4  3001               	movlw	1
  2754  0CD5  319C  24D4  318A   	fcall	_Lcd_Set_Cursor
  2755  0CD8                     l4707:	
  2756                           
  2757                           ;main.c: 133:             Lcd_Write_String("Overcurrent");
  2758  0CD8  301C               	movlw	low (STR_9| (0+32768))
  2759  0CD9  00FA               	movwf	Lcd_Write_String@a
  2760  0CDA  3098               	movlw	high (STR_9| (0+32768))
  2761  0CDB  00FB               	movwf	Lcd_Write_String@a+1
  2762  0CDC  319A  22AD  318A   	fcall	_Lcd_Write_String
  2763  0CDF  2C6C               	goto	l4685
  2764  0CE0                     l91:	
  2765  0CE0  3180  2802         	ljmp	start
  2766  0CE2                     __end_of_main:	
  2767                           
  2768                           	psect	text1
  2769  1B50                     __ptext1:	
  2770 ;; *************** function _sprintf *****************
  2771 ;; Defined at:
  2772 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  s               1    wreg     PTR unsigned char 
  2775 ;;		 -> temp(5), 
  2776 ;;  fmt             2   23[BANK2 ] PTR const unsigned char 
  2777 ;;		 -> STR_5(6), STR_3(6), STR_1(6), 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  s               1   32[BANK2 ] PTR unsigned char 
  2780 ;;		 -> temp(5), 
  2781 ;;  f               5   34[BANK2 ] struct _IO_FILE
  2782 ;;  ret             2    0        int 
  2783 ;;  ap              1   33[BANK2 ] PTR void [1]
  2784 ;;		 -> ?_sprintf(2), 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  2   23[BANK2 ] int 
  2787 ;; Registers used:
  2788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2794 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  2795 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  2796 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2797 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0
  2798 ;;Total ram usage:       16 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    7
  2801 ;; This function calls:
  2802 ;;		_vfprintf
  2803 ;; This function is called by:
  2804 ;;		_main
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           
  2809                           ;psect for function _sprintf
  2810  1B50                     _sprintf:	
  2811                           
  2812                           ;incstack = 0
  2813                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2814                           ;sprintf@s stored from wreg
  2815  1B50  0022               	movlb	2	; select bank2
  2816  1B51  00C0               	movwf	sprintf@s^(0+256)
  2817  1B52                     l4543:	
  2818  1B52  3039               	movlw	(low ((?_sprintf| (0+256)+2)))& (0+255)
  2819  1B53  00BD               	movwf	??_sprintf^(0+256)
  2820  1B54  083D               	movf	??_sprintf^(0+256),w
  2821  1B55  00C1               	movwf	sprintf@ap^(0+256)
  2822  1B56  0840               	movf	sprintf@s^(0+256),w
  2823  1B57  00BD               	movwf	??_sprintf^(0+256)
  2824  1B58  083D               	movf	??_sprintf^(0+256),w
  2825  1B59  00C2               	movwf	sprintf@f^(0+256)
  2826  1B5A                     l4545:	
  2827  1B5A  01C3               	clrf	(sprintf@f^(0+256)+1)
  2828  1B5B  01C4               	clrf	((sprintf@f+1)^(0+256)+1)
  2829  1B5C                     l4547:	
  2830  1B5C  01C5               	clrf	(sprintf@f^(0+256)+3)
  2831  1B5D  01C6               	clrf	((sprintf@f+1)^(0+256)+3)
  2832  1B5E                     l4549:	
  2833  1B5E  0838               	movf	(sprintf@fmt+1)^(0+256),w
  2834  1B5F  00B0               	movwf	(vfprintf@fmt+1)^(0+256)
  2835  1B60  0837               	movf	sprintf@fmt^(0+256),w
  2836  1B61  00AF               	movwf	vfprintf@fmt^(0+256)
  2837  1B62  3041               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  2838  1B63  00BD               	movwf	??_sprintf^(0+256)
  2839  1B64  083D               	movf	??_sprintf^(0+256),w
  2840  1B65  00B1               	movwf	vfprintf@ap^(0+256)
  2841  1B66  3042               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  2842  1B67  319B  23C2  319B   	fcall	_vfprintf
  2843  1B6A                     l4551:	
  2844  1B6A  0022               	movlb	2	; select bank2
  2845  1B6B  0843               	movf	(sprintf@f^(0+256)+1),w
  2846  1B6C  0740               	addwf	sprintf@s^(0+256),w
  2847  1B6D  00BD               	movwf	??_sprintf^(0+256)
  2848  1B6E  083D               	movf	??_sprintf^(0+256),w
  2849  1B6F  0086               	movwf	6
  2850  1B70  3001               	movlw	1	; select bank2/3
  2851  1B71  0087               	movwf	7
  2852  1B72  0181               	clrf	1
  2853  1B73                     l1160:	
  2854  1B73  0008               	return
  2855  1B74                     __end_of_sprintf:	
  2856                           
  2857                           	psect	text2
  2858  1BC2                     __ptext2:	
  2859 ;; *************** function _vfprintf *****************
  2860 ;; Defined at:
  2861 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  fp              1    wreg     PTR struct _IO_FILE
  2864 ;;		 -> sprintf@f(5), 
  2865 ;;  fmt             2   15[BANK2 ] PTR const unsigned char 
  2866 ;;		 -> STR_5(6), STR_3(6), STR_1(6), 
  2867 ;;  ap              1   17[BANK2 ] PTR PTR void 
  2868 ;;		 -> sprintf@ap(1), 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  fp              1   20[BANK2 ] PTR struct _IO_FILE
  2871 ;;		 -> sprintf@f(5), 
  2872 ;;  cfmt            2   21[BANK2 ] PTR unsigned char 
  2873 ;;		 -> STR_5(6), STR_3(6), STR_1(6), 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  2   15[BANK2 ] int 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2883 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;Total ram usage:        8 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    6
  2890 ;; This function calls:
  2891 ;;		_vfpfcnvrt
  2892 ;; This function is called by:
  2893 ;;		_sprintf
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           
  2898                           ;psect for function _vfprintf
  2899  1BC2                     _vfprintf:	
  2900                           
  2901                           ;incstack = 0
  2902                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2903                           ;vfprintf@fp stored from wreg
  2904  1BC2  0022               	movlb	2	; select bank2
  2905  1BC3  00B4               	movwf	vfprintf@fp^(0+256)
  2906  1BC4                     l4419:	
  2907                           
  2908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2909  1BC4  0830               	movf	(vfprintf@fmt+1)^(0+256),w
  2910  1BC5  00B6               	movwf	(vfprintf@cfmt+1)^(0+256)
  2911  1BC6  082F               	movf	vfprintf@fmt^(0+256),w
  2912  1BC7  00B5               	movwf	vfprintf@cfmt^(0+256)
  2913  1BC8                     l4421:	
  2914                           
  2915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2916  1BC8  01DD               	clrf	_nout^(0+256)
  2917  1BC9  01DE               	clrf	(_nout+1)^(0+256)
  2918                           
  2919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2920  1BCA  2BE3               	goto	l4425
  2921  1BCB                     l4423:	
  2922                           
  2923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2924  1BCB  3035               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  2925  1BCC  00B2               	movwf	??_vfprintf^(0+256)
  2926  1BCD  0832               	movf	??_vfprintf^(0+256),w
  2927  1BCE  0020               	movlb	0	; select bank0
  2928  1BCF  00EE               	movwf	vfpfcnvrt@fmt
  2929  1BD0  0022               	movlb	2	; select bank2
  2930  1BD1  0831               	movf	vfprintf@ap^(0+256),w
  2931  1BD2  00B3               	movwf	(??_vfprintf+1)^(0+256)
  2932  1BD3  0833               	movf	(??_vfprintf+1)^(0+256),w
  2933  1BD4  0020               	movlb	0	; select bank0
  2934  1BD5  00EF               	movwf	vfpfcnvrt@ap
  2935  1BD6  0022               	movlb	2	; select bank2
  2936  1BD7  0834               	movf	vfprintf@fp^(0+256),w
  2937  1BD8  318C  24E2  319B   	fcall	_vfpfcnvrt
  2938  1BDB  0020               	movlb	0	; select bank0
  2939  1BDC  086E               	movf	?_vfpfcnvrt,w
  2940  1BDD  0022               	movlb	2	; select bank2
  2941  1BDE  07DD               	addwf	_nout^(0+256),f
  2942  1BDF  0020               	movlb	0	; select bank0
  2943  1BE0  086F               	movf	?_vfpfcnvrt+1,w
  2944  1BE1  0022               	movlb	2	; select bank2
  2945  1BE2  3DDE               	addwfc	(_nout+1)^(0+256),f
  2946  1BE3                     l4425:	
  2947                           
  2948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2949  1BE3  0835               	movf	vfprintf@cfmt^(0+256),w
  2950  1BE4  0084               	movwf	4
  2951  1BE5  0836               	movf	(vfprintf@cfmt+1)^(0+256),w
  2952  1BE6  0085               	movwf	5
  2953  1BE7  0012               	moviw fsr0++
  2954  1BE8  1D03               	btfss	3,2
  2955  1BE9  2BEB               	goto	u5931
  2956  1BEA  2BEC               	goto	u5930
  2957  1BEB                     u5931:	
  2958  1BEB  2BCB               	goto	l4423
  2959  1BEC                     u5930:	
  2960  1BEC                     l4427:	
  2961                           
  2962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2963  1BEC  085E               	movf	(_nout+1)^(0+256),w
  2964  1BED  00B0               	movwf	(?_vfprintf+1)^(0+256)
  2965  1BEE  085D               	movf	_nout^(0+256),w
  2966  1BEF  00AF               	movwf	?_vfprintf^(0+256)
  2967  1BF0                     l604:	
  2968  1BF0  0008               	return
  2969  1BF1                     __end_of_vfprintf:	
  2970                           
  2971                           	psect	text3
  2972  0CE2                     __ptext3:	
  2973 ;; *************** function _vfpfcnvrt *****************
  2974 ;; Defined at:
  2975 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  fp              1    wreg     PTR struct _IO_FILE
  2978 ;;		 -> sprintf@f(5), 
  2979 ;;  fmt             1   78[BANK0 ] PTR PTR unsigned char 
  2980 ;;		 -> vfprintf@cfmt(2), 
  2981 ;;  ap              1   79[BANK0 ] PTR PTR void 
  2982 ;;		 -> sprintf@ap(1), 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  fp              1   14[BANK2 ] PTR struct _IO_FILE
  2985 ;;		 -> sprintf@f(5), 
  2986 ;;  llu             8    0        unsigned long long 
  2987 ;;  ll              8    0        long long 
  2988 ;;  f               4    6[BANK2 ] long long 
  2989 ;;  ct              3   10[BANK2 ] unsigned char [3]
  2990 ;;  vp              2    0        PTR void 
  2991 ;;  i               2    0        int 
  2992 ;;  done            2    0        int 
  2993 ;;  cp              2    0        PTR unsigned char 
  2994 ;;  c               1   13[BANK2 ] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2   78[BANK0 ] int 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3004 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;      Locals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Totals:         0       2       6      15       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;Total ram usage:       23 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    5
  3011 ;; This function calls:
  3012 ;;		_atoi
  3013 ;;		_efgtoa
  3014 ;;		_fputc
  3015 ;;		_isdigit
  3016 ;;		_isupper
  3017 ;;		_strncmp
  3018 ;;		_tolower
  3019 ;; This function is called by:
  3020 ;;		_vfprintf
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           
  3025                           ;psect for function _vfpfcnvrt
  3026  0CE2                     _vfpfcnvrt:	
  3027                           
  3028                           ;incstack = 0
  3029                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3030                           ;vfpfcnvrt@fp stored from wreg
  3031  0CE2  0022               	movlb	2	; select bank2
  3032  0CE3  00AE               	movwf	vfpfcnvrt@fp^(0+256)
  3033  0CE4                     l4225:	
  3034                           
  3035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3036  0CE4  0020               	movlb	0	; select bank0
  3037  0CE5  086E               	movf	vfpfcnvrt@fmt,w
  3038  0CE6  0086               	movwf	6
  3039  0CE7  3001               	movlw	1	; select bank2/3
  3040  0CE8  0087               	movwf	7
  3041  0CE9  3F40               	moviw [0]fsr1
  3042  0CEA  0021               	movlb	1	; select bank1
  3043  0CEB  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3044  0CEC  3F41               	moviw [1]fsr1
  3045  0CED  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3046  0CEE  086A               	movf	??_vfpfcnvrt^(0+128),w
  3047  0CEF  0084               	movwf	4
  3048  0CF0  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3049  0CF1  0085               	movwf	5
  3050  0CF2  0012               	moviw fsr0++
  3051  0CF3  3A25               	xorlw	37
  3052  0CF4  1D03               	btfss	3,2
  3053  0CF5  2CF7               	goto	u5611
  3054  0CF6  2CF8               	goto	u5610
  3055  0CF7                     u5611:	
  3056  0CF7  2FD6               	goto	l4333
  3057  0CF8                     u5610:	
  3058  0CF8                     l4227:	
  3059                           
  3060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3061  0CF8  0020               	movlb	0	; select bank0
  3062  0CF9  086E               	movf	vfpfcnvrt@fmt,w
  3063  0CFA  0086               	movwf	6
  3064  0CFB  3001               	movlw	1	; select bank2/3
  3065  0CFC  0087               	movwf	7
  3066  0CFD  3001               	movlw	1
  3067  0CFE  0781               	addwf	1,f
  3068  0CFF  3141               	addfsr 1,1
  3069  0D00  1803               	skipnc
  3070  0D01  0A81               	incf	1,f
  3071  0D02                     l4229:	
  3072                           
  3073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3074  0D02  0022               	movlb	2	; select bank2
  3075  0D03  01DF               	clrf	_width^(0+256)
  3076  0D04  01E0               	clrf	(_width+1)^(0+256)
  3077  0D05  01E3               	clrf	_flags^(0+256)
  3078  0D06  01E4               	clrf	(_flags+1)^(0+256)
  3079  0D07                     l4231:	
  3080                           
  3081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3082  0D07  30FF               	movlw	255
  3083  0D08  00E1               	movwf	_prec^(0+256)
  3084  0D09  30FF               	movlw	255
  3085  0D0A  00E2               	movwf	(_prec^(0+256)+1)
  3086  0D0B                     l4233:	
  3087                           
  3088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3089  0D0B  0020               	movlb	0	; select bank0
  3090  0D0C  086E               	movf	vfpfcnvrt@fmt,w
  3091  0D0D  0086               	movwf	6
  3092  0D0E  3001               	movlw	1	; select bank2/3
  3093  0D0F  0087               	movwf	7
  3094  0D10  3F40               	moviw [0]fsr1
  3095  0D11  0021               	movlb	1	; select bank1
  3096  0D12  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3097  0D13  3F41               	moviw [1]fsr1
  3098  0D14  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3099  0D15  086A               	movf	??_vfpfcnvrt^(0+128),w
  3100  0D16  0084               	movwf	4
  3101  0D17  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3102  0D18  0085               	movwf	5
  3103  0D19  0012               	moviw fsr0++
  3104  0D1A  3A2A               	xorlw	42
  3105  0D1B  1D03               	btfss	3,2
  3106  0D1C  2D1E               	goto	u5621
  3107  0D1D  2D1F               	goto	u5620
  3108  0D1E                     u5621:	
  3109  0D1E  2D43               	goto	l4245
  3110  0D1F                     u5620:	
  3111  0D1F                     l4235:	
  3112                           
  3113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3114  0D1F  0020               	movlb	0	; select bank0
  3115  0D20  086E               	movf	vfpfcnvrt@fmt,w
  3116  0D21  0086               	movwf	6
  3117  0D22  3001               	movlw	1	; select bank2/3
  3118  0D23  0087               	movwf	7
  3119  0D24  3001               	movlw	1
  3120  0D25  0781               	addwf	1,f
  3121  0D26  3141               	addfsr 1,1
  3122  0D27  1803               	skipnc
  3123  0D28  0A81               	incf	1,f
  3124  0D29                     l4237:	
  3125                           
  3126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3127  0D29  086F               	movf	vfpfcnvrt@ap,w
  3128  0D2A  0086               	movwf	6
  3129  0D2B  3001               	movlw	1	; select bank2/3
  3130  0D2C  0087               	movwf	7
  3131  0D2D  0801               	movf	1,w
  3132  0D2E  0084               	movwf	4
  3133  0D2F  3001               	movlw	1	; select bank2/3
  3134  0D30  0085               	movwf	5
  3135  0D31  3002               	movlw	2
  3136  0D32  0781               	addwf	1,f
  3137  0D33  3F00               	moviw [0]fsr0
  3138  0D34  0022               	movlb	2	; select bank2
  3139  0D35  00DF               	movwf	_width^(0+256)
  3140  0D36  3F01               	moviw [1]fsr0
  3141  0D37  00E0               	movwf	(_width+1)^(0+256)
  3142  0D38                     l4239:	
  3143                           
  3144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3145  0D38  1FE0               	btfss	(_width+1)^(0+256),7
  3146  0D39  2D3B               	goto	u5631
  3147  0D3A  2D3C               	goto	u5630
  3148  0D3B                     u5631:	
  3149  0D3B  2D8E               	goto	l4255
  3150  0D3C                     u5630:	
  3151  0D3C                     l4241:	
  3152                           
  3153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3154  0D3C  1463               	bsf	_flags^(0+256),0
  3155  0D3D                     l4243:	
  3156                           
  3157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3158  0D3D  09DF               	comf	_width^(0+256),f
  3159  0D3E  09E0               	comf	(_width+1)^(0+256),f
  3160  0D3F  0ADF               	incf	_width^(0+256),f
  3161  0D40  1903               	skipnz
  3162  0D41  0AE0               	incf	(_width+1)^(0+256),f
  3163  0D42  2D8E               	goto	l4255
  3164  0D43                     l4245:	
  3165                           
  3166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3167  0D43  0020               	movlb	0	; select bank0
  3168  0D44  086E               	movf	vfpfcnvrt@fmt,w
  3169  0D45  0086               	movwf	6
  3170  0D46  3001               	movlw	1	; select bank2/3
  3171  0D47  0087               	movwf	7
  3172  0D48  3F40               	moviw [0]fsr1
  3173  0D49  00F6               	movwf	atoi@s
  3174  0D4A  3F41               	moviw [1]fsr1
  3175  0D4B  00F7               	movwf	atoi@s+1
  3176  0D4C  3192  22C2  318C   	fcall	_atoi
  3177  0D4F  0877               	movf	?_atoi+1,w
  3178  0D50  0022               	movlb	2	; select bank2
  3179  0D51  00E0               	movwf	(_width+1)^(0+256)
  3180  0D52  0876               	movf	?_atoi,w
  3181  0D53  00DF               	movwf	_width^(0+256)
  3182                           
  3183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3184  0D54  2D5F               	goto	l4249
  3185  0D55                     l4247:	
  3186                           
  3187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3188  0D55  0020               	movlb	0	; select bank0
  3189  0D56  086E               	movf	vfpfcnvrt@fmt,w
  3190  0D57  0086               	movwf	6
  3191  0D58  3001               	movlw	1	; select bank2/3
  3192  0D59  0087               	movwf	7
  3193  0D5A  3001               	movlw	1
  3194  0D5B  0781               	addwf	1,f
  3195  0D5C  3141               	addfsr 1,1
  3196  0D5D  1803               	skipnc
  3197  0D5E  0A81               	incf	1,f
  3198  0D5F                     l4249:	
  3199  0D5F  0020               	movlb	0	; select bank0
  3200  0D60  086E               	movf	vfpfcnvrt@fmt,w
  3201  0D61  0086               	movwf	6
  3202  0D62  3001               	movlw	1	; select bank2/3
  3203  0D63  0087               	movwf	7
  3204  0D64  3F40               	moviw [0]fsr1
  3205  0D65  0021               	movlb	1	; select bank1
  3206  0D66  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3207  0D67  3F41               	moviw [1]fsr1
  3208  0D68  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3209  0D69  086A               	movf	??_vfpfcnvrt^(0+128),w
  3210  0D6A  0084               	movwf	4
  3211  0D6B  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3212  0D6C  0085               	movwf	5
  3213  0D6D  0800               	movf	0,w	;code access
  3214  0D6E  3ED0               	addlw	208
  3215  0D6F  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3216  0D70  30FF               	movlw	255
  3217  0D71  1803               	skipnc
  3218  0D72  3000               	movlw	0
  3219  0D73  00ED               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  3220  0D74  3000               	movlw	0
  3221  0D75  026D               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  3222  0D76  300A               	movlw	10
  3223  0D77  1903               	skipnz
  3224  0D78  026C               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  3225  0D79  1C03               	skipc
  3226  0D7A  2D7C               	goto	u5641
  3227  0D7B  2D7E               	goto	u5640
  3228  0D7C                     u5641:	
  3229  0D7C  3001               	movlw	1
  3230  0D7D  2D7F               	goto	u5650
  3231  0D7E                     u5640:	
  3232  0D7E  3000               	movlw	0
  3233  0D7F                     u5650:	
  3234  0D7F  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3235  0D80  01EF               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  3236  0D81  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3237  0D82  0022               	movlb	2	; select bank2
  3238  0D83  00A0               	movwf	_vfpfcnvrt$844^(0+256)
  3239  0D84  0021               	movlb	1	; select bank1
  3240  0D85  086F               	movf	(??_vfpfcnvrt+5)^(0+128),w
  3241  0D86  0022               	movlb	2	; select bank2
  3242  0D87  00A1               	movwf	(_vfpfcnvrt$844+1)^(0+256)
  3243  0D88                     l4253:	
  3244  0D88  0820               	movf	_vfpfcnvrt$844^(0+256),w
  3245  0D89  0421               	iorwf	(_vfpfcnvrt$844+1)^(0+256),w
  3246  0D8A  1D03               	btfss	3,2
  3247  0D8B  2D8D               	goto	u5661
  3248  0D8C  2D8E               	goto	u5660
  3249  0D8D                     u5661:	
  3250  0D8D  2D55               	goto	l4247
  3251  0D8E                     u5660:	
  3252  0D8E                     l4255:	
  3253                           
  3254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3255  0D8E  0020               	movlb	0	; select bank0
  3256  0D8F  086E               	movf	vfpfcnvrt@fmt,w
  3257  0D90  0086               	movwf	6
  3258  0D91  3001               	movlw	1	; select bank2/3
  3259  0D92  0087               	movwf	7
  3260  0D93  3F40               	moviw [0]fsr1
  3261  0D94  0021               	movlb	1	; select bank1
  3262  0D95  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3263  0D96  3F41               	moviw [1]fsr1
  3264  0D97  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3265  0D98  086A               	movf	??_vfpfcnvrt^(0+128),w
  3266  0D99  0084               	movwf	4
  3267  0D9A  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3268  0D9B  0085               	movwf	5
  3269  0D9C  0012               	moviw fsr0++
  3270  0D9D  3A2E               	xorlw	46
  3271  0D9E  1D03               	btfss	3,2
  3272  0D9F  2DA1               	goto	u5671
  3273  0DA0  2DA2               	goto	u5670
  3274  0DA1                     u5671:	
  3275  0DA1  2E27               	goto	l4277
  3276  0DA2                     u5670:	
  3277  0DA2                     l4257:	
  3278                           
  3279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3280  0DA2  0022               	movlb	2	; select bank2
  3281  0DA3  01E1               	clrf	_prec^(0+256)
  3282  0DA4  01E2               	clrf	(_prec+1)^(0+256)
  3283  0DA5                     l4259:	
  3284                           
  3285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3286  0DA5  0020               	movlb	0	; select bank0
  3287  0DA6  086E               	movf	vfpfcnvrt@fmt,w
  3288  0DA7  0086               	movwf	6
  3289  0DA8  3001               	movlw	1	; select bank2/3
  3290  0DA9  0087               	movwf	7
  3291  0DAA  3001               	movlw	1
  3292  0DAB  0781               	addwf	1,f
  3293  0DAC  3141               	addfsr 1,1
  3294  0DAD  1803               	skipnc
  3295  0DAE  0A81               	incf	1,f
  3296  0DAF                     l4261:	
  3297                           
  3298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3299  0DAF  086E               	movf	vfpfcnvrt@fmt,w
  3300  0DB0  0086               	movwf	6
  3301  0DB1  3001               	movlw	1	; select bank2/3
  3302  0DB2  0087               	movwf	7
  3303  0DB3  3F40               	moviw [0]fsr1
  3304  0DB4  0021               	movlb	1	; select bank1
  3305  0DB5  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3306  0DB6  3F41               	moviw [1]fsr1
  3307  0DB7  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3308  0DB8  086A               	movf	??_vfpfcnvrt^(0+128),w
  3309  0DB9  0084               	movwf	4
  3310  0DBA  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3311  0DBB  0085               	movwf	5
  3312  0DBC  0012               	moviw fsr0++
  3313  0DBD  3A2A               	xorlw	42
  3314  0DBE  1D03               	btfss	3,2
  3315  0DBF  2DC1               	goto	u5681
  3316  0DC0  2DC2               	goto	u5680
  3317  0DC1                     u5681:	
  3318  0DC1  2DDC               	goto	l4267
  3319  0DC2                     u5680:	
  3320  0DC2                     l4263:	
  3321                           
  3322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3323  0DC2  0020               	movlb	0	; select bank0
  3324  0DC3  086E               	movf	vfpfcnvrt@fmt,w
  3325  0DC4  0086               	movwf	6
  3326  0DC5  3001               	movlw	1	; select bank2/3
  3327  0DC6  0087               	movwf	7
  3328  0DC7  3001               	movlw	1
  3329  0DC8  0781               	addwf	1,f
  3330  0DC9  3141               	addfsr 1,1
  3331  0DCA  1803               	skipnc
  3332  0DCB  0A81               	incf	1,f
  3333  0DCC                     l4265:	
  3334                           
  3335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3336  0DCC  086F               	movf	vfpfcnvrt@ap,w
  3337  0DCD  0086               	movwf	6
  3338  0DCE  3001               	movlw	1	; select bank2/3
  3339  0DCF  0087               	movwf	7
  3340  0DD0  0801               	movf	1,w
  3341  0DD1  0084               	movwf	4
  3342  0DD2  3001               	movlw	1	; select bank2/3
  3343  0DD3  0085               	movwf	5
  3344  0DD4  3002               	movlw	2
  3345  0DD5  0781               	addwf	1,f
  3346  0DD6  3F00               	moviw [0]fsr0
  3347  0DD7  0022               	movlb	2	; select bank2
  3348  0DD8  00E1               	movwf	_prec^(0+256)
  3349  0DD9  3F01               	moviw [1]fsr0
  3350  0DDA  00E2               	movwf	(_prec+1)^(0+256)
  3351                           
  3352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3353  0DDB  2E27               	goto	l4277
  3354  0DDC                     l4267:	
  3355                           
  3356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3357  0DDC  0020               	movlb	0	; select bank0
  3358  0DDD  086E               	movf	vfpfcnvrt@fmt,w
  3359  0DDE  0086               	movwf	6
  3360  0DDF  3001               	movlw	1	; select bank2/3
  3361  0DE0  0087               	movwf	7
  3362  0DE1  3F40               	moviw [0]fsr1
  3363  0DE2  00F6               	movwf	atoi@s
  3364  0DE3  3F41               	moviw [1]fsr1
  3365  0DE4  00F7               	movwf	atoi@s+1
  3366  0DE5  3192  22C2  318C   	fcall	_atoi
  3367  0DE8  0877               	movf	?_atoi+1,w
  3368  0DE9  0022               	movlb	2	; select bank2
  3369  0DEA  00E2               	movwf	(_prec+1)^(0+256)
  3370  0DEB  0876               	movf	?_atoi,w
  3371  0DEC  00E1               	movwf	_prec^(0+256)
  3372                           
  3373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3374  0DED  2DF8               	goto	l4271
  3375  0DEE                     l4269:	
  3376                           
  3377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3378  0DEE  0020               	movlb	0	; select bank0
  3379  0DEF  086E               	movf	vfpfcnvrt@fmt,w
  3380  0DF0  0086               	movwf	6
  3381  0DF1  3001               	movlw	1	; select bank2/3
  3382  0DF2  0087               	movwf	7
  3383  0DF3  3001               	movlw	1
  3384  0DF4  0781               	addwf	1,f
  3385  0DF5  3141               	addfsr 1,1
  3386  0DF6  1803               	skipnc
  3387  0DF7  0A81               	incf	1,f
  3388  0DF8                     l4271:	
  3389  0DF8  0020               	movlb	0	; select bank0
  3390  0DF9  086E               	movf	vfpfcnvrt@fmt,w
  3391  0DFA  0086               	movwf	6
  3392  0DFB  3001               	movlw	1	; select bank2/3
  3393  0DFC  0087               	movwf	7
  3394  0DFD  3F40               	moviw [0]fsr1
  3395  0DFE  0021               	movlb	1	; select bank1
  3396  0DFF  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3397  0E00  3F41               	moviw [1]fsr1
  3398  0E01  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3399  0E02  086A               	movf	??_vfpfcnvrt^(0+128),w
  3400  0E03  0084               	movwf	4
  3401  0E04  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3402  0E05  0085               	movwf	5
  3403  0E06  0800               	movf	0,w	;code access
  3404  0E07  3ED0               	addlw	208
  3405  0E08  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3406  0E09  30FF               	movlw	255
  3407  0E0A  1803               	skipnc
  3408  0E0B  3000               	movlw	0
  3409  0E0C  00ED               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  3410  0E0D  3000               	movlw	0
  3411  0E0E  026D               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  3412  0E0F  300A               	movlw	10
  3413  0E10  1903               	skipnz
  3414  0E11  026C               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  3415  0E12  1C03               	skipc
  3416  0E13  2E15               	goto	u5691
  3417  0E14  2E17               	goto	u5690
  3418  0E15                     u5691:	
  3419  0E15  3001               	movlw	1
  3420  0E16  2E18               	goto	u5700
  3421  0E17                     u5690:	
  3422  0E17  3000               	movlw	0
  3423  0E18                     u5700:	
  3424  0E18  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3425  0E19  01EF               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  3426  0E1A  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3427  0E1B  0022               	movlb	2	; select bank2
  3428  0E1C  00A2               	movwf	_vfpfcnvrt$845^(0+256)
  3429  0E1D  0021               	movlb	1	; select bank1
  3430  0E1E  086F               	movf	(??_vfpfcnvrt+5)^(0+128),w
  3431  0E1F  0022               	movlb	2	; select bank2
  3432  0E20  00A3               	movwf	(_vfpfcnvrt$845+1)^(0+256)
  3433  0E21                     l4275:	
  3434  0E21  0822               	movf	_vfpfcnvrt$845^(0+256),w
  3435  0E22  0423               	iorwf	(_vfpfcnvrt$845+1)^(0+256),w
  3436  0E23  1D03               	btfss	3,2
  3437  0E24  2E26               	goto	u5711
  3438  0E25  2E27               	goto	u5710
  3439  0E26                     u5711:	
  3440  0E26  2DEE               	goto	l4269
  3441  0E27                     u5710:	
  3442  0E27                     l4277:	
  3443                           
  3444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3445  0E27  0020               	movlb	0	; select bank0
  3446  0E28  086E               	movf	vfpfcnvrt@fmt,w
  3447  0E29  0086               	movwf	6
  3448  0E2A  3001               	movlw	1	; select bank2/3
  3449  0E2B  0087               	movwf	7
  3450  0E2C  3F40               	moviw [0]fsr1
  3451  0E2D  0021               	movlb	1	; select bank1
  3452  0E2E  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3453  0E2F  3F41               	moviw [1]fsr1
  3454  0E30  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3455  0E31  086A               	movf	??_vfpfcnvrt^(0+128),w
  3456  0E32  0084               	movwf	4
  3457  0E33  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3458  0E34  0085               	movwf	5
  3459  0E35  0800               	movf	0,w	;code access
  3460  0E36  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3461  0E37  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3462  0E38  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3463  0E39  00F6               	movwf	tolower@c
  3464  0E3A  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3465  0E3B  00F7               	movwf	tolower@c+1
  3466  0E3C  319B  2374  318C   	fcall	_tolower
  3467  0E3F  0876               	movf	?_tolower,w
  3468  0E40  0021               	movlb	1	; select bank1
  3469  0E41  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3470  0E42  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3471  0E43  0022               	movlb	2	; select bank2
  3472  0E44  00AA               	movwf	vfpfcnvrt@ct^(0+256)
  3473  0E45                     l4279:	
  3474                           
  3475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3476  0E45  082A               	movf	vfpfcnvrt@ct^(0+256),w
  3477  0E46  1903               	btfsc	3,2
  3478  0E47  2E49               	goto	u5721
  3479  0E48  2E4A               	goto	u5720
  3480  0E49                     u5721:	
  3481  0E49  2E91               	goto	l4287
  3482  0E4A                     u5720:	
  3483  0E4A                     l4281:	
  3484                           
  3485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3486  0E4A  0020               	movlb	0	; select bank0
  3487  0E4B  086E               	movf	vfpfcnvrt@fmt,w
  3488  0E4C  0086               	movwf	6
  3489  0E4D  3001               	movlw	1	; select bank2/3
  3490  0E4E  0087               	movwf	7
  3491  0E4F  3F40               	moviw [0]fsr1
  3492  0E50  0021               	movlb	1	; select bank1
  3493  0E51  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3494  0E52  3F41               	moviw [1]fsr1
  3495  0E53  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3496  0E54  3001               	movlw	1
  3497  0E55  076A               	addwf	??_vfpfcnvrt^(0+128),w
  3498  0E56  0084               	movwf	4
  3499  0E57  086B               	movf	(??_vfpfcnvrt^(0+128)+1),w
  3500  0E58  1803               	skipnc
  3501  0E59  0A6B               	incf	(??_vfpfcnvrt^(0+128)+1),w
  3502  0E5A  0085               	movwf	5
  3503  0E5B  0800               	movf	0,w	;code access
  3504  0E5C  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3505  0E5D  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3506  0E5E  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3507  0E5F  00F6               	movwf	tolower@c
  3508  0E60  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3509  0E61  00F7               	movwf	tolower@c+1
  3510  0E62  319B  2374  318C   	fcall	_tolower
  3511  0E65  0876               	movf	?_tolower,w
  3512  0E66  0021               	movlb	1	; select bank1
  3513  0E67  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3514  0E68  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3515  0E69  0022               	movlb	2	; select bank2
  3516  0E6A  00AB               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  3517  0E6B                     l4283:	
  3518                           
  3519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3520  0E6B  082B               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  3521  0E6C  1903               	btfsc	3,2
  3522  0E6D  2E6F               	goto	u5731
  3523  0E6E  2E70               	goto	u5730
  3524  0E6F                     u5731:	
  3525  0E6F  2E91               	goto	l4287
  3526  0E70                     u5730:	
  3527  0E70                     l4285:	
  3528                           
  3529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3530  0E70  0020               	movlb	0	; select bank0
  3531  0E71  086E               	movf	vfpfcnvrt@fmt,w
  3532  0E72  0086               	movwf	6
  3533  0E73  3001               	movlw	1	; select bank2/3
  3534  0E74  0087               	movwf	7
  3535  0E75  3F40               	moviw [0]fsr1
  3536  0E76  0021               	movlb	1	; select bank1
  3537  0E77  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3538  0E78  3F41               	moviw [1]fsr1
  3539  0E79  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3540  0E7A  3002               	movlw	2
  3541  0E7B  076A               	addwf	??_vfpfcnvrt^(0+128),w
  3542  0E7C  0084               	movwf	4
  3543  0E7D  086B               	movf	(??_vfpfcnvrt^(0+128)+1),w
  3544  0E7E  1803               	skipnc
  3545  0E7F  0A6B               	incf	(??_vfpfcnvrt^(0+128)+1),w
  3546  0E80  0085               	movwf	5
  3547  0E81  0800               	movf	0,w	;code access
  3548  0E82  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3549  0E83  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3550  0E84  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3551  0E85  00F6               	movwf	tolower@c
  3552  0E86  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3553  0E87  00F7               	movwf	tolower@c+1
  3554  0E88  319B  2374  318C   	fcall	_tolower
  3555  0E8B  0876               	movf	?_tolower,w
  3556  0E8C  0021               	movlb	1	; select bank1
  3557  0E8D  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3558  0E8E  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3559  0E8F  0022               	movlb	2	; select bank2
  3560  0E90  00AC               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  3561  0E91                     l4287:	
  3562                           
  3563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  3564  0E91  3066               	movlw	102
  3565  0E92  062A               	xorwf	vfpfcnvrt@ct^(0+256),w
  3566  0E93  1D03               	btfss	3,2
  3567  0E94  2E96               	goto	u5741
  3568  0E95  2E97               	goto	u5740
  3569  0E96                     u5741:	
  3570  0E96  2EEA               	goto	l4299
  3571  0E97                     u5740:	
  3572  0E97                     l4289:	
  3573                           
  3574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  3575  0E97  0020               	movlb	0	; select bank0
  3576  0E98  086E               	movf	vfpfcnvrt@fmt,w
  3577  0E99  0086               	movwf	6
  3578  0E9A  3001               	movlw	1	; select bank2/3
  3579  0E9B  0087               	movwf	7
  3580  0E9C  3F40               	moviw [0]fsr1
  3581  0E9D  0021               	movlb	1	; select bank1
  3582  0E9E  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3583  0E9F  3F41               	moviw [1]fsr1
  3584  0EA0  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3585  0EA1  086A               	movf	??_vfpfcnvrt^(0+128),w
  3586  0EA2  0084               	movwf	4
  3587  0EA3  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3588  0EA4  0085               	movwf	5
  3589  0EA5  0800               	movf	0,w	;code access
  3590  0EA6  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3591  0EA7  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3592  0EA8  0022               	movlb	2	; select bank2
  3593  0EA9  00AD               	movwf	vfpfcnvrt@c^(0+256)
  3594  0EAA                     l4291:	
  3595                           
  3596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  3597  0EAA  0020               	movlb	0	; select bank0
  3598  0EAB  086E               	movf	vfpfcnvrt@fmt,w
  3599  0EAC  0086               	movwf	6
  3600  0EAD  3001               	movlw	1	; select bank2/3
  3601  0EAE  0087               	movwf	7
  3602  0EAF  3001               	movlw	1
  3603  0EB0  0781               	addwf	1,f
  3604  0EB1  3141               	addfsr 1,1
  3605  0EB2  1803               	skipnc
  3606  0EB3  0A81               	incf	1,f
  3607  0EB4                     l4293:	
  3608                           
  3609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3610  0EB4  086F               	movf	vfpfcnvrt@ap,w
  3611  0EB5  0086               	movwf	6
  3612  0EB6  3001               	movlw	1	; select bank2/3
  3613  0EB7  0087               	movwf	7
  3614  0EB8  0801               	movf	1,w
  3615  0EB9  0084               	movwf	4
  3616  0EBA  3001               	movlw	1	; select bank2/3
  3617  0EBB  0085               	movwf	5
  3618  0EBC  3004               	movlw	4
  3619  0EBD  0781               	addwf	1,f
  3620  0EBE  3F00               	moviw [0]fsr0
  3621  0EBF  0022               	movlb	2	; select bank2
  3622  0EC0  00A6               	movwf	vfpfcnvrt@f^(0+256)
  3623  0EC1  3F01               	moviw [1]fsr0
  3624  0EC2  00A7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  3625  0EC3  3F02               	moviw [2]fsr0
  3626  0EC4  00A8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  3627  0EC5  3F03               	moviw [3]fsr0
  3628  0EC6  00A9               	movwf	(vfpfcnvrt@f+3)^(0+256)
  3629  0EC7                     l4295:	
  3630                           
  3631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  3632  0EC7  0829               	movf	(vfpfcnvrt@f+3)^(0+256),w
  3633  0EC8  0021               	movlb	1	; select bank1
  3634  0EC9  00AB               	movwf	(efgtoa@f+3)^(0+128)
  3635  0ECA  0022               	movlb	2	; select bank2
  3636  0ECB  0828               	movf	(vfpfcnvrt@f+2)^(0+256),w
  3637  0ECC  0021               	movlb	1	; select bank1
  3638  0ECD  00AA               	movwf	(efgtoa@f+2)^(0+128)
  3639  0ECE  0022               	movlb	2	; select bank2
  3640  0ECF  0827               	movf	(vfpfcnvrt@f+1)^(0+256),w
  3641  0ED0  0021               	movlb	1	; select bank1
  3642  0ED1  00A9               	movwf	(efgtoa@f+1)^(0+128)
  3643  0ED2  0022               	movlb	2	; select bank2
  3644  0ED3  0826               	movf	vfpfcnvrt@f^(0+256),w
  3645  0ED4  0021               	movlb	1	; select bank1
  3646  0ED5  00A8               	movwf	efgtoa@f^(0+128)
  3647  0ED6  0022               	movlb	2	; select bank2
  3648  0ED7  082D               	movf	vfpfcnvrt@c^(0+256),w
  3649  0ED8  0021               	movlb	1	; select bank1
  3650  0ED9  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3651  0EDA  086A               	movf	??_vfpfcnvrt^(0+128),w
  3652  0EDB  00AC               	movwf	efgtoa@c^(0+128)
  3653  0EDC  0022               	movlb	2	; select bank2
  3654  0EDD  082E               	movf	vfpfcnvrt@fp^(0+256),w
  3655  0EDE  3181  2100  318C   	fcall	_efgtoa
  3656  0EE1  0021               	movlb	1	; select bank1
  3657  0EE2  0829               	movf	(?_efgtoa+1)^(0+128),w
  3658  0EE3  0020               	movlb	0	; select bank0
  3659  0EE4  00EF               	movwf	?_vfpfcnvrt+1
  3660  0EE5  0021               	movlb	1	; select bank1
  3661  0EE6  0828               	movf	?_efgtoa^(0+128),w
  3662  0EE7  0020               	movlb	0	; select bank0
  3663  0EE8  00EE               	movwf	?_vfpfcnvrt
  3664  0EE9  2FFF               	goto	l590
  3665  0EEA                     l4299:	
  3666                           
  3667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3668  0EEA  3049               	movlw	low (STR_19| (0+32768))
  3669  0EEB  00F0               	movwf	strncmp@_r
  3670  0EEC  3098               	movlw	high (STR_19| (0+32768))
  3671  0EED  00F1               	movwf	strncmp@_r+1
  3672  0EEE  3002               	movlw	2
  3673  0EEF  00F2               	movwf	strncmp@n
  3674  0EF0  3000               	movlw	0
  3675  0EF1  00F3               	movwf	strncmp@n+1
  3676  0EF2  302A               	movlw	(low (vfpfcnvrt@ct| (0+256)))& (0+255)
  3677  0EF3  319F  27A5  318C   	fcall	_strncmp
  3678  0EF6  0870               	movf	?_strncmp,w
  3679  0EF7  0471               	iorwf	?_strncmp+1,w
  3680  0EF8  1D03               	btfss	3,2
  3681  0EF9  2EFB               	goto	u5751
  3682  0EFA  2EFC               	goto	u5750
  3683  0EFB                     u5751:	
  3684  0EFB  2F98               	goto	l4317
  3685  0EFC                     u5750:	
  3686  0EFC                     l4301:	
  3687                           
  3688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3689  0EFC  0020               	movlb	0	; select bank0
  3690  0EFD  086E               	movf	vfpfcnvrt@fmt,w
  3691  0EFE  0086               	movwf	6
  3692  0EFF  3001               	movlw	1	; select bank2/3
  3693  0F00  0087               	movwf	7
  3694  0F01  3F40               	moviw [0]fsr1
  3695  0F02  0021               	movlb	1	; select bank1
  3696  0F03  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3697  0F04  3F41               	moviw [1]fsr1
  3698  0F05  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3699  0F06  3001               	movlw	1
  3700  0F07  076A               	addwf	??_vfpfcnvrt^(0+128),w
  3701  0F08  0084               	movwf	4
  3702  0F09  086B               	movf	(??_vfpfcnvrt^(0+128)+1),w
  3703  0F0A  1803               	skipnc
  3704  0F0B  0A6B               	incf	(??_vfpfcnvrt^(0+128)+1),w
  3705  0F0C  0085               	movwf	5
  3706  0F0D  0800               	movf	0,w	;code access
  3707  0F0E  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3708  0F0F  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3709  0F10  0022               	movlb	2	; select bank2
  3710  0F11  00AD               	movwf	vfpfcnvrt@c^(0+256)
  3711  0F12  0020               	movlb	0	; select bank0
  3712  0F13  086E               	movf	vfpfcnvrt@fmt,w
  3713  0F14  0086               	movwf	6
  3714  0F15  3001               	movlw	1	; select bank2/3
  3715  0F16  0087               	movwf	7
  3716  0F17  3F40               	moviw [0]fsr1
  3717  0F18  0021               	movlb	1	; select bank1
  3718  0F19  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3719  0F1A  3F41               	moviw [1]fsr1
  3720  0F1B  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3721  0F1C  086A               	movf	??_vfpfcnvrt^(0+128),w
  3722  0F1D  0084               	movwf	4
  3723  0F1E  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3724  0F1F  0085               	movwf	5
  3725  0F20  0800               	movf	0,w	;code access
  3726  0F21  3EBF               	addlw	191
  3727  0F22  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3728  0F23  30FF               	movlw	255
  3729  0F24  1803               	skipnc
  3730  0F25  3000               	movlw	0
  3731  0F26  00ED               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  3732  0F27  3000               	movlw	0
  3733  0F28  026D               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  3734  0F29  301A               	movlw	26
  3735  0F2A  1903               	skipnz
  3736  0F2B  026C               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  3737  0F2C  1C03               	skipc
  3738  0F2D  2F2F               	goto	u5761
  3739  0F2E  2F31               	goto	u5760
  3740  0F2F                     u5761:	
  3741  0F2F  3001               	movlw	1
  3742  0F30  2F32               	goto	u5770
  3743  0F31                     u5760:	
  3744  0F31  3000               	movlw	0
  3745  0F32                     u5770:	
  3746  0F32  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3747  0F33  01EF               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  3748  0F34  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3749  0F35  0022               	movlb	2	; select bank2
  3750  0F36  00A4               	movwf	_vfpfcnvrt$849^(0+256)
  3751  0F37  0021               	movlb	1	; select bank1
  3752  0F38  086F               	movf	(??_vfpfcnvrt+5)^(0+128),w
  3753  0F39  0022               	movlb	2	; select bank2
  3754  0F3A  00A5               	movwf	(_vfpfcnvrt$849+1)^(0+256)
  3755  0F3B                     l4305:	
  3756  0F3B  0824               	movf	_vfpfcnvrt$849^(0+256),w
  3757  0F3C  0425               	iorwf	(_vfpfcnvrt$849+1)^(0+256),w
  3758  0F3D  1903               	btfsc	3,2
  3759  0F3E  2F40               	goto	u5781
  3760  0F3F  2F41               	goto	u5780
  3761  0F40                     u5781:	
  3762  0F40  2F56               	goto	l4309
  3763  0F41                     u5780:	
  3764  0F41                     l4307:	
  3765                           
  3766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3767  0F41  0020               	movlb	0	; select bank0
  3768  0F42  086F               	movf	vfpfcnvrt@ap,w
  3769  0F43  0086               	movwf	6
  3770  0F44  3001               	movlw	1	; select bank2/3
  3771  0F45  0087               	movwf	7
  3772  0F46  0801               	movf	1,w
  3773  0F47  0084               	movwf	4
  3774  0F48  3001               	movlw	1	; select bank2/3
  3775  0F49  0085               	movwf	5
  3776  0F4A  3004               	movlw	4
  3777  0F4B  0781               	addwf	1,f
  3778  0F4C  3F00               	moviw [0]fsr0
  3779  0F4D  0022               	movlb	2	; select bank2
  3780  0F4E  00A6               	movwf	vfpfcnvrt@f^(0+256)
  3781  0F4F  3F01               	moviw [1]fsr0
  3782  0F50  00A7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  3783  0F51  3F02               	moviw [2]fsr0
  3784  0F52  00A8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  3785  0F53  3F03               	moviw [3]fsr0
  3786  0F54  00A9               	movwf	(vfpfcnvrt@f+3)^(0+256)
  3787                           
  3788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  3789  0F55  2F6A               	goto	l4311
  3790  0F56                     l4309:	
  3791                           
  3792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3793  0F56  0020               	movlb	0	; select bank0
  3794  0F57  086F               	movf	vfpfcnvrt@ap,w
  3795  0F58  0086               	movwf	6
  3796  0F59  3001               	movlw	1	; select bank2/3
  3797  0F5A  0087               	movwf	7
  3798  0F5B  0801               	movf	1,w
  3799  0F5C  0084               	movwf	4
  3800  0F5D  3001               	movlw	1	; select bank2/3
  3801  0F5E  0085               	movwf	5
  3802  0F5F  3004               	movlw	4
  3803  0F60  0781               	addwf	1,f
  3804  0F61  3F00               	moviw [0]fsr0
  3805  0F62  0022               	movlb	2	; select bank2
  3806  0F63  00A6               	movwf	vfpfcnvrt@f^(0+256)
  3807  0F64  3F01               	moviw [1]fsr0
  3808  0F65  00A7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  3809  0F66  3F02               	moviw [2]fsr0
  3810  0F67  00A8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  3811  0F68  3F03               	moviw [3]fsr0
  3812  0F69  00A9               	movwf	(vfpfcnvrt@f+3)^(0+256)
  3813  0F6A                     l4311:	
  3814                           
  3815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3816  0F6A  0020               	movlb	0	; select bank0
  3817  0F6B  086E               	movf	vfpfcnvrt@fmt,w
  3818  0F6C  0086               	movwf	6
  3819  0F6D  3001               	movlw	1	; select bank2/3
  3820  0F6E  0087               	movwf	7
  3821  0F6F  3002               	movlw	2
  3822  0F70  0781               	addwf	1,f
  3823  0F71  3141               	addfsr 1,1
  3824  0F72  1803               	skipnc
  3825  0F73  0A81               	incf	1,f
  3826  0F74                     l4313:	
  3827                           
  3828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  3829  0F74  0022               	movlb	2	; select bank2
  3830  0F75  0829               	movf	(vfpfcnvrt@f+3)^(0+256),w
  3831  0F76  0021               	movlb	1	; select bank1
  3832  0F77  00AB               	movwf	(efgtoa@f+3)^(0+128)
  3833  0F78  0022               	movlb	2	; select bank2
  3834  0F79  0828               	movf	(vfpfcnvrt@f+2)^(0+256),w
  3835  0F7A  0021               	movlb	1	; select bank1
  3836  0F7B  00AA               	movwf	(efgtoa@f+2)^(0+128)
  3837  0F7C  0022               	movlb	2	; select bank2
  3838  0F7D  0827               	movf	(vfpfcnvrt@f+1)^(0+256),w
  3839  0F7E  0021               	movlb	1	; select bank1
  3840  0F7F  00A9               	movwf	(efgtoa@f+1)^(0+128)
  3841  0F80  0022               	movlb	2	; select bank2
  3842  0F81  0826               	movf	vfpfcnvrt@f^(0+256),w
  3843  0F82  0021               	movlb	1	; select bank1
  3844  0F83  00A8               	movwf	efgtoa@f^(0+128)
  3845  0F84  0022               	movlb	2	; select bank2
  3846  0F85  082D               	movf	vfpfcnvrt@c^(0+256),w
  3847  0F86  0021               	movlb	1	; select bank1
  3848  0F87  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3849  0F88  086A               	movf	??_vfpfcnvrt^(0+128),w
  3850  0F89  00AC               	movwf	efgtoa@c^(0+128)
  3851  0F8A  0022               	movlb	2	; select bank2
  3852  0F8B  082E               	movf	vfpfcnvrt@fp^(0+256),w
  3853  0F8C  3181  2100  318C   	fcall	_efgtoa
  3854  0F8F  0021               	movlb	1	; select bank1
  3855  0F90  0829               	movf	(?_efgtoa+1)^(0+128),w
  3856  0F91  0020               	movlb	0	; select bank0
  3857  0F92  00EF               	movwf	?_vfpfcnvrt+1
  3858  0F93  0021               	movlb	1	; select bank1
  3859  0F94  0828               	movf	?_efgtoa^(0+128),w
  3860  0F95  0020               	movlb	0	; select bank0
  3861  0F96  00EE               	movwf	?_vfpfcnvrt
  3862  0F97  2FFF               	goto	l590
  3863  0F98                     l4317:	
  3864                           
  3865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3866  0F98  0020               	movlb	0	; select bank0
  3867  0F99  086E               	movf	vfpfcnvrt@fmt,w
  3868  0F9A  0086               	movwf	6
  3869  0F9B  3001               	movlw	1	; select bank2/3
  3870  0F9C  0087               	movwf	7
  3871  0F9D  3F40               	moviw [0]fsr1
  3872  0F9E  0021               	movlb	1	; select bank1
  3873  0F9F  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3874  0FA0  3F41               	moviw [1]fsr1
  3875  0FA1  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3876  0FA2  086A               	movf	??_vfpfcnvrt^(0+128),w
  3877  0FA3  0084               	movwf	4
  3878  0FA4  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3879  0FA5  0085               	movwf	5
  3880  0FA6  0012               	moviw fsr0++
  3881  0FA7  3A25               	xorlw	37
  3882  0FA8  1D03               	btfss	3,2
  3883  0FA9  2FAB               	goto	u5791
  3884  0FAA  2FAC               	goto	u5790
  3885  0FAB                     u5791:	
  3886  0FAB  2FC9               	goto	l4327
  3887  0FAC                     u5790:	
  3888  0FAC                     l4319:	
  3889                           
  3890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3891  0FAC  0020               	movlb	0	; select bank0
  3892  0FAD  086E               	movf	vfpfcnvrt@fmt,w
  3893  0FAE  0086               	movwf	6
  3894  0FAF  3001               	movlw	1	; select bank2/3
  3895  0FB0  0087               	movwf	7
  3896  0FB1  3001               	movlw	1
  3897  0FB2  0781               	addwf	1,f
  3898  0FB3  3141               	addfsr 1,1
  3899  0FB4  1803               	skipnc
  3900  0FB5  0A81               	incf	1,f
  3901  0FB6                     l4321:	
  3902                           
  3903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3904  0FB6  3025               	movlw	37
  3905  0FB7  00F0               	movwf	fputc@c
  3906  0FB8  3000               	movlw	0
  3907  0FB9  00F1               	movwf	fputc@c+1
  3908  0FBA  0022               	movlb	2	; select bank2
  3909  0FBB  082E               	movf	vfpfcnvrt@fp^(0+256),w
  3910  0FBC  0021               	movlb	1	; select bank1
  3911  0FBD  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3912  0FBE  086A               	movf	??_vfpfcnvrt^(0+128),w
  3913  0FBF  00F2               	movwf	fputc@fp
  3914  0FC0  319E  269C  318C   	fcall	_fputc
  3915  0FC3                     l4323:	
  3916                           
  3917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3918  0FC3  3001               	movlw	1
  3919  0FC4  0020               	movlb	0	; select bank0
  3920  0FC5  00EE               	movwf	?_vfpfcnvrt
  3921  0FC6  3000               	movlw	0
  3922  0FC7  00EF               	movwf	?_vfpfcnvrt+1
  3923  0FC8  2FFF               	goto	l590
  3924  0FC9                     l4327:	
  3925                           
  3926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3927  0FC9  0020               	movlb	0	; select bank0
  3928  0FCA  086E               	movf	vfpfcnvrt@fmt,w
  3929  0FCB  0086               	movwf	6
  3930  0FCC  3001               	movlw	1	; select bank2/3
  3931  0FCD  0087               	movwf	7
  3932  0FCE  3001               	movlw	1
  3933  0FCF  0781               	addwf	1,f
  3934  0FD0  3141               	addfsr 1,1
  3935  0FD1  1803               	skipnc
  3936  0FD2  0A81               	incf	1,f
  3937  0FD3                     l4329:	
  3938                           
  3939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3940  0FD3  01EE               	clrf	?_vfpfcnvrt
  3941  0FD4  01EF               	clrf	?_vfpfcnvrt+1
  3942  0FD5  2FFF               	goto	l590
  3943  0FD6                     l4333:	
  3944                           
  3945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3946  0FD6  0020               	movlb	0	; select bank0
  3947  0FD7  086E               	movf	vfpfcnvrt@fmt,w
  3948  0FD8  0086               	movwf	6
  3949  0FD9  3001               	movlw	1	; select bank2/3
  3950  0FDA  0087               	movwf	7
  3951  0FDB  3F40               	moviw [0]fsr1
  3952  0FDC  0021               	movlb	1	; select bank1
  3953  0FDD  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3954  0FDE  3F41               	moviw [1]fsr1
  3955  0FDF  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3956  0FE0  086A               	movf	??_vfpfcnvrt^(0+128),w
  3957  0FE1  0084               	movwf	4
  3958  0FE2  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3959  0FE3  0085               	movwf	5
  3960  0FE4  0800               	movf	0,w	;code access
  3961  0FE5  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3962  0FE6  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3963  0FE7  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3964  0FE8  00F0               	movwf	fputc@c
  3965  0FE9  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3966  0FEA  00F1               	movwf	fputc@c+1
  3967  0FEB  0022               	movlb	2	; select bank2
  3968  0FEC  082E               	movf	vfpfcnvrt@fp^(0+256),w
  3969  0FED  0021               	movlb	1	; select bank1
  3970  0FEE  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3971  0FEF  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3972  0FF0  00F2               	movwf	fputc@fp
  3973  0FF1  319E  269C  318C   	fcall	_fputc
  3974  0FF4                     l4335:	
  3975                           
  3976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3977  0FF4  0020               	movlb	0	; select bank0
  3978  0FF5  086E               	movf	vfpfcnvrt@fmt,w
  3979  0FF6  0086               	movwf	6
  3980  0FF7  3001               	movlw	1	; select bank2/3
  3981  0FF8  0087               	movwf	7
  3982  0FF9  3001               	movlw	1
  3983  0FFA  0781               	addwf	1,f
  3984  0FFB  3141               	addfsr 1,1
  3985  0FFC  1803               	skipnc
  3986  0FFD  0A81               	incf	1,f
  3987  0FFE  2FC3               	goto	l4323
  3988  0FFF                     l590:	
  3989  0FFF  0008               	return
  3990  1000                     __end_of_vfpfcnvrt:	
  3991                           
  3992                           	psect	text4
  3993  1FA5                     __ptext4:	
  3994 ;; *************** function _strncmp *****************
  3995 ;; Defined at:
  3996 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  _l              1    wreg     PTR const unsigned char 
  3999 ;;		 -> vfpfcnvrt@ct(3), 
  4000 ;;  _r              2    0[COMMON] PTR const unsigned char 
  4001 ;;		 -> STR_21(3), 
  4002 ;;  n               2    2[COMMON] unsigned int 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  _l              1    5[COMMON] PTR const unsigned char 
  4005 ;;		 -> vfpfcnvrt@ct(3), 
  4006 ;;  r               2    6[COMMON] PTR const unsigned char 
  4007 ;;		 -> STR_21(3), 
  4008 ;;  l               1    8[COMMON] PTR const unsigned char 
  4009 ;;		 -> vfpfcnvrt@ct(3), 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  2    0[COMMON] int 
  4012 ;; Registers used:
  4013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4022 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4023 ;;Total ram usage:        9 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_vfpfcnvrt
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           
  4033                           ;psect for function _strncmp
  4034  1FA5                     _strncmp:	
  4035                           
  4036                           ;incstack = 0
  4037                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  4038                           ;strncmp@_l stored from wreg
  4039  1FA5  00F5               	movwf	strncmp@_l
  4040  1FA6                     l4155:	
  4041  1FA6  0875               	movf	strncmp@_l,w
  4042  1FA7  00F4               	movwf	??_strncmp
  4043  1FA8  0874               	movf	??_strncmp,w
  4044  1FA9  00F8               	movwf	strncmp@l
  4045  1FAA  0871               	movf	strncmp@_r+1,w
  4046  1FAB  00F7               	movwf	strncmp@r+1
  4047  1FAC  0870               	movf	strncmp@_r,w
  4048  1FAD  00F6               	movwf	strncmp@r
  4049  1FAE                     l4157:	
  4050  1FAE  3001               	movlw	1
  4051  1FAF  02F2               	subwf	strncmp@n,f
  4052  1FB0  3000               	movlw	0
  4053  1FB1  3BF3               	subwfb	strncmp@n+1,f
  4054  1FB2  0A72               	incf	strncmp@n,w
  4055  1FB3  1D03               	skipz
  4056  1FB4  2FB9               	goto	u5541
  4057  1FB5  0A73               	incf	strncmp@n+1,w
  4058  1FB6  1D03               	btfss	3,2
  4059  1FB7  2FB9               	goto	u5541
  4060  1FB8  2FBA               	goto	u5540
  4061  1FB9                     u5541:	
  4062  1FB9  2FC9               	goto	l4169
  4063  1FBA                     u5540:	
  4064  1FBA                     l4159:	
  4065  1FBA  01F0               	clrf	?_strncmp
  4066  1FBB  01F1               	clrf	?_strncmp+1
  4067  1FBC  2FFF               	goto	l1179
  4068  1FBD                     l4163:	
  4069  1FBD  3001               	movlw	1
  4070  1FBE  00F4               	movwf	??_strncmp
  4071  1FBF  0874               	movf	??_strncmp,w
  4072  1FC0  07F8               	addwf	strncmp@l,f
  4073  1FC1                     l4165:	
  4074  1FC1  3001               	movlw	1
  4075  1FC2  07F6               	addwf	strncmp@r,f
  4076  1FC3  3000               	movlw	0
  4077  1FC4  3DF7               	addwfc	strncmp@r+1,f
  4078  1FC5                     l4167:	
  4079  1FC5  3001               	movlw	1
  4080  1FC6  02F2               	subwf	strncmp@n,f
  4081  1FC7  3000               	movlw	0
  4082  1FC8  3BF3               	subwfb	strncmp@n+1,f
  4083  1FC9                     l4169:	
  4084  1FC9  0878               	movf	strncmp@l,w
  4085  1FCA  0086               	movwf	6
  4086  1FCB  3001               	movlw	1	; select bank2/3
  4087  1FCC  0087               	movwf	7
  4088  1FCD  0801               	movf	1,w
  4089  1FCE  1903               	btfsc	3,2
  4090  1FCF  2FD1               	goto	u5551
  4091  1FD0  2FD2               	goto	u5550
  4092  1FD1                     u5551:	
  4093  1FD1  2FF1               	goto	l4177
  4094  1FD2                     u5550:	
  4095  1FD2                     l4171:	
  4096  1FD2  0876               	movf	strncmp@r,w
  4097  1FD3  0084               	movwf	4
  4098  1FD4  0877               	movf	strncmp@r+1,w
  4099  1FD5  0085               	movwf	5
  4100  1FD6  0012               	moviw fsr0++
  4101  1FD7  1903               	btfsc	3,2
  4102  1FD8  2FDA               	goto	u5561
  4103  1FD9  2FDB               	goto	u5560
  4104  1FDA                     u5561:	
  4105  1FDA  2FF1               	goto	l4177
  4106  1FDB                     u5560:	
  4107  1FDB                     l4173:	
  4108  1FDB  0872               	movf	strncmp@n,w
  4109  1FDC  0473               	iorwf	strncmp@n+1,w
  4110  1FDD  1903               	btfsc	3,2
  4111  1FDE  2FE0               	goto	u5571
  4112  1FDF  2FE1               	goto	u5570
  4113  1FE0                     u5571:	
  4114  1FE0  2FF1               	goto	l4177
  4115  1FE1                     u5570:	
  4116  1FE1                     l4175:	
  4117  1FE1  0876               	movf	strncmp@r,w
  4118  1FE2  0084               	movwf	4
  4119  1FE3  0877               	movf	strncmp@r+1,w
  4120  1FE4  0085               	movwf	5
  4121  1FE5  0800               	movf	0,w	;code access
  4122  1FE6  00F4               	movwf	??_strncmp
  4123  1FE7  0878               	movf	strncmp@l,w
  4124  1FE8  0086               	movwf	6
  4125  1FE9  3001               	movlw	1	; select bank2/3
  4126  1FEA  0087               	movwf	7
  4127  1FEB  0801               	movf	1,w
  4128  1FEC  0674               	xorwf	??_strncmp,w
  4129  1FED  1903               	skipnz
  4130  1FEE  2FF0               	goto	u5581
  4131  1FEF  2FF1               	goto	u5580
  4132  1FF0                     u5581:	
  4133  1FF0  2FBD               	goto	l4163
  4134  1FF1                     u5580:	
  4135  1FF1                     l4177:	
  4136  1FF1  0878               	movf	strncmp@l,w
  4137  1FF2  0086               	movwf	6
  4138  1FF3  3001               	movlw	1	; select bank2/3
  4139  1FF4  0087               	movwf	7
  4140  1FF5  0876               	movf	strncmp@r,w
  4141  1FF6  0084               	movwf	4
  4142  1FF7  0877               	movf	strncmp@r+1,w
  4143  1FF8  0085               	movwf	5
  4144  1FF9  0800               	movf	0,w	;code access
  4145  1FFA  0201               	subwf	1,w
  4146  1FFB  00F0               	movwf	?_strncmp
  4147  1FFC  01F1               	clrf	?_strncmp+1
  4148  1FFD  1C03               	skipc
  4149  1FFE  03F1               	decf	?_strncmp+1,f
  4150  1FFF                     l1179:	
  4151  1FFF  0008               	return
  4152  2000                     __end_of_strncmp:	
  4153                           
  4154                           	psect	text5
  4155  0100                     __ptext5:	
  4156 ;; *************** function _efgtoa *****************
  4157 ;; Defined at:
  4158 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  fp              1    wreg     PTR struct _IO_FILE
  4161 ;;		 -> sprintf@f(5), 
  4162 ;;  f               4    8[BANK1 ] PTR struct _IO_FILE
  4163 ;;  c               1   12[BANK1 ] unsigned char 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  fp              1   45[BANK1 ] PTR struct _IO_FILE
  4166 ;;		 -> sprintf@f(5), 
  4167 ;;  u               4   70[BANK1 ] PTR struct _IO_FILE
  4168 ;;  g               4   62[BANK1 ] PTR struct _IO_FILE
  4169 ;;  l               4   56[BANK1 ] PTR struct _IO_FILE
  4170 ;;  h               4   52[BANK1 ] PTR struct _IO_FILE
  4171 ;;  ou              4   17[BANK1 ] PTR struct _IO_FILE
  4172 ;;  n               2   68[BANK1 ] int 
  4173 ;;  e               2   66[BANK1 ] int 
  4174 ;;  i               2   60[BANK1 ] int 
  4175 ;;  w               2   49[BANK1 ] int 
  4176 ;;  p               2   46[BANK1 ] int 
  4177 ;;  sign            2   43[BANK1 ] int 
  4178 ;;  d               2   41[BANK1 ] int 
  4179 ;;  ne              2   39[BANK1 ] int 
  4180 ;;  m               2   37[BANK1 ] int 
  4181 ;;  pp              2   35[BANK1 ] int 
  4182 ;;  t               2   33[BANK1 ] int 
  4183 ;;  mode            1   51[BANK1 ] unsigned char 
  4184 ;;  nmode           1   48[BANK1 ] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  2    8[BANK1 ] int 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4194 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Totals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;Total ram usage:       66 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    4
  4201 ;; This function calls:
  4202 ;;		___awdiv
  4203 ;;		___awmod
  4204 ;;		___fladd
  4205 ;;		___fldiv
  4206 ;;		___fleq
  4207 ;;		___flge
  4208 ;;		___flmul
  4209 ;;		___flneg
  4210 ;;		___flsub
  4211 ;;		___fltol
  4212 ;;		___fpclassifyf
  4213 ;;		_floorf
  4214 ;;		_isupper
  4215 ;;		_pad
  4216 ;;		_strcpy
  4217 ;;		_tolower
  4218 ;; This function is called by:
  4219 ;;		_vfpfcnvrt
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           
  4224                           ;psect for function _efgtoa
  4225  0100                     _efgtoa:	
  4226                           
  4227                           ;incstack = 0
  4228                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4229                           ;efgtoa@fp stored from wreg
  4230  0100  0021               	movlb	1	; select bank1
  4231  0101  00CD               	movwf	efgtoa@fp^(0+128)
  4232  0102                     l3817:	
  4233                           
  4234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  4235  0102  01CB               	clrf	efgtoa@sign^(0+128)
  4236  0103  01CC               	clrf	(efgtoa@sign+1)^(0+128)
  4237  0104                     l3819:	
  4238                           
  4239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  4240  0104  082B               	movf	(efgtoa@f+3)^(0+128),w
  4241  0105  00E1               	movwf	(efgtoa@g+3)^(0+128)
  4242  0106  082A               	movf	(efgtoa@f+2)^(0+128),w
  4243  0107  00E0               	movwf	(efgtoa@g+2)^(0+128)
  4244  0108  0829               	movf	(efgtoa@f+1)^(0+128),w
  4245  0109  00DF               	movwf	(efgtoa@g+1)^(0+128)
  4246  010A  0828               	movf	efgtoa@f^(0+128),w
  4247  010B  00DE               	movwf	efgtoa@g^(0+128)
  4248  010C                     l3821:	
  4249                           
  4250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  4251  010C  0861               	movf	(efgtoa@g+3)^(0+128),w
  4252  010D  0020               	movlb	0	; select bank0
  4253  010E  00C3               	movwf	___flge@ff1+3
  4254  010F  0021               	movlb	1	; select bank1
  4255  0110  0860               	movf	(efgtoa@g+2)^(0+128),w
  4256  0111  0020               	movlb	0	; select bank0
  4257  0112  00C2               	movwf	___flge@ff1+2
  4258  0113  0021               	movlb	1	; select bank1
  4259  0114  085F               	movf	(efgtoa@g+1)^(0+128),w
  4260  0115  0020               	movlb	0	; select bank0
  4261  0116  00C1               	movwf	___flge@ff1+1
  4262  0117  0021               	movlb	1	; select bank1
  4263  0118  085E               	movf	efgtoa@g^(0+128),w
  4264  0119  0020               	movlb	0	; select bank0
  4265  011A  00C0               	movwf	___flge@ff1
  4266  011B  3000               	movlw	0
  4267  011C  00C7               	movwf	___flge@ff2+3
  4268  011D  3000               	movlw	0
  4269  011E  00C6               	movwf	___flge@ff2+2
  4270  011F  3000               	movlw	0
  4271  0120  00C5               	movwf	___flge@ff2+1
  4272  0121  3000               	movlw	0
  4273  0122  00C4               	movwf	___flge@ff2
  4274  0123  3191  218A  3181   	fcall	___flge
  4275  0126  1803               	btfsc	3,0
  4276  0127  2929               	goto	u4951
  4277  0128  292A               	goto	u4950
  4278  0129                     u4951:	
  4279  0129  2943               	goto	l3827
  4280  012A                     u4950:	
  4281  012A                     l3823:	
  4282                           
  4283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  4284  012A  3001               	movlw	1
  4285  012B  0021               	movlb	1	; select bank1
  4286  012C  00CB               	movwf	efgtoa@sign^(0+128)
  4287  012D  3000               	movlw	0
  4288  012E  00CC               	movwf	(efgtoa@sign^(0+128)+1)
  4289  012F                     l3825:	
  4290                           
  4291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  4292  012F  0861               	movf	(efgtoa@g+3)^(0+128),w
  4293  0130  00F3               	movwf	___flneg@f1+3
  4294  0131  0860               	movf	(efgtoa@g+2)^(0+128),w
  4295  0132  00F2               	movwf	___flneg@f1+2
  4296  0133  085F               	movf	(efgtoa@g+1)^(0+128),w
  4297  0134  00F1               	movwf	___flneg@f1+1
  4298  0135  085E               	movf	efgtoa@g^(0+128),w
  4299  0136  00F0               	movwf	___flneg@f1
  4300  0137  319A  221D  3181   	fcall	___flneg
  4301  013A  0873               	movf	?___flneg+3,w
  4302  013B  0021               	movlb	1	; select bank1
  4303  013C  00E1               	movwf	(efgtoa@g+3)^(0+128)
  4304  013D  0872               	movf	?___flneg+2,w
  4305  013E  00E0               	movwf	(efgtoa@g+2)^(0+128)
  4306  013F  0871               	movf	?___flneg+1,w
  4307  0140  00DF               	movwf	(efgtoa@g+1)^(0+128)
  4308  0141  0870               	movf	?___flneg,w
  4309  0142  00DE               	movwf	efgtoa@g^(0+128)
  4310  0143                     l3827:	
  4311                           
  4312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  4313  0143  0021               	movlb	1	; select bank1
  4314  0144  01E4               	clrf	efgtoa@n^(0+128)
  4315  0145  01E5               	clrf	(efgtoa@n+1)^(0+128)
  4316  0146                     l3829:	
  4317                           
  4318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  4319  0146  0022               	movlb	2	; select bank2
  4320  0147  0860               	movf	(_width+1)^(0+256),w
  4321  0148  0021               	movlb	1	; select bank1
  4322  0149  00D2               	movwf	(efgtoa@w+1)^(0+128)
  4323  014A  0022               	movlb	2	; select bank2
  4324  014B  085F               	movf	_width^(0+256),w
  4325  014C  0021               	movlb	1	; select bank1
  4326  014D  00D1               	movwf	efgtoa@w^(0+128)
  4327  014E                     l3831:	
  4328                           
  4329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  4330  014E  084B               	movf	efgtoa@sign^(0+128),w
  4331  014F  044C               	iorwf	(efgtoa@sign+1)^(0+128),w
  4332  0150  1D03               	btfss	3,2
  4333  0151  2953               	goto	u4961
  4334  0152  2954               	goto	u4960
  4335  0153                     u4961:	
  4336  0153  2959               	goto	l3835
  4337  0154                     u4960:	
  4338  0154                     l3833:	
  4339  0154  0022               	movlb	2	; select bank2
  4340  0155  1D63               	btfss	_flags^(0+256),2
  4341  0156  2958               	goto	u4971
  4342  0157  2959               	goto	u4970
  4343  0158                     u4971:	
  4344  0158  2977               	goto	l3847
  4345  0159                     u4970:	
  4346  0159                     l3835:	
  4347                           
  4348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  4349  0159  0021               	movlb	1	; select bank1
  4350  015A  084B               	movf	efgtoa@sign^(0+128),w
  4351  015B  044C               	iorwf	(efgtoa@sign+1)^(0+128),w
  4352  015C  1D03               	btfss	3,2
  4353  015D  295F               	goto	u4981
  4354  015E  2960               	goto	u4980
  4355  015F                     u4981:	
  4356  015F  2965               	goto	l3839
  4357  0160                     u4980:	
  4358  0160                     l3837:	
  4359  0160  302B               	movlw	43
  4360  0161  00B5               	movwf	_efgtoa$818^(0+128)
  4361  0162  3000               	movlw	0
  4362  0163  00B6               	movwf	(_efgtoa$818^(0+128)+1)
  4363  0164  2969               	goto	l3841
  4364  0165                     l3839:	
  4365  0165  302D               	movlw	45
  4366  0166  00B5               	movwf	_efgtoa$818^(0+128)
  4367  0167  3000               	movlw	0
  4368  0168  00B6               	movwf	(_efgtoa$818^(0+128)+1)
  4369  0169                     l3841:	
  4370  0169  0835               	movf	_efgtoa$818^(0+128),w
  4371  016A  00AD               	movwf	??_efgtoa^(0+128)
  4372  016B  082D               	movf	??_efgtoa^(0+128),w
  4373  016C  0024               	movlb	4	; select bank4
  4374  016D  00A0               	movwf	_dbuf^(0+512)
  4375  016E                     l3843:	
  4376                           
  4377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  4378  016E  3001               	movlw	1
  4379  016F  0021               	movlb	1	; select bank1
  4380  0170  07E4               	addwf	efgtoa@n^(0+128),f
  4381  0171  3000               	movlw	0
  4382  0172  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  4383  0173                     l3845:	
  4384                           
  4385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  4386  0173  30FF               	movlw	255
  4387  0174  07D1               	addwf	efgtoa@w^(0+128),f
  4388  0175  30FF               	movlw	255
  4389  0176  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  4390  0177                     l3847:	
  4391                           
  4392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4393  0177  0021               	movlb	1	; select bank1
  4394  0178  0861               	movf	(efgtoa@g+3)^(0+128),w
  4395  0179  00F3               	movwf	___fpclassifyf@x+3
  4396  017A  0860               	movf	(efgtoa@g+2)^(0+128),w
  4397  017B  00F2               	movwf	___fpclassifyf@x+2
  4398  017C  085F               	movf	(efgtoa@g+1)^(0+128),w
  4399  017D  00F1               	movwf	___fpclassifyf@x+1
  4400  017E  085E               	movf	efgtoa@g^(0+128),w
  4401  017F  00F0               	movwf	___fpclassifyf@x
  4402  0180  3191  210B  3181   	fcall	___fpclassifyf
  4403  0183  0370               	decf	?___fpclassifyf,w
  4404  0184  0471               	iorwf	?___fpclassifyf+1,w
  4405  0185  1D03               	btfss	3,2
  4406  0186  2988               	goto	u4991
  4407  0187  2989               	goto	u4990
  4408  0188                     u4991:	
  4409  0188  29DB               	goto	l3865
  4410  0189                     u4990:	
  4411  0189                     l3849:	
  4412  0189  0021               	movlb	1	; select bank1
  4413  018A  082C               	movf	efgtoa@c^(0+128),w
  4414  018B  3EBF               	addlw	191
  4415  018C  00AD               	movwf	??_efgtoa^(0+128)
  4416  018D  30FF               	movlw	255
  4417  018E  1803               	skipnc
  4418  018F  3000               	movlw	0
  4419  0190  00AE               	movwf	(??_efgtoa^(0+128)+1)
  4420  0191  3000               	movlw	0
  4421  0192  022E               	subwf	(??_efgtoa+1)^(0+128),w
  4422  0193  301A               	movlw	26
  4423  0194  1903               	skipnz
  4424  0195  022D               	subwf	??_efgtoa^(0+128),w
  4425  0196  1C03               	skipc
  4426  0197  2999               	goto	u5001
  4427  0198  299B               	goto	u5000
  4428  0199                     u5001:	
  4429  0199  3001               	movlw	1
  4430  019A  299C               	goto	u5010
  4431  019B                     u5000:	
  4432  019B  3000               	movlw	0
  4433  019C                     u5010:	
  4434  019C  00AF               	movwf	(??_efgtoa+2)^(0+128)
  4435  019D  01B0               	clrf	((??_efgtoa+2)^(0+128)+1)
  4436  019E  082F               	movf	(??_efgtoa+2)^(0+128),w
  4437  019F  00B7               	movwf	_efgtoa$819^(0+128)
  4438  01A0  0830               	movf	(??_efgtoa+3)^(0+128),w
  4439  01A1  00B8               	movwf	(_efgtoa$819+1)^(0+128)
  4440  01A2                     l3853:	
  4441  01A2  0837               	movf	_efgtoa$819^(0+128),w
  4442  01A3  0438               	iorwf	(_efgtoa$819+1)^(0+128),w
  4443  01A4  1903               	btfsc	3,2
  4444  01A5  29A7               	goto	u5021
  4445  01A6  29A8               	goto	u5020
  4446  01A7                     u5021:	
  4447  01A7  29B2               	goto	l3857
  4448  01A8                     u5020:	
  4449  01A8                     l3855:	
  4450                           
  4451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  4452  01A8  3039               	movlw	low (STR_11| (0+32768))
  4453  01A9  00F0               	movwf	strcpy@src
  4454  01AA  3098               	movlw	high (STR_11| (0+32768))
  4455  01AB  00F1               	movwf	strcpy@src+1
  4456  01AC  0864               	movf	efgtoa@n^(0+128),w
  4457  01AD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4458  01AE  319B  230C  3181   	fcall	_strcpy
  4459                           
  4460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  4461  01B1  29BB               	goto	l3859
  4462  01B2                     l3857:	
  4463                           
  4464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  4465  01B2  3041               	movlw	low (STR_12| (0+32768))
  4466  01B3  00F0               	movwf	strcpy@src
  4467  01B4  3098               	movlw	high (STR_12| (0+32768))
  4468  01B5  00F1               	movwf	strcpy@src+1
  4469  01B6  0864               	movf	efgtoa@n^(0+128),w
  4470  01B7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4471  01B8  319B  230C  3181   	fcall	_strcpy
  4472  01BB                     l3859:	
  4473                           
  4474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4475  01BB  30FD               	movlw	253
  4476  01BC  0021               	movlb	1	; select bank1
  4477  01BD  07D1               	addwf	efgtoa@w^(0+128),f
  4478  01BE  30FF               	movlw	255
  4479  01BF  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  4480  01C0                     l3861:	
  4481                           
  4482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  4483  01C0  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  4484  01C1  00AD               	movwf	??_efgtoa^(0+128)
  4485  01C2  082D               	movf	??_efgtoa^(0+128),w
  4486  01C3  0020               	movlb	0	; select bank0
  4487  01C4  00A4               	movwf	pad@buf
  4488  01C5  0021               	movlb	1	; select bank1
  4489  01C6  0852               	movf	(efgtoa@w+1)^(0+128),w
  4490  01C7  0020               	movlb	0	; select bank0
  4491  01C8  00A6               	movwf	pad@p+1
  4492  01C9  0021               	movlb	1	; select bank1
  4493  01CA  0851               	movf	efgtoa@w^(0+128),w
  4494  01CB  0020               	movlb	0	; select bank0
  4495  01CC  00A5               	movwf	pad@p
  4496  01CD  0021               	movlb	1	; select bank1
  4497  01CE  084D               	movf	efgtoa@fp^(0+128),w
  4498  01CF  319E  26F2  3181   	fcall	_pad
  4499  01D2  0020               	movlb	0	; select bank0
  4500  01D3  0825               	movf	?_pad+1,w
  4501  01D4  0021               	movlb	1	; select bank1
  4502  01D5  00A9               	movwf	(?_efgtoa+1)^(0+128)
  4503  01D6  0020               	movlb	0	; select bank0
  4504  01D7  0824               	movf	?_pad,w
  4505  01D8  0021               	movlb	1	; select bank1
  4506  01D9  00A8               	movwf	?_efgtoa^(0+128)
  4507  01DA  2FE4               	goto	l490
  4508  01DB                     l3865:	
  4509                           
  4510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4511  01DB  0021               	movlb	1	; select bank1
  4512  01DC  0861               	movf	(efgtoa@g+3)^(0+128),w
  4513  01DD  00F3               	movwf	___fpclassifyf@x+3
  4514  01DE  0860               	movf	(efgtoa@g+2)^(0+128),w
  4515  01DF  00F2               	movwf	___fpclassifyf@x+2
  4516  01E0  085F               	movf	(efgtoa@g+1)^(0+128),w
  4517  01E1  00F1               	movwf	___fpclassifyf@x+1
  4518  01E2  085E               	movf	efgtoa@g^(0+128),w
  4519  01E3  00F0               	movwf	___fpclassifyf@x
  4520  01E4  3191  210B  3181   	fcall	___fpclassifyf
  4521  01E7  0870               	movf	?___fpclassifyf,w
  4522  01E8  0471               	iorwf	?___fpclassifyf+1,w
  4523  01E9  1D03               	btfss	3,2
  4524  01EA  29EC               	goto	u5031
  4525  01EB  29ED               	goto	u5030
  4526  01EC                     u5031:	
  4527  01EC  2A3F               	goto	l3883
  4528  01ED                     u5030:	
  4529  01ED                     l3867:	
  4530  01ED  0021               	movlb	1	; select bank1
  4531  01EE  082C               	movf	efgtoa@c^(0+128),w
  4532  01EF  3EBF               	addlw	191
  4533  01F0  00AD               	movwf	??_efgtoa^(0+128)
  4534  01F1  30FF               	movlw	255
  4535  01F2  1803               	skipnc
  4536  01F3  3000               	movlw	0
  4537  01F4  00AE               	movwf	(??_efgtoa^(0+128)+1)
  4538  01F5  3000               	movlw	0
  4539  01F6  022E               	subwf	(??_efgtoa+1)^(0+128),w
  4540  01F7  301A               	movlw	26
  4541  01F8  1903               	skipnz
  4542  01F9  022D               	subwf	??_efgtoa^(0+128),w
  4543  01FA  1C03               	skipc
  4544  01FB  29FD               	goto	u5041
  4545  01FC  29FF               	goto	u5040
  4546  01FD                     u5041:	
  4547  01FD  3001               	movlw	1
  4548  01FE  2A00               	goto	u5050
  4549  01FF                     u5040:	
  4550  01FF  3000               	movlw	0
  4551  0200                     u5050:	
  4552  0200  00AF               	movwf	(??_efgtoa+2)^(0+128)
  4553  0201  01B0               	clrf	((??_efgtoa+2)^(0+128)+1)
  4554  0202  082F               	movf	(??_efgtoa+2)^(0+128),w
  4555  0203  00B9               	movwf	_efgtoa$824^(0+128)
  4556  0204  0830               	movf	(??_efgtoa+3)^(0+128),w
  4557  0205  00BA               	movwf	(_efgtoa$824+1)^(0+128)
  4558  0206                     l3871:	
  4559  0206  0839               	movf	_efgtoa$824^(0+128),w
  4560  0207  043A               	iorwf	(_efgtoa$824+1)^(0+128),w
  4561  0208  1903               	btfsc	3,2
  4562  0209  2A0B               	goto	u5061
  4563  020A  2A0C               	goto	u5060
  4564  020B                     u5061:	
  4565  020B  2A16               	goto	l3875
  4566  020C                     u5060:	
  4567  020C                     l3873:	
  4568                           
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4570  020C  303D               	movlw	low (STR_15| (0+32768))
  4571  020D  00F0               	movwf	strcpy@src
  4572  020E  3098               	movlw	high (STR_15| (0+32768))
  4573  020F  00F1               	movwf	strcpy@src+1
  4574  0210  0864               	movf	efgtoa@n^(0+128),w
  4575  0211  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4576  0212  319B  230C  3181   	fcall	_strcpy
  4577                           
  4578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4579  0215  2A1F               	goto	l3877
  4580  0216                     l3875:	
  4581                           
  4582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4583  0216  3045               	movlw	low (STR_16| (0+32768))
  4584  0217  00F0               	movwf	strcpy@src
  4585  0218  3098               	movlw	high (STR_16| (0+32768))
  4586  0219  00F1               	movwf	strcpy@src+1
  4587  021A  0864               	movf	efgtoa@n^(0+128),w
  4588  021B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4589  021C  319B  230C  3181   	fcall	_strcpy
  4590  021F                     l3877:	
  4591                           
  4592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4593  021F  30FD               	movlw	253
  4594  0220  0021               	movlb	1	; select bank1
  4595  0221  07D1               	addwf	efgtoa@w^(0+128),f
  4596  0222  30FF               	movlw	255
  4597  0223  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  4598  0224                     l3879:	
  4599                           
  4600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  4601  0224  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  4602  0225  00AD               	movwf	??_efgtoa^(0+128)
  4603  0226  082D               	movf	??_efgtoa^(0+128),w
  4604  0227  0020               	movlb	0	; select bank0
  4605  0228  00A4               	movwf	pad@buf
  4606  0229  0021               	movlb	1	; select bank1
  4607  022A  0852               	movf	(efgtoa@w+1)^(0+128),w
  4608  022B  0020               	movlb	0	; select bank0
  4609  022C  00A6               	movwf	pad@p+1
  4610  022D  0021               	movlb	1	; select bank1
  4611  022E  0851               	movf	efgtoa@w^(0+128),w
  4612  022F  0020               	movlb	0	; select bank0
  4613  0230  00A5               	movwf	pad@p
  4614  0231  0021               	movlb	1	; select bank1
  4615  0232  084D               	movf	efgtoa@fp^(0+128),w
  4616  0233  319E  26F2  3181   	fcall	_pad
  4617  0236  0020               	movlb	0	; select bank0
  4618  0237  0825               	movf	?_pad+1,w
  4619  0238  0021               	movlb	1	; select bank1
  4620  0239  00A9               	movwf	(?_efgtoa+1)^(0+128)
  4621  023A  0020               	movlb	0	; select bank0
  4622  023B  0824               	movf	?_pad,w
  4623  023C  0021               	movlb	1	; select bank1
  4624  023D  00A8               	movwf	?_efgtoa^(0+128)
  4625  023E  2FE4               	goto	l490
  4626  023F                     l3883:	
  4627                           
  4628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4629  023F  303F               	movlw	63
  4630  0240  0021               	movlb	1	; select bank1
  4631  0241  00E9               	movwf	(efgtoa@u+3)^(0+128)
  4632  0242  3080               	movlw	128
  4633  0243  00E8               	movwf	(efgtoa@u+2)^(0+128)
  4634  0244  3000               	movlw	0
  4635  0245  00E7               	movwf	(efgtoa@u+1)^(0+128)
  4636  0246  3000               	movlw	0
  4637  0247  00E6               	movwf	efgtoa@u^(0+128)
  4638  0248                     l3885:	
  4639                           
  4640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4641  0248  01E2               	clrf	efgtoa@e^(0+128)
  4642  0249  01E3               	clrf	(efgtoa@e+1)^(0+128)
  4643  024A                     l3887:	
  4644                           
  4645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4646  024A  0861               	movf	(efgtoa@g+3)^(0+128),w
  4647  024B  00F3               	movwf	___fleq@ff1+3
  4648  024C  0860               	movf	(efgtoa@g+2)^(0+128),w
  4649  024D  00F2               	movwf	___fleq@ff1+2
  4650  024E  085F               	movf	(efgtoa@g+1)^(0+128),w
  4651  024F  00F1               	movwf	___fleq@ff1+1
  4652  0250  085E               	movf	efgtoa@g^(0+128),w
  4653  0251  00F0               	movwf	___fleq@ff1
  4654  0252  3000               	movlw	0
  4655  0253  00F7               	movwf	___fleq@ff2+3
  4656  0254  3000               	movlw	0
  4657  0255  00F6               	movwf	___fleq@ff2+2
  4658  0256  3000               	movlw	0
  4659  0257  00F5               	movwf	___fleq@ff2+1
  4660  0258  3000               	movlw	0
  4661  0259  00F4               	movwf	___fleq@ff2
  4662  025A  319D  25FB  3181   	fcall	___fleq
  4663  025D  1803               	btfsc	3,0
  4664  025E  2A60               	goto	u5071
  4665  025F  2A61               	goto	u5070
  4666  0260                     u5071:	
  4667  0260  2B25               	goto	l3903
  4668  0261                     u5070:	
  4669  0261  2A92               	goto	l3895
  4670  0262                     l3891:	
  4671                           
  4672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4673  0262  3041               	movlw	65
  4674  0263  0020               	movlb	0	; select bank0
  4675  0264  00A9               	movwf	___flmul@b+3
  4676  0265  3020               	movlw	32
  4677  0266  00A8               	movwf	___flmul@b+2
  4678  0267  3000               	movlw	0
  4679  0268  00A7               	movwf	___flmul@b+1
  4680  0269  3000               	movlw	0
  4681  026A  00A6               	movwf	___flmul@b
  4682  026B  0021               	movlb	1	; select bank1
  4683  026C  0869               	movf	(efgtoa@u+3)^(0+128),w
  4684  026D  0020               	movlb	0	; select bank0
  4685  026E  00AD               	movwf	___flmul@a+3
  4686  026F  0021               	movlb	1	; select bank1
  4687  0270  0868               	movf	(efgtoa@u+2)^(0+128),w
  4688  0271  0020               	movlb	0	; select bank0
  4689  0272  00AC               	movwf	___flmul@a+2
  4690  0273  0021               	movlb	1	; select bank1
  4691  0274  0867               	movf	(efgtoa@u+1)^(0+128),w
  4692  0275  0020               	movlb	0	; select bank0
  4693  0276  00AB               	movwf	___flmul@a+1
  4694  0277  0021               	movlb	1	; select bank1
  4695  0278  0866               	movf	efgtoa@u^(0+128),w
  4696  0279  0020               	movlb	0	; select bank0
  4697  027A  00AA               	movwf	___flmul@a
  4698  027B  3195  25A9  3181   	fcall	___flmul
  4699  027E  0020               	movlb	0	; select bank0
  4700  027F  0829               	movf	?___flmul+3,w
  4701  0280  0021               	movlb	1	; select bank1
  4702  0281  00E9               	movwf	(efgtoa@u+3)^(0+128)
  4703  0282  0020               	movlb	0	; select bank0
  4704  0283  0828               	movf	?___flmul+2,w
  4705  0284  0021               	movlb	1	; select bank1
  4706  0285  00E8               	movwf	(efgtoa@u+2)^(0+128)
  4707  0286  0020               	movlb	0	; select bank0
  4708  0287  0827               	movf	?___flmul+1,w
  4709  0288  0021               	movlb	1	; select bank1
  4710  0289  00E7               	movwf	(efgtoa@u+1)^(0+128)
  4711  028A  0020               	movlb	0	; select bank0
  4712  028B  0826               	movf	?___flmul,w
  4713  028C  0021               	movlb	1	; select bank1
  4714  028D  00E6               	movwf	efgtoa@u^(0+128)
  4715  028E                     l3893:	
  4716                           
  4717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4718  028E  3001               	movlw	1
  4719  028F  07E2               	addwf	efgtoa@e^(0+128),f
  4720  0290  3000               	movlw	0
  4721  0291  3DE3               	addwfc	(efgtoa@e+1)^(0+128),f
  4722  0292                     l3895:	
  4723                           
  4724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4725  0292  0021               	movlb	1	; select bank1
  4726  0293  0861               	movf	(efgtoa@g+3)^(0+128),w
  4727  0294  0020               	movlb	0	; select bank0
  4728  0295  00C3               	movwf	___flge@ff1+3
  4729  0296  0021               	movlb	1	; select bank1
  4730  0297  0860               	movf	(efgtoa@g+2)^(0+128),w
  4731  0298  0020               	movlb	0	; select bank0
  4732  0299  00C2               	movwf	___flge@ff1+2
  4733  029A  0021               	movlb	1	; select bank1
  4734  029B  085F               	movf	(efgtoa@g+1)^(0+128),w
  4735  029C  0020               	movlb	0	; select bank0
  4736  029D  00C1               	movwf	___flge@ff1+1
  4737  029E  0021               	movlb	1	; select bank1
  4738  029F  085E               	movf	efgtoa@g^(0+128),w
  4739  02A0  0020               	movlb	0	; select bank0
  4740  02A1  00C0               	movwf	___flge@ff1
  4741  02A2  3041               	movlw	65
  4742  02A3  00A9               	movwf	___flmul@b+3
  4743  02A4  3020               	movlw	32
  4744  02A5  00A8               	movwf	___flmul@b+2
  4745  02A6  3000               	movlw	0
  4746  02A7  00A7               	movwf	___flmul@b+1
  4747  02A8  3000               	movlw	0
  4748  02A9  00A6               	movwf	___flmul@b
  4749  02AA  0021               	movlb	1	; select bank1
  4750  02AB  0869               	movf	(efgtoa@u+3)^(0+128),w
  4751  02AC  0020               	movlb	0	; select bank0
  4752  02AD  00AD               	movwf	___flmul@a+3
  4753  02AE  0021               	movlb	1	; select bank1
  4754  02AF  0868               	movf	(efgtoa@u+2)^(0+128),w
  4755  02B0  0020               	movlb	0	; select bank0
  4756  02B1  00AC               	movwf	___flmul@a+2
  4757  02B2  0021               	movlb	1	; select bank1
  4758  02B3  0867               	movf	(efgtoa@u+1)^(0+128),w
  4759  02B4  0020               	movlb	0	; select bank0
  4760  02B5  00AB               	movwf	___flmul@a+1
  4761  02B6  0021               	movlb	1	; select bank1
  4762  02B7  0866               	movf	efgtoa@u^(0+128),w
  4763  02B8  0020               	movlb	0	; select bank0
  4764  02B9  00AA               	movwf	___flmul@a
  4765  02BA  3195  25A9  3181   	fcall	___flmul
  4766  02BD  0020               	movlb	0	; select bank0
  4767  02BE  0829               	movf	?___flmul+3,w
  4768  02BF  00C7               	movwf	___flge@ff2+3
  4769  02C0  0828               	movf	?___flmul+2,w
  4770  02C1  00C6               	movwf	___flge@ff2+2
  4771  02C2  0827               	movf	?___flmul+1,w
  4772  02C3  00C5               	movwf	___flge@ff2+1
  4773  02C4  0826               	movf	?___flmul,w
  4774  02C5  00C4               	movwf	___flge@ff2
  4775  02C6  3191  218A  3181   	fcall	___flge
  4776  02C9  1803               	btfsc	3,0
  4777  02CA  2ACC               	goto	u5081
  4778  02CB  2ACD               	goto	u5080
  4779  02CC                     u5081:	
  4780  02CC  2A62               	goto	l3891
  4781  02CD                     u5080:	
  4782  02CD  2AFE               	goto	l3901
  4783  02CE                     l3897:	
  4784                           
  4785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4786  02CE  3041               	movlw	65
  4787  02CF  0020               	movlb	0	; select bank0
  4788  02D0  00C3               	movwf	___fldiv@a+3
  4789  02D1  3020               	movlw	32
  4790  02D2  00C2               	movwf	___fldiv@a+2
  4791  02D3  3000               	movlw	0
  4792  02D4  00C1               	movwf	___fldiv@a+1
  4793  02D5  3000               	movlw	0
  4794  02D6  00C0               	movwf	___fldiv@a
  4795  02D7  0021               	movlb	1	; select bank1
  4796  02D8  0869               	movf	(efgtoa@u+3)^(0+128),w
  4797  02D9  0020               	movlb	0	; select bank0
  4798  02DA  00C7               	movwf	___fldiv@b+3
  4799  02DB  0021               	movlb	1	; select bank1
  4800  02DC  0868               	movf	(efgtoa@u+2)^(0+128),w
  4801  02DD  0020               	movlb	0	; select bank0
  4802  02DE  00C6               	movwf	___fldiv@b+2
  4803  02DF  0021               	movlb	1	; select bank1
  4804  02E0  0867               	movf	(efgtoa@u+1)^(0+128),w
  4805  02E1  0020               	movlb	0	; select bank0
  4806  02E2  00C5               	movwf	___fldiv@b+1
  4807  02E3  0021               	movlb	1	; select bank1
  4808  02E4  0866               	movf	efgtoa@u^(0+128),w
  4809  02E5  0020               	movlb	0	; select bank0
  4810  02E6  00C4               	movwf	___fldiv@b
  4811  02E7  3188  2061  3181   	fcall	___fldiv
  4812  02EA  0020               	movlb	0	; select bank0
  4813  02EB  0843               	movf	?___fldiv+3,w
  4814  02EC  0021               	movlb	1	; select bank1
  4815  02ED  00E9               	movwf	(efgtoa@u+3)^(0+128)
  4816  02EE  0020               	movlb	0	; select bank0
  4817  02EF  0842               	movf	?___fldiv+2,w
  4818  02F0  0021               	movlb	1	; select bank1
  4819  02F1  00E8               	movwf	(efgtoa@u+2)^(0+128)
  4820  02F2  0020               	movlb	0	; select bank0
  4821  02F3  0841               	movf	?___fldiv+1,w
  4822  02F4  0021               	movlb	1	; select bank1
  4823  02F5  00E7               	movwf	(efgtoa@u+1)^(0+128)
  4824  02F6  0020               	movlb	0	; select bank0
  4825  02F7  0840               	movf	?___fldiv,w
  4826  02F8  0021               	movlb	1	; select bank1
  4827  02F9  00E6               	movwf	efgtoa@u^(0+128)
  4828  02FA                     l3899:	
  4829                           
  4830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4831  02FA  30FF               	movlw	255
  4832  02FB  07E2               	addwf	efgtoa@e^(0+128),f
  4833  02FC  30FF               	movlw	255
  4834  02FD  3DE3               	addwfc	(efgtoa@e+1)^(0+128),f
  4835  02FE                     l3901:	
  4836                           
  4837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4838  02FE  0021               	movlb	1	; select bank1
  4839  02FF  0861               	movf	(efgtoa@g+3)^(0+128),w
  4840  0300  0020               	movlb	0	; select bank0
  4841  0301  00C3               	movwf	___flge@ff1+3
  4842  0302  0021               	movlb	1	; select bank1
  4843  0303  0860               	movf	(efgtoa@g+2)^(0+128),w
  4844  0304  0020               	movlb	0	; select bank0
  4845  0305  00C2               	movwf	___flge@ff1+2
  4846  0306  0021               	movlb	1	; select bank1
  4847  0307  085F               	movf	(efgtoa@g+1)^(0+128),w
  4848  0308  0020               	movlb	0	; select bank0
  4849  0309  00C1               	movwf	___flge@ff1+1
  4850  030A  0021               	movlb	1	; select bank1
  4851  030B  085E               	movf	efgtoa@g^(0+128),w
  4852  030C  0020               	movlb	0	; select bank0
  4853  030D  00C0               	movwf	___flge@ff1
  4854  030E  0021               	movlb	1	; select bank1
  4855  030F  0869               	movf	(efgtoa@u+3)^(0+128),w
  4856  0310  0020               	movlb	0	; select bank0
  4857  0311  00C7               	movwf	___flge@ff2+3
  4858  0312  0021               	movlb	1	; select bank1
  4859  0313  0868               	movf	(efgtoa@u+2)^(0+128),w
  4860  0314  0020               	movlb	0	; select bank0
  4861  0315  00C6               	movwf	___flge@ff2+2
  4862  0316  0021               	movlb	1	; select bank1
  4863  0317  0867               	movf	(efgtoa@u+1)^(0+128),w
  4864  0318  0020               	movlb	0	; select bank0
  4865  0319  00C5               	movwf	___flge@ff2+1
  4866  031A  0021               	movlb	1	; select bank1
  4867  031B  0866               	movf	efgtoa@u^(0+128),w
  4868  031C  0020               	movlb	0	; select bank0
  4869  031D  00C4               	movwf	___flge@ff2
  4870  031E  3191  218A  3181   	fcall	___flge
  4871  0321  1C03               	btfss	3,0
  4872  0322  2B24               	goto	u5091
  4873  0323  2B25               	goto	u5090
  4874  0324                     u5091:	
  4875  0324  2ACE               	goto	l3897
  4876  0325                     u5090:	
  4877  0325                     l3903:	
  4878                           
  4879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4880  0325  0021               	movlb	1	; select bank1
  4881  0326  082C               	movf	efgtoa@c^(0+128),w
  4882  0327  00AD               	movwf	??_efgtoa^(0+128)
  4883  0328  01AE               	clrf	(??_efgtoa^(0+128)+1)
  4884  0329  082D               	movf	??_efgtoa^(0+128),w
  4885  032A  00F6               	movwf	tolower@c
  4886  032B  082E               	movf	(??_efgtoa+1)^(0+128),w
  4887  032C  00F7               	movwf	tolower@c+1
  4888  032D  319B  2374  3181   	fcall	_tolower
  4889  0330  0876               	movf	?_tolower,w
  4890  0331  0021               	movlb	1	; select bank1
  4891  0332  00AF               	movwf	(??_efgtoa+2)^(0+128)
  4892  0333  082F               	movf	(??_efgtoa+2)^(0+128),w
  4893  0334  00D3               	movwf	efgtoa@mode^(0+128)
  4894  0335                     l3905:	
  4895                           
  4896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4897  0335  0853               	movf	efgtoa@mode^(0+128),w
  4898  0336  00AD               	movwf	??_efgtoa^(0+128)
  4899  0337  082D               	movf	??_efgtoa^(0+128),w
  4900  0338  00D0               	movwf	efgtoa@nmode^(0+128)
  4901  0339                     l3907:	
  4902                           
  4903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4904  0339  3067               	movlw	103
  4905  033A  0653               	xorwf	efgtoa@mode^(0+128),w
  4906  033B  1D03               	btfss	3,2
  4907  033C  2B3E               	goto	u5101
  4908  033D  2B3F               	goto	u5100
  4909  033E                     u5101:	
  4910  033E  2B68               	goto	l505
  4911  033F                     u5100:	
  4912  033F                     l3909:	
  4913                           
  4914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4915  033F  0022               	movlb	2	; select bank2
  4916  0340  0861               	movf	_prec^(0+256),w
  4917  0341  0462               	iorwf	(_prec+1)^(0+256),w
  4918  0342  1D03               	btfss	3,2
  4919  0343  2B45               	goto	u5111
  4920  0344  2B46               	goto	u5110
  4921  0345                     u5111:	
  4922  0345  2B4A               	goto	l506
  4923  0346                     u5110:	
  4924  0346                     l3911:	
  4925                           
  4926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4927  0346  3001               	movlw	1
  4928  0347  00E1               	movwf	_prec^(0+256)
  4929  0348  3000               	movlw	0
  4930  0349  00E2               	movwf	(_prec^(0+256)+1)
  4931  034A                     l506:	
  4932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 382:   }
  4933                           
  4934                           
  4935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4936  034A  0862               	movf	(_prec+1)^(0+256),w
  4937  034B  3A80               	xorlw	128
  4938  034C  0021               	movlb	1	; select bank1
  4939  034D  00AD               	movwf	??_efgtoa^(0+128)
  4940  034E  3080               	movlw	128
  4941  034F  022D               	subwf	??_efgtoa^(0+128),w
  4942  0350  1D03               	skipz
  4943  0351  2B55               	goto	u5125
  4944  0352  3001               	movlw	1
  4945  0353  0022               	movlb	2	; select bank2
  4946  0354  0261               	subwf	_prec^(0+256),w
  4947  0355                     u5125:	
  4948  0355  1803               	skipnc
  4949  0356  2B58               	goto	u5121
  4950  0357  2B59               	goto	u5120
  4951  0358                     u5121:	
  4952  0358  2B5F               	goto	l3915
  4953  0359                     u5120:	
  4954  0359                     l3913:	
  4955  0359  3006               	movlw	6
  4956  035A  0021               	movlb	1	; select bank1
  4957  035B  00CE               	movwf	efgtoa@p^(0+128)
  4958  035C  3000               	movlw	0
  4959  035D  00CF               	movwf	(efgtoa@p^(0+128)+1)
  4960  035E  2B6E               	goto	l3921
  4961  035F                     l3915:	
  4962  035F  0022               	movlb	2	; select bank2
  4963  0360  0862               	movf	(_prec+1)^(0+256),w
  4964  0361  0021               	movlb	1	; select bank1
  4965  0362  00CF               	movwf	(efgtoa@p+1)^(0+128)
  4966  0363  0022               	movlb	2	; select bank2
  4967  0364  0861               	movf	_prec^(0+256),w
  4968  0365  0021               	movlb	1	; select bank1
  4969  0366  00CE               	movwf	efgtoa@p^(0+128)
  4970  0367  2B6E               	goto	l3921
  4971  0368                     l505:	
  4972                           
  4973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4974  0368  0022               	movlb	2	; select bank2
  4975  0369  1BE2               	btfsc	(_prec+1)^(0+256),7
  4976  036A  2B6C               	goto	u5131
  4977  036B  2B6D               	goto	u5130
  4978  036C                     u5131:	
  4979  036C  2B59               	goto	l3913
  4980  036D                     u5130:	
  4981  036D  2B5F               	goto	l3915
  4982  036E                     l3921:	
  4983                           
  4984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4985  036E  3067               	movlw	103
  4986  036F  0653               	xorwf	efgtoa@mode^(0+128),w
  4987  0370  1D03               	btfss	3,2
  4988  0371  2B73               	goto	u5141
  4989  0372  2B74               	goto	u5140
  4990  0373                     u5141:	
  4991  0373  2BA1               	goto	l516
  4992  0374                     u5140:	
  4993  0374                     l3923:	
  4994                           
  4995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4996  0374  0863               	movf	(efgtoa@e+1)^(0+128),w
  4997  0375  3A80               	xorlw	128
  4998  0376  00AD               	movwf	??_efgtoa^(0+128)
  4999  0377  307F               	movlw	127
  5000  0378  022D               	subwf	??_efgtoa^(0+128),w
  5001  0379  1D03               	skipz
  5002  037A  2B7D               	goto	u5155
  5003  037B  30FC               	movlw	252
  5004  037C  0262               	subwf	efgtoa@e^(0+128),w
  5005  037D                     u5155:	
  5006  037D  1C03               	skipc
  5007  037E  2B80               	goto	u5151
  5008  037F  2B81               	goto	u5150
  5009  0380                     u5151:	
  5010  0380  2B9C               	goto	l3929
  5011  0381                     u5150:	
  5012  0381                     l3925:	
  5013  0381  0021               	movlb	1	; select bank1
  5014  0382  084E               	movf	efgtoa@p^(0+128),w
  5015  0383  3EFF               	addlw	255
  5016  0384  00AD               	movwf	??_efgtoa^(0+128)
  5017  0385  30FF               	movlw	255
  5018  0386  3D4F               	addwfc	(efgtoa@p+1)^(0+128),w
  5019  0387  00AE               	movwf	(??_efgtoa+1)^(0+128)
  5020  0388  082E               	movf	(??_efgtoa+1)^(0+128),w
  5021  0389  3A80               	xorlw	128
  5022  038A  00AF               	movwf	(??_efgtoa+2)^(0+128)
  5023  038B  0863               	movf	(efgtoa@e+1)^(0+128),w
  5024  038C  3A80               	xorlw	128
  5025  038D  022F               	subwf	(??_efgtoa+2)^(0+128),w
  5026  038E  1D03               	skipz
  5027  038F  2B92               	goto	u5165
  5028  0390  0862               	movf	efgtoa@e^(0+128),w
  5029  0391  022D               	subwf	??_efgtoa^(0+128),w
  5030  0392                     u5165:	
  5031  0392  1C03               	skipc
  5032  0393  2B95               	goto	u5161
  5033  0394  2B96               	goto	u5160
  5034  0395                     u5161:	
  5035  0395  2B9C               	goto	l3929
  5036  0396                     u5160:	
  5037  0396                     l3927:	
  5038                           
  5039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  5040  0396  3066               	movlw	102
  5041  0397  0021               	movlb	1	; select bank1
  5042  0398  00AD               	movwf	??_efgtoa^(0+128)
  5043  0399  082D               	movf	??_efgtoa^(0+128),w
  5044  039A  00D0               	movwf	efgtoa@nmode^(0+128)
  5045                           
  5046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  5047  039B  2BA1               	goto	l516
  5048  039C                     l3929:	
  5049                           
  5050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  5051  039C  3065               	movlw	101
  5052  039D  0021               	movlb	1	; select bank1
  5053  039E  00AD               	movwf	??_efgtoa^(0+128)
  5054  039F  082D               	movf	??_efgtoa^(0+128),w
  5055  03A0  00D0               	movwf	efgtoa@nmode^(0+128)
  5056  03A1                     l516:	
  5057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 395:     }
  5058                           
  5059                           
  5060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  5061  03A1  084F               	movf	(efgtoa@p+1)^(0+128),w
  5062  03A2  00C6               	movwf	(efgtoa@m+1)^(0+128)
  5063  03A3  084E               	movf	efgtoa@p^(0+128),w
  5064  03A4  00C5               	movwf	efgtoa@m^(0+128)
  5065  03A5                     l3931:	
  5066                           
  5067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  5068  03A5  3067               	movlw	103
  5069  03A6  0653               	xorwf	efgtoa@mode^(0+128),w
  5070  03A7  1D03               	btfss	3,2
  5071  03A8  2BAA               	goto	u5171
  5072  03A9  2BAB               	goto	u5170
  5073  03AA                     u5171:	
  5074  03AA  2BB5               	goto	l3937
  5075  03AB                     u5170:	
  5076  03AB                     l3933:	
  5077  03AB  3066               	movlw	102
  5078  03AC  0650               	xorwf	efgtoa@nmode^(0+128),w
  5079  03AD  1D03               	btfss	3,2
  5080  03AE  2BB0               	goto	u5181
  5081  03AF  2BB1               	goto	u5180
  5082  03B0                     u5181:	
  5083  03B0  2BB9               	goto	l3939
  5084  03B1                     u5180:	
  5085  03B1                     l3935:	
  5086  03B1  1FE3               	btfss	(efgtoa@e+1)^(0+128),7
  5087  03B2  2BB4               	goto	u5191
  5088  03B3  2BB5               	goto	u5190
  5089  03B4                     u5191:	
  5090  03B4  2BB9               	goto	l3939
  5091  03B5                     u5190:	
  5092  03B5                     l3937:	
  5093                           
  5094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  5095  03B5  3001               	movlw	1
  5096  03B6  07C5               	addwf	efgtoa@m^(0+128),f
  5097  03B7  3000               	movlw	0
  5098  03B8  3DC6               	addwfc	(efgtoa@m+1)^(0+128),f
  5099  03B9                     l3939:	
  5100                           
  5101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  5102  03B9  3066               	movlw	102
  5103  03BA  0650               	xorwf	efgtoa@nmode^(0+128),w
  5104  03BB  1D03               	btfss	3,2
  5105  03BC  2BBE               	goto	u5201
  5106  03BD  2BBF               	goto	u5200
  5107  03BE                     u5201:	
  5108  03BE  2BD7               	goto	l3951
  5109  03BF                     u5200:	
  5110  03BF                     l3941:	
  5111                           
  5112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  5113  03BF  1FE3               	btfss	(efgtoa@e+1)^(0+128),7
  5114  03C0  2BC2               	goto	u5211
  5115  03C1  2BC3               	goto	u5210
  5116  03C2                     u5211:	
  5117  03C2  2BCD               	goto	l3947
  5118  03C3                     u5210:	
  5119  03C3                     l3943:	
  5120                           
  5121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  5122  03C3  303F               	movlw	63
  5123  03C4  00E9               	movwf	(efgtoa@u+3)^(0+128)
  5124  03C5  3080               	movlw	128
  5125  03C6  00E8               	movwf	(efgtoa@u+2)^(0+128)
  5126  03C7  3000               	movlw	0
  5127  03C8  00E7               	movwf	(efgtoa@u+1)^(0+128)
  5128  03C9  3000               	movlw	0
  5129  03CA  00E6               	movwf	efgtoa@u^(0+128)
  5130  03CB                     l3945:	
  5131                           
  5132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  5133  03CB  01E2               	clrf	efgtoa@e^(0+128)
  5134  03CC  01E3               	clrf	(efgtoa@e+1)^(0+128)
  5135  03CD                     l3947:	
  5136                           
  5137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  5138  03CD  3067               	movlw	103
  5139  03CE  0653               	xorwf	efgtoa@mode^(0+128),w
  5140  03CF  1903               	btfsc	3,2
  5141  03D0  2BD2               	goto	u5221
  5142  03D1  2BD3               	goto	u5220
  5143  03D2                     u5221:	
  5144  03D2  2BD7               	goto	l3951
  5145  03D3                     u5220:	
  5146  03D3                     l3949:	
  5147                           
  5148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  5149  03D3  0862               	movf	efgtoa@e^(0+128),w
  5150  03D4  07C5               	addwf	efgtoa@m^(0+128),f
  5151  03D5  0863               	movf	(efgtoa@e+1)^(0+128),w
  5152  03D6  3DC6               	addwfc	(efgtoa@m+1)^(0+128),f
  5153  03D7                     l3951:	
  5154                           
  5155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  5156  03D7  01DC               	clrf	efgtoa@i^(0+128)
  5157  03D8  01DD               	clrf	(efgtoa@i+1)^(0+128)
  5158  03D9                     l3953:	
  5159                           
  5160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  5161  03D9  0861               	movf	(efgtoa@g+3)^(0+128),w
  5162  03DA  00D7               	movwf	(efgtoa@h+3)^(0+128)
  5163  03DB  0860               	movf	(efgtoa@g+2)^(0+128),w
  5164  03DC  00D6               	movwf	(efgtoa@h+2)^(0+128)
  5165  03DD  085F               	movf	(efgtoa@g+1)^(0+128),w
  5166  03DE  00D5               	movwf	(efgtoa@h+1)^(0+128)
  5167  03DF  085E               	movf	efgtoa@g^(0+128),w
  5168  03E0  00D4               	movwf	efgtoa@h^(0+128)
  5169  03E1                     l3955:	
  5170                           
  5171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  5172  03E1  0869               	movf	(efgtoa@u+3)^(0+128),w
  5173  03E2  00B4               	movwf	(efgtoa@ou+3)^(0+128)
  5174  03E3  0868               	movf	(efgtoa@u+2)^(0+128),w
  5175  03E4  00B3               	movwf	(efgtoa@ou+2)^(0+128)
  5176  03E5  0867               	movf	(efgtoa@u+1)^(0+128),w
  5177  03E6  00B2               	movwf	(efgtoa@ou+1)^(0+128)
  5178  03E7  0866               	movf	efgtoa@u^(0+128),w
  5179  03E8  00B1               	movwf	efgtoa@ou^(0+128)
  5180                           
  5181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5182  03E9  2CAF               	goto	l3961
  5183  03EA                     l3957:	
  5184                           
  5185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  5186  03EA  0021               	movlb	1	; select bank1
  5187  03EB  0869               	movf	(efgtoa@u+3)^(0+128),w
  5188  03EC  0020               	movlb	0	; select bank0
  5189  03ED  00C3               	movwf	___fldiv@a+3
  5190  03EE  0021               	movlb	1	; select bank1
  5191  03EF  0868               	movf	(efgtoa@u+2)^(0+128),w
  5192  03F0  0020               	movlb	0	; select bank0
  5193  03F1  00C2               	movwf	___fldiv@a+2
  5194  03F2  0021               	movlb	1	; select bank1
  5195  03F3  0867               	movf	(efgtoa@u+1)^(0+128),w
  5196  03F4  0020               	movlb	0	; select bank0
  5197  03F5  00C1               	movwf	___fldiv@a+1
  5198  03F6  0021               	movlb	1	; select bank1
  5199  03F7  0866               	movf	efgtoa@u^(0+128),w
  5200  03F8  0020               	movlb	0	; select bank0
  5201  03F9  00C0               	movwf	___fldiv@a
  5202  03FA  0021               	movlb	1	; select bank1
  5203  03FB  0857               	movf	(efgtoa@h+3)^(0+128),w
  5204  03FC  0020               	movlb	0	; select bank0
  5205  03FD  00C7               	movwf	___fldiv@b+3
  5206  03FE  0021               	movlb	1	; select bank1
  5207  03FF  0856               	movf	(efgtoa@h+2)^(0+128),w
  5208  0400  0020               	movlb	0	; select bank0
  5209  0401  00C6               	movwf	___fldiv@b+2
  5210  0402  0021               	movlb	1	; select bank1
  5211  0403  0855               	movf	(efgtoa@h+1)^(0+128),w
  5212  0404  0020               	movlb	0	; select bank0
  5213  0405  00C5               	movwf	___fldiv@b+1
  5214  0406  0021               	movlb	1	; select bank1
  5215  0407  0854               	movf	efgtoa@h^(0+128),w
  5216  0408  0020               	movlb	0	; select bank0
  5217  0409  00C4               	movwf	___fldiv@b
  5218  040A  3188  2061  3181   	fcall	___fldiv
  5219  040D  0020               	movlb	0	; select bank0
  5220  040E  0843               	movf	?___fldiv+3,w
  5221  040F  00DD               	movwf	floorf@x+3
  5222  0410  0842               	movf	?___fldiv+2,w
  5223  0411  00DC               	movwf	floorf@x+2
  5224  0412  0841               	movf	?___fldiv+1,w
  5225  0413  00DB               	movwf	floorf@x+1
  5226  0414  0840               	movf	?___fldiv,w
  5227  0415  00DA               	movwf	floorf@x
  5228  0416  3180  2015  3181   	fcall	_floorf
  5229  0419  0020               	movlb	0	; select bank0
  5230  041A  085D               	movf	?_floorf+3,w
  5231  041B  0021               	movlb	1	; select bank1
  5232  041C  00DB               	movwf	(efgtoa@l+3)^(0+128)
  5233  041D  0020               	movlb	0	; select bank0
  5234  041E  085C               	movf	?_floorf+2,w
  5235  041F  0021               	movlb	1	; select bank1
  5236  0420  00DA               	movwf	(efgtoa@l+2)^(0+128)
  5237  0421  0020               	movlb	0	; select bank0
  5238  0422  085B               	movf	?_floorf+1,w
  5239  0423  0021               	movlb	1	; select bank1
  5240  0424  00D9               	movwf	(efgtoa@l+1)^(0+128)
  5241  0425  0020               	movlb	0	; select bank0
  5242  0426  085A               	movf	?_floorf,w
  5243  0427  0021               	movlb	1	; select bank1
  5244  0428  00D8               	movwf	efgtoa@l^(0+128)
  5245                           
  5246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  5247  0429  085B               	movf	(efgtoa@l+3)^(0+128),w
  5248  042A  00F3               	movwf	___fltol@f1+3
  5249  042B  085A               	movf	(efgtoa@l+2)^(0+128),w
  5250  042C  00F2               	movwf	___fltol@f1+2
  5251  042D  0859               	movf	(efgtoa@l+1)^(0+128),w
  5252  042E  00F1               	movwf	___fltol@f1+1
  5253  042F  0858               	movf	efgtoa@l^(0+128),w
  5254  0430  00F0               	movwf	___fltol@f1
  5255  0431  3190  2097  3181   	fcall	___fltol
  5256  0434  0871               	movf	?___fltol+1,w
  5257  0435  0021               	movlb	1	; select bank1
  5258  0436  00CA               	movwf	(efgtoa@d+1)^(0+128)
  5259  0437  0870               	movf	?___fltol,w
  5260  0438  00C9               	movwf	efgtoa@d^(0+128)
  5261                           
  5262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  5263  0439  085B               	movf	(efgtoa@l+3)^(0+128),w
  5264  043A  0020               	movlb	0	; select bank0
  5265  043B  00AD               	movwf	___flmul@a+3
  5266  043C  0021               	movlb	1	; select bank1
  5267  043D  085A               	movf	(efgtoa@l+2)^(0+128),w
  5268  043E  0020               	movlb	0	; select bank0
  5269  043F  00AC               	movwf	___flmul@a+2
  5270  0440  0021               	movlb	1	; select bank1
  5271  0441  0859               	movf	(efgtoa@l+1)^(0+128),w
  5272  0442  0020               	movlb	0	; select bank0
  5273  0443  00AB               	movwf	___flmul@a+1
  5274  0444  0021               	movlb	1	; select bank1
  5275  0445  0858               	movf	efgtoa@l^(0+128),w
  5276  0446  0020               	movlb	0	; select bank0
  5277  0447  00AA               	movwf	___flmul@a
  5278  0448  0021               	movlb	1	; select bank1
  5279  0449  0869               	movf	(efgtoa@u+3)^(0+128),w
  5280  044A  0020               	movlb	0	; select bank0
  5281  044B  00A9               	movwf	___flmul@b+3
  5282  044C  0021               	movlb	1	; select bank1
  5283  044D  0868               	movf	(efgtoa@u+2)^(0+128),w
  5284  044E  0020               	movlb	0	; select bank0
  5285  044F  00A8               	movwf	___flmul@b+2
  5286  0450  0021               	movlb	1	; select bank1
  5287  0451  0867               	movf	(efgtoa@u+1)^(0+128),w
  5288  0452  0020               	movlb	0	; select bank0
  5289  0453  00A7               	movwf	___flmul@b+1
  5290  0454  0021               	movlb	1	; select bank1
  5291  0455  0866               	movf	efgtoa@u^(0+128),w
  5292  0456  0020               	movlb	0	; select bank0
  5293  0457  00A6               	movwf	___flmul@b
  5294  0458  3195  25A9  3181   	fcall	___flmul
  5295  045B  0020               	movlb	0	; select bank0
  5296  045C  0829               	movf	?___flmul+3,w
  5297  045D  0021               	movlb	1	; select bank1
  5298  045E  00A3               	movwf	(___flsub@a+3)^(0+128)
  5299  045F  0020               	movlb	0	; select bank0
  5300  0460  0828               	movf	?___flmul+2,w
  5301  0461  0021               	movlb	1	; select bank1
  5302  0462  00A2               	movwf	(___flsub@a+2)^(0+128)
  5303  0463  0020               	movlb	0	; select bank0
  5304  0464  0827               	movf	?___flmul+1,w
  5305  0465  0021               	movlb	1	; select bank1
  5306  0466  00A1               	movwf	(___flsub@a+1)^(0+128)
  5307  0467  0020               	movlb	0	; select bank0
  5308  0468  0826               	movf	?___flmul,w
  5309  0469  0021               	movlb	1	; select bank1
  5310  046A  00A0               	movwf	___flsub@a^(0+128)
  5311  046B  0857               	movf	(efgtoa@h+3)^(0+128),w
  5312  046C  00A7               	movwf	(___flsub@b+3)^(0+128)
  5313  046D  0856               	movf	(efgtoa@h+2)^(0+128),w
  5314  046E  00A6               	movwf	(___flsub@b+2)^(0+128)
  5315  046F  0855               	movf	(efgtoa@h+1)^(0+128),w
  5316  0470  00A5               	movwf	(___flsub@b+1)^(0+128)
  5317  0471  0854               	movf	efgtoa@h^(0+128),w
  5318  0472  00A4               	movwf	___flsub@b^(0+128)
  5319  0473  3190  2005  3181   	fcall	___flsub
  5320  0476  0021               	movlb	1	; select bank1
  5321  0477  0823               	movf	(?___flsub+3)^(0+128),w
  5322  0478  00D7               	movwf	(efgtoa@h+3)^(0+128)
  5323  0479  0822               	movf	(?___flsub+2)^(0+128),w
  5324  047A  00D6               	movwf	(efgtoa@h+2)^(0+128)
  5325  047B  0821               	movf	(?___flsub+1)^(0+128),w
  5326  047C  00D5               	movwf	(efgtoa@h+1)^(0+128)
  5327  047D  0820               	movf	?___flsub^(0+128),w
  5328  047E  00D4               	movwf	efgtoa@h^(0+128)
  5329                           
  5330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  5331  047F  3041               	movlw	65
  5332  0480  0020               	movlb	0	; select bank0
  5333  0481  00C3               	movwf	___fldiv@a+3
  5334  0482  3020               	movlw	32
  5335  0483  00C2               	movwf	___fldiv@a+2
  5336  0484  3000               	movlw	0
  5337  0485  00C1               	movwf	___fldiv@a+1
  5338  0486  3000               	movlw	0
  5339  0487  00C0               	movwf	___fldiv@a
  5340  0488  0021               	movlb	1	; select bank1
  5341  0489  0869               	movf	(efgtoa@u+3)^(0+128),w
  5342  048A  0020               	movlb	0	; select bank0
  5343  048B  00C7               	movwf	___fldiv@b+3
  5344  048C  0021               	movlb	1	; select bank1
  5345  048D  0868               	movf	(efgtoa@u+2)^(0+128),w
  5346  048E  0020               	movlb	0	; select bank0
  5347  048F  00C6               	movwf	___fldiv@b+2
  5348  0490  0021               	movlb	1	; select bank1
  5349  0491  0867               	movf	(efgtoa@u+1)^(0+128),w
  5350  0492  0020               	movlb	0	; select bank0
  5351  0493  00C5               	movwf	___fldiv@b+1
  5352  0494  0021               	movlb	1	; select bank1
  5353  0495  0866               	movf	efgtoa@u^(0+128),w
  5354  0496  0020               	movlb	0	; select bank0
  5355  0497  00C4               	movwf	___fldiv@b
  5356  0498  3188  2061  3181   	fcall	___fldiv
  5357  049B  0020               	movlb	0	; select bank0
  5358  049C  0843               	movf	?___fldiv+3,w
  5359  049D  0021               	movlb	1	; select bank1
  5360  049E  00E9               	movwf	(efgtoa@u+3)^(0+128)
  5361  049F  0020               	movlb	0	; select bank0
  5362  04A0  0842               	movf	?___fldiv+2,w
  5363  04A1  0021               	movlb	1	; select bank1
  5364  04A2  00E8               	movwf	(efgtoa@u+2)^(0+128)
  5365  04A3  0020               	movlb	0	; select bank0
  5366  04A4  0841               	movf	?___fldiv+1,w
  5367  04A5  0021               	movlb	1	; select bank1
  5368  04A6  00E7               	movwf	(efgtoa@u+1)^(0+128)
  5369  04A7  0020               	movlb	0	; select bank0
  5370  04A8  0840               	movf	?___fldiv,w
  5371  04A9  0021               	movlb	1	; select bank1
  5372  04AA  00E6               	movwf	efgtoa@u^(0+128)
  5373  04AB                     l3959:	
  5374                           
  5375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  5376  04AB  3001               	movlw	1
  5377  04AC  07DC               	addwf	efgtoa@i^(0+128),f
  5378  04AD  3000               	movlw	0
  5379  04AE  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  5380  04AF                     l3961:	
  5381                           
  5382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5383  04AF  085D               	movf	(efgtoa@i+1)^(0+128),w
  5384  04B0  3A80               	xorlw	128
  5385  04B1  00AD               	movwf	??_efgtoa^(0+128)
  5386  04B2  0846               	movf	(efgtoa@m+1)^(0+128),w
  5387  04B3  3A80               	xorlw	128
  5388  04B4  022D               	subwf	??_efgtoa^(0+128),w
  5389  04B5  1D03               	skipz
  5390  04B6  2CB9               	goto	u5235
  5391  04B7  0845               	movf	efgtoa@m^(0+128),w
  5392  04B8  025C               	subwf	efgtoa@i^(0+128),w
  5393  04B9                     u5235:	
  5394  04B9  1C03               	skipc
  5395  04BA  2CBC               	goto	u5231
  5396  04BB  2CBD               	goto	u5230
  5397  04BC                     u5231:	
  5398  04BC  2BEA               	goto	l3957
  5399  04BD                     u5230:	
  5400  04BD                     l3963:	
  5401                           
  5402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  5403  04BD  3040               	movlw	64
  5404  04BE  0020               	movlb	0	; select bank0
  5405  04BF  00A9               	movwf	___flmul@b+3
  5406  04C0  30A0               	movlw	160
  5407  04C1  00A8               	movwf	___flmul@b+2
  5408  04C2  3000               	movlw	0
  5409  04C3  00A7               	movwf	___flmul@b+1
  5410  04C4  3000               	movlw	0
  5411  04C5  00A6               	movwf	___flmul@b
  5412  04C6  0021               	movlb	1	; select bank1
  5413  04C7  0869               	movf	(efgtoa@u+3)^(0+128),w
  5414  04C8  0020               	movlb	0	; select bank0
  5415  04C9  00AD               	movwf	___flmul@a+3
  5416  04CA  0021               	movlb	1	; select bank1
  5417  04CB  0868               	movf	(efgtoa@u+2)^(0+128),w
  5418  04CC  0020               	movlb	0	; select bank0
  5419  04CD  00AC               	movwf	___flmul@a+2
  5420  04CE  0021               	movlb	1	; select bank1
  5421  04CF  0867               	movf	(efgtoa@u+1)^(0+128),w
  5422  04D0  0020               	movlb	0	; select bank0
  5423  04D1  00AB               	movwf	___flmul@a+1
  5424  04D2  0021               	movlb	1	; select bank1
  5425  04D3  0866               	movf	efgtoa@u^(0+128),w
  5426  04D4  0020               	movlb	0	; select bank0
  5427  04D5  00AA               	movwf	___flmul@a
  5428  04D6  3195  25A9  3181   	fcall	___flmul
  5429  04D9  0020               	movlb	0	; select bank0
  5430  04DA  0829               	movf	?___flmul+3,w
  5431  04DB  0021               	movlb	1	; select bank1
  5432  04DC  00DB               	movwf	(efgtoa@l+3)^(0+128)
  5433  04DD  0020               	movlb	0	; select bank0
  5434  04DE  0828               	movf	?___flmul+2,w
  5435  04DF  0021               	movlb	1	; select bank1
  5436  04E0  00DA               	movwf	(efgtoa@l+2)^(0+128)
  5437  04E1  0020               	movlb	0	; select bank0
  5438  04E2  0827               	movf	?___flmul+1,w
  5439  04E3  0021               	movlb	1	; select bank1
  5440  04E4  00D9               	movwf	(efgtoa@l+1)^(0+128)
  5441  04E5  0020               	movlb	0	; select bank0
  5442  04E6  0826               	movf	?___flmul,w
  5443  04E7  0021               	movlb	1	; select bank1
  5444  04E8  00D8               	movwf	efgtoa@l^(0+128)
  5445                           
  5446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  5447  04E9  0857               	movf	(efgtoa@h+3)^(0+128),w
  5448  04EA  0020               	movlb	0	; select bank0
  5449  04EB  00C3               	movwf	___flge@ff1+3
  5450  04EC  0021               	movlb	1	; select bank1
  5451  04ED  0856               	movf	(efgtoa@h+2)^(0+128),w
  5452  04EE  0020               	movlb	0	; select bank0
  5453  04EF  00C2               	movwf	___flge@ff1+2
  5454  04F0  0021               	movlb	1	; select bank1
  5455  04F1  0855               	movf	(efgtoa@h+1)^(0+128),w
  5456  04F2  0020               	movlb	0	; select bank0
  5457  04F3  00C1               	movwf	___flge@ff1+1
  5458  04F4  0021               	movlb	1	; select bank1
  5459  04F5  0854               	movf	efgtoa@h^(0+128),w
  5460  04F6  0020               	movlb	0	; select bank0
  5461  04F7  00C0               	movwf	___flge@ff1
  5462  04F8  0021               	movlb	1	; select bank1
  5463  04F9  085B               	movf	(efgtoa@l+3)^(0+128),w
  5464  04FA  0020               	movlb	0	; select bank0
  5465  04FB  00C7               	movwf	___flge@ff2+3
  5466  04FC  0021               	movlb	1	; select bank1
  5467  04FD  085A               	movf	(efgtoa@l+2)^(0+128),w
  5468  04FE  0020               	movlb	0	; select bank0
  5469  04FF  00C6               	movwf	___flge@ff2+2
  5470  0500  0021               	movlb	1	; select bank1
  5471  0501  0859               	movf	(efgtoa@l+1)^(0+128),w
  5472  0502  0020               	movlb	0	; select bank0
  5473  0503  00C5               	movwf	___flge@ff2+1
  5474  0504  0021               	movlb	1	; select bank1
  5475  0505  0858               	movf	efgtoa@l^(0+128),w
  5476  0506  0020               	movlb	0	; select bank0
  5477  0507  00C4               	movwf	___flge@ff2
  5478  0508  3191  218A  3181   	fcall	___flge
  5479  050B  1803               	btfsc	3,0
  5480  050C  2D0E               	goto	u5241
  5481  050D  2D0F               	goto	u5240
  5482  050E                     u5241:	
  5483  050E  2D19               	goto	l3967
  5484  050F                     u5240:	
  5485  050F                     l3965:	
  5486                           
  5487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  5488  050F  3000               	movlw	0
  5489  0510  0021               	movlb	1	; select bank1
  5490  0511  00DB               	movwf	(efgtoa@l+3)^(0+128)
  5491  0512  3000               	movlw	0
  5492  0513  00DA               	movwf	(efgtoa@l+2)^(0+128)
  5493  0514  3000               	movlw	0
  5494  0515  00D9               	movwf	(efgtoa@l+1)^(0+128)
  5495  0516  3000               	movlw	0
  5496  0517  00D8               	movwf	efgtoa@l^(0+128)
  5497                           
  5498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  5499  0518  2D3E               	goto	l3973
  5500  0519                     l3967:	
  5501                           
  5502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  5503  0519  0021               	movlb	1	; select bank1
  5504  051A  0857               	movf	(efgtoa@h+3)^(0+128),w
  5505  051B  00F3               	movwf	___fleq@ff1+3
  5506  051C  0856               	movf	(efgtoa@h+2)^(0+128),w
  5507  051D  00F2               	movwf	___fleq@ff1+2
  5508  051E  0855               	movf	(efgtoa@h+1)^(0+128),w
  5509  051F  00F1               	movwf	___fleq@ff1+1
  5510  0520  0854               	movf	efgtoa@h^(0+128),w
  5511  0521  00F0               	movwf	___fleq@ff1
  5512  0522  085B               	movf	(efgtoa@l+3)^(0+128),w
  5513  0523  00F7               	movwf	___fleq@ff2+3
  5514  0524  085A               	movf	(efgtoa@l+2)^(0+128),w
  5515  0525  00F6               	movwf	___fleq@ff2+2
  5516  0526  0859               	movf	(efgtoa@l+1)^(0+128),w
  5517  0527  00F5               	movwf	___fleq@ff2+1
  5518  0528  0858               	movf	efgtoa@l^(0+128),w
  5519  0529  00F4               	movwf	___fleq@ff2
  5520  052A  319D  25FB  3181   	fcall	___fleq
  5521  052D  1C03               	btfss	3,0
  5522  052E  2D30               	goto	u5251
  5523  052F  2D31               	goto	u5250
  5524  0530                     u5251:	
  5525  0530  2D3E               	goto	l3973
  5526  0531                     u5250:	
  5527  0531                     l3969:	
  5528  0531  0021               	movlb	1	; select bank1
  5529  0532  1849               	btfsc	efgtoa@d^(0+128),0
  5530  0533  2D35               	goto	u5261
  5531  0534  2D36               	goto	u5260
  5532  0535                     u5261:	
  5533  0535  2D3E               	goto	l3973
  5534  0536                     u5260:	
  5535  0536                     l3971:	
  5536                           
  5537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  5538  0536  3000               	movlw	0
  5539  0537  00DB               	movwf	(efgtoa@l+3)^(0+128)
  5540  0538  3000               	movlw	0
  5541  0539  00DA               	movwf	(efgtoa@l+2)^(0+128)
  5542  053A  3000               	movlw	0
  5543  053B  00D9               	movwf	(efgtoa@l+1)^(0+128)
  5544  053C  3000               	movlw	0
  5545  053D  00D8               	movwf	efgtoa@l^(0+128)
  5546  053E                     l3973:	
  5547                           
  5548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  5549  053E  0021               	movlb	1	; select bank1
  5550  053F  085B               	movf	(efgtoa@l+3)^(0+128),w
  5551  0540  0020               	movlb	0	; select bank0
  5552  0541  00DD               	movwf	___fladd@b+3
  5553  0542  0021               	movlb	1	; select bank1
  5554  0543  085A               	movf	(efgtoa@l+2)^(0+128),w
  5555  0544  0020               	movlb	0	; select bank0
  5556  0545  00DC               	movwf	___fladd@b+2
  5557  0546  0021               	movlb	1	; select bank1
  5558  0547  0859               	movf	(efgtoa@l+1)^(0+128),w
  5559  0548  0020               	movlb	0	; select bank0
  5560  0549  00DB               	movwf	___fladd@b+1
  5561  054A  0021               	movlb	1	; select bank1
  5562  054B  0858               	movf	efgtoa@l^(0+128),w
  5563  054C  0020               	movlb	0	; select bank0
  5564  054D  00DA               	movwf	___fladd@b
  5565  054E  0021               	movlb	1	; select bank1
  5566  054F  0861               	movf	(efgtoa@g+3)^(0+128),w
  5567  0550  0020               	movlb	0	; select bank0
  5568  0551  00E1               	movwf	___fladd@a+3
  5569  0552  0021               	movlb	1	; select bank1
  5570  0553  0860               	movf	(efgtoa@g+2)^(0+128),w
  5571  0554  0020               	movlb	0	; select bank0
  5572  0555  00E0               	movwf	___fladd@a+2
  5573  0556  0021               	movlb	1	; select bank1
  5574  0557  085F               	movf	(efgtoa@g+1)^(0+128),w
  5575  0558  0020               	movlb	0	; select bank0
  5576  0559  00DF               	movwf	___fladd@a+1
  5577  055A  0021               	movlb	1	; select bank1
  5578  055B  085E               	movf	efgtoa@g^(0+128),w
  5579  055C  0020               	movlb	0	; select bank0
  5580  055D  00DE               	movwf	___fladd@a
  5581  055E  3193  2371  3181   	fcall	___fladd
  5582  0561  0020               	movlb	0	; select bank0
  5583  0562  085D               	movf	?___fladd+3,w
  5584  0563  0021               	movlb	1	; select bank1
  5585  0564  00D7               	movwf	(efgtoa@h+3)^(0+128)
  5586  0565  0020               	movlb	0	; select bank0
  5587  0566  085C               	movf	?___fladd+2,w
  5588  0567  0021               	movlb	1	; select bank1
  5589  0568  00D6               	movwf	(efgtoa@h+2)^(0+128)
  5590  0569  0020               	movlb	0	; select bank0
  5591  056A  085B               	movf	?___fladd+1,w
  5592  056B  0021               	movlb	1	; select bank1
  5593  056C  00D5               	movwf	(efgtoa@h+1)^(0+128)
  5594  056D  0020               	movlb	0	; select bank0
  5595  056E  085A               	movf	?___fladd,w
  5596  056F  0021               	movlb	1	; select bank1
  5597  0570  00D4               	movwf	efgtoa@h^(0+128)
  5598  0571                     l3975:	
  5599                           
  5600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  5601  0571  0834               	movf	(efgtoa@ou+3)^(0+128),w
  5602  0572  00E9               	movwf	(efgtoa@u+3)^(0+128)
  5603  0573  0833               	movf	(efgtoa@ou+2)^(0+128),w
  5604  0574  00E8               	movwf	(efgtoa@u+2)^(0+128)
  5605  0575  0832               	movf	(efgtoa@ou+1)^(0+128),w
  5606  0576  00E7               	movwf	(efgtoa@u+1)^(0+128)
  5607  0577  0831               	movf	efgtoa@ou^(0+128),w
  5608  0578  00E6               	movwf	efgtoa@u^(0+128)
  5609  0579                     l3977:	
  5610                           
  5611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  5612  0579  3065               	movlw	101
  5613  057A  0650               	xorwf	efgtoa@nmode^(0+128),w
  5614  057B  1903               	btfsc	3,2
  5615  057C  2D7E               	goto	u5271
  5616  057D  2D7F               	goto	u5270
  5617  057E                     u5271:	
  5618  057E  2D84               	goto	l3981
  5619  057F                     u5270:	
  5620  057F                     l3979:	
  5621  057F  0863               	movf	(efgtoa@e+1)^(0+128),w
  5622  0580  00C8               	movwf	(efgtoa@ne+1)^(0+128)
  5623  0581  0862               	movf	efgtoa@e^(0+128),w
  5624  0582  00C7               	movwf	efgtoa@ne^(0+128)
  5625  0583  2D86               	goto	l534
  5626  0584                     l3981:	
  5627  0584  01C7               	clrf	efgtoa@ne^(0+128)
  5628  0585  01C8               	clrf	(efgtoa@ne+1)^(0+128)
  5629  0586                     l534:	
  5630                           
  5631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  5632  0586  01C3               	clrf	efgtoa@pp^(0+128)
  5633  0587  01C4               	clrf	(efgtoa@pp+1)^(0+128)
  5634                           
  5635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  5636  0588  01C1               	clrf	efgtoa@t^(0+128)
  5637  0589  01C2               	clrf	(efgtoa@t+1)^(0+128)
  5638                           
  5639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  5640  058A  01DC               	clrf	efgtoa@i^(0+128)
  5641  058B  01DD               	clrf	(efgtoa@i+1)^(0+128)
  5642                           
  5643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5644  058C  2EBF               	goto	l4031
  5645  058D                     l3983:	
  5646                           
  5647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  5648  058D  0021               	movlb	1	; select bank1
  5649  058E  0869               	movf	(efgtoa@u+3)^(0+128),w
  5650  058F  0020               	movlb	0	; select bank0
  5651  0590  00C3               	movwf	___fldiv@a+3
  5652  0591  0021               	movlb	1	; select bank1
  5653  0592  0868               	movf	(efgtoa@u+2)^(0+128),w
  5654  0593  0020               	movlb	0	; select bank0
  5655  0594  00C2               	movwf	___fldiv@a+2
  5656  0595  0021               	movlb	1	; select bank1
  5657  0596  0867               	movf	(efgtoa@u+1)^(0+128),w
  5658  0597  0020               	movlb	0	; select bank0
  5659  0598  00C1               	movwf	___fldiv@a+1
  5660  0599  0021               	movlb	1	; select bank1
  5661  059A  0866               	movf	efgtoa@u^(0+128),w
  5662  059B  0020               	movlb	0	; select bank0
  5663  059C  00C0               	movwf	___fldiv@a
  5664  059D  0021               	movlb	1	; select bank1
  5665  059E  0857               	movf	(efgtoa@h+3)^(0+128),w
  5666  059F  0020               	movlb	0	; select bank0
  5667  05A0  00C7               	movwf	___fldiv@b+3
  5668  05A1  0021               	movlb	1	; select bank1
  5669  05A2  0856               	movf	(efgtoa@h+2)^(0+128),w
  5670  05A3  0020               	movlb	0	; select bank0
  5671  05A4  00C6               	movwf	___fldiv@b+2
  5672  05A5  0021               	movlb	1	; select bank1
  5673  05A6  0855               	movf	(efgtoa@h+1)^(0+128),w
  5674  05A7  0020               	movlb	0	; select bank0
  5675  05A8  00C5               	movwf	___fldiv@b+1
  5676  05A9  0021               	movlb	1	; select bank1
  5677  05AA  0854               	movf	efgtoa@h^(0+128),w
  5678  05AB  0020               	movlb	0	; select bank0
  5679  05AC  00C4               	movwf	___fldiv@b
  5680  05AD  3188  2061  3181   	fcall	___fldiv
  5681  05B0  0020               	movlb	0	; select bank0
  5682  05B1  0843               	movf	?___fldiv+3,w
  5683  05B2  00DD               	movwf	floorf@x+3
  5684  05B3  0842               	movf	?___fldiv+2,w
  5685  05B4  00DC               	movwf	floorf@x+2
  5686  05B5  0841               	movf	?___fldiv+1,w
  5687  05B6  00DB               	movwf	floorf@x+1
  5688  05B7  0840               	movf	?___fldiv,w
  5689  05B8  00DA               	movwf	floorf@x
  5690  05B9  3180  2015  3181   	fcall	_floorf
  5691  05BC  0020               	movlb	0	; select bank0
  5692  05BD  085D               	movf	?_floorf+3,w
  5693  05BE  0021               	movlb	1	; select bank1
  5694  05BF  00DB               	movwf	(efgtoa@l+3)^(0+128)
  5695  05C0  0020               	movlb	0	; select bank0
  5696  05C1  085C               	movf	?_floorf+2,w
  5697  05C2  0021               	movlb	1	; select bank1
  5698  05C3  00DA               	movwf	(efgtoa@l+2)^(0+128)
  5699  05C4  0020               	movlb	0	; select bank0
  5700  05C5  085B               	movf	?_floorf+1,w
  5701  05C6  0021               	movlb	1	; select bank1
  5702  05C7  00D9               	movwf	(efgtoa@l+1)^(0+128)
  5703  05C8  0020               	movlb	0	; select bank0
  5704  05C9  085A               	movf	?_floorf,w
  5705  05CA  0021               	movlb	1	; select bank1
  5706  05CB  00D8               	movwf	efgtoa@l^(0+128)
  5707                           
  5708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  5709  05CC  085B               	movf	(efgtoa@l+3)^(0+128),w
  5710  05CD  00F3               	movwf	___fltol@f1+3
  5711  05CE  085A               	movf	(efgtoa@l+2)^(0+128),w
  5712  05CF  00F2               	movwf	___fltol@f1+2
  5713  05D0  0859               	movf	(efgtoa@l+1)^(0+128),w
  5714  05D1  00F1               	movwf	___fltol@f1+1
  5715  05D2  0858               	movf	efgtoa@l^(0+128),w
  5716  05D3  00F0               	movwf	___fltol@f1
  5717  05D4  3190  2097  3181   	fcall	___fltol
  5718  05D7  0871               	movf	?___fltol+1,w
  5719  05D8  0021               	movlb	1	; select bank1
  5720  05D9  00CA               	movwf	(efgtoa@d+1)^(0+128)
  5721  05DA  0870               	movf	?___fltol,w
  5722  05DB  00C9               	movwf	efgtoa@d^(0+128)
  5723  05DC                     l3985:	
  5724                           
  5725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5726  05DC  0022               	movlb	2	; select bank2
  5727  05DD  1A63               	btfsc	_flags^(0+256),4
  5728  05DE  2DE0               	goto	u5281
  5729  05DF  2DE1               	goto	u5280
  5730  05E0                     u5281:	
  5731  05E0  2DF7               	goto	l3995
  5732  05E1                     u5280:	
  5733  05E1                     l3987:	
  5734  05E1  0021               	movlb	1	; select bank1
  5735  05E2  0849               	movf	efgtoa@d^(0+128),w
  5736  05E3  044A               	iorwf	(efgtoa@d+1)^(0+128),w
  5737  05E4  1D03               	btfss	3,2
  5738  05E5  2DE7               	goto	u5291
  5739  05E6  2DE8               	goto	u5290
  5740  05E7                     u5291:	
  5741  05E7  2DF7               	goto	l3995
  5742  05E8                     u5290:	
  5743  05E8                     l3989:	
  5744  05E8  3067               	movlw	103
  5745  05E9  0653               	xorwf	efgtoa@mode^(0+128),w
  5746  05EA  1D03               	btfss	3,2
  5747  05EB  2DED               	goto	u5301
  5748  05EC  2DEE               	goto	u5300
  5749  05ED                     u5301:	
  5750  05ED  2DF7               	goto	l3995
  5751  05EE                     u5300:	
  5752  05EE                     l3991:	
  5753  05EE  1FC8               	btfss	(efgtoa@ne+1)^(0+128),7
  5754  05EF  2DF1               	goto	u5311
  5755  05F0  2DF2               	goto	u5310
  5756  05F1                     u5311:	
  5757  05F1  2DF7               	goto	l3995
  5758  05F2                     u5310:	
  5759  05F2                     l3993:	
  5760                           
  5761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  5762  05F2  3001               	movlw	1
  5763  05F3  07C1               	addwf	efgtoa@t^(0+128),f
  5764  05F4  3000               	movlw	0
  5765  05F5  3DC2               	addwfc	(efgtoa@t+1)^(0+128),f
  5766                           
  5767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  5768  05F6  2E45               	goto	l4023
  5769  05F7                     l3995:	
  5770                           
  5771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  5772  05F7  0021               	movlb	1	; select bank1
  5773  05F8  0843               	movf	efgtoa@pp^(0+128),w
  5774  05F9  0444               	iorwf	(efgtoa@pp+1)^(0+128),w
  5775  05FA  1D03               	btfss	3,2
  5776  05FB  2DFD               	goto	u5321
  5777  05FC  2DFE               	goto	u5320
  5778  05FD                     u5321:	
  5779  05FD  2E2D               	goto	l4015
  5780  05FE                     u5320:	
  5781  05FE                     l3997:	
  5782  05FE  1FC8               	btfss	(efgtoa@ne+1)^(0+128),7
  5783  05FF  2E01               	goto	u5331
  5784  0600  2E02               	goto	u5330
  5785  0601                     u5331:	
  5786  0601  2E2D               	goto	l4015
  5787  0602                     u5330:	
  5788  0602                     l3999:	
  5789                           
  5790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  5791  0602  302E               	movlw	46
  5792  0603  00AD               	movwf	??_efgtoa^(0+128)
  5793  0604  0864               	movf	efgtoa@n^(0+128),w
  5794  0605  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5795  0606  0086               	movwf	6
  5796  0607  3002               	movlw	2	; select bank4/5
  5797  0608  0087               	movwf	7
  5798  0609  082D               	movf	??_efgtoa^(0+128),w
  5799  060A  0081               	movwf	1
  5800  060B                     l4001:	
  5801  060B  3001               	movlw	1
  5802  060C  07E4               	addwf	efgtoa@n^(0+128),f
  5803  060D  3000               	movlw	0
  5804  060E  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  5805  060F                     l4003:	
  5806                           
  5807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  5808  060F  30FF               	movlw	255
  5809  0610  07D1               	addwf	efgtoa@w^(0+128),f
  5810  0611  30FF               	movlw	255
  5811  0612  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  5812  0613                     l4005:	
  5813                           
  5814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  5815  0613  3001               	movlw	1
  5816  0614  00C3               	movwf	efgtoa@pp^(0+128)
  5817  0615  3000               	movlw	0
  5818  0616  00C4               	movwf	(efgtoa@pp^(0+128)+1)
  5819  0617  2E2D               	goto	l4015
  5820  0618                     l4007:	
  5821                           
  5822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  5823  0618  3030               	movlw	48
  5824  0619  00AD               	movwf	??_efgtoa^(0+128)
  5825  061A  0864               	movf	efgtoa@n^(0+128),w
  5826  061B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5827  061C  0086               	movwf	6
  5828  061D  3002               	movlw	2	; select bank4/5
  5829  061E  0087               	movwf	7
  5830  061F  082D               	movf	??_efgtoa^(0+128),w
  5831  0620  0081               	movwf	1
  5832  0621                     l4009:	
  5833  0621  3001               	movlw	1
  5834  0622  07E4               	addwf	efgtoa@n^(0+128),f
  5835  0623  3000               	movlw	0
  5836  0624  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  5837  0625                     l4011:	
  5838                           
  5839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  5840  0625  30FF               	movlw	255
  5841  0626  07D1               	addwf	efgtoa@w^(0+128),f
  5842  0627  30FF               	movlw	255
  5843  0628  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  5844  0629                     l4013:	
  5845                           
  5846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  5847  0629  30FF               	movlw	255
  5848  062A  07C1               	addwf	efgtoa@t^(0+128),f
  5849  062B  30FF               	movlw	255
  5850  062C  3DC2               	addwfc	(efgtoa@t+1)^(0+128),f
  5851  062D                     l4015:	
  5852                           
  5853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  5854  062D  0841               	movf	efgtoa@t^(0+128),w
  5855  062E  0442               	iorwf	(efgtoa@t+1)^(0+128),w
  5856  062F  1D03               	btfss	3,2
  5857  0630  2E32               	goto	u5341
  5858  0631  2E33               	goto	u5340
  5859  0632                     u5341:	
  5860  0632  2E18               	goto	l4007
  5861  0633                     u5340:	
  5862  0633                     l4017:	
  5863                           
  5864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  5865  0633  0849               	movf	efgtoa@d^(0+128),w
  5866  0634  3E30               	addlw	48
  5867  0635  00AD               	movwf	??_efgtoa^(0+128)
  5868  0636  0864               	movf	efgtoa@n^(0+128),w
  5869  0637  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5870  0638  0086               	movwf	6
  5871  0639  3002               	movlw	2	; select bank4/5
  5872  063A  0087               	movwf	7
  5873  063B  082D               	movf	??_efgtoa^(0+128),w
  5874  063C  0081               	movwf	1
  5875  063D                     l4019:	
  5876  063D  3001               	movlw	1
  5877  063E  07E4               	addwf	efgtoa@n^(0+128),f
  5878  063F  3000               	movlw	0
  5879  0640  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  5880  0641                     l4021:	
  5881                           
  5882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  5883  0641  30FF               	movlw	255
  5884  0642  07D1               	addwf	efgtoa@w^(0+128),f
  5885  0643  30FF               	movlw	255
  5886  0644  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  5887  0645                     l4023:	
  5888                           
  5889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  5890  0645  085B               	movf	(efgtoa@l+3)^(0+128),w
  5891  0646  0020               	movlb	0	; select bank0
  5892  0647  00AD               	movwf	___flmul@a+3
  5893  0648  0021               	movlb	1	; select bank1
  5894  0649  085A               	movf	(efgtoa@l+2)^(0+128),w
  5895  064A  0020               	movlb	0	; select bank0
  5896  064B  00AC               	movwf	___flmul@a+2
  5897  064C  0021               	movlb	1	; select bank1
  5898  064D  0859               	movf	(efgtoa@l+1)^(0+128),w
  5899  064E  0020               	movlb	0	; select bank0
  5900  064F  00AB               	movwf	___flmul@a+1
  5901  0650  0021               	movlb	1	; select bank1
  5902  0651  0858               	movf	efgtoa@l^(0+128),w
  5903  0652  0020               	movlb	0	; select bank0
  5904  0653  00AA               	movwf	___flmul@a
  5905  0654  0021               	movlb	1	; select bank1
  5906  0655  0869               	movf	(efgtoa@u+3)^(0+128),w
  5907  0656  0020               	movlb	0	; select bank0
  5908  0657  00A9               	movwf	___flmul@b+3
  5909  0658  0021               	movlb	1	; select bank1
  5910  0659  0868               	movf	(efgtoa@u+2)^(0+128),w
  5911  065A  0020               	movlb	0	; select bank0
  5912  065B  00A8               	movwf	___flmul@b+2
  5913  065C  0021               	movlb	1	; select bank1
  5914  065D  0867               	movf	(efgtoa@u+1)^(0+128),w
  5915  065E  0020               	movlb	0	; select bank0
  5916  065F  00A7               	movwf	___flmul@b+1
  5917  0660  0021               	movlb	1	; select bank1
  5918  0661  0866               	movf	efgtoa@u^(0+128),w
  5919  0662  0020               	movlb	0	; select bank0
  5920  0663  00A6               	movwf	___flmul@b
  5921  0664  3195  25A9  3181   	fcall	___flmul
  5922  0667  0020               	movlb	0	; select bank0
  5923  0668  0829               	movf	?___flmul+3,w
  5924  0669  0021               	movlb	1	; select bank1
  5925  066A  00A3               	movwf	(___flsub@a+3)^(0+128)
  5926  066B  0020               	movlb	0	; select bank0
  5927  066C  0828               	movf	?___flmul+2,w
  5928  066D  0021               	movlb	1	; select bank1
  5929  066E  00A2               	movwf	(___flsub@a+2)^(0+128)
  5930  066F  0020               	movlb	0	; select bank0
  5931  0670  0827               	movf	?___flmul+1,w
  5932  0671  0021               	movlb	1	; select bank1
  5933  0672  00A1               	movwf	(___flsub@a+1)^(0+128)
  5934  0673  0020               	movlb	0	; select bank0
  5935  0674  0826               	movf	?___flmul,w
  5936  0675  0021               	movlb	1	; select bank1
  5937  0676  00A0               	movwf	___flsub@a^(0+128)
  5938  0677  0857               	movf	(efgtoa@h+3)^(0+128),w
  5939  0678  00A7               	movwf	(___flsub@b+3)^(0+128)
  5940  0679  0856               	movf	(efgtoa@h+2)^(0+128),w
  5941  067A  00A6               	movwf	(___flsub@b+2)^(0+128)
  5942  067B  0855               	movf	(efgtoa@h+1)^(0+128),w
  5943  067C  00A5               	movwf	(___flsub@b+1)^(0+128)
  5944  067D  0854               	movf	efgtoa@h^(0+128),w
  5945  067E  00A4               	movwf	___flsub@b^(0+128)
  5946  067F  3190  2005  3181   	fcall	___flsub
  5947  0682  0021               	movlb	1	; select bank1
  5948  0683  0823               	movf	(?___flsub+3)^(0+128),w
  5949  0684  00D7               	movwf	(efgtoa@h+3)^(0+128)
  5950  0685  0822               	movf	(?___flsub+2)^(0+128),w
  5951  0686  00D6               	movwf	(efgtoa@h+2)^(0+128)
  5952  0687  0821               	movf	(?___flsub+1)^(0+128),w
  5953  0688  00D5               	movwf	(efgtoa@h+1)^(0+128)
  5954  0689  0820               	movf	?___flsub^(0+128),w
  5955  068A  00D4               	movwf	efgtoa@h^(0+128)
  5956  068B                     l4025:	
  5957                           
  5958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  5959  068B  3041               	movlw	65
  5960  068C  0020               	movlb	0	; select bank0
  5961  068D  00C3               	movwf	___fldiv@a+3
  5962  068E  3020               	movlw	32
  5963  068F  00C2               	movwf	___fldiv@a+2
  5964  0690  3000               	movlw	0
  5965  0691  00C1               	movwf	___fldiv@a+1
  5966  0692  3000               	movlw	0
  5967  0693  00C0               	movwf	___fldiv@a
  5968  0694  0021               	movlb	1	; select bank1
  5969  0695  0869               	movf	(efgtoa@u+3)^(0+128),w
  5970  0696  0020               	movlb	0	; select bank0
  5971  0697  00C7               	movwf	___fldiv@b+3
  5972  0698  0021               	movlb	1	; select bank1
  5973  0699  0868               	movf	(efgtoa@u+2)^(0+128),w
  5974  069A  0020               	movlb	0	; select bank0
  5975  069B  00C6               	movwf	___fldiv@b+2
  5976  069C  0021               	movlb	1	; select bank1
  5977  069D  0867               	movf	(efgtoa@u+1)^(0+128),w
  5978  069E  0020               	movlb	0	; select bank0
  5979  069F  00C5               	movwf	___fldiv@b+1
  5980  06A0  0021               	movlb	1	; select bank1
  5981  06A1  0866               	movf	efgtoa@u^(0+128),w
  5982  06A2  0020               	movlb	0	; select bank0
  5983  06A3  00C4               	movwf	___fldiv@b
  5984  06A4  3188  2061  3181   	fcall	___fldiv
  5985  06A7  0020               	movlb	0	; select bank0
  5986  06A8  0843               	movf	?___fldiv+3,w
  5987  06A9  0021               	movlb	1	; select bank1
  5988  06AA  00E9               	movwf	(efgtoa@u+3)^(0+128)
  5989  06AB  0020               	movlb	0	; select bank0
  5990  06AC  0842               	movf	?___fldiv+2,w
  5991  06AD  0021               	movlb	1	; select bank1
  5992  06AE  00E8               	movwf	(efgtoa@u+2)^(0+128)
  5993  06AF  0020               	movlb	0	; select bank0
  5994  06B0  0841               	movf	?___fldiv+1,w
  5995  06B1  0021               	movlb	1	; select bank1
  5996  06B2  00E7               	movwf	(efgtoa@u+1)^(0+128)
  5997  06B3  0020               	movlb	0	; select bank0
  5998  06B4  0840               	movf	?___fldiv,w
  5999  06B5  0021               	movlb	1	; select bank1
  6000  06B6  00E6               	movwf	efgtoa@u^(0+128)
  6001  06B7                     l4027:	
  6002                           
  6003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  6004  06B7  30FF               	movlw	255
  6005  06B8  07C7               	addwf	efgtoa@ne^(0+128),f
  6006  06B9  30FF               	movlw	255
  6007  06BA  3DC8               	addwfc	(efgtoa@ne+1)^(0+128),f
  6008  06BB                     l4029:	
  6009                           
  6010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  6011  06BB  3001               	movlw	1
  6012  06BC  07DC               	addwf	efgtoa@i^(0+128),f
  6013  06BD  3000               	movlw	0
  6014  06BE  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  6015  06BF                     l4031:	
  6016                           
  6017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  6018  06BF  085D               	movf	(efgtoa@i+1)^(0+128),w
  6019  06C0  3A80               	xorlw	128
  6020  06C1  00AD               	movwf	??_efgtoa^(0+128)
  6021  06C2  0846               	movf	(efgtoa@m+1)^(0+128),w
  6022  06C3  3A80               	xorlw	128
  6023  06C4  022D               	subwf	??_efgtoa^(0+128),w
  6024  06C5  1D03               	skipz
  6025  06C6  2EC9               	goto	u5355
  6026  06C7  0845               	movf	efgtoa@m^(0+128),w
  6027  06C8  025C               	subwf	efgtoa@i^(0+128),w
  6028  06C9                     u5355:	
  6029  06C9  1803               	skipnc
  6030  06CA  2ECC               	goto	u5351
  6031  06CB  2ECD               	goto	u5350
  6032  06CC                     u5351:	
  6033  06CC  2EDB               	goto	l4035
  6034  06CD                     u5350:	
  6035  06CD                     l4033:	
  6036  06CD  0021               	movlb	1	; select bank1
  6037  06CE  0865               	movf	(efgtoa@n+1)^(0+128),w
  6038  06CF  3A80               	xorlw	128
  6039  06D0  00AD               	movwf	??_efgtoa^(0+128)
  6040  06D1  3080               	movlw	128
  6041  06D2  022D               	subwf	??_efgtoa^(0+128),w
  6042  06D3  1D03               	skipz
  6043  06D4  2ED7               	goto	u5365
  6044  06D5  304B               	movlw	75
  6045  06D6  0264               	subwf	efgtoa@n^(0+128),w
  6046  06D7                     u5365:	
  6047  06D7  1C03               	skipc
  6048  06D8  2EDA               	goto	u5361
  6049  06D9  2EDB               	goto	u5360
  6050  06DA                     u5361:	
  6051  06DA  2D8D               	goto	l3983
  6052  06DB                     u5360:	
  6053  06DB                     l4035:	
  6054                           
  6055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  6056  06DB  0021               	movlb	1	; select bank1
  6057  06DC  0843               	movf	efgtoa@pp^(0+128),w
  6058  06DD  0444               	iorwf	(efgtoa@pp+1)^(0+128),w
  6059  06DE  1D03               	btfss	3,2
  6060  06DF  2EE1               	goto	u5371
  6061  06E0  2EE2               	goto	u5370
  6062  06E1                     u5371:	
  6063  06E1  2EF5               	goto	l4043
  6064  06E2                     u5370:	
  6065  06E2                     l4037:	
  6066  06E2  0022               	movlb	2	; select bank2
  6067  06E3  1E63               	btfss	_flags^(0+256),4
  6068  06E4  2EE6               	goto	u5381
  6069  06E5  2EE7               	goto	u5380
  6070  06E6                     u5381:	
  6071  06E6  2EF5               	goto	l4043
  6072  06E7                     u5380:	
  6073  06E7                     l4039:	
  6074                           
  6075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  6076  06E7  302E               	movlw	46
  6077  06E8  0021               	movlb	1	; select bank1
  6078  06E9  00AD               	movwf	??_efgtoa^(0+128)
  6079  06EA  0864               	movf	efgtoa@n^(0+128),w
  6080  06EB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6081  06EC  0086               	movwf	6
  6082  06ED  3002               	movlw	2	; select bank4/5
  6083  06EE  0087               	movwf	7
  6084  06EF  082D               	movf	??_efgtoa^(0+128),w
  6085  06F0  0081               	movwf	1
  6086  06F1                     l4041:	
  6087  06F1  3001               	movlw	1
  6088  06F2  07E4               	addwf	efgtoa@n^(0+128),f
  6089  06F3  3000               	movlw	0
  6090  06F4  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  6091  06F5                     l4043:	
  6092                           
  6093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  6094  06F5  0021               	movlb	1	; select bank1
  6095  06F6  0864               	movf	efgtoa@n^(0+128),w
  6096  06F7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6097  06F8  0086               	movwf	6
  6098  06F9  3002               	movlw	2	; select bank4/5
  6099  06FA  0087               	movwf	7
  6100  06FB  0181               	clrf	1
  6101  06FC                     l4045:	
  6102                           
  6103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  6104  06FC  3065               	movlw	101
  6105  06FD  0650               	xorwf	efgtoa@nmode^(0+128),w
  6106  06FE  1D03               	btfss	3,2
  6107  06FF  2F01               	goto	u5391
  6108  0700  2F02               	goto	u5390
  6109  0701                     u5391:	
  6110  0701  2FC9               	goto	l4105
  6111  0702                     u5390:	
  6112  0702                     l4047:	
  6113                           
  6114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  6115  0702  304F               	movlw	79
  6116  0703  00DC               	movwf	efgtoa@i^(0+128)
  6117  0704  3000               	movlw	0
  6118  0705  00DD               	movwf	(efgtoa@i^(0+128)+1)
  6119  0706                     l4049:	
  6120                           
  6121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  6122  0706  085C               	movf	efgtoa@i^(0+128),w
  6123  0707  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6124  0708  0086               	movwf	6
  6125  0709  3002               	movlw	2	; select bank4/5
  6126  070A  0087               	movwf	7
  6127  070B  0181               	clrf	1
  6128  070C                     l4051:	
  6129                           
  6130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  6131  070C  01CB               	clrf	efgtoa@sign^(0+128)
  6132  070D  01CC               	clrf	(efgtoa@sign+1)^(0+128)
  6133  070E                     l4053:	
  6134                           
  6135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  6136  070E  1FE3               	btfss	(efgtoa@e+1)^(0+128),7
  6137  070F  2F11               	goto	u5401
  6138  0710  2F12               	goto	u5400
  6139  0711                     u5401:	
  6140  0711  2F1B               	goto	l4059
  6141  0712                     u5400:	
  6142  0712                     l4055:	
  6143                           
  6144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  6145  0712  3001               	movlw	1
  6146  0713  00CB               	movwf	efgtoa@sign^(0+128)
  6147  0714  3000               	movlw	0
  6148  0715  00CC               	movwf	(efgtoa@sign^(0+128)+1)
  6149  0716                     l4057:	
  6150                           
  6151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  6152  0716  09E2               	comf	efgtoa@e^(0+128),f
  6153  0717  09E3               	comf	(efgtoa@e+1)^(0+128),f
  6154  0718  0AE2               	incf	efgtoa@e^(0+128),f
  6155  0719  1903               	skipnz
  6156  071A  0AE3               	incf	(efgtoa@e+1)^(0+128),f
  6157  071B                     l4059:	
  6158                           
  6159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  6160  071B  3002               	movlw	2
  6161  071C  00CE               	movwf	efgtoa@p^(0+128)
  6162  071D  3000               	movlw	0
  6163  071E  00CF               	movwf	(efgtoa@p^(0+128)+1)
  6164                           
  6165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  6166  071F  2F53               	goto	l4071
  6167  0720                     l4061:	
  6168                           
  6169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  6170  0720  30FF               	movlw	255
  6171  0721  0021               	movlb	1	; select bank1
  6172  0722  07DC               	addwf	efgtoa@i^(0+128),f
  6173  0723  30FF               	movlw	255
  6174  0724  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  6175  0725                     l4063:	
  6176                           
  6177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  6178  0725  300A               	movlw	10
  6179  0726  00F0               	movwf	___awmod@divisor
  6180  0727  3000               	movlw	0
  6181  0728  00F1               	movwf	___awmod@divisor+1
  6182  0729  0863               	movf	(efgtoa@e+1)^(0+128),w
  6183  072A  00F3               	movwf	___awmod@dividend+1
  6184  072B  0862               	movf	efgtoa@e^(0+128),w
  6185  072C  00F2               	movwf	___awmod@dividend
  6186  072D  319E  2649  3181   	fcall	___awmod
  6187  0730  0870               	movf	?___awmod,w
  6188  0731  3E30               	addlw	48
  6189  0732  0021               	movlb	1	; select bank1
  6190  0733  00AD               	movwf	??_efgtoa^(0+128)
  6191  0734  085C               	movf	efgtoa@i^(0+128),w
  6192  0735  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6193  0736  0086               	movwf	6
  6194  0737  3002               	movlw	2	; select bank4/5
  6195  0738  0087               	movwf	7
  6196  0739  082D               	movf	??_efgtoa^(0+128),w
  6197  073A  0081               	movwf	1
  6198  073B                     l4065:	
  6199                           
  6200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  6201  073B  300A               	movlw	10
  6202  073C  00F0               	movwf	___awdiv@divisor
  6203  073D  3000               	movlw	0
  6204  073E  00F1               	movwf	___awdiv@divisor+1
  6205  073F  0863               	movf	(efgtoa@e+1)^(0+128),w
  6206  0740  00F3               	movwf	___awdiv@dividend+1
  6207  0741  0862               	movf	efgtoa@e^(0+128),w
  6208  0742  00F2               	movwf	___awdiv@dividend
  6209  0743  3188  2002  3181   	fcall	___awdiv
  6210  0746  0871               	movf	?___awdiv+1,w
  6211  0747  0021               	movlb	1	; select bank1
  6212  0748  00E3               	movwf	(efgtoa@e+1)^(0+128)
  6213  0749  0870               	movf	?___awdiv,w
  6214  074A  00E2               	movwf	efgtoa@e^(0+128)
  6215  074B                     l4067:	
  6216                           
  6217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  6218  074B  30FF               	movlw	255
  6219  074C  07CE               	addwf	efgtoa@p^(0+128),f
  6220  074D  30FF               	movlw	255
  6221  074E  3DCF               	addwfc	(efgtoa@p+1)^(0+128),f
  6222  074F                     l4069:	
  6223                           
  6224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  6225  074F  30FF               	movlw	255
  6226  0750  07D1               	addwf	efgtoa@w^(0+128),f
  6227  0751  30FF               	movlw	255
  6228  0752  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  6229  0753                     l4071:	
  6230                           
  6231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  6232  0753  0862               	movf	efgtoa@e^(0+128),w
  6233  0754  0463               	iorwf	(efgtoa@e+1)^(0+128),w
  6234  0755  1D03               	btfss	3,2
  6235  0756  2F58               	goto	u5411
  6236  0757  2F59               	goto	u5410
  6237  0758                     u5411:	
  6238  0758  2F20               	goto	l4061
  6239  0759                     u5410:	
  6240  0759                     l4073:	
  6241  0759  084F               	movf	(efgtoa@p+1)^(0+128),w
  6242  075A  3A80               	xorlw	128
  6243  075B  00AD               	movwf	??_efgtoa^(0+128)
  6244  075C  3080               	movlw	128
  6245  075D  022D               	subwf	??_efgtoa^(0+128),w
  6246  075E  1D03               	skipz
  6247  075F  2F62               	goto	u5425
  6248  0760  3001               	movlw	1
  6249  0761  024E               	subwf	efgtoa@p^(0+128),w
  6250  0762                     u5425:	
  6251  0762  1803               	skipnc
  6252  0763  2F65               	goto	u5421
  6253  0764  2F66               	goto	u5420
  6254  0765                     u5421:	
  6255  0765  2F20               	goto	l4061
  6256  0766                     u5420:	
  6257  0766                     l4075:	
  6258                           
  6259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  6260  0766  30FF               	movlw	255
  6261  0767  0021               	movlb	1	; select bank1
  6262  0768  07DC               	addwf	efgtoa@i^(0+128),f
  6263  0769  30FF               	movlw	255
  6264  076A  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  6265  076B                     l4077:	
  6266                           
  6267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  6268  076B  084B               	movf	efgtoa@sign^(0+128),w
  6269  076C  044C               	iorwf	(efgtoa@sign+1)^(0+128),w
  6270  076D  1D03               	btfss	3,2
  6271  076E  2F70               	goto	u5431
  6272  076F  2F71               	goto	u5430
  6273  0770                     u5431:	
  6274  0770  2F76               	goto	l4081
  6275  0771                     u5430:	
  6276  0771                     l4079:	
  6277  0771  302B               	movlw	43
  6278  0772  00BB               	movwf	_efgtoa$828^(0+128)
  6279  0773  3000               	movlw	0
  6280  0774  00BC               	movwf	(_efgtoa$828^(0+128)+1)
  6281  0775  2F7A               	goto	l4083
  6282  0776                     l4081:	
  6283  0776  302D               	movlw	45
  6284  0777  00BB               	movwf	_efgtoa$828^(0+128)
  6285  0778  3000               	movlw	0
  6286  0779  00BC               	movwf	(_efgtoa$828^(0+128)+1)
  6287  077A                     l4083:	
  6288  077A  083B               	movf	_efgtoa$828^(0+128),w
  6289  077B  00AD               	movwf	??_efgtoa^(0+128)
  6290  077C  085C               	movf	efgtoa@i^(0+128),w
  6291  077D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6292  077E  0086               	movwf	6
  6293  077F  3002               	movlw	2	; select bank4/5
  6294  0780  0087               	movwf	7
  6295  0781  082D               	movf	??_efgtoa^(0+128),w
  6296  0782  0081               	movwf	1
  6297  0783                     l4085:	
  6298                           
  6299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  6300  0783  30FF               	movlw	255
  6301  0784  07D1               	addwf	efgtoa@w^(0+128),f
  6302  0785  30FF               	movlw	255
  6303  0786  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  6304  0787                     l4087:	
  6305                           
  6306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6307  0787  30FF               	movlw	255
  6308  0788  07DC               	addwf	efgtoa@i^(0+128),f
  6309  0789  30FF               	movlw	255
  6310  078A  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  6311  078B                     l4089:	
  6312  078B  082C               	movf	efgtoa@c^(0+128),w
  6313  078C  3EBF               	addlw	191
  6314  078D  00AD               	movwf	??_efgtoa^(0+128)
  6315  078E  30FF               	movlw	255
  6316  078F  1803               	skipnc
  6317  0790  3000               	movlw	0
  6318  0791  00AE               	movwf	(??_efgtoa^(0+128)+1)
  6319  0792  3000               	movlw	0
  6320  0793  022E               	subwf	(??_efgtoa+1)^(0+128),w
  6321  0794  301A               	movlw	26
  6322  0795  1903               	skipnz
  6323  0796  022D               	subwf	??_efgtoa^(0+128),w
  6324  0797  1C03               	skipc
  6325  0798  2F9A               	goto	u5441
  6326  0799  2F9C               	goto	u5440
  6327  079A                     u5441:	
  6328  079A  3001               	movlw	1
  6329  079B  2F9D               	goto	u5450
  6330  079C                     u5440:	
  6331  079C  3000               	movlw	0
  6332  079D                     u5450:	
  6333  079D  00AF               	movwf	(??_efgtoa+2)^(0+128)
  6334  079E  01B0               	clrf	((??_efgtoa+2)^(0+128)+1)
  6335  079F  082F               	movf	(??_efgtoa+2)^(0+128),w
  6336  07A0  00BF               	movwf	_efgtoa$830^(0+128)
  6337  07A1  0830               	movf	(??_efgtoa+3)^(0+128),w
  6338  07A2  00C0               	movwf	(_efgtoa$830+1)^(0+128)
  6339  07A3                     l4093:	
  6340  07A3  083F               	movf	_efgtoa$830^(0+128),w
  6341  07A4  0440               	iorwf	(_efgtoa$830+1)^(0+128),w
  6342  07A5  1D03               	btfss	3,2
  6343  07A6  2FA8               	goto	u5461
  6344  07A7  2FA9               	goto	u5460
  6345  07A8                     u5461:	
  6346  07A8  2FAE               	goto	l4097
  6347  07A9                     u5460:	
  6348  07A9                     l4095:	
  6349  07A9  3065               	movlw	101
  6350  07AA  00BD               	movwf	_efgtoa$829^(0+128)
  6351  07AB  3000               	movlw	0
  6352  07AC  00BE               	movwf	(_efgtoa$829^(0+128)+1)
  6353  07AD  2FB2               	goto	l4099
  6354  07AE                     l4097:	
  6355  07AE  3045               	movlw	69
  6356  07AF  00BD               	movwf	_efgtoa$829^(0+128)
  6357  07B0  3000               	movlw	0
  6358  07B1  00BE               	movwf	(_efgtoa$829^(0+128)+1)
  6359  07B2                     l4099:	
  6360  07B2  083D               	movf	_efgtoa$829^(0+128),w
  6361  07B3  00AD               	movwf	??_efgtoa^(0+128)
  6362  07B4  085C               	movf	efgtoa@i^(0+128),w
  6363  07B5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6364  07B6  0086               	movwf	6
  6365  07B7  3002               	movlw	2	; select bank4/5
  6366  07B8  0087               	movwf	7
  6367  07B9  082D               	movf	??_efgtoa^(0+128),w
  6368  07BA  0081               	movwf	1
  6369  07BB                     l4101:	
  6370                           
  6371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  6372  07BB  30FF               	movlw	255
  6373  07BC  07D1               	addwf	efgtoa@w^(0+128),f
  6374  07BD  30FF               	movlw	255
  6375  07BE  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  6376  07BF                     l4103:	
  6377                           
  6378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  6379  07BF  085C               	movf	efgtoa@i^(0+128),w
  6380  07C0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6381  07C1  00F0               	movwf	strcpy@src
  6382  07C2  3002               	movlw	2
  6383  07C3  00F1               	movwf	strcpy@src+1
  6384  07C4  0864               	movf	efgtoa@n^(0+128),w
  6385  07C5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6386  07C6  319B  230C  3181   	fcall	_strcpy
  6387  07C9                     l4105:	
  6388                           
  6389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  6390  07C9  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6391  07CA  0021               	movlb	1	; select bank1
  6392  07CB  00AD               	movwf	??_efgtoa^(0+128)
  6393  07CC  082D               	movf	??_efgtoa^(0+128),w
  6394  07CD  0020               	movlb	0	; select bank0
  6395  07CE  00A4               	movwf	pad@buf
  6396  07CF  0021               	movlb	1	; select bank1
  6397  07D0  0852               	movf	(efgtoa@w+1)^(0+128),w
  6398  07D1  0020               	movlb	0	; select bank0
  6399  07D2  00A6               	movwf	pad@p+1
  6400  07D3  0021               	movlb	1	; select bank1
  6401  07D4  0851               	movf	efgtoa@w^(0+128),w
  6402  07D5  0020               	movlb	0	; select bank0
  6403  07D6  00A5               	movwf	pad@p
  6404  07D7  0021               	movlb	1	; select bank1
  6405  07D8  084D               	movf	efgtoa@fp^(0+128),w
  6406  07D9  319E  26F2  3181   	fcall	_pad
  6407  07DC  0020               	movlb	0	; select bank0
  6408  07DD  0825               	movf	?_pad+1,w
  6409  07DE  0021               	movlb	1	; select bank1
  6410  07DF  00A9               	movwf	(?_efgtoa+1)^(0+128)
  6411  07E0  0020               	movlb	0	; select bank0
  6412  07E1  0824               	movf	?_pad,w
  6413  07E2  0021               	movlb	1	; select bank1
  6414  07E3  00A8               	movwf	?_efgtoa^(0+128)
  6415  07E4                     l490:	
  6416  07E4  0008               	return
  6417  07E5                     __end_of_efgtoa:	
  6418                           
  6419                           	psect	text6
  6420  1B74                     __ptext6:	
  6421 ;; *************** function _tolower *****************
  6422 ;; Defined at:
  6423 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  c               2    6[COMMON] int 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  2    6[COMMON] int 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;Total ram usage:        8 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    1
  6444 ;; This function calls:
  6445 ;;		_isupper
  6446 ;; This function is called by:
  6447 ;;		_efgtoa
  6448 ;;		_vfpfcnvrt
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function _tolower
  6454  1B74                     _tolower:	
  6455  1B74                     l3301:	
  6456                           ;incstack = 0
  6457                           ; Regs used in _tolower: [wreg+status,2+status,0]
  6458                           
  6459  1B74  0876               	movf	tolower@c,w
  6460  1B75  3EBF               	addlw	191
  6461  1B76  00F8               	movwf	??_tolower
  6462  1B77  30FF               	movlw	255
  6463  1B78  3D77               	addwfc	tolower@c+1,w
  6464  1B79  00F9               	movwf	??_tolower+1
  6465  1B7A  3000               	movlw	0
  6466  1B7B  0279               	subwf	??_tolower+1,w
  6467  1B7C  301A               	movlw	26
  6468  1B7D  1903               	skipnz
  6469  1B7E  0278               	subwf	??_tolower,w
  6470  1B7F  1C03               	skipc
  6471  1B80  2B82               	goto	u3801
  6472  1B81  2B84               	goto	u3800
  6473  1B82                     u3801:	
  6474  1B82  3001               	movlw	1
  6475  1B83  2B85               	goto	u3810
  6476  1B84                     u3800:	
  6477  1B84  3000               	movlw	0
  6478  1B85                     u3810:	
  6479  1B85  00FA               	movwf	??_tolower+2
  6480  1B86  01FB               	clrf	??_tolower+3
  6481  1B87  087A               	movf	??_tolower+2,w
  6482  1B88  00FC               	movwf	_tolower$1274
  6483  1B89  087B               	movf	??_tolower+3,w
  6484  1B8A  00FD               	movwf	_tolower$1274+1
  6485  1B8B                     l3305:	
  6486  1B8B  087C               	movf	_tolower$1274,w
  6487  1B8C  047D               	iorwf	_tolower$1274+1,w
  6488  1B8D  1903               	btfsc	3,2
  6489  1B8E  2B90               	goto	u3821
  6490  1B8F  2B91               	goto	u3820
  6491  1B90                     u3821:	
  6492  1B90  2B98               	goto	l1189
  6493  1B91                     u3820:	
  6494  1B91                     l3307:	
  6495  1B91  3020               	movlw	32
  6496  1B92  0476               	iorwf	tolower@c,w
  6497  1B93  00F6               	movwf	?_tolower
  6498  1B94  3000               	movlw	0
  6499  1B95  0477               	iorwf	tolower@c+1,w
  6500  1B96  00F7               	movwf	?_tolower+1
  6501  1B97  2B98               	goto	l1194
  6502  1B98                     l1189:	
  6503  1B98                     l1194:	
  6504  1B98  0008               	return
  6505  1B99                     __end_of_tolower:	
  6506                           
  6507                           	psect	text7
  6508  1A62                     __ptext7:	
  6509 ;; *************** function _isupper *****************
  6510 ;; Defined at:
  6511 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  c               2    0[COMMON] int 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  2    0[COMMON] int 
  6518 ;; Registers used:
  6519 ;;		wreg, status,2, status,0
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;Total ram usage:        6 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_efgtoa
  6535 ;;		_vfpfcnvrt
  6536 ;;		_tolower
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           
  6541                           ;psect for function _isupper
  6542  1A62                     _isupper:	
  6543  1A62                     l3027:	
  6544                           ;incstack = 0
  6545                           ; Regs used in _isupper: [wreg+status,2+status,0]
  6546                           
  6547  1A62  0870               	movf	isupper@c,w
  6548  1A63  3EBF               	addlw	191
  6549  1A64  00F2               	movwf	??_isupper
  6550  1A65  30FF               	movlw	255
  6551  1A66  3D71               	addwfc	isupper@c+1,w
  6552  1A67  00F3               	movwf	??_isupper+1
  6553  1A68  3000               	movlw	0
  6554  1A69  0273               	subwf	??_isupper+1,w
  6555  1A6A  301A               	movlw	26
  6556  1A6B  1903               	skipnz
  6557  1A6C  0272               	subwf	??_isupper,w
  6558  1A6D  1C03               	skipc
  6559  1A6E  2A70               	goto	u3191
  6560  1A6F  2A72               	goto	u3190
  6561  1A70                     u3191:	
  6562  1A70  3001               	movlw	1
  6563  1A71  2A73               	goto	u3200
  6564  1A72                     u3190:	
  6565  1A72  3000               	movlw	0
  6566  1A73                     u3200:	
  6567  1A73  00F4               	movwf	??_isupper+2
  6568  1A74  01F5               	clrf	??_isupper+3
  6569  1A75  0874               	movf	??_isupper+2,w
  6570  1A76  00F0               	movwf	?_isupper
  6571  1A77  0875               	movf	??_isupper+3,w
  6572  1A78  00F1               	movwf	?_isupper+1
  6573  1A79                     l1130:	
  6574  1A79  0008               	return
  6575  1A7A                     __end_of_isupper:	
  6576                           
  6577                           	psect	text8
  6578  1B0C                     __ptext8:	
  6579 ;; *************** function _strcpy *****************
  6580 ;; Defined at:
  6581 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  dest            1    wreg     PTR unsigned char 
  6584 ;;		 -> dbuf(80), 
  6585 ;;  src             2    0[COMMON] PTR const unsigned char 
  6586 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  6587 ;;		 -> dbuf(80), 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  dest            1    7[COMMON] PTR unsigned char 
  6590 ;;		 -> dbuf(80), 
  6591 ;;  s               2    4[COMMON] PTR const unsigned char 
  6592 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  6593 ;;		 -> dbuf(80), 
  6594 ;;  d               1    6[COMMON] PTR unsigned char 
  6595 ;;		 -> dbuf(80), 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  1    wreg      PTR unsigned char 
  6598 ;; Registers used:
  6599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6606 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6608 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6609 ;;Total ram usage:        8 bytes
  6610 ;; Hardware stack levels used:    1
  6611 ;; This function calls:
  6612 ;;		Nothing
  6613 ;; This function is called by:
  6614 ;;		_efgtoa
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           
  6619                           ;psect for function _strcpy
  6620  1B0C                     _strcpy:	
  6621                           
  6622                           ;incstack = 0
  6623                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6624                           ;strcpy@dest stored from wreg
  6625  1B0C  00F7               	movwf	strcpy@dest
  6626  1B0D                     l3297:	
  6627  1B0D  0871               	movf	strcpy@src+1,w
  6628  1B0E  00F5               	movwf	strcpy@s+1
  6629  1B0F  0870               	movf	strcpy@src,w
  6630  1B10  00F4               	movwf	strcpy@s
  6631  1B11  0877               	movf	strcpy@dest,w
  6632  1B12  00F2               	movwf	??_strcpy
  6633  1B13  0872               	movf	??_strcpy,w
  6634  1B14  00F6               	movwf	strcpy@d
  6635  1B15                     l3299:	
  6636  1B15  0876               	movf	strcpy@d,w
  6637  1B16  0086               	movwf	6
  6638  1B17  3002               	movlw	2	; select bank4/5
  6639  1B18  0087               	movwf	7
  6640  1B19  0AF6               	incf	strcpy@d,f
  6641  1B1A  0875               	movf	strcpy@s+1,w
  6642  1B1B  00F3               	movwf	??_strcpy+1
  6643  1B1C  0874               	movf	strcpy@s,w
  6644  1B1D  00F2               	movwf	??_strcpy
  6645  1B1E  0AF4               	incf	strcpy@s,f
  6646  1B1F  1903               	skipnz
  6647  1B20  0AF5               	incf	strcpy@s+1,f
  6648  1B21  0872               	movf	??_strcpy,w
  6649  1B22  0084               	movwf	4
  6650  1B23  0873               	movf	??_strcpy+1,w
  6651  1B24  0085               	movwf	5
  6652  1B25  0800               	movf	0,w	;code access
  6653  1B26  3FC0               	movwi [0]fsr1
  6654  1B27  0889               	movf	9,f
  6655  1B28  1D03               	btfss	3,2
  6656  1B29  2B2B               	goto	u3791
  6657  1B2A  2B2C               	goto	u3790
  6658  1B2B                     u3791:	
  6659  1B2B  2B15               	goto	l3299
  6660  1B2C                     u3790:	
  6661  1B2C                     l1169:	
  6662  1B2C  0008               	return
  6663  1B2D                     __end_of_strcpy:	
  6664                           
  6665                           	psect	text9
  6666  1EF2                     __ptext9:	
  6667 ;; *************** function _pad *****************
  6668 ;; Defined at:
  6669 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  fp              1    wreg     PTR struct _IO_FILE
  6672 ;;		 -> sprintf@f(5), 
  6673 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  6674 ;;		 -> dbuf(80), 
  6675 ;;  p               2    5[BANK0 ] int 
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  6678 ;;		 -> sprintf@f(5), 
  6679 ;;  w               2    9[BANK0 ] int 
  6680 ;;  i               2    7[BANK0 ] int 
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  2    4[BANK0 ] int 
  6683 ;; Registers used:
  6684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6690 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6694 ;;Total ram usage:        9 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    3
  6697 ;; This function calls:
  6698 ;;		_fputc
  6699 ;;		_fputs
  6700 ;;		_strlen
  6701 ;; This function is called by:
  6702 ;;		_efgtoa
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           
  6707                           ;psect for function _pad
  6708  1EF2                     _pad:	
  6709                           
  6710                           ;incstack = 0
  6711                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6712                           ;pad@fp stored from wreg
  6713  1EF2  0020               	movlb	0	; select bank0
  6714  1EF3  00AB               	movwf	pad@fp
  6715  1EF4                     l3251:	
  6716                           
  6717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6718  1EF4  0022               	movlb	2	; select bank2
  6719  1EF5  1C63               	btfss	_flags^(0+256),0
  6720  1EF6  2EF8               	goto	u3671
  6721  1EF7  2EF9               	goto	u3670
  6722  1EF8                     u3671:	
  6723  1EF8  2F02               	goto	l3255
  6724  1EF9                     u3670:	
  6725  1EF9                     l3253:	
  6726                           
  6727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6728  1EF9  0020               	movlb	0	; select bank0
  6729  1EFA  082B               	movf	pad@fp,w
  6730  1EFB  00FC               	movwf	??_pad
  6731  1EFC  087C               	movf	??_pad,w
  6732  1EFD  00F8               	movwf	fputs@fp
  6733  1EFE  0824               	movf	pad@buf,w
  6734  1EFF  319B  2399  319E   	fcall	_fputs
  6735  1F02                     l3255:	
  6736                           
  6737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6738  1F02  0020               	movlb	0	; select bank0
  6739  1F03  1BA6               	btfsc	pad@p+1,7
  6740  1F04  2F06               	goto	u3681
  6741  1F05  2F07               	goto	u3680
  6742  1F06                     u3681:	
  6743  1F06  2F0C               	goto	l3259
  6744  1F07                     u3680:	
  6745  1F07                     l3257:	
  6746  1F07  0826               	movf	pad@p+1,w
  6747  1F08  00AA               	movwf	pad@w+1
  6748  1F09  0825               	movf	pad@p,w
  6749  1F0A  00A9               	movwf	pad@w
  6750  1F0B  2F0E               	goto	l467
  6751  1F0C                     l3259:	
  6752  1F0C  01A9               	clrf	pad@w
  6753  1F0D  01AA               	clrf	pad@w+1
  6754  1F0E                     l467:	
  6755                           
  6756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6757  1F0E  01A7               	clrf	pad@i
  6758  1F0F  01A8               	clrf	pad@i+1
  6759                           
  6760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6761  1F10  2F22               	goto	l3265
  6762  1F11                     l3261:	
  6763                           
  6764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6765  1F11  3020               	movlw	32
  6766  1F12  00F0               	movwf	fputc@c
  6767  1F13  3000               	movlw	0
  6768  1F14  00F1               	movwf	fputc@c+1
  6769  1F15  0020               	movlb	0	; select bank0
  6770  1F16  082B               	movf	pad@fp,w
  6771  1F17  00FC               	movwf	??_pad
  6772  1F18  087C               	movf	??_pad,w
  6773  1F19  00F2               	movwf	fputc@fp
  6774  1F1A  319E  269C  319E   	fcall	_fputc
  6775  1F1D                     l3263:	
  6776                           
  6777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6778  1F1D  3001               	movlw	1
  6779  1F1E  0020               	movlb	0	; select bank0
  6780  1F1F  07A7               	addwf	pad@i,f
  6781  1F20  3000               	movlw	0
  6782  1F21  3DA8               	addwfc	pad@i+1,f
  6783  1F22                     l3265:	
  6784                           
  6785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6786  1F22  0828               	movf	pad@i+1,w
  6787  1F23  3A80               	xorlw	128
  6788  1F24  00FC               	movwf	??_pad
  6789  1F25  082A               	movf	pad@w+1,w
  6790  1F26  3A80               	xorlw	128
  6791  1F27  027C               	subwf	??_pad,w
  6792  1F28  1D03               	skipz
  6793  1F29  2F2C               	goto	u3695
  6794  1F2A  0829               	movf	pad@w,w
  6795  1F2B  0227               	subwf	pad@i,w
  6796  1F2C                     u3695:	
  6797  1F2C  1C03               	skipc
  6798  1F2D  2F2F               	goto	u3691
  6799  1F2E  2F30               	goto	u3690
  6800  1F2F                     u3691:	
  6801  1F2F  2F11               	goto	l3261
  6802  1F30                     u3690:	
  6803  1F30                     l470:	
  6804                           
  6805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6806  1F30  0022               	movlb	2	; select bank2
  6807  1F31  1863               	btfsc	_flags^(0+256),0
  6808  1F32  2F34               	goto	u3701
  6809  1F33  2F35               	goto	u3700
  6810  1F34                     u3701:	
  6811  1F34  2F3E               	goto	l3269
  6812  1F35                     u3700:	
  6813  1F35                     l3267:	
  6814                           
  6815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6816  1F35  0020               	movlb	0	; select bank0
  6817  1F36  082B               	movf	pad@fp,w
  6818  1F37  00FC               	movwf	??_pad
  6819  1F38  087C               	movf	??_pad,w
  6820  1F39  00F8               	movwf	fputs@fp
  6821  1F3A  0824               	movf	pad@buf,w
  6822  1F3B  319B  2399  319E   	fcall	_fputs
  6823  1F3E                     l3269:	
  6824                           
  6825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6826  1F3E  0020               	movlb	0	; select bank0
  6827  1F3F  0824               	movf	pad@buf,w
  6828  1F40  319A  2293  319E   	fcall	_strlen
  6829  1F43  0020               	movlb	0	; select bank0
  6830  1F44  0829               	movf	pad@w,w
  6831  1F45  0770               	addwf	?_strlen,w
  6832  1F46  00A4               	movwf	?_pad
  6833  1F47  082A               	movf	pad@w+1,w
  6834  1F48  3D71               	addwfc	?_strlen+1,w
  6835  1F49  00A5               	movwf	?_pad+1
  6836  1F4A                     l472:	
  6837  1F4A  0008               	return
  6838  1F4B                     __end_of_pad:	
  6839                           
  6840                           	psect	text10
  6841  1A93                     __ptext10:	
  6842 ;; *************** function _strlen *****************
  6843 ;; Defined at:
  6844 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  s               1    wreg     PTR const unsigned char 
  6847 ;;		 -> dbuf(80), 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  s               1    4[COMMON] PTR const unsigned char 
  6850 ;;		 -> dbuf(80), 
  6851 ;;  a               1    3[COMMON] PTR const unsigned char 
  6852 ;;		 -> dbuf(80), 
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  2    0[COMMON] unsigned int 
  6855 ;; Registers used:
  6856 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6865 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6866 ;;Total ram usage:        5 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_pad
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           
  6876                           ;psect for function _strlen
  6877  1A93                     _strlen:	
  6878                           
  6879                           ;incstack = 0
  6880                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6881                           ;strlen@s stored from wreg
  6882  1A93  00F4               	movwf	strlen@s
  6883  1A94                     l3017:	
  6884  1A94  0874               	movf	strlen@s,w
  6885  1A95  00F2               	movwf	??_strlen
  6886  1A96  0872               	movf	??_strlen,w
  6887  1A97  00F3               	movwf	strlen@a
  6888  1A98  2A9D               	goto	l3021
  6889  1A99                     l3019:	
  6890  1A99  3001               	movlw	1
  6891  1A9A  00F2               	movwf	??_strlen
  6892  1A9B  0872               	movf	??_strlen,w
  6893  1A9C  07F4               	addwf	strlen@s,f
  6894  1A9D                     l3021:	
  6895  1A9D  0874               	movf	strlen@s,w
  6896  1A9E  0086               	movwf	6
  6897  1A9F  3002               	movlw	2	; select bank4/5
  6898  1AA0  0087               	movwf	7
  6899  1AA1  0801               	movf	1,w
  6900  1AA2  1D03               	btfss	3,2
  6901  1AA3  2AA5               	goto	u3181
  6902  1AA4  2AA6               	goto	u3180
  6903  1AA5                     u3181:	
  6904  1AA5  2A99               	goto	l3019
  6905  1AA6                     u3180:	
  6906  1AA6                     l3023:	
  6907  1AA6  0873               	movf	strlen@a,w
  6908  1AA7  0274               	subwf	strlen@s,w
  6909  1AA8  00F0               	movwf	?_strlen
  6910  1AA9  01F1               	clrf	?_strlen+1
  6911  1AAA  1BF0               	btfsc	?_strlen,7
  6912  1AAB  03F1               	decf	?_strlen+1,f
  6913  1AAC                     l1175:	
  6914  1AAC  0008               	return
  6915  1AAD                     __end_of_strlen:	
  6916                           
  6917                           	psect	text11
  6918  1B99                     __ptext11:	
  6919 ;; *************** function _fputs *****************
  6920 ;; Defined at:
  6921 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  s               1    wreg     PTR const unsigned char 
  6924 ;;		 -> dbuf(80), 
  6925 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6926 ;;		 -> sprintf@f(5), 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6929 ;;		 -> dbuf(80), 
  6930 ;;  i               2    1[BANK0 ] int 
  6931 ;;  c               1    0[BANK0 ] unsigned char 
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  2    8[COMMON] int 
  6934 ;; Registers used:
  6935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6941 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6942 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6943 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;Total ram usage:        8 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:    2
  6948 ;; This function calls:
  6949 ;;		_fputc
  6950 ;; This function is called by:
  6951 ;;		_pad
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           
  6956                           ;psect for function _fputs
  6957  1B99                     _fputs:	
  6958                           
  6959                           ;incstack = 0
  6960                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6961                           ;fputs@s stored from wreg
  6962  1B99  0020               	movlb	0	; select bank0
  6963  1B9A  00A3               	movwf	fputs@s
  6964  1B9B                     l3009:	
  6965  1B9B  01A1               	clrf	fputs@i
  6966  1B9C  01A2               	clrf	fputs@i+1
  6967  1B9D  2BB1               	goto	l3015
  6968  1B9E                     l3011:	
  6969  1B9E  0820               	movf	fputs@c,w
  6970  1B9F  00F9               	movwf	??_fputs
  6971  1BA0  01FA               	clrf	??_fputs+1
  6972  1BA1  0879               	movf	??_fputs,w
  6973  1BA2  00F0               	movwf	fputc@c
  6974  1BA3  087A               	movf	??_fputs+1,w
  6975  1BA4  00F1               	movwf	fputc@c+1
  6976  1BA5  0878               	movf	fputs@fp,w
  6977  1BA6  00FB               	movwf	??_fputs+2
  6978  1BA7  087B               	movf	??_fputs+2,w
  6979  1BA8  00F2               	movwf	fputc@fp
  6980  1BA9  319E  269C  319B   	fcall	_fputc
  6981  1BAC                     l3013:	
  6982  1BAC  3001               	movlw	1
  6983  1BAD  0020               	movlb	0	; select bank0
  6984  1BAE  07A1               	addwf	fputs@i,f
  6985  1BAF  3000               	movlw	0
  6986  1BB0  3DA2               	addwfc	fputs@i+1,f
  6987  1BB1                     l3015:	
  6988  1BB1  0821               	movf	fputs@i,w
  6989  1BB2  0723               	addwf	fputs@s,w
  6990  1BB3  00F9               	movwf	??_fputs
  6991  1BB4  0879               	movf	??_fputs,w
  6992  1BB5  0086               	movwf	6
  6993  1BB6  3002               	movlw	2	; select bank4/5
  6994  1BB7  0087               	movwf	7
  6995  1BB8  0801               	movf	1,w
  6996  1BB9  00FA               	movwf	??_fputs+1
  6997  1BBA  087A               	movf	??_fputs+1,w
  6998  1BBB  00A0               	movwf	fputs@c
  6999  1BBC  0820               	movf	fputs@c,w
  7000  1BBD  1D03               	btfss	3,2
  7001  1BBE  2BC0               	goto	u3171
  7002  1BBF  2BC1               	goto	u3170
  7003  1BC0                     u3171:	
  7004  1BC0  2B9E               	goto	l3011
  7005  1BC1                     u3170:	
  7006  1BC1                     l1153:	
  7007  1BC1  0008               	return
  7008  1BC2                     __end_of_fputs:	
  7009                           
  7010                           	psect	text12
  7011  1E9C                     __ptext12:	
  7012 ;; *************** function _fputc *****************
  7013 ;; Defined at:
  7014 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  c               2    0[COMMON] int 
  7017 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  7018 ;;		 -> sprintf@f(5), 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  2    0[COMMON] int 
  7023 ;; Registers used:
  7024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7030 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7032 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7033 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7034 ;;Total ram usage:        8 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    1
  7037 ;; This function calls:
  7038 ;;		_putch
  7039 ;; This function is called by:
  7040 ;;		_pad
  7041 ;;		_vfpfcnvrt
  7042 ;;		_fputs
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           
  7047                           ;psect for function _fputc
  7048  1E9C                     _fputc:	
  7049  1E9C                     l2989:	
  7050                           ;incstack = 0
  7051                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7052                           
  7053  1E9C  0872               	movf	fputc@fp,w
  7054  1E9D  1903               	btfsc	3,2
  7055  1E9E  2EA0               	goto	u3111
  7056  1E9F  2EA1               	goto	u3110
  7057  1EA0                     u3111:	
  7058  1EA0  2EA6               	goto	l2993
  7059  1EA1                     u3110:	
  7060  1EA1                     l2991:	
  7061  1EA1  0872               	movf	fputc@fp,w
  7062  1EA2  1D03               	btfss	3,2
  7063  1EA3  2EA5               	goto	u3121
  7064  1EA4  2EA6               	goto	u3120
  7065  1EA5                     u3121:	
  7066  1EA5  2EAB               	goto	l2995
  7067  1EA6                     u3120:	
  7068  1EA6                     l2993:	
  7069  1EA6  0870               	movf	fputc@c,w
  7070  1EA7  3180  2006  319E   	fcall	_putch
  7071  1EAA  2EF1               	goto	l1145
  7072  1EAB                     l2995:	
  7073  1EAB  0872               	movf	fputc@fp,w
  7074  1EAC  3E03               	addlw	3
  7075  1EAD  0086               	movwf	6
  7076  1EAE  3001               	movlw	1	; select bank2/3
  7077  1EAF  0087               	movwf	7
  7078  1EB0  0016               	moviw fsr1++
  7079  1EB1  0401               	iorwf	1,w
  7080  1EB2  1903               	btfsc	3,2
  7081  1EB3  2EB5               	goto	u3131
  7082  1EB4  2EB6               	goto	u3130
  7083  1EB5                     u3131:	
  7084  1EB5  2ED5               	goto	l2999
  7085  1EB6                     u3130:	
  7086  1EB6                     l2997:	
  7087  1EB6  0872               	movf	fputc@fp,w
  7088  1EB7  3E03               	addlw	3
  7089  1EB8  0086               	movwf	6
  7090  1EB9  3001               	movlw	1	; select bank2/3
  7091  1EBA  0087               	movwf	7
  7092  1EBB  3F40               	moviw [0]fsr1
  7093  1EBC  00F3               	movwf	??_fputc
  7094  1EBD  3F41               	moviw [1]fsr1
  7095  1EBE  00F4               	movwf	??_fputc+1
  7096  1EBF  0A72               	incf	fputc@fp,w
  7097  1EC0  0086               	movwf	6
  7098  1EC1  3001               	movlw	1	; select bank2/3
  7099  1EC2  0087               	movwf	7
  7100  1EC3  3F40               	moviw [0]fsr1
  7101  1EC4  00F5               	movwf	??_fputc+2
  7102  1EC5  3F41               	moviw [1]fsr1
  7103  1EC6  00F6               	movwf	??_fputc+3
  7104  1EC7  0876               	movf	??_fputc+3,w
  7105  1EC8  3A80               	xorlw	128
  7106  1EC9  00F7               	movwf	??_fputc+4
  7107  1ECA  0874               	movf	??_fputc+1,w
  7108  1ECB  3A80               	xorlw	128
  7109  1ECC  0277               	subwf	??_fputc+4,w
  7110  1ECD  1D03               	skipz
  7111  1ECE  2ED1               	goto	u3145
  7112  1ECF  0873               	movf	??_fputc,w
  7113  1ED0  0275               	subwf	??_fputc+2,w
  7114  1ED1                     u3145:	
  7115  1ED1  1803               	skipnc
  7116  1ED2  2ED4               	goto	u3141
  7117  1ED3  2ED5               	goto	u3140
  7118  1ED4                     u3141:	
  7119  1ED4  2EF1               	goto	l1145
  7120  1ED5                     u3140:	
  7121  1ED5                     l2999:	
  7122  1ED5  0870               	movf	fputc@c,w
  7123  1ED6  00F3               	movwf	??_fputc
  7124  1ED7  0872               	movf	fputc@fp,w
  7125  1ED8  0086               	movwf	6
  7126  1ED9  3001               	movlw	1	; select bank2/3
  7127  1EDA  0087               	movwf	7
  7128  1EDB  0A72               	incf	fputc@fp,w
  7129  1EDC  0084               	movwf	4
  7130  1EDD  3001               	movlw	1	; select bank2/3
  7131  1EDE  0085               	movwf	5
  7132  1EDF  0800               	movf	0,w
  7133  1EE0  0701               	addwf	1,w
  7134  1EE1  00F4               	movwf	??_fputc+1
  7135  1EE2  0874               	movf	??_fputc+1,w
  7136  1EE3  0086               	movwf	6
  7137  1EE4  3001               	movlw	1	; select bank2/3
  7138  1EE5  0087               	movwf	7
  7139  1EE6  0873               	movf	??_fputc,w
  7140  1EE7  0081               	movwf	1
  7141  1EE8                     l3001:	
  7142  1EE8  0A72               	incf	fputc@fp,w
  7143  1EE9  0086               	movwf	6
  7144  1EEA  3001               	movlw	1	; select bank2/3
  7145  1EEB  0087               	movwf	7
  7146  1EEC  3001               	movlw	1
  7147  1EED  0781               	addwf	1,f
  7148  1EEE  3141               	addfsr 1,1
  7149  1EEF  1803               	skipnc
  7150  1EF0  0A81               	incf	1,f
  7151  1EF1                     l1145:	
  7152  1EF1  0008               	return
  7153  1EF2                     __end_of_fputc:	
  7154                           
  7155                           	psect	text13
  7156  0006                     __ptext13:	
  7157 ;; *************** function _putch *****************
  7158 ;; Defined at:
  7159 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  c               1    wreg     unsigned char 
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;  c               1    0[COMMON] unsigned char 
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      void 
  7166 ;; Registers used:
  7167 ;;		wreg
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;Total ram usage:        0 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_fputc
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           
  7187                           ;psect for function _putch
  7188  0006                     _putch:	
  7189  0006                     l1163:	
  7190                           ;incstack = 0
  7191                           ; Regs used in _putch: [wreg]
  7192                           
  7193  0006  0008               	return
  7194  0007                     __end_of_putch:	
  7195                           
  7196                           	psect	text14
  7197  0015                     __ptext14:	
  7198 ;; *************** function _floorf *****************
  7199 ;; Defined at:
  7200 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;  x               4   58[BANK0 ] float 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;  u               4   74[BANK0 ] struct .
  7205 ;;  m               4   68[BANK0 ] unsigned long 
  7206 ;;  e               2   72[BANK0 ] int 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  4   58[BANK0 ] float 
  7209 ;; Registers used:
  7210 ;;		wreg, status,2, status,0
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7216 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7219 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;Total ram usage:       20 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; This function calls:
  7223 ;;		Nothing
  7224 ;; This function is called by:
  7225 ;;		_efgtoa
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           
  7230                           ;psect for function _floorf
  7231  0015                     _floorf:	
  7232  0015                     l3311:	
  7233                           ;incstack = 0
  7234                           ; Regs used in _floorf: [wreg+status,2+status,0]
  7235                           
  7236  0015  0023               	movlb	3	; select bank3
  7237  0016  083B               	movf	(floorf@F524+3)^(0+384),w
  7238  0017  0020               	movlb	0	; select bank0
  7239  0018  00ED               	movwf	floorf@u+3
  7240  0019  0023               	movlb	3	; select bank3
  7241  001A  083A               	movf	(floorf@F524+2)^(0+384),w
  7242  001B  0020               	movlb	0	; select bank0
  7243  001C  00EC               	movwf	floorf@u+2
  7244  001D  0023               	movlb	3	; select bank3
  7245  001E  0839               	movf	(floorf@F524+1)^(0+384),w
  7246  001F  0020               	movlb	0	; select bank0
  7247  0020  00EB               	movwf	floorf@u+1
  7248  0021  0023               	movlb	3	; select bank3
  7249  0022  0838               	movf	floorf@F524^(0+384),w
  7250  0023  0020               	movlb	0	; select bank0
  7251  0024  00EA               	movwf	floorf@u
  7252  0025  085D               	movf	floorf@x+3,w
  7253  0026  00ED               	movwf	floorf@u+3
  7254  0027  085C               	movf	floorf@x+2,w
  7255  0028  00EC               	movwf	floorf@u+2
  7256  0029  085B               	movf	floorf@x+1,w
  7257  002A  00EB               	movwf	floorf@u+1
  7258  002B  085A               	movf	floorf@x,w
  7259  002C  00EA               	movwf	floorf@u
  7260  002D                     l3313:	
  7261  002D  086A               	movf	floorf@u,w
  7262  002E  00DE               	movwf	??_floorf
  7263  002F  086B               	movf	floorf@u+1,w
  7264  0030  00DF               	movwf	??_floorf+1
  7265  0031  086C               	movf	floorf@u+2,w
  7266  0032  00E0               	movwf	??_floorf+2
  7267  0033  086D               	movf	floorf@u+3,w
  7268  0034  00E1               	movwf	??_floorf+3
  7269  0035  3017               	movlw	23
  7270  0036                     u3835:	
  7271  0036  36E1               	lsrf	??_floorf+3,f
  7272  0037  0CE0               	rrf	??_floorf+2,f
  7273  0038  0CDF               	rrf	??_floorf+1,f
  7274  0039  0CDE               	rrf	??_floorf,f
  7275  003A                     u3830:	
  7276  003A  0B89               	decfsz	9,f
  7277  003B  2836               	goto	u3835
  7278  003C  30FF               	movlw	255
  7279  003D  055E               	andwf	??_floorf,w
  7280  003E  00E2               	movwf	??_floorf+4
  7281  003F  3000               	movlw	0
  7282  0040  055F               	andwf	??_floorf+1,w
  7283  0041  00E3               	movwf	??_floorf+5
  7284  0042  0862               	movf	??_floorf+4,w
  7285  0043  3E81               	addlw	129
  7286  0044  00E8               	movwf	floorf@e
  7287  0045  30FF               	movlw	255
  7288  0046  3D63               	addwfc	??_floorf+5,w
  7289  0047  00E9               	movwf	floorf@e+1
  7290  0048                     l3315:	
  7291  0048  0869               	movf	floorf@e+1,w
  7292  0049  3A80               	xorlw	128
  7293  004A  00DE               	movwf	??_floorf
  7294  004B  3080               	movlw	128
  7295  004C  025E               	subwf	??_floorf,w
  7296  004D  1D03               	skipz
  7297  004E  2851               	goto	u3845
  7298  004F  3017               	movlw	23
  7299  0050  0268               	subwf	floorf@e,w
  7300  0051                     u3845:	
  7301  0051  1C03               	skipc
  7302  0052  2854               	goto	u3841
  7303  0053  2855               	goto	u3840
  7304  0054                     u3841:	
  7305  0054  2856               	goto	l1105
  7306  0055                     u3840:	
  7307  0055                     l3317:	
  7308  0055  28FF               	goto	l1106
  7309  0056                     l1105:	
  7310  0056  0020               	movlb	0	; select bank0
  7311  0057  1BE9               	btfsc	floorf@e+1,7
  7312  0058  285A               	goto	u3851
  7313  0059  285B               	goto	u3850
  7314  005A                     u3851:	
  7315  005A  28B8               	goto	l3331
  7316  005B                     u3850:	
  7317  005B                     l3319:	
  7318  005B  30FF               	movlw	255
  7319  005C  00DE               	movwf	??_floorf
  7320  005D  30FF               	movlw	255
  7321  005E  00DF               	movwf	??_floorf+1
  7322  005F  307F               	movlw	127
  7323  0060  00E0               	movwf	??_floorf+2
  7324  0061  3000               	movlw	0
  7325  0062  00E1               	movwf	??_floorf+3
  7326  0063  0A68               	incf	floorf@e,w
  7327  0064  2869               	goto	u3860
  7328  0065                     u3865:	
  7329  0065  37E1               	asrf	??_floorf+3,f
  7330  0066  0CE0               	rrf	??_floorf+2,f
  7331  0067  0CDF               	rrf	??_floorf+1,f
  7332  0068  0CDE               	rrf	??_floorf,f
  7333  0069                     u3860:	
  7334  0069  0B89               	decfsz	9,f
  7335  006A  2865               	goto	u3865
  7336  006B  0861               	movf	??_floorf+3,w
  7337  006C  00E7               	movwf	floorf@m+3
  7338  006D  0860               	movf	??_floorf+2,w
  7339  006E  00E6               	movwf	floorf@m+2
  7340  006F  085F               	movf	??_floorf+1,w
  7341  0070  00E5               	movwf	floorf@m+1
  7342  0071  085E               	movf	??_floorf,w
  7343  0072  00E4               	movwf	floorf@m
  7344  0073                     l3321:	
  7345  0073  086A               	movf	floorf@u,w
  7346  0074  0564               	andwf	floorf@m,w
  7347  0075  00DE               	movwf	??_floorf
  7348  0076  086B               	movf	floorf@u+1,w
  7349  0077  0565               	andwf	floorf@m+1,w
  7350  0078  00DF               	movwf	??_floorf+1
  7351  0079  086C               	movf	floorf@u+2,w
  7352  007A  0566               	andwf	floorf@m+2,w
  7353  007B  00E0               	movwf	??_floorf+2
  7354  007C  086D               	movf	floorf@u+3,w
  7355  007D  0567               	andwf	floorf@m+3,w
  7356  007E  00E1               	movwf	??_floorf+3
  7357  007F  0861               	movf	??_floorf+3,w
  7358  0080  0460               	iorwf	??_floorf+2,w
  7359  0081  045F               	iorwf	??_floorf+1,w
  7360  0082  045E               	iorwf	??_floorf,w
  7361  0083  1D03               	skipz
  7362  0084  2886               	goto	u3871
  7363  0085  2887               	goto	u3870
  7364  0086                     u3871:	
  7365  0086  2888               	goto	l3325
  7366  0087                     u3870:	
  7367  0087  2855               	goto	l3317
  7368  0088                     l3325:	
  7369  0088  086A               	movf	floorf@u,w
  7370  0089  00DE               	movwf	??_floorf
  7371  008A  086B               	movf	floorf@u+1,w
  7372  008B  00DF               	movwf	??_floorf+1
  7373  008C  086C               	movf	floorf@u+2,w
  7374  008D  00E0               	movwf	??_floorf+2
  7375  008E  086D               	movf	floorf@u+3,w
  7376  008F  00E1               	movwf	??_floorf+3
  7377  0090  301F               	movlw	31
  7378  0091                     u3885:	
  7379  0091  36E1               	lsrf	??_floorf+3,f
  7380  0092  0CE0               	rrf	??_floorf+2,f
  7381  0093  0CDF               	rrf	??_floorf+1,f
  7382  0094  0CDE               	rrf	??_floorf,f
  7383  0095                     u3880:	
  7384  0095  0B89               	decfsz	9,f
  7385  0096  2891               	goto	u3885
  7386  0097  0861               	movf	??_floorf+3,w
  7387  0098  0460               	iorwf	??_floorf+2,w
  7388  0099  045F               	iorwf	??_floorf+1,w
  7389  009A  045E               	iorwf	??_floorf,w
  7390  009B  1903               	skipnz
  7391  009C  289E               	goto	u3891
  7392  009D  289F               	goto	u3890
  7393  009E                     u3891:	
  7394  009E  28A7               	goto	l3329
  7395  009F                     u3890:	
  7396  009F                     l3327:	
  7397  009F  0864               	movf	floorf@m,w
  7398  00A0  07EA               	addwf	floorf@u,f
  7399  00A1  0865               	movf	floorf@m+1,w
  7400  00A2  3DEB               	addwfc	floorf@u+1,f
  7401  00A3  0866               	movf	floorf@m+2,w
  7402  00A4  3DEC               	addwfc	floorf@u+2,f
  7403  00A5  0867               	movf	floorf@m+3,w
  7404  00A6  3DED               	addwfc	floorf@u+3,f
  7405  00A7                     l3329:	
  7406  00A7  0964               	comf	floorf@m,w
  7407  00A8  00DE               	movwf	??_floorf
  7408  00A9  0965               	comf	floorf@m+1,w
  7409  00AA  00DF               	movwf	??_floorf+1
  7410  00AB  0966               	comf	floorf@m+2,w
  7411  00AC  00E0               	movwf	??_floorf+2
  7412  00AD  0967               	comf	floorf@m+3,w
  7413  00AE  00E1               	movwf	??_floorf+3
  7414  00AF  085E               	movf	??_floorf,w
  7415  00B0  05EA               	andwf	floorf@u,f
  7416  00B1  085F               	movf	??_floorf+1,w
  7417  00B2  05EB               	andwf	floorf@u+1,f
  7418  00B3  0860               	movf	??_floorf+2,w
  7419  00B4  05EC               	andwf	floorf@u+2,f
  7420  00B5  0861               	movf	??_floorf+3,w
  7421  00B6  05ED               	andwf	floorf@u+3,f
  7422  00B7  28F7               	goto	l1110
  7423  00B8                     l3331:	
  7424  00B8  086A               	movf	floorf@u,w
  7425  00B9  00DE               	movwf	??_floorf
  7426  00BA  086B               	movf	floorf@u+1,w
  7427  00BB  00DF               	movwf	??_floorf+1
  7428  00BC  086C               	movf	floorf@u+2,w
  7429  00BD  00E0               	movwf	??_floorf+2
  7430  00BE  086D               	movf	floorf@u+3,w
  7431  00BF  00E1               	movwf	??_floorf+3
  7432  00C0  301F               	movlw	31
  7433  00C1                     u3905:	
  7434  00C1  36E1               	lsrf	??_floorf+3,f
  7435  00C2  0CE0               	rrf	??_floorf+2,f
  7436  00C3  0CDF               	rrf	??_floorf+1,f
  7437  00C4  0CDE               	rrf	??_floorf,f
  7438  00C5                     u3900:	
  7439  00C5  0B89               	decfsz	9,f
  7440  00C6  28C1               	goto	u3905
  7441  00C7  0861               	movf	??_floorf+3,w
  7442  00C8  0460               	iorwf	??_floorf+2,w
  7443  00C9  045F               	iorwf	??_floorf+1,w
  7444  00CA  045E               	iorwf	??_floorf,w
  7445  00CB  1D03               	skipz
  7446  00CC  28CE               	goto	u3911
  7447  00CD  28CF               	goto	u3910
  7448  00CE                     u3911:	
  7449  00CE  28D8               	goto	l3335
  7450  00CF                     u3910:	
  7451  00CF                     l3333:	
  7452  00CF  3000               	movlw	0
  7453  00D0  00ED               	movwf	floorf@u+3
  7454  00D1  3000               	movlw	0
  7455  00D2  00EC               	movwf	floorf@u+2
  7456  00D3  3000               	movlw	0
  7457  00D4  00EB               	movwf	floorf@u+1
  7458  00D5  3000               	movlw	0
  7459  00D6  00EA               	movwf	floorf@u
  7460  00D7  28F7               	goto	l1110
  7461  00D8                     l3335:	
  7462  00D8  086A               	movf	floorf@u,w
  7463  00D9  00DE               	movwf	??_floorf
  7464  00DA  086B               	movf	floorf@u+1,w
  7465  00DB  00DF               	movwf	??_floorf+1
  7466  00DC  086C               	movf	floorf@u+2,w
  7467  00DD  00E0               	movwf	??_floorf+2
  7468  00DE  086D               	movf	floorf@u+3,w
  7469  00DF  00E1               	movwf	??_floorf+3
  7470  00E0  3001               	movlw	1
  7471  00E1                     u3925:	
  7472  00E1  35DE               	lslf	??_floorf,f
  7473  00E2  0DDF               	rlf	??_floorf+1,f
  7474  00E3  0DE0               	rlf	??_floorf+2,f
  7475  00E4  0DE1               	rlf	??_floorf+3,f
  7476  00E5                     u3920:	
  7477  00E5  0B89               	decfsz	9,f
  7478  00E6  28E1               	goto	u3925
  7479  00E7  0861               	movf	??_floorf+3,w
  7480  00E8  0460               	iorwf	??_floorf+2,w
  7481  00E9  045F               	iorwf	??_floorf+1,w
  7482  00EA  045E               	iorwf	??_floorf,w
  7483  00EB  1903               	skipnz
  7484  00EC  28EE               	goto	u3931
  7485  00ED  28EF               	goto	u3930
  7486  00EE                     u3931:	
  7487  00EE  28F7               	goto	l1110
  7488  00EF                     u3930:	
  7489  00EF                     l3337:	
  7490  00EF  30BF               	movlw	191
  7491  00F0  00ED               	movwf	floorf@u+3
  7492  00F1  3080               	movlw	128
  7493  00F2  00EC               	movwf	floorf@u+2
  7494  00F3  3000               	movlw	0
  7495  00F4  00EB               	movwf	floorf@u+1
  7496  00F5  3000               	movlw	0
  7497  00F6  00EA               	movwf	floorf@u
  7498  00F7                     l1110:	
  7499  00F7  086D               	movf	floorf@u+3,w
  7500  00F8  00DD               	movwf	?_floorf+3
  7501  00F9  086C               	movf	floorf@u+2,w
  7502  00FA  00DC               	movwf	?_floorf+2
  7503  00FB  086B               	movf	floorf@u+1,w
  7504  00FC  00DB               	movwf	?_floorf+1
  7505  00FD  086A               	movf	floorf@u,w
  7506  00FE  00DA               	movwf	?_floorf
  7507  00FF                     l1106:	
  7508  00FF  0008               	return
  7509  0100                     __end_of_floorf:	
  7510                           
  7511                           	psect	text15
  7512  110B                     __ptext15:	
  7513 ;; *************** function ___fpclassifyf *****************
  7514 ;; Defined at:
  7515 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  x               4    0[COMMON] float 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  u               4    2[BANK0 ] struct .
  7520 ;;  e               2    0[BANK0 ] int 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  2    0[COMMON] int 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7530 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7531 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7532 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7533 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7534 ;;Total ram usage:       16 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_efgtoa
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           
  7544                           ;psect for function ___fpclassifyf
  7545  110B                     ___fpclassifyf:	
  7546  110B                     l3273:	
  7547                           ;incstack = 0
  7548                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7549                           
  7550  110B  0023               	movlb	3	; select bank3
  7551  110C  083F               	movf	(___fpclassifyf@F463+3)^(0+384),w
  7552  110D  0020               	movlb	0	; select bank0
  7553  110E  00A5               	movwf	___fpclassifyf@u+3
  7554  110F  0023               	movlb	3	; select bank3
  7555  1110  083E               	movf	(___fpclassifyf@F463+2)^(0+384),w
  7556  1111  0020               	movlb	0	; select bank0
  7557  1112  00A4               	movwf	___fpclassifyf@u+2
  7558  1113  0023               	movlb	3	; select bank3
  7559  1114  083D               	movf	(___fpclassifyf@F463+1)^(0+384),w
  7560  1115  0020               	movlb	0	; select bank0
  7561  1116  00A3               	movwf	___fpclassifyf@u+1
  7562  1117  0023               	movlb	3	; select bank3
  7563  1118  083C               	movf	___fpclassifyf@F463^(0+384),w
  7564  1119  0020               	movlb	0	; select bank0
  7565  111A  00A2               	movwf	___fpclassifyf@u
  7566  111B  0873               	movf	___fpclassifyf@x+3,w
  7567  111C  00A5               	movwf	___fpclassifyf@u+3
  7568  111D  0872               	movf	___fpclassifyf@x+2,w
  7569  111E  00A4               	movwf	___fpclassifyf@u+2
  7570  111F  0871               	movf	___fpclassifyf@x+1,w
  7571  1120  00A3               	movwf	___fpclassifyf@u+1
  7572  1121  0870               	movf	___fpclassifyf@x,w
  7573  1122  00A2               	movwf	___fpclassifyf@u
  7574  1123                     l3275:	
  7575  1123  0822               	movf	___fpclassifyf@u,w
  7576  1124  00F4               	movwf	??___fpclassifyf
  7577  1125  0823               	movf	___fpclassifyf@u+1,w
  7578  1126  00F5               	movwf	??___fpclassifyf+1
  7579  1127  0824               	movf	___fpclassifyf@u+2,w
  7580  1128  00F6               	movwf	??___fpclassifyf+2
  7581  1129  0825               	movf	___fpclassifyf@u+3,w
  7582  112A  00F7               	movwf	??___fpclassifyf+3
  7583  112B  3017               	movlw	23
  7584  112C                     u3715:	
  7585  112C  36F7               	lsrf	??___fpclassifyf+3,f
  7586  112D  0CF6               	rrf	??___fpclassifyf+2,f
  7587  112E  0CF5               	rrf	??___fpclassifyf+1,f
  7588  112F  0CF4               	rrf	??___fpclassifyf,f
  7589  1130                     u3710:	
  7590  1130  0B89               	decfsz	9,f
  7591  1131  292C               	goto	u3715
  7592  1132  30FF               	movlw	255
  7593  1133  0574               	andwf	??___fpclassifyf,w
  7594  1134  00A0               	movwf	___fpclassifyf@e
  7595  1135  3000               	movlw	0
  7596  1136  0575               	andwf	??___fpclassifyf+1,w
  7597  1137  00A1               	movwf	___fpclassifyf@e+1
  7598  1138                     l3277:	
  7599  1138  0820               	movf	___fpclassifyf@e,w
  7600  1139  0421               	iorwf	___fpclassifyf@e+1,w
  7601  113A  1D03               	btfss	3,2
  7602  113B  293D               	goto	u3721
  7603  113C  293E               	goto	u3720
  7604  113D                     u3721:	
  7605  113D  295F               	goto	l3287
  7606  113E                     u3720:	
  7607  113E                     l3279:	
  7608  113E  0822               	movf	___fpclassifyf@u,w
  7609  113F  00F4               	movwf	??___fpclassifyf
  7610  1140  0823               	movf	___fpclassifyf@u+1,w
  7611  1141  00F5               	movwf	??___fpclassifyf+1
  7612  1142  0824               	movf	___fpclassifyf@u+2,w
  7613  1143  00F6               	movwf	??___fpclassifyf+2
  7614  1144  0825               	movf	___fpclassifyf@u+3,w
  7615  1145  00F7               	movwf	??___fpclassifyf+3
  7616  1146  3001               	movlw	1
  7617  1147                     u3735:	
  7618  1147  35F4               	lslf	??___fpclassifyf,f
  7619  1148  0DF5               	rlf	??___fpclassifyf+1,f
  7620  1149  0DF6               	rlf	??___fpclassifyf+2,f
  7621  114A  0DF7               	rlf	??___fpclassifyf+3,f
  7622  114B                     u3730:	
  7623  114B  0B89               	decfsz	9,f
  7624  114C  2947               	goto	u3735
  7625  114D  0877               	movf	??___fpclassifyf+3,w
  7626  114E  0476               	iorwf	??___fpclassifyf+2,w
  7627  114F  0475               	iorwf	??___fpclassifyf+1,w
  7628  1150  0474               	iorwf	??___fpclassifyf,w
  7629  1151  1D03               	skipz
  7630  1152  2954               	goto	u3741
  7631  1153  2955               	goto	u3740
  7632  1154                     u3741:	
  7633  1154  295A               	goto	l3283
  7634  1155                     u3740:	
  7635  1155                     l3281:	
  7636  1155  3002               	movlw	2
  7637  1156  00F0               	movwf	?___fpclassifyf
  7638  1157  3000               	movlw	0
  7639  1158  00F1               	movwf	?___fpclassifyf+1
  7640  1159  2989               	goto	l1068
  7641  115A                     l3283:	
  7642  115A  3003               	movlw	3
  7643  115B  00F0               	movwf	?___fpclassifyf
  7644  115C  3000               	movlw	0
  7645  115D  00F1               	movwf	?___fpclassifyf+1
  7646  115E  2989               	goto	l1068
  7647  115F                     l3287:	
  7648  115F  0A20               	incf	___fpclassifyf@e,w
  7649  1160  0421               	iorwf	___fpclassifyf@e+1,w
  7650  1161  1D03               	btfss	3,2
  7651  1162  2964               	goto	u3751
  7652  1163  2965               	goto	u3750
  7653  1164                     u3751:	
  7654  1164  2985               	goto	l3293
  7655  1165                     u3750:	
  7656  1165                     l3289:	
  7657  1165  0822               	movf	___fpclassifyf@u,w
  7658  1166  00F4               	movwf	??___fpclassifyf
  7659  1167  0823               	movf	___fpclassifyf@u+1,w
  7660  1168  00F5               	movwf	??___fpclassifyf+1
  7661  1169  0824               	movf	___fpclassifyf@u+2,w
  7662  116A  00F6               	movwf	??___fpclassifyf+2
  7663  116B  0825               	movf	___fpclassifyf@u+3,w
  7664  116C  00F7               	movwf	??___fpclassifyf+3
  7665  116D  3009               	movlw	9
  7666  116E                     u3765:	
  7667  116E  35F4               	lslf	??___fpclassifyf,f
  7668  116F  0DF5               	rlf	??___fpclassifyf+1,f
  7669  1170  0DF6               	rlf	??___fpclassifyf+2,f
  7670  1171  0DF7               	rlf	??___fpclassifyf+3,f
  7671  1172                     u3760:	
  7672  1172  0B89               	decfsz	9,f
  7673  1173  296E               	goto	u3765
  7674  1174  0877               	movf	??___fpclassifyf+3,w
  7675  1175  0476               	iorwf	??___fpclassifyf+2,w
  7676  1176  0475               	iorwf	??___fpclassifyf+1,w
  7677  1177  0474               	iorwf	??___fpclassifyf,w
  7678  1178  1903               	skipnz
  7679  1179  297B               	goto	u3771
  7680  117A  297D               	goto	u3770
  7681  117B                     u3771:	
  7682  117B  3001               	movlw	1
  7683  117C  297E               	goto	u3780
  7684  117D                     u3770:	
  7685  117D  3000               	movlw	0
  7686  117E                     u3780:	
  7687  117E  00F8               	movwf	??___fpclassifyf+4
  7688  117F  01F9               	clrf	??___fpclassifyf+5
  7689  1180  0878               	movf	??___fpclassifyf+4,w
  7690  1181  00F0               	movwf	?___fpclassifyf
  7691  1182  0879               	movf	??___fpclassifyf+5,w
  7692  1183  00F1               	movwf	?___fpclassifyf+1
  7693  1184  2989               	goto	l1068
  7694  1185                     l3293:	
  7695  1185  3004               	movlw	4
  7696  1186  00F0               	movwf	?___fpclassifyf
  7697  1187  3000               	movlw	0
  7698  1188  00F1               	movwf	?___fpclassifyf+1
  7699  1189                     l1068:	
  7700  1189  0008               	return
  7701  118A                     __end_of___fpclassifyf:	
  7702                           
  7703                           	psect	text16
  7704  1097                     __ptext16:	
  7705 ;; *************** function ___fltol *****************
  7706 ;; Defined at:
  7707 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;  f1              4    0[COMMON] int 
  7710 ;; Auto vars:     Size  Location     Type
  7711 ;;  exp1            1   10[COMMON] unsigned char 
  7712 ;;  sign1           1    9[COMMON] unsigned char 
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  4    0[COMMON] long 
  7715 ;; Registers used:
  7716 ;;		wreg, status,2, status,0
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7722 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7724 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7725 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7726 ;;Total ram usage:       11 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; This function calls:
  7729 ;;		Nothing
  7730 ;; This function is called by:
  7731 ;;		_efgtoa
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735                           
  7736                           ;psect for function ___fltol
  7737  1097                     ___fltol:	
  7738  1097                     l3481:	
  7739                           ;incstack = 0
  7740                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7741                           
  7742  1097  1003               	clrc
  7743  1098  0D72               	rlf	___fltol@f1+2,w
  7744  1099  0D73               	rlf	___fltol@f1+3,w
  7745  109A  00F4               	movwf	??___fltol
  7746  109B  0874               	movf	??___fltol,w
  7747  109C  00FA               	movwf	___fltol@exp1
  7748  109D  087A               	movf	___fltol@exp1,w
  7749  109E  1D03               	btfss	3,2
  7750  109F  28A1               	goto	u4281
  7751  10A0  28A2               	goto	u4280
  7752  10A1                     u4281:	
  7753  10A1  28AB               	goto	l3487
  7754  10A2                     u4280:	
  7755  10A2                     l3483:	
  7756  10A2  3000               	movlw	0
  7757  10A3  00F3               	movwf	?___fltol+3
  7758  10A4  3000               	movlw	0
  7759  10A5  00F2               	movwf	?___fltol+2
  7760  10A6  3000               	movlw	0
  7761  10A7  00F1               	movwf	?___fltol+1
  7762  10A8  3000               	movlw	0
  7763  10A9  00F0               	movwf	?___fltol
  7764  10AA  290A               	goto	l802
  7765  10AB                     l3487:	
  7766  10AB  0870               	movf	___fltol@f1,w
  7767  10AC  00F4               	movwf	??___fltol
  7768  10AD  0871               	movf	___fltol@f1+1,w
  7769  10AE  00F5               	movwf	??___fltol+1
  7770  10AF  0872               	movf	___fltol@f1+2,w
  7771  10B0  00F6               	movwf	??___fltol+2
  7772  10B1  0873               	movf	___fltol@f1+3,w
  7773  10B2  00F7               	movwf	??___fltol+3
  7774  10B3  301F               	movlw	31
  7775  10B4                     u4295:	
  7776  10B4  36F7               	lsrf	??___fltol+3,f
  7777  10B5  0CF6               	rrf	??___fltol+2,f
  7778  10B6  0CF5               	rrf	??___fltol+1,f
  7779  10B7  0CF4               	rrf	??___fltol,f
  7780  10B8                     u4290:	
  7781  10B8  0B89               	decfsz	9,f
  7782  10B9  28B4               	goto	u4295
  7783  10BA  0874               	movf	??___fltol,w
  7784  10BB  00F8               	movwf	??___fltol+4
  7785  10BC  0878               	movf	??___fltol+4,w
  7786  10BD  00F9               	movwf	___fltol@sign1
  7787  10BE                     l3489:	
  7788  10BE  17F2               	bsf	___fltol@f1+2,7
  7789  10BF                     l3491:	
  7790  10BF  30FF               	movlw	255
  7791  10C0  05F0               	andwf	___fltol@f1,f
  7792  10C1  30FF               	movlw	255
  7793  10C2  05F1               	andwf	___fltol@f1+1,f
  7794  10C3  30FF               	movlw	255
  7795  10C4  05F2               	andwf	___fltol@f1+2,f
  7796  10C5  3000               	movlw	0
  7797  10C6  05F3               	andwf	___fltol@f1+3,f
  7798  10C7                     l3493:	
  7799  10C7  3096               	movlw	150
  7800  10C8  02FA               	subwf	___fltol@exp1,f
  7801  10C9                     l3495:	
  7802  10C9  1FFA               	btfss	___fltol@exp1,7
  7803  10CA  28CC               	goto	u4301
  7804  10CB  28CD               	goto	u4300
  7805  10CC                     u4301:	
  7806  10CC  28E5               	goto	l3505
  7807  10CD                     u4300:	
  7808  10CD                     l3497:	
  7809  10CD  087A               	movf	___fltol@exp1,w
  7810  10CE  3A80               	xorlw	128
  7811  10CF  3E97               	addlw	151
  7812  10D0  1803               	skipnc
  7813  10D1  28D3               	goto	u4311
  7814  10D2  28D4               	goto	u4310
  7815  10D3                     u4311:	
  7816  10D3  28D5               	goto	l3503
  7817  10D4                     u4310:	
  7818  10D4  28A2               	goto	l3483
  7819  10D5                     l3503:	
  7820  10D5  3001               	movlw	1
  7821  10D6                     u4325:	
  7822  10D6  36F3               	lsrf	___fltol@f1+3,f
  7823  10D7  0CF2               	rrf	___fltol@f1+2,f
  7824  10D8  0CF1               	rrf	___fltol@f1+1,f
  7825  10D9  0CF0               	rrf	___fltol@f1,f
  7826  10DA  0B89               	decfsz	9,f
  7827  10DB  28D6               	goto	u4325
  7828  10DC  3001               	movlw	1
  7829  10DD  00F4               	movwf	??___fltol
  7830  10DE  0874               	movf	??___fltol,w
  7831  10DF  07FA               	addwf	___fltol@exp1,f
  7832  10E0  1D03               	btfss	3,2
  7833  10E1  28E3               	goto	u4331
  7834  10E2  28E4               	goto	u4330
  7835  10E3                     u4331:	
  7836  10E3  28D5               	goto	l3503
  7837  10E4                     u4330:	
  7838  10E4  28FA               	goto	l3513
  7839  10E5                     l3505:	
  7840  10E5  3020               	movlw	32
  7841  10E6  027A               	subwf	___fltol@exp1,w
  7842  10E7  1C03               	skipc
  7843  10E8  28EA               	goto	u4341
  7844  10E9  28EB               	goto	u4340
  7845  10EA                     u4341:	
  7846  10EA  28F5               	goto	l809
  7847  10EB                     u4340:	
  7848  10EB  28A2               	goto	l3483
  7849  10EC                     l3511:	
  7850  10EC  3001               	movlw	1
  7851  10ED                     u4355:	
  7852  10ED  35F0               	lslf	___fltol@f1,f
  7853  10EE  0DF1               	rlf	___fltol@f1+1,f
  7854  10EF  0DF2               	rlf	___fltol@f1+2,f
  7855  10F0  0DF3               	rlf	___fltol@f1+3,f
  7856  10F1  0B89               	decfsz	9,f
  7857  10F2  28ED               	goto	u4355
  7858  10F3  3001               	movlw	1
  7859  10F4  02FA               	subwf	___fltol@exp1,f
  7860  10F5                     l809:	
  7861  10F5  087A               	movf	___fltol@exp1,w
  7862  10F6  1D03               	btfss	3,2
  7863  10F7  28F9               	goto	u4361
  7864  10F8  28FA               	goto	u4360
  7865  10F9                     u4361:	
  7866  10F9  28EC               	goto	l3511
  7867  10FA                     u4360:	
  7868  10FA                     l3513:	
  7869  10FA  0879               	movf	___fltol@sign1,w
  7870  10FB  1903               	btfsc	3,2
  7871  10FC  28FE               	goto	u4371
  7872  10FD  28FF               	goto	u4370
  7873  10FE                     u4371:	
  7874  10FE  290A               	goto	l812
  7875  10FF                     u4370:	
  7876  10FF                     l3515:	
  7877  10FF  09F0               	comf	___fltol@f1,f
  7878  1100  09F1               	comf	___fltol@f1+1,f
  7879  1101  09F2               	comf	___fltol@f1+2,f
  7880  1102  09F3               	comf	___fltol@f1+3,f
  7881  1103  0AF0               	incf	___fltol@f1,f
  7882  1104  1903               	skipnz
  7883  1105  0AF1               	incf	___fltol@f1+1,f
  7884  1106  1903               	skipnz
  7885  1107  0AF2               	incf	___fltol@f1+2,f
  7886  1108  1903               	skipnz
  7887  1109  0AF3               	incf	___fltol@f1+3,f
  7888  110A                     l812:	
  7889  110A                     l802:	
  7890  110A  0008               	return
  7891  110B                     __end_of___fltol:	
  7892                           
  7893                           	psect	text17
  7894  1005                     __ptext17:	
  7895 ;; *************** function ___flsub *****************
  7896 ;; Defined at:
  7897 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  a               4    0[BANK1 ] long 
  7900 ;;  b               4    4[BANK1 ] long 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;		None
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  4    0[BANK1 ] long 
  7905 ;; Registers used:
  7906 ;;		wreg, status,2, status,0, pclath, cstack
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7912 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7915 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7916 ;;Total ram usage:        8 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; Hardware stack levels required when called:    1
  7919 ;; This function calls:
  7920 ;;		___fladd
  7921 ;; This function is called by:
  7922 ;;		_efgtoa
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           
  7927                           ;psect for function ___flsub
  7928  1005                     ___flsub:	
  7929  1005                     l3517:	
  7930                           ;incstack = 0
  7931                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7932                           
  7933  1005  3080               	movlw	128
  7934  1006  0021               	movlb	1	; select bank1
  7935  1007  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7936  1008                     l3519:	
  7937  1008  0827               	movf	(___flsub@b+3)^(0+128),w
  7938  1009  0020               	movlb	0	; select bank0
  7939  100A  00DD               	movwf	___fladd@b+3
  7940  100B  0021               	movlb	1	; select bank1
  7941  100C  0826               	movf	(___flsub@b+2)^(0+128),w
  7942  100D  0020               	movlb	0	; select bank0
  7943  100E  00DC               	movwf	___fladd@b+2
  7944  100F  0021               	movlb	1	; select bank1
  7945  1010  0825               	movf	(___flsub@b+1)^(0+128),w
  7946  1011  0020               	movlb	0	; select bank0
  7947  1012  00DB               	movwf	___fladd@b+1
  7948  1013  0021               	movlb	1	; select bank1
  7949  1014  0824               	movf	___flsub@b^(0+128),w
  7950  1015  0020               	movlb	0	; select bank0
  7951  1016  00DA               	movwf	___fladd@b
  7952  1017  0021               	movlb	1	; select bank1
  7953  1018  0823               	movf	(___flsub@a+3)^(0+128),w
  7954  1019  0020               	movlb	0	; select bank0
  7955  101A  00E1               	movwf	___fladd@a+3
  7956  101B  0021               	movlb	1	; select bank1
  7957  101C  0822               	movf	(___flsub@a+2)^(0+128),w
  7958  101D  0020               	movlb	0	; select bank0
  7959  101E  00E0               	movwf	___fladd@a+2
  7960  101F  0021               	movlb	1	; select bank1
  7961  1020  0821               	movf	(___flsub@a+1)^(0+128),w
  7962  1021  0020               	movlb	0	; select bank0
  7963  1022  00DF               	movwf	___fladd@a+1
  7964  1023  0021               	movlb	1	; select bank1
  7965  1024  0820               	movf	___flsub@a^(0+128),w
  7966  1025  0020               	movlb	0	; select bank0
  7967  1026  00DE               	movwf	___fladd@a
  7968  1027  3193  2371  3190   	fcall	___fladd
  7969  102A  0020               	movlb	0	; select bank0
  7970  102B  085D               	movf	?___fladd+3,w
  7971  102C  0021               	movlb	1	; select bank1
  7972  102D  00A3               	movwf	(?___flsub+3)^(0+128)
  7973  102E  0020               	movlb	0	; select bank0
  7974  102F  085C               	movf	?___fladd+2,w
  7975  1030  0021               	movlb	1	; select bank1
  7976  1031  00A2               	movwf	(?___flsub+2)^(0+128)
  7977  1032  0020               	movlb	0	; select bank0
  7978  1033  085B               	movf	?___fladd+1,w
  7979  1034  0021               	movlb	1	; select bank1
  7980  1035  00A1               	movwf	(?___flsub+1)^(0+128)
  7981  1036  0020               	movlb	0	; select bank0
  7982  1037  085A               	movf	?___fladd,w
  7983  1038  0021               	movlb	1	; select bank1
  7984  1039  00A0               	movwf	?___flsub^(0+128)
  7985  103A                     l955:	
  7986  103A  0008               	return
  7987  103B                     __end_of___flsub:	
  7988                           
  7989                           	psect	text18
  7990  1371                     __ptext18:	
  7991 ;; *************** function ___fladd *****************
  7992 ;; Defined at:
  7993 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  b               4   58[BANK0 ] long 
  7996 ;;  a               4   62[BANK0 ] long 
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;  grs             1   77[BANK0 ] unsigned char 
  7999 ;;  bexp            1   76[BANK0 ] unsigned char 
  8000 ;;  aexp            1   75[BANK0 ] unsigned char 
  8001 ;;  signs           1   74[BANK0 ] unsigned char 
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  4   58[BANK0 ] unsigned char 
  8004 ;; Registers used:
  8005 ;;		wreg, status,2, status,0
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8011 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;Total ram usage:       20 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; This function calls:
  8018 ;;		Nothing
  8019 ;; This function is called by:
  8020 ;;		_main
  8021 ;;		_efgtoa
  8022 ;;		___flsub
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           
  8027                           ;psect for function ___fladd
  8028  1371                     ___fladd:	
  8029  1371                     l3031:	
  8030                           ;incstack = 0
  8031                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8032                           
  8033  1371  0020               	movlb	0	; select bank0
  8034  1372  085D               	movf	___fladd@b+3,w
  8035  1373  3980               	andlw	128
  8036  1374  00E2               	movwf	??___fladd
  8037  1375  0862               	movf	??___fladd,w
  8038  1376  00EA               	movwf	___fladd@signs
  8039  1377                     l3033:	
  8040  1377  355D               	lslf	___fladd@b+3,w
  8041  1378  00E2               	movwf	??___fladd
  8042  1379  0862               	movf	??___fladd,w
  8043  137A  00EC               	movwf	___fladd@bexp
  8044  137B                     l3035:	
  8045  137B  1FDC               	btfss	___fladd@b+2,7
  8046  137C  2B7E               	goto	u3211
  8047  137D  2B7F               	goto	u3210
  8048  137E                     u3211:	
  8049  137E  2B80               	goto	l3039
  8050  137F                     u3210:	
  8051  137F                     l3037:	
  8052  137F  146C               	bsf	___fladd@bexp,0
  8053  1380                     l3039:	
  8054  1380  086C               	movf	___fladd@bexp,w
  8055  1381  1903               	btfsc	3,2
  8056  1382  2B84               	goto	u3221
  8057  1383  2B85               	goto	u3220
  8058  1384                     u3221:	
  8059  1384  2B95               	goto	l3049
  8060  1385                     u3220:	
  8061  1385                     l3041:	
  8062  1385  0A6C               	incf	___fladd@bexp,w
  8063  1386  1D03               	btfss	3,2
  8064  1387  2B89               	goto	u3231
  8065  1388  2B8A               	goto	u3230
  8066  1389                     u3231:	
  8067  1389  2B92               	goto	l3045
  8068  138A                     u3230:	
  8069  138A                     l3043:	
  8070  138A  3000               	movlw	0
  8071  138B  00DD               	movwf	___fladd@b+3
  8072  138C  3000               	movlw	0
  8073  138D  00DC               	movwf	___fladd@b+2
  8074  138E  3000               	movlw	0
  8075  138F  00DB               	movwf	___fladd@b+1
  8076  1390  3000               	movlw	0
  8077  1391  00DA               	movwf	___fladd@b
  8078  1392                     l3045:	
  8079  1392  17DC               	bsf	___fladd@b+2,7
  8080  1393                     l3047:	
  8081  1393  01DD               	clrf	___fladd@b+3
  8082  1394  2B9D               	goto	l3051
  8083  1395                     l3049:	
  8084  1395  3000               	movlw	0
  8085  1396  00DD               	movwf	___fladd@b+3
  8086  1397  3000               	movlw	0
  8087  1398  00DC               	movwf	___fladd@b+2
  8088  1399  3000               	movlw	0
  8089  139A  00DB               	movwf	___fladd@b+1
  8090  139B  3000               	movlw	0
  8091  139C  00DA               	movwf	___fladd@b
  8092  139D                     l3051:	
  8093  139D  0861               	movf	___fladd@a+3,w
  8094  139E  3980               	andlw	128
  8095  139F  00E2               	movwf	??___fladd
  8096  13A0  0862               	movf	??___fladd,w
  8097  13A1  00EB               	movwf	___fladd@aexp
  8098  13A2                     l3053:	
  8099  13A2  086B               	movf	___fladd@aexp,w
  8100  13A3  066A               	xorwf	___fladd@signs,w
  8101  13A4  1903               	skipnz
  8102  13A5  2BA7               	goto	u3241
  8103  13A6  2BA8               	goto	u3240
  8104  13A7                     u3241:	
  8105  13A7  2BA9               	goto	l3057
  8106  13A8                     u3240:	
  8107  13A8                     l3055:	
  8108  13A8  176A               	bsf	___fladd@signs,6
  8109  13A9                     l3057:	
  8110  13A9  3561               	lslf	___fladd@a+3,w
  8111  13AA  00E2               	movwf	??___fladd
  8112  13AB  0862               	movf	??___fladd,w
  8113  13AC  00EB               	movwf	___fladd@aexp
  8114  13AD                     l3059:	
  8115  13AD  1FE0               	btfss	___fladd@a+2,7
  8116  13AE  2BB0               	goto	u3251
  8117  13AF  2BB1               	goto	u3250
  8118  13B0                     u3251:	
  8119  13B0  2BB2               	goto	l3063
  8120  13B1                     u3250:	
  8121  13B1                     l3061:	
  8122  13B1  146B               	bsf	___fladd@aexp,0
  8123  13B2                     l3063:	
  8124  13B2  086B               	movf	___fladd@aexp,w
  8125  13B3  1903               	btfsc	3,2
  8126  13B4  2BB6               	goto	u3261
  8127  13B5  2BB7               	goto	u3260
  8128  13B6                     u3261:	
  8129  13B6  2BC7               	goto	l3073
  8130  13B7                     u3260:	
  8131  13B7                     l3065:	
  8132  13B7  0A6B               	incf	___fladd@aexp,w
  8133  13B8  1D03               	btfss	3,2
  8134  13B9  2BBB               	goto	u3271
  8135  13BA  2BBC               	goto	u3270
  8136  13BB                     u3271:	
  8137  13BB  2BC4               	goto	l3069
  8138  13BC                     u3270:	
  8139  13BC                     l3067:	
  8140  13BC  3000               	movlw	0
  8141  13BD  00E1               	movwf	___fladd@a+3
  8142  13BE  3000               	movlw	0
  8143  13BF  00E0               	movwf	___fladd@a+2
  8144  13C0  3000               	movlw	0
  8145  13C1  00DF               	movwf	___fladd@a+1
  8146  13C2  3000               	movlw	0
  8147  13C3  00DE               	movwf	___fladd@a
  8148  13C4                     l3069:	
  8149  13C4  17E0               	bsf	___fladd@a+2,7
  8150  13C5                     l3071:	
  8151  13C5  01E1               	clrf	___fladd@a+3
  8152  13C6  2BCF               	goto	l909
  8153  13C7                     l3073:	
  8154  13C7  3000               	movlw	0
  8155  13C8  00E1               	movwf	___fladd@a+3
  8156  13C9  3000               	movlw	0
  8157  13CA  00E0               	movwf	___fladd@a+2
  8158  13CB  3000               	movlw	0
  8159  13CC  00DF               	movwf	___fladd@a+1
  8160  13CD  3000               	movlw	0
  8161  13CE  00DE               	movwf	___fladd@a
  8162  13CF                     l909:	
  8163  13CF  086C               	movf	___fladd@bexp,w
  8164  13D0  026B               	subwf	___fladd@aexp,w
  8165  13D1  1803               	skipnc
  8166  13D2  2BD4               	goto	u3281
  8167  13D3  2BD5               	goto	u3280
  8168  13D4                     u3281:	
  8169  13D4  2C19               	goto	l3109
  8170  13D5                     u3280:	
  8171  13D5                     l3075:	
  8172  13D5  1F6A               	btfss	___fladd@signs,6
  8173  13D6  2BD8               	goto	u3291
  8174  13D7  2BD9               	goto	u3290
  8175  13D8                     u3291:	
  8176  13D8  2BDD               	goto	l3079
  8177  13D9                     u3290:	
  8178  13D9                     l3077:	
  8179  13D9  3080               	movlw	128
  8180  13DA  00E2               	movwf	??___fladd
  8181  13DB  0862               	movf	??___fladd,w
  8182  13DC  06EA               	xorwf	___fladd@signs,f
  8183  13DD                     l3079:	
  8184  13DD  086C               	movf	___fladd@bexp,w
  8185  13DE  00E2               	movwf	??___fladd
  8186  13DF  0862               	movf	??___fladd,w
  8187  13E0  00ED               	movwf	___fladd@grs
  8188  13E1                     l3081:	
  8189  13E1  086B               	movf	___fladd@aexp,w
  8190  13E2  00E2               	movwf	??___fladd
  8191  13E3  0862               	movf	??___fladd,w
  8192  13E4  00EC               	movwf	___fladd@bexp
  8193  13E5                     l3083:	
  8194  13E5  086D               	movf	___fladd@grs,w
  8195  13E6  00E2               	movwf	??___fladd
  8196  13E7  0862               	movf	??___fladd,w
  8197  13E8  00EB               	movwf	___fladd@aexp
  8198  13E9                     l3085:	
  8199  13E9  085A               	movf	___fladd@b,w
  8200  13EA  00E2               	movwf	??___fladd
  8201  13EB  0862               	movf	??___fladd,w
  8202  13EC  00ED               	movwf	___fladd@grs
  8203  13ED                     l3087:	
  8204  13ED  085E               	movf	___fladd@a,w
  8205  13EE  00E2               	movwf	??___fladd
  8206  13EF  0862               	movf	??___fladd,w
  8207  13F0  00DA               	movwf	___fladd@b
  8208  13F1                     l3089:	
  8209  13F1  086D               	movf	___fladd@grs,w
  8210  13F2  00E2               	movwf	??___fladd
  8211  13F3  0862               	movf	??___fladd,w
  8212  13F4  00DE               	movwf	___fladd@a
  8213  13F5                     l3091:	
  8214  13F5  085B               	movf	___fladd@b+1,w
  8215  13F6  00E2               	movwf	??___fladd
  8216  13F7  0862               	movf	??___fladd,w
  8217  13F8  00ED               	movwf	___fladd@grs
  8218  13F9                     l3093:	
  8219  13F9  085F               	movf	___fladd@a+1,w
  8220  13FA  00E2               	movwf	??___fladd
  8221  13FB  0862               	movf	??___fladd,w
  8222  13FC  00DB               	movwf	___fladd@b+1
  8223  13FD                     l3095:	
  8224  13FD  086D               	movf	___fladd@grs,w
  8225  13FE  00E2               	movwf	??___fladd
  8226  13FF  0862               	movf	??___fladd,w
  8227  1400  00DF               	movwf	___fladd@a+1
  8228  1401                     l3097:	
  8229  1401  085C               	movf	___fladd@b+2,w
  8230  1402  00E2               	movwf	??___fladd
  8231  1403  0862               	movf	??___fladd,w
  8232  1404  00ED               	movwf	___fladd@grs
  8233  1405                     l3099:	
  8234  1405  0860               	movf	___fladd@a+2,w
  8235  1406  00E2               	movwf	??___fladd
  8236  1407  0862               	movf	??___fladd,w
  8237  1408  00DC               	movwf	___fladd@b+2
  8238  1409                     l3101:	
  8239  1409  086D               	movf	___fladd@grs,w
  8240  140A  00E2               	movwf	??___fladd
  8241  140B  0862               	movf	??___fladd,w
  8242  140C  00E0               	movwf	___fladd@a+2
  8243  140D                     l3103:	
  8244  140D  085D               	movf	___fladd@b+3,w
  8245  140E  00E2               	movwf	??___fladd
  8246  140F  0862               	movf	??___fladd,w
  8247  1410  00ED               	movwf	___fladd@grs
  8248  1411                     l3105:	
  8249  1411  0861               	movf	___fladd@a+3,w
  8250  1412  00E2               	movwf	??___fladd
  8251  1413  0862               	movf	??___fladd,w
  8252  1414  00DD               	movwf	___fladd@b+3
  8253  1415                     l3107:	
  8254  1415  086D               	movf	___fladd@grs,w
  8255  1416  00E2               	movwf	??___fladd
  8256  1417  0862               	movf	??___fladd,w
  8257  1418  00E1               	movwf	___fladd@a+3
  8258  1419                     l3109:	
  8259  1419  01ED               	clrf	___fladd@grs
  8260  141A                     l3111:	
  8261  141A  086B               	movf	___fladd@aexp,w
  8262  141B  00E2               	movwf	??___fladd
  8263  141C  01E3               	clrf	??___fladd+1
  8264  141D  0863               	movf	??___fladd+1,w
  8265  141E  00E5               	movwf	??___fladd+3
  8266  141F  086C               	movf	___fladd@bexp,w
  8267  1420  0262               	subwf	??___fladd,w
  8268  1421  00E4               	movwf	??___fladd+2
  8269  1422  1C03               	skipc
  8270  1423  03E5               	decf	??___fladd+3,f
  8271  1424  0865               	movf	??___fladd+3,w
  8272  1425  3A80               	xorlw	128
  8273  1426  00E6               	movwf	??___fladd+4
  8274  1427  3080               	movlw	128
  8275  1428  0266               	subwf	??___fladd+4,w
  8276  1429  1D03               	skipz
  8277  142A  2C2D               	goto	u3305
  8278  142B  301A               	movlw	26
  8279  142C  0264               	subwf	??___fladd+2,w
  8280  142D                     u3305:	
  8281  142D  1C03               	skipc
  8282  142E  2C30               	goto	u3301
  8283  142F  2C31               	goto	u3300
  8284  1430                     u3301:	
  8285  1430  2C69               	goto	l3127
  8286  1431                     u3300:	
  8287  1431                     l3113:	
  8288  1431  0020               	movlb	0	; select bank0
  8289  1432  085D               	movf	___fladd@b+3,w
  8290  1433  045C               	iorwf	___fladd@b+2,w
  8291  1434  045B               	iorwf	___fladd@b+1,w
  8292  1435  045A               	iorwf	___fladd@b,w
  8293  1436  1D03               	skipz
  8294  1437  2C39               	goto	u3311
  8295  1438  2C3B               	goto	u3310
  8296  1439                     u3311:	
  8297  1439  3001               	movlw	1
  8298  143A  2C3C               	goto	u3320
  8299  143B                     u3310:	
  8300  143B  3000               	movlw	0
  8301  143C                     u3320:	
  8302  143C  00E2               	movwf	??___fladd
  8303  143D  0862               	movf	??___fladd,w
  8304  143E  00ED               	movwf	___fladd@grs
  8305  143F  3000               	movlw	0
  8306  1440  00DD               	movwf	___fladd@b+3
  8307  1441  3000               	movlw	0
  8308  1442  00DC               	movwf	___fladd@b+2
  8309  1443  3000               	movlw	0
  8310  1444  00DB               	movwf	___fladd@b+1
  8311  1445  3000               	movlw	0
  8312  1446  00DA               	movwf	___fladd@b
  8313  1447  086B               	movf	___fladd@aexp,w
  8314  1448  00E2               	movwf	??___fladd
  8315  1449  0862               	movf	??___fladd,w
  8316  144A  00EC               	movwf	___fladd@bexp
  8317  144B  2C70               	goto	l913
  8318  144C                     l915:	
  8319  144C  1C6D               	btfss	___fladd@grs,0
  8320  144D  2C4F               	goto	u3331
  8321  144E  2C50               	goto	u3330
  8322  144F                     u3331:	
  8323  144F  2C56               	goto	l3117
  8324  1450                     u3330:	
  8325  1450                     l3115:	
  8326  1450  366D               	lsrf	___fladd@grs,w
  8327  1451  3801               	iorlw	1
  8328  1452  00E2               	movwf	??___fladd
  8329  1453  0862               	movf	??___fladd,w
  8330  1454  00ED               	movwf	___fladd@grs
  8331  1455  2C58               	goto	l3119
  8332  1456                     l3117:	
  8333  1456  1003               	clrc
  8334  1457  0CED               	rrf	___fladd@grs,f
  8335  1458                     l3119:	
  8336  1458  1C5A               	btfss	___fladd@b,0
  8337  1459  2C5B               	goto	u3341
  8338  145A  2C5C               	goto	u3340
  8339  145B                     u3341:	
  8340  145B  2C5D               	goto	l3123
  8341  145C                     u3340:	
  8342  145C                     l3121:	
  8343  145C  17ED               	bsf	___fladd@grs,7
  8344  145D                     l3123:	
  8345  145D  3001               	movlw	1
  8346  145E  00E2               	movwf	??___fladd
  8347  145F                     u3355:	
  8348  145F  37DD               	asrf	___fladd@b+3,f
  8349  1460  0CDC               	rrf	___fladd@b+2,f
  8350  1461  0CDB               	rrf	___fladd@b+1,f
  8351  1462  0CDA               	rrf	___fladd@b,f
  8352  1463  0BE2               	decfsz	??___fladd& (0+127),f
  8353  1464  2C5F               	goto	u3355
  8354  1465                     l3125:	
  8355  1465  3001               	movlw	1
  8356  1466  00E2               	movwf	??___fladd
  8357  1467  0862               	movf	??___fladd,w
  8358  1468  07EC               	addwf	___fladd@bexp,f
  8359  1469                     l3127:	
  8360  1469  0020               	movlb	0	; select bank0
  8361  146A  086B               	movf	___fladd@aexp,w
  8362  146B  026C               	subwf	___fladd@bexp,w
  8363  146C  1C03               	skipc
  8364  146D  2C6F               	goto	u3361
  8365  146E  2C70               	goto	u3360
  8366  146F                     u3361:	
  8367  146F  2C4C               	goto	l915
  8368  1470                     u3360:	
  8369  1470                     l913:	
  8370  1470  1B6A               	btfsc	___fladd@signs,6
  8371  1471  2C73               	goto	u3371
  8372  1472  2C74               	goto	u3370
  8373  1473                     u3371:	
  8374  1473  2CAC               	goto	l3153
  8375  1474                     u3370:	
  8376  1474                     l3129:	
  8377  1474  086C               	movf	___fladd@bexp,w
  8378  1475  1D03               	btfss	3,2
  8379  1476  2C78               	goto	u3381
  8380  1477  2C79               	goto	u3380
  8381  1478                     u3381:	
  8382  1478  2C82               	goto	l3135
  8383  1479                     u3380:	
  8384  1479                     l3131:	
  8385  1479  3000               	movlw	0
  8386  147A  00DD               	movwf	?___fladd+3
  8387  147B  3000               	movlw	0
  8388  147C  00DC               	movwf	?___fladd+2
  8389  147D  3000               	movlw	0
  8390  147E  00DB               	movwf	?___fladd+1
  8391  147F  3000               	movlw	0
  8392  1480  00DA               	movwf	?___fladd
  8393  1481  2DA8               	goto	l922
  8394  1482                     l3135:	
  8395  1482  085E               	movf	___fladd@a,w
  8396  1483  07DA               	addwf	___fladd@b,f
  8397  1484  085F               	movf	___fladd@a+1,w
  8398  1485  3DDB               	addwfc	___fladd@b+1,f
  8399  1486  0860               	movf	___fladd@a+2,w
  8400  1487  3DDC               	addwfc	___fladd@b+2,f
  8401  1488  0861               	movf	___fladd@a+3,w
  8402  1489  3DDD               	addwfc	___fladd@b+3,f
  8403  148A                     l3137:	
  8404  148A  1C5D               	btfss	___fladd@b+3,0
  8405  148B  2C8D               	goto	u3391
  8406  148C  2C8E               	goto	u3390
  8407  148D                     u3391:	
  8408  148D  2D38               	goto	l3187
  8409  148E                     u3390:	
  8410  148E                     l3139:	
  8411  148E  1C6D               	btfss	___fladd@grs,0
  8412  148F  2C91               	goto	u3401
  8413  1490  2C92               	goto	u3400
  8414  1491                     u3401:	
  8415  1491  2C98               	goto	l3143
  8416  1492                     u3400:	
  8417  1492                     l3141:	
  8418  1492  366D               	lsrf	___fladd@grs,w
  8419  1493  3801               	iorlw	1
  8420  1494  00E2               	movwf	??___fladd
  8421  1495  0862               	movf	??___fladd,w
  8422  1496  00ED               	movwf	___fladd@grs
  8423  1497  2C9A               	goto	l3145
  8424  1498                     l3143:	
  8425  1498  1003               	clrc
  8426  1499  0CED               	rrf	___fladd@grs,f
  8427  149A                     l3145:	
  8428  149A  1C5A               	btfss	___fladd@b,0
  8429  149B  2C9D               	goto	u3411
  8430  149C  2C9E               	goto	u3410
  8431  149D                     u3411:	
  8432  149D  2C9F               	goto	l3149
  8433  149E                     u3410:	
  8434  149E                     l3147:	
  8435  149E  17ED               	bsf	___fladd@grs,7
  8436  149F                     l3149:	
  8437  149F  3001               	movlw	1
  8438  14A0  00E2               	movwf	??___fladd
  8439  14A1                     u3425:	
  8440  14A1  37DD               	asrf	___fladd@b+3,f
  8441  14A2  0CDC               	rrf	___fladd@b+2,f
  8442  14A3  0CDB               	rrf	___fladd@b+1,f
  8443  14A4  0CDA               	rrf	___fladd@b,f
  8444  14A5  0BE2               	decfsz	??___fladd& (0+127),f
  8445  14A6  2CA1               	goto	u3425
  8446  14A7                     l3151:	
  8447  14A7  3001               	movlw	1
  8448  14A8  00E2               	movwf	??___fladd
  8449  14A9  0862               	movf	??___fladd,w
  8450  14AA  07EC               	addwf	___fladd@bexp,f
  8451  14AB  2D38               	goto	l3187
  8452  14AC                     l3153:	
  8453  14AC  085D               	movf	___fladd@b+3,w
  8454  14AD  3A80               	xorlw	128
  8455  14AE  00E2               	movwf	??___fladd
  8456  14AF  0861               	movf	___fladd@a+3,w
  8457  14B0  3A80               	xorlw	128
  8458  14B1  0262               	subwf	??___fladd,w
  8459  14B2  1D03               	skipz
  8460  14B3  2CBE               	goto	u3433
  8461  14B4  0860               	movf	___fladd@a+2,w
  8462  14B5  025C               	subwf	___fladd@b+2,w
  8463  14B6  1D03               	skipz
  8464  14B7  2CBE               	goto	u3433
  8465  14B8  085F               	movf	___fladd@a+1,w
  8466  14B9  025B               	subwf	___fladd@b+1,w
  8467  14BA  1D03               	skipz
  8468  14BB  2CBE               	goto	u3433
  8469  14BC  085E               	movf	___fladd@a,w
  8470  14BD  025A               	subwf	___fladd@b,w
  8471  14BE                     u3433:	
  8472  14BE  1803               	skipnc
  8473  14BF  2CC1               	goto	u3431
  8474  14C0  2CC2               	goto	u3430
  8475  14C1                     u3431:	
  8476  14C1  2CFA               	goto	l3163
  8477  14C2                     u3430:	
  8478  14C2                     l3155:	
  8479  14C2  30FF               	movlw	255
  8480  14C3  00E2               	movwf	??___fladd
  8481  14C4  30FF               	movlw	255
  8482  14C5  00E3               	movwf	??___fladd+1
  8483  14C6  30FF               	movlw	255
  8484  14C7  00E4               	movwf	??___fladd+2
  8485  14C8  30FF               	movlw	255
  8486  14C9  00E5               	movwf	??___fladd+3
  8487  14CA  085A               	movf	___fladd@b,w
  8488  14CB  025E               	subwf	___fladd@a,w
  8489  14CC  00E6               	movwf	??___fladd+4
  8490  14CD  085B               	movf	___fladd@b+1,w
  8491  14CE  3B5F               	subwfb	___fladd@a+1,w
  8492  14CF  00E7               	movwf	??___fladd+5
  8493  14D0  085C               	movf	___fladd@b+2,w
  8494  14D1  3B60               	subwfb	___fladd@a+2,w
  8495  14D2  00E8               	movwf	??___fladd+6
  8496  14D3  085D               	movf	___fladd@b+3,w
  8497  14D4  3B61               	subwfb	___fladd@a+3,w
  8498  14D5  00E9               	movwf	??___fladd+7
  8499  14D6  0866               	movf	??___fladd+4,w
  8500  14D7  07E2               	addwf	??___fladd,f
  8501  14D8  0867               	movf	??___fladd+5,w
  8502  14D9  3DE3               	addwfc	??___fladd+1,f
  8503  14DA  0868               	movf	??___fladd+6,w
  8504  14DB  3DE4               	addwfc	??___fladd+2,f
  8505  14DC  0869               	movf	??___fladd+7,w
  8506  14DD  3DE5               	addwfc	??___fladd+3,f
  8507  14DE  0865               	movf	??___fladd+3,w
  8508  14DF  00DD               	movwf	___fladd@b+3
  8509  14E0  0864               	movf	??___fladd+2,w
  8510  14E1  00DC               	movwf	___fladd@b+2
  8511  14E2  0863               	movf	??___fladd+1,w
  8512  14E3  00DB               	movwf	___fladd@b+1
  8513  14E4  0862               	movf	??___fladd,w
  8514  14E5  00DA               	movwf	___fladd@b
  8515  14E6                     l3157:	
  8516  14E6  3080               	movlw	128
  8517  14E7  00E2               	movwf	??___fladd
  8518  14E8  0862               	movf	??___fladd,w
  8519  14E9  06EA               	xorwf	___fladd@signs,f
  8520  14EA  09ED               	comf	___fladd@grs,f
  8521  14EB  0AED               	incf	___fladd@grs,f
  8522  14EC                     l3159:	
  8523  14EC  086D               	movf	___fladd@grs,w
  8524  14ED  1D03               	btfss	3,2
  8525  14EE  2CF0               	goto	u3441
  8526  14EF  2CF1               	goto	u3440
  8527  14F0                     u3441:	
  8528  14F0  2D02               	goto	l930
  8529  14F1                     u3440:	
  8530  14F1                     l3161:	
  8531  14F1  3001               	movlw	1
  8532  14F2  07DA               	addwf	___fladd@b,f
  8533  14F3  3000               	movlw	0
  8534  14F4  3DDB               	addwfc	___fladd@b+1,f
  8535  14F5  3000               	movlw	0
  8536  14F6  3DDC               	addwfc	___fladd@b+2,f
  8537  14F7  3000               	movlw	0
  8538  14F8  3DDD               	addwfc	___fladd@b+3,f
  8539  14F9  2D02               	goto	l930
  8540  14FA                     l3163:	
  8541  14FA  085E               	movf	___fladd@a,w
  8542  14FB  02DA               	subwf	___fladd@b,f
  8543  14FC  085F               	movf	___fladd@a+1,w
  8544  14FD  3BDB               	subwfb	___fladd@b+1,f
  8545  14FE  0860               	movf	___fladd@a+2,w
  8546  14FF  3BDC               	subwfb	___fladd@b+2,f
  8547  1500  0861               	movf	___fladd@a+3,w
  8548  1501  3BDD               	subwfb	___fladd@b+3,f
  8549  1502                     l930:	
  8550  1502  085D               	movf	___fladd@b+3,w
  8551  1503  045C               	iorwf	___fladd@b+2,w
  8552  1504  045B               	iorwf	___fladd@b+1,w
  8553  1505  045A               	iorwf	___fladd@b,w
  8554  1506  1D03               	skipz
  8555  1507  2D09               	goto	u3451
  8556  1508  2D0A               	goto	u3450
  8557  1509                     u3451:	
  8558  1509  2D34               	goto	l3185
  8559  150A                     u3450:	
  8560  150A                     l3165:	
  8561  150A  086D               	movf	___fladd@grs,w
  8562  150B  1D03               	btfss	3,2
  8563  150C  2D0E               	goto	u3461
  8564  150D  2D0F               	goto	u3460
  8565  150E                     u3461:	
  8566  150E  2D34               	goto	l3185
  8567  150F                     u3460:	
  8568  150F                     l3167:	
  8569  150F  3000               	movlw	0
  8570  1510  00DD               	movwf	?___fladd+3
  8571  1511  3000               	movlw	0
  8572  1512  00DC               	movwf	?___fladd+2
  8573  1513  3000               	movlw	0
  8574  1514  00DB               	movwf	?___fladd+1
  8575  1515  3000               	movlw	0
  8576  1516  00DA               	movwf	?___fladd
  8577  1517  2DA8               	goto	l922
  8578  1518                     l3171:	
  8579  1518  3001               	movlw	1
  8580  1519                     u3475:	
  8581  1519  35DA               	lslf	___fladd@b,f
  8582  151A  0DDB               	rlf	___fladd@b+1,f
  8583  151B  0DDC               	rlf	___fladd@b+2,f
  8584  151C  0DDD               	rlf	___fladd@b+3,f
  8585  151D  0B89               	decfsz	9,f
  8586  151E  2D19               	goto	u3475
  8587  151F                     l3173:	
  8588  151F  1FED               	btfss	___fladd@grs,7
  8589  1520  2D22               	goto	u3481
  8590  1521  2D23               	goto	u3480
  8591  1522                     u3481:	
  8592  1522  2D24               	goto	l934
  8593  1523                     u3480:	
  8594  1523                     l3175:	
  8595  1523  145A               	bsf	___fladd@b,0
  8596  1524                     l934:	
  8597  1524  1C6D               	btfss	___fladd@grs,0
  8598  1525  2D27               	goto	u3491
  8599  1526  2D28               	goto	u3490
  8600  1527                     u3491:	
  8601  1527  2D2B               	goto	l3179
  8602  1528                     u3490:	
  8603  1528                     l3177:	
  8604  1528  1403               	setc
  8605  1529  0DED               	rlf	___fladd@grs,f
  8606  152A  2D2D               	goto	l3181
  8607  152B                     l3179:	
  8608  152B  1003               	clrc
  8609  152C  0DED               	rlf	___fladd@grs,f
  8610  152D                     l3181:	
  8611  152D  086C               	movf	___fladd@bexp,w
  8612  152E  1903               	btfsc	3,2
  8613  152F  2D31               	goto	u3501
  8614  1530  2D32               	goto	u3500
  8615  1531                     u3501:	
  8616  1531  2D34               	goto	l3185
  8617  1532                     u3500:	
  8618  1532                     l3183:	
  8619  1532  3001               	movlw	1
  8620  1533  02EC               	subwf	___fladd@bexp,f
  8621  1534                     l3185:	
  8622  1534  1FDC               	btfss	___fladd@b+2,7
  8623  1535  2D37               	goto	u3511
  8624  1536  2D38               	goto	u3510
  8625  1537                     u3511:	
  8626  1537  2D18               	goto	l3171
  8627  1538                     u3510:	
  8628  1538                     l3187:	
  8629  1538  01EB               	clrf	___fladd@aexp
  8630  1539                     l3189:	
  8631  1539  1FED               	btfss	___fladd@grs,7
  8632  153A  2D3C               	goto	u3521
  8633  153B  2D3D               	goto	u3520
  8634  153C                     u3521:	
  8635  153C  2D4B               	goto	l3197
  8636  153D                     u3520:	
  8637  153D                     l3191:	
  8638  153D  086D               	movf	___fladd@grs,w
  8639  153E  397F               	andlw	127
  8640  153F  1903               	btfsc	3,2
  8641  1540  2D42               	goto	u3531
  8642  1541  2D43               	goto	u3530
  8643  1542                     u3531:	
  8644  1542  2D46               	goto	l940
  8645  1543                     u3530:	
  8646  1543                     l3193:	
  8647  1543  01EB               	clrf	___fladd@aexp
  8648  1544  0AEB               	incf	___fladd@aexp,f
  8649  1545  2D4B               	goto	l3197
  8650  1546                     l940:	
  8651  1546  1C5A               	btfss	___fladd@b,0
  8652  1547  2D49               	goto	u3541
  8653  1548  2D4A               	goto	u3540
  8654  1549                     u3541:	
  8655  1549  2D4B               	goto	l3197
  8656  154A                     u3540:	
  8657  154A  2D43               	goto	l3193
  8658  154B                     l3197:	
  8659  154B  086B               	movf	___fladd@aexp,w
  8660  154C  1903               	btfsc	3,2
  8661  154D  2D4F               	goto	u3551
  8662  154E  2D50               	goto	u3550
  8663  154F                     u3551:	
  8664  154F  2D7D               	goto	l943
  8665  1550                     u3550:	
  8666  1550                     l3199:	
  8667  1550  3001               	movlw	1
  8668  1551  07DA               	addwf	___fladd@b,f
  8669  1552  3000               	movlw	0
  8670  1553  3DDB               	addwfc	___fladd@b+1,f
  8671  1554  3000               	movlw	0
  8672  1555  3DDC               	addwfc	___fladd@b+2,f
  8673  1556  3000               	movlw	0
  8674  1557  3DDD               	addwfc	___fladd@b+3,f
  8675  1558                     l3201:	
  8676  1558  1C5D               	btfss	___fladd@b+3,0
  8677  1559  2D5B               	goto	u3561
  8678  155A  2D5C               	goto	u3560
  8679  155B                     u3561:	
  8680  155B  2D7D               	goto	l943
  8681  155C                     u3560:	
  8682  155C                     l3203:	
  8683  155C  085A               	movf	___fladd@b,w
  8684  155D  00E2               	movwf	??___fladd
  8685  155E  085B               	movf	___fladd@b+1,w
  8686  155F  00E3               	movwf	??___fladd+1
  8687  1560  085C               	movf	___fladd@b+2,w
  8688  1561  00E4               	movwf	??___fladd+2
  8689  1562  085D               	movf	___fladd@b+3,w
  8690  1563  00E5               	movwf	??___fladd+3
  8691  1564  3001               	movlw	1
  8692  1565  00E6               	movwf	??___fladd+4
  8693  1566                     u3575:	
  8694  1566  37E5               	asrf	??___fladd+3,f
  8695  1567  0CE4               	rrf	??___fladd+2,f
  8696  1568  0CE3               	rrf	??___fladd+1,f
  8697  1569  0CE2               	rrf	??___fladd,f
  8698  156A                     u3570:	
  8699  156A  0BE6               	decfsz	??___fladd+4,f
  8700  156B  2D66               	goto	u3575
  8701  156C  0865               	movf	??___fladd+3,w
  8702  156D  00DD               	movwf	___fladd@b+3
  8703  156E  0864               	movf	??___fladd+2,w
  8704  156F  00DC               	movwf	___fladd@b+2
  8705  1570  0863               	movf	??___fladd+1,w
  8706  1571  00DB               	movwf	___fladd@b+1
  8707  1572  0862               	movf	??___fladd,w
  8708  1573  00DA               	movwf	___fladd@b
  8709  1574  0A6C               	incf	___fladd@bexp,w
  8710  1575  1903               	btfsc	3,2
  8711  1576  2D78               	goto	u3581
  8712  1577  2D79               	goto	u3580
  8713  1578                     u3581:	
  8714  1578  2D7D               	goto	l943
  8715  1579                     u3580:	
  8716  1579                     l3205:	
  8717  1579  3001               	movlw	1
  8718  157A  00E2               	movwf	??___fladd
  8719  157B  0862               	movf	??___fladd,w
  8720  157C  07EC               	addwf	___fladd@bexp,f
  8721  157D                     l943:	
  8722  157D  0A6C               	incf	___fladd@bexp,w
  8723  157E  1903               	btfsc	3,2
  8724  157F  2D81               	goto	u3591
  8725  1580  2D82               	goto	u3590
  8726  1581                     u3591:	
  8727  1581  2D87               	goto	l3209
  8728  1582                     u3590:	
  8729  1582                     l3207:	
  8730  1582  086C               	movf	___fladd@bexp,w
  8731  1583  1D03               	btfss	3,2
  8732  1584  2D86               	goto	u3601
  8733  1585  2D87               	goto	u3600
  8734  1586                     u3601:	
  8735  1586  2D95               	goto	l3215
  8736  1587                     u3600:	
  8737  1587                     l3209:	
  8738  1587  3000               	movlw	0
  8739  1588  00DD               	movwf	___fladd@b+3
  8740  1589  3000               	movlw	0
  8741  158A  00DC               	movwf	___fladd@b+2
  8742  158B  3000               	movlw	0
  8743  158C  00DB               	movwf	___fladd@b+1
  8744  158D  3000               	movlw	0
  8745  158E  00DA               	movwf	___fladd@b
  8746  158F                     l3211:	
  8747  158F  086C               	movf	___fladd@bexp,w
  8748  1590  1D03               	btfss	3,2
  8749  1591  2D93               	goto	u3611
  8750  1592  2D94               	goto	u3610
  8751  1593                     u3611:	
  8752  1593  2D95               	goto	l3215
  8753  1594                     u3610:	
  8754  1594                     l3213:	
  8755  1594  01EA               	clrf	___fladd@signs
  8756  1595                     l3215:	
  8757  1595  1C6C               	btfss	___fladd@bexp,0
  8758  1596  2D98               	goto	u3621
  8759  1597  2D99               	goto	u3620
  8760  1598                     u3621:	
  8761  1598  2D9B               	goto	l3219
  8762  1599                     u3620:	
  8763  1599                     l3217:	
  8764  1599  17DC               	bsf	___fladd@b+2,7
  8765  159A  2D9F               	goto	l951
  8766  159B                     l3219:	
  8767  159B  307F               	movlw	127
  8768  159C  00E2               	movwf	??___fladd
  8769  159D  0862               	movf	??___fladd,w
  8770  159E  05DC               	andwf	___fladd@b+2,f
  8771  159F                     l951:	
  8772  159F  366C               	lsrf	___fladd@bexp,w
  8773  15A0  00E2               	movwf	??___fladd
  8774  15A1  0862               	movf	??___fladd,w
  8775  15A2  00DD               	movwf	___fladd@b+3
  8776  15A3                     l3221:	
  8777  15A3  1FEA               	btfss	___fladd@signs,7
  8778  15A4  2DA6               	goto	u3631
  8779  15A5  2DA7               	goto	u3630
  8780  15A6                     u3631:	
  8781  15A6  2DA8               	goto	l952
  8782  15A7                     u3630:	
  8783  15A7                     l3223:	
  8784  15A7  17DD               	bsf	___fladd@b+3,7
  8785  15A8                     l952:	
  8786  15A8                     l922:	
  8787  15A8  0008               	return
  8788  15A9                     __end_of___fladd:	
  8789                           
  8790                           	psect	text19
  8791  1A1D                     __ptext19:	
  8792 ;; *************** function ___flneg *****************
  8793 ;; Defined at:
  8794 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  f1              4    0[COMMON] unsigned char 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;		None
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  4    0[COMMON] unsigned char 
  8801 ;; Registers used:
  8802 ;;		wreg
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;Total ram usage:        4 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; This function calls:
  8815 ;;		Nothing
  8816 ;; This function is called by:
  8817 ;;		_efgtoa
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821                           
  8822                           ;psect for function ___flneg
  8823  1A1D                     ___flneg:	
  8824  1A1D                     l3473:	
  8825                           ;incstack = 0
  8826                           ; Regs used in ___flneg: [wreg]
  8827                           
  8828  1A1D  0873               	movf	___flneg@f1+3,w
  8829  1A1E  0472               	iorwf	___flneg@f1+2,w
  8830  1A1F  0471               	iorwf	___flneg@f1+1,w
  8831  1A20  0470               	iorwf	___flneg@f1,w
  8832  1A21  1903               	skipnz
  8833  1A22  2A24               	goto	u4271
  8834  1A23  2A25               	goto	u4270
  8835  1A24                     u4271:	
  8836  1A24  2A27               	goto	l3477
  8837  1A25                     u4270:	
  8838  1A25                     l3475:	
  8839  1A25  3080               	movlw	128
  8840  1A26  06F3               	xorwf	___flneg@f1+3,f
  8841  1A27                     l3477:	
  8842  1A27                     l798:	
  8843  1A27  0008               	return
  8844  1A28                     __end_of___flneg:	
  8845                           
  8846                           	psect	text20
  8847  15A9                     __ptext20:	
  8848 ;; *************** function ___flmul *****************
  8849 ;; Defined at:
  8850 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;  b               4    6[BANK0 ] unsigned char 
  8853 ;;  a               4   10[BANK0 ] unsigned char 
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;  prod            4   26[BANK0 ] struct .
  8856 ;;  grs             4   20[BANK0 ] unsigned long 
  8857 ;;  temp            2   30[BANK0 ] struct .
  8858 ;;  bexp            1   25[BANK0 ] unsigned char 
  8859 ;;  aexp            1   24[BANK0 ] unsigned char 
  8860 ;;  sign            1   19[BANK0 ] unsigned char 
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  4    6[BANK0 ] unsigned char 
  8863 ;; Registers used:
  8864 ;;		wreg, status,2, status,0, pclath, cstack
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8870 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8871 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8872 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8873 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8874 ;;Total ram usage:       26 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; Hardware stack levels required when called:    1
  8877 ;; This function calls:
  8878 ;;		__Umul8_16
  8879 ;; This function is called by:
  8880 ;;		_main
  8881 ;;		_efgtoa
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           
  8885                           
  8886                           ;psect for function ___flmul
  8887  15A9                     ___flmul:	
  8888  15A9                     l3663:	
  8889                           ;incstack = 0
  8890                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8891                           
  8892  15A9  0020               	movlb	0	; select bank0
  8893  15AA  0829               	movf	___flmul@b+3,w
  8894  15AB  3980               	andlw	128
  8895  15AC  00AE               	movwf	??___flmul
  8896  15AD  082E               	movf	??___flmul,w
  8897  15AE  00B3               	movwf	___flmul@sign
  8898  15AF                     l3665:	
  8899  15AF  3529               	lslf	___flmul@b+3,w
  8900  15B0  00AE               	movwf	??___flmul
  8901  15B1  082E               	movf	??___flmul,w
  8902  15B2  00B9               	movwf	___flmul@bexp
  8903  15B3                     l3667:	
  8904  15B3  1FA8               	btfss	___flmul@b+2,7
  8905  15B4  2DB6               	goto	u4671
  8906  15B5  2DB7               	goto	u4670
  8907  15B6                     u4671:	
  8908  15B6  2DB8               	goto	l3671
  8909  15B7                     u4670:	
  8910  15B7                     l3669:	
  8911  15B7  1439               	bsf	___flmul@bexp,0
  8912  15B8                     l3671:	
  8913  15B8  0839               	movf	___flmul@bexp,w
  8914  15B9  1903               	btfsc	3,2
  8915  15BA  2DBC               	goto	u4681
  8916  15BB  2DBD               	goto	u4680
  8917  15BC                     u4681:	
  8918  15BC  2DCC               	goto	l3679
  8919  15BD                     u4680:	
  8920  15BD                     l3673:	
  8921  15BD  0A39               	incf	___flmul@bexp,w
  8922  15BE  1D03               	btfss	3,2
  8923  15BF  2DC1               	goto	u4691
  8924  15C0  2DC2               	goto	u4690
  8925  15C1                     u4691:	
  8926  15C1  2DCA               	goto	l3677
  8927  15C2                     u4690:	
  8928  15C2                     l3675:	
  8929  15C2  3000               	movlw	0
  8930  15C3  00A9               	movwf	___flmul@b+3
  8931  15C4  3000               	movlw	0
  8932  15C5  00A8               	movwf	___flmul@b+2
  8933  15C6  3000               	movlw	0
  8934  15C7  00A7               	movwf	___flmul@b+1
  8935  15C8  3000               	movlw	0
  8936  15C9  00A6               	movwf	___flmul@b
  8937  15CA                     l3677:	
  8938  15CA  17A8               	bsf	___flmul@b+2,7
  8939  15CB  2DD4               	goto	l3681
  8940  15CC                     l3679:	
  8941  15CC  3000               	movlw	0
  8942  15CD  00A9               	movwf	___flmul@b+3
  8943  15CE  3000               	movlw	0
  8944  15CF  00A8               	movwf	___flmul@b+2
  8945  15D0  3000               	movlw	0
  8946  15D1  00A7               	movwf	___flmul@b+1
  8947  15D2  3000               	movlw	0
  8948  15D3  00A6               	movwf	___flmul@b
  8949  15D4                     l3681:	
  8950  15D4  082D               	movf	___flmul@a+3,w
  8951  15D5  3980               	andlw	128
  8952  15D6  00AE               	movwf	??___flmul
  8953  15D7  082E               	movf	??___flmul,w
  8954  15D8  06B3               	xorwf	___flmul@sign,f
  8955  15D9                     l3683:	
  8956  15D9  352D               	lslf	___flmul@a+3,w
  8957  15DA  00AE               	movwf	??___flmul
  8958  15DB  082E               	movf	??___flmul,w
  8959  15DC  00B8               	movwf	___flmul@aexp
  8960  15DD                     l3685:	
  8961  15DD  1FAC               	btfss	___flmul@a+2,7
  8962  15DE  2DE0               	goto	u4701
  8963  15DF  2DE1               	goto	u4700
  8964  15E0                     u4701:	
  8965  15E0  2DE2               	goto	l3689
  8966  15E1                     u4700:	
  8967  15E1                     l3687:	
  8968  15E1  1438               	bsf	___flmul@aexp,0
  8969  15E2                     l3689:	
  8970  15E2  0838               	movf	___flmul@aexp,w
  8971  15E3  1903               	btfsc	3,2
  8972  15E4  2DE6               	goto	u4711
  8973  15E5  2DE7               	goto	u4710
  8974  15E6                     u4711:	
  8975  15E6  2DF6               	goto	l3697
  8976  15E7                     u4710:	
  8977  15E7                     l3691:	
  8978  15E7  0A38               	incf	___flmul@aexp,w
  8979  15E8  1D03               	btfss	3,2
  8980  15E9  2DEB               	goto	u4721
  8981  15EA  2DEC               	goto	u4720
  8982  15EB                     u4721:	
  8983  15EB  2DF4               	goto	l3695
  8984  15EC                     u4720:	
  8985  15EC                     l3693:	
  8986  15EC  3000               	movlw	0
  8987  15ED  00AD               	movwf	___flmul@a+3
  8988  15EE  3000               	movlw	0
  8989  15EF  00AC               	movwf	___flmul@a+2
  8990  15F0  3000               	movlw	0
  8991  15F1  00AB               	movwf	___flmul@a+1
  8992  15F2  3000               	movlw	0
  8993  15F3  00AA               	movwf	___flmul@a
  8994  15F4                     l3695:	
  8995  15F4  17AC               	bsf	___flmul@a+2,7
  8996  15F5  2DFE               	goto	l3699
  8997  15F6                     l3697:	
  8998  15F6  3000               	movlw	0
  8999  15F7  00AD               	movwf	___flmul@a+3
  9000  15F8  3000               	movlw	0
  9001  15F9  00AC               	movwf	___flmul@a+2
  9002  15FA  3000               	movlw	0
  9003  15FB  00AB               	movwf	___flmul@a+1
  9004  15FC  3000               	movlw	0
  9005  15FD  00AA               	movwf	___flmul@a
  9006  15FE                     l3699:	
  9007  15FE  0838               	movf	___flmul@aexp,w
  9008  15FF  1903               	btfsc	3,2
  9009  1600  2E02               	goto	u4731
  9010  1601  2E03               	goto	u4730
  9011  1602                     u4731:	
  9012  1602  2E08               	goto	l3703
  9013  1603                     u4730:	
  9014  1603                     l3701:	
  9015  1603  0839               	movf	___flmul@bexp,w
  9016  1604  1D03               	btfss	3,2
  9017  1605  2E07               	goto	u4741
  9018  1606  2E08               	goto	u4740
  9019  1607                     u4741:	
  9020  1607  2E11               	goto	l3707
  9021  1608                     u4740:	
  9022  1608                     l3703:	
  9023  1608  3000               	movlw	0
  9024  1609  00A9               	movwf	?___flmul+3
  9025  160A  3000               	movlw	0
  9026  160B  00A8               	movwf	?___flmul+2
  9027  160C  3000               	movlw	0
  9028  160D  00A7               	movwf	?___flmul+1
  9029  160E  3000               	movlw	0
  9030  160F  00A6               	movwf	?___flmul
  9031  1610  2FFF               	goto	l1005
  9032  1611                     l3707:	
  9033  1611  0826               	movf	___flmul@b,w
  9034  1612  00AE               	movwf	??___flmul
  9035  1613  082E               	movf	??___flmul,w
  9036  1614  00F0               	movwf	__Umul8_16@multiplicand
  9037  1615  082C               	movf	___flmul@a+2,w
  9038  1616  319B  232D  3195   	fcall	__Umul8_16
  9039  1619  0871               	movf	?__Umul8_16+1,w
  9040  161A  0020               	movlb	0	; select bank0
  9041  161B  00BF               	movwf	___flmul@temp+1
  9042  161C  0870               	movf	?__Umul8_16,w
  9043  161D  00BE               	movwf	___flmul@temp
  9044  161E                     l3709:	
  9045  161E  083E               	movf	___flmul@temp,w
  9046  161F  00AE               	movwf	??___flmul
  9047  1620  01AF               	clrf	??___flmul+1
  9048  1621  01B0               	clrf	??___flmul+2
  9049  1622  01B1               	clrf	??___flmul+3
  9050  1623  0831               	movf	??___flmul+3,w
  9051  1624  00B7               	movwf	___flmul@grs+3
  9052  1625  0830               	movf	??___flmul+2,w
  9053  1626  00B6               	movwf	___flmul@grs+2
  9054  1627  082F               	movf	??___flmul+1,w
  9055  1628  00B5               	movwf	___flmul@grs+1
  9056  1629  082E               	movf	??___flmul,w
  9057  162A  00B4               	movwf	___flmul@grs
  9058  162B                     l3711:	
  9059  162B  083F               	movf	___flmul@temp+1,w
  9060  162C  00AE               	movwf	??___flmul
  9061  162D  01AF               	clrf	??___flmul+1
  9062  162E  01B0               	clrf	??___flmul+2
  9063  162F  01B1               	clrf	??___flmul+3
  9064  1630  0831               	movf	??___flmul+3,w
  9065  1631  00BD               	movwf	___flmul@prod+3
  9066  1632  0830               	movf	??___flmul+2,w
  9067  1633  00BC               	movwf	___flmul@prod+2
  9068  1634  082F               	movf	??___flmul+1,w
  9069  1635  00BB               	movwf	___flmul@prod+1
  9070  1636  082E               	movf	??___flmul,w
  9071  1637  00BA               	movwf	___flmul@prod
  9072  1638  0827               	movf	___flmul@b+1,w
  9073  1639  00AE               	movwf	??___flmul
  9074  163A  082E               	movf	??___flmul,w
  9075  163B  00F0               	movwf	__Umul8_16@multiplicand
  9076  163C  082B               	movf	___flmul@a+1,w
  9077  163D  319B  232D  3195   	fcall	__Umul8_16
  9078  1640  0871               	movf	?__Umul8_16+1,w
  9079  1641  0020               	movlb	0	; select bank0
  9080  1642  00BF               	movwf	___flmul@temp+1
  9081  1643  0870               	movf	?__Umul8_16,w
  9082  1644  00BE               	movwf	___flmul@temp
  9083  1645                     l3713:	
  9084  1645  083E               	movf	___flmul@temp,w
  9085  1646  00AE               	movwf	??___flmul
  9086  1647  01AF               	clrf	??___flmul+1
  9087  1648  01B0               	clrf	??___flmul+2
  9088  1649  01B1               	clrf	??___flmul+3
  9089  164A  082E               	movf	??___flmul,w
  9090  164B  07B4               	addwf	___flmul@grs,f
  9091  164C  082F               	movf	??___flmul+1,w
  9092  164D  3DB5               	addwfc	___flmul@grs+1,f
  9093  164E  0830               	movf	??___flmul+2,w
  9094  164F  3DB6               	addwfc	___flmul@grs+2,f
  9095  1650  0831               	movf	??___flmul+3,w
  9096  1651  3DB7               	addwfc	___flmul@grs+3,f
  9097  1652                     l3715:	
  9098  1652  083F               	movf	___flmul@temp+1,w
  9099  1653  00AE               	movwf	??___flmul
  9100  1654  01AF               	clrf	??___flmul+1
  9101  1655  01B0               	clrf	??___flmul+2
  9102  1656  01B1               	clrf	??___flmul+3
  9103  1657  082E               	movf	??___flmul,w
  9104  1658  07BA               	addwf	___flmul@prod,f
  9105  1659  082F               	movf	??___flmul+1,w
  9106  165A  3DBB               	addwfc	___flmul@prod+1,f
  9107  165B  0830               	movf	??___flmul+2,w
  9108  165C  3DBC               	addwfc	___flmul@prod+2,f
  9109  165D  0831               	movf	??___flmul+3,w
  9110  165E  3DBD               	addwfc	___flmul@prod+3,f
  9111  165F  0828               	movf	___flmul@b+2,w
  9112  1660  00AE               	movwf	??___flmul
  9113  1661  082E               	movf	??___flmul,w
  9114  1662  00F0               	movwf	__Umul8_16@multiplicand
  9115  1663  082A               	movf	___flmul@a,w
  9116  1664  319B  232D  3195   	fcall	__Umul8_16
  9117  1667  0871               	movf	?__Umul8_16+1,w
  9118  1668  0020               	movlb	0	; select bank0
  9119  1669  00BF               	movwf	___flmul@temp+1
  9120  166A  0870               	movf	?__Umul8_16,w
  9121  166B  00BE               	movwf	___flmul@temp
  9122  166C                     l3717:	
  9123  166C  083E               	movf	___flmul@temp,w
  9124  166D  00AE               	movwf	??___flmul
  9125  166E  01AF               	clrf	??___flmul+1
  9126  166F  01B0               	clrf	??___flmul+2
  9127  1670  01B1               	clrf	??___flmul+3
  9128  1671  082E               	movf	??___flmul,w
  9129  1672  07B4               	addwf	___flmul@grs,f
  9130  1673  082F               	movf	??___flmul+1,w
  9131  1674  3DB5               	addwfc	___flmul@grs+1,f
  9132  1675  0830               	movf	??___flmul+2,w
  9133  1676  3DB6               	addwfc	___flmul@grs+2,f
  9134  1677  0831               	movf	??___flmul+3,w
  9135  1678  3DB7               	addwfc	___flmul@grs+3,f
  9136  1679                     l3719:	
  9137  1679  083F               	movf	___flmul@temp+1,w
  9138  167A  00AE               	movwf	??___flmul
  9139  167B  01AF               	clrf	??___flmul+1
  9140  167C  01B0               	clrf	??___flmul+2
  9141  167D  01B1               	clrf	??___flmul+3
  9142  167E  082E               	movf	??___flmul,w
  9143  167F  07BA               	addwf	___flmul@prod,f
  9144  1680  082F               	movf	??___flmul+1,w
  9145  1681  3DBB               	addwfc	___flmul@prod+1,f
  9146  1682  0830               	movf	??___flmul+2,w
  9147  1683  3DBC               	addwfc	___flmul@prod+2,f
  9148  1684  0831               	movf	??___flmul+3,w
  9149  1685  3DBD               	addwfc	___flmul@prod+3,f
  9150  1686                     l3721:	
  9151  1686  3008               	movlw	8
  9152  1687                     u4755:	
  9153  1687  35B4               	lslf	___flmul@grs,f
  9154  1688  0DB5               	rlf	___flmul@grs+1,f
  9155  1689  0DB6               	rlf	___flmul@grs+2,f
  9156  168A  0DB7               	rlf	___flmul@grs+3,f
  9157  168B  0B89               	decfsz	9,f
  9158  168C  2E87               	goto	u4755
  9159  168D                     l3723:	
  9160  168D  0827               	movf	___flmul@b+1,w
  9161  168E  00AE               	movwf	??___flmul
  9162  168F  082E               	movf	??___flmul,w
  9163  1690  00F0               	movwf	__Umul8_16@multiplicand
  9164  1691  082A               	movf	___flmul@a,w
  9165  1692  319B  232D  3195   	fcall	__Umul8_16
  9166  1695  0871               	movf	?__Umul8_16+1,w
  9167  1696  0020               	movlb	0	; select bank0
  9168  1697  00BF               	movwf	___flmul@temp+1
  9169  1698  0870               	movf	?__Umul8_16,w
  9170  1699  00BE               	movwf	___flmul@temp
  9171  169A                     l3725:	
  9172  169A  083E               	movf	___flmul@temp,w
  9173  169B  07B4               	addwf	___flmul@grs,f
  9174  169C  083F               	movf	___flmul@temp+1,w
  9175  169D  3DB5               	addwfc	___flmul@grs+1,f
  9176  169E  3000               	movlw	0
  9177  169F  3DB6               	addwfc	___flmul@grs+2,f
  9178  16A0  3DB7               	addwfc	___flmul@grs+3,f
  9179  16A1                     l3727:	
  9180  16A1  0826               	movf	___flmul@b,w
  9181  16A2  00AE               	movwf	??___flmul
  9182  16A3  082E               	movf	??___flmul,w
  9183  16A4  00F0               	movwf	__Umul8_16@multiplicand
  9184  16A5  082B               	movf	___flmul@a+1,w
  9185  16A6  319B  232D  3195   	fcall	__Umul8_16
  9186  16A9  0871               	movf	?__Umul8_16+1,w
  9187  16AA  0020               	movlb	0	; select bank0
  9188  16AB  00BF               	movwf	___flmul@temp+1
  9189  16AC  0870               	movf	?__Umul8_16,w
  9190  16AD  00BE               	movwf	___flmul@temp
  9191  16AE                     l3729:	
  9192  16AE  083E               	movf	___flmul@temp,w
  9193  16AF  07B4               	addwf	___flmul@grs,f
  9194  16B0  083F               	movf	___flmul@temp+1,w
  9195  16B1  3DB5               	addwfc	___flmul@grs+1,f
  9196  16B2  3000               	movlw	0
  9197  16B3  3DB6               	addwfc	___flmul@grs+2,f
  9198  16B4  3DB7               	addwfc	___flmul@grs+3,f
  9199  16B5                     l3731:	
  9200  16B5  3008               	movlw	8
  9201  16B6                     u4765:	
  9202  16B6  35B4               	lslf	___flmul@grs,f
  9203  16B7  0DB5               	rlf	___flmul@grs+1,f
  9204  16B8  0DB6               	rlf	___flmul@grs+2,f
  9205  16B9  0DB7               	rlf	___flmul@grs+3,f
  9206  16BA  0B89               	decfsz	9,f
  9207  16BB  2EB6               	goto	u4765
  9208  16BC  0826               	movf	___flmul@b,w
  9209  16BD  00AE               	movwf	??___flmul
  9210  16BE  082E               	movf	??___flmul,w
  9211  16BF  00F0               	movwf	__Umul8_16@multiplicand
  9212  16C0  082A               	movf	___flmul@a,w
  9213  16C1  319B  232D  3195   	fcall	__Umul8_16
  9214  16C4  0871               	movf	?__Umul8_16+1,w
  9215  16C5  0020               	movlb	0	; select bank0
  9216  16C6  00BF               	movwf	___flmul@temp+1
  9217  16C7  0870               	movf	?__Umul8_16,w
  9218  16C8  00BE               	movwf	___flmul@temp
  9219  16C9                     l3733:	
  9220  16C9  083E               	movf	___flmul@temp,w
  9221  16CA  07B4               	addwf	___flmul@grs,f
  9222  16CB  083F               	movf	___flmul@temp+1,w
  9223  16CC  3DB5               	addwfc	___flmul@grs+1,f
  9224  16CD  3000               	movlw	0
  9225  16CE  3DB6               	addwfc	___flmul@grs+2,f
  9226  16CF  3DB7               	addwfc	___flmul@grs+3,f
  9227  16D0                     l3735:	
  9228  16D0  0827               	movf	___flmul@b+1,w
  9229  16D1  00AE               	movwf	??___flmul
  9230  16D2  082E               	movf	??___flmul,w
  9231  16D3  00F0               	movwf	__Umul8_16@multiplicand
  9232  16D4  082C               	movf	___flmul@a+2,w
  9233  16D5  319B  232D  3195   	fcall	__Umul8_16
  9234  16D8  0871               	movf	?__Umul8_16+1,w
  9235  16D9  0020               	movlb	0	; select bank0
  9236  16DA  00BF               	movwf	___flmul@temp+1
  9237  16DB  0870               	movf	?__Umul8_16,w
  9238  16DC  00BE               	movwf	___flmul@temp
  9239  16DD  083E               	movf	___flmul@temp,w
  9240  16DE  07BA               	addwf	___flmul@prod,f
  9241  16DF  083F               	movf	___flmul@temp+1,w
  9242  16E0  3DBB               	addwfc	___flmul@prod+1,f
  9243  16E1  3000               	movlw	0
  9244  16E2  3DBC               	addwfc	___flmul@prod+2,f
  9245  16E3  3DBD               	addwfc	___flmul@prod+3,f
  9246  16E4                     l3737:	
  9247  16E4  0828               	movf	___flmul@b+2,w
  9248  16E5  00AE               	movwf	??___flmul
  9249  16E6  082E               	movf	??___flmul,w
  9250  16E7  00F0               	movwf	__Umul8_16@multiplicand
  9251  16E8  082B               	movf	___flmul@a+1,w
  9252  16E9  319B  232D  3195   	fcall	__Umul8_16
  9253  16EC  0871               	movf	?__Umul8_16+1,w
  9254  16ED  0020               	movlb	0	; select bank0
  9255  16EE  00BF               	movwf	___flmul@temp+1
  9256  16EF  0870               	movf	?__Umul8_16,w
  9257  16F0  00BE               	movwf	___flmul@temp
  9258  16F1                     l3739:	
  9259  16F1  083E               	movf	___flmul@temp,w
  9260  16F2  07BA               	addwf	___flmul@prod,f
  9261  16F3  083F               	movf	___flmul@temp+1,w
  9262  16F4  3DBB               	addwfc	___flmul@prod+1,f
  9263  16F5  3000               	movlw	0
  9264  16F6  3DBC               	addwfc	___flmul@prod+2,f
  9265  16F7  3DBD               	addwfc	___flmul@prod+3,f
  9266  16F8  0828               	movf	___flmul@b+2,w
  9267  16F9  00AE               	movwf	??___flmul
  9268  16FA  082E               	movf	??___flmul,w
  9269  16FB  00F0               	movwf	__Umul8_16@multiplicand
  9270  16FC  082C               	movf	___flmul@a+2,w
  9271  16FD  319B  232D  3195   	fcall	__Umul8_16
  9272  1700  0871               	movf	?__Umul8_16+1,w
  9273  1701  0020               	movlb	0	; select bank0
  9274  1702  00BF               	movwf	___flmul@temp+1
  9275  1703  0870               	movf	?__Umul8_16,w
  9276  1704  00BE               	movwf	___flmul@temp
  9277  1705                     l3741:	
  9278  1705  083E               	movf	___flmul@temp,w
  9279  1706  00AE               	movwf	??___flmul
  9280  1707  083F               	movf	___flmul@temp+1,w
  9281  1708  00AF               	movwf	??___flmul+1
  9282  1709  01B0               	clrf	??___flmul+2
  9283  170A  01B1               	clrf	??___flmul+3
  9284  170B  3008               	movlw	8
  9285  170C                     u4775:	
  9286  170C  35AE               	lslf	??___flmul,f
  9287  170D  0DAF               	rlf	??___flmul+1,f
  9288  170E  0DB0               	rlf	??___flmul+2,f
  9289  170F  0DB1               	rlf	??___flmul+3,f
  9290  1710                     u4770:	
  9291  1710  0B89               	decfsz	9,f
  9292  1711  2F0C               	goto	u4775
  9293  1712  082E               	movf	??___flmul,w
  9294  1713  07BA               	addwf	___flmul@prod,f
  9295  1714  082F               	movf	??___flmul+1,w
  9296  1715  3DBB               	addwfc	___flmul@prod+1,f
  9297  1716  0830               	movf	??___flmul+2,w
  9298  1717  3DBC               	addwfc	___flmul@prod+2,f
  9299  1718  0831               	movf	??___flmul+3,w
  9300  1719  3DBD               	addwfc	___flmul@prod+3,f
  9301  171A                     l3743:	
  9302  171A  0834               	movf	___flmul@grs,w
  9303  171B  00AE               	movwf	??___flmul
  9304  171C  0835               	movf	___flmul@grs+1,w
  9305  171D  00AF               	movwf	??___flmul+1
  9306  171E  0836               	movf	___flmul@grs+2,w
  9307  171F  00B0               	movwf	??___flmul+2
  9308  1720  0837               	movf	___flmul@grs+3,w
  9309  1721  00B1               	movwf	??___flmul+3
  9310  1722  3018               	movlw	24
  9311  1723                     u4785:	
  9312  1723  36B1               	lsrf	??___flmul+3,f
  9313  1724  0CB0               	rrf	??___flmul+2,f
  9314  1725  0CAF               	rrf	??___flmul+1,f
  9315  1726  0CAE               	rrf	??___flmul,f
  9316  1727                     u4780:	
  9317  1727  0B89               	decfsz	9,f
  9318  1728  2F23               	goto	u4785
  9319  1729  082E               	movf	??___flmul,w
  9320  172A  07BA               	addwf	___flmul@prod,f
  9321  172B  082F               	movf	??___flmul+1,w
  9322  172C  3DBB               	addwfc	___flmul@prod+1,f
  9323  172D  0830               	movf	??___flmul+2,w
  9324  172E  3DBC               	addwfc	___flmul@prod+2,f
  9325  172F  0831               	movf	??___flmul+3,w
  9326  1730  3DBD               	addwfc	___flmul@prod+3,f
  9327  1731                     l3745:	
  9328  1731  3008               	movlw	8
  9329  1732                     u4795:	
  9330  1732  35B4               	lslf	___flmul@grs,f
  9331  1733  0DB5               	rlf	___flmul@grs+1,f
  9332  1734  0DB6               	rlf	___flmul@grs+2,f
  9333  1735  0DB7               	rlf	___flmul@grs+3,f
  9334  1736  0B89               	decfsz	9,f
  9335  1737  2F32               	goto	u4795
  9336  1738                     l3747:	
  9337  1738  0839               	movf	___flmul@bexp,w
  9338  1739  0738               	addwf	___flmul@aexp,w
  9339  173A  00AE               	movwf	??___flmul
  9340  173B  01AF               	clrf	??___flmul+1
  9341  173C  0DAF               	rlf	??___flmul+1,f
  9342  173D  082E               	movf	??___flmul,w
  9343  173E  3E82               	addlw	130
  9344  173F  00BE               	movwf	___flmul@temp
  9345  1740  30FF               	movlw	255
  9346  1741  3D2F               	addwfc	??___flmul+1,w
  9347  1742  00BF               	movwf	___flmul@temp+1
  9348  1743  2F5B               	goto	l3759
  9349  1744                     l3749:	
  9350  1744  3001               	movlw	1
  9351  1745                     u4805:	
  9352  1745  35BA               	lslf	___flmul@prod,f
  9353  1746  0DBB               	rlf	___flmul@prod+1,f
  9354  1747  0DBC               	rlf	___flmul@prod+2,f
  9355  1748  0DBD               	rlf	___flmul@prod+3,f
  9356  1749  0B89               	decfsz	9,f
  9357  174A  2F45               	goto	u4805
  9358  174B                     l3751:	
  9359  174B  1FB7               	btfss	___flmul@grs+3,7
  9360  174C  2F4E               	goto	u4811
  9361  174D  2F4F               	goto	u4810
  9362  174E                     u4811:	
  9363  174E  2F50               	goto	l3755
  9364  174F                     u4810:	
  9365  174F                     l3753:	
  9366  174F  143A               	bsf	___flmul@prod,0
  9367  1750                     l3755:	
  9368  1750  3001               	movlw	1
  9369  1751                     u4825:	
  9370  1751  35B4               	lslf	___flmul@grs,f
  9371  1752  0DB5               	rlf	___flmul@grs+1,f
  9372  1753  0DB6               	rlf	___flmul@grs+2,f
  9373  1754  0DB7               	rlf	___flmul@grs+3,f
  9374  1755  0B89               	decfsz	9,f
  9375  1756  2F51               	goto	u4825
  9376  1757                     l3757:	
  9377  1757  30FF               	movlw	255
  9378  1758  07BE               	addwf	___flmul@temp,f
  9379  1759  30FF               	movlw	255
  9380  175A  3DBF               	addwfc	___flmul@temp+1,f
  9381  175B                     l3759:	
  9382  175B  1FBC               	btfss	___flmul@prod+2,7
  9383  175C  2F5E               	goto	u4831
  9384  175D  2F5F               	goto	u4830
  9385  175E                     u4831:	
  9386  175E  2F44               	goto	l3749
  9387  175F                     u4830:	
  9388  175F                     l3761:	
  9389  175F  01B8               	clrf	___flmul@aexp
  9390  1760                     l3763:	
  9391  1760  1FB7               	btfss	___flmul@grs+3,7
  9392  1761  2F63               	goto	u4841
  9393  1762  2F64               	goto	u4840
  9394  1763                     u4841:	
  9395  1763  2F80               	goto	l3771
  9396  1764                     u4840:	
  9397  1764                     l3765:	
  9398  1764  30FF               	movlw	255
  9399  1765  0534               	andwf	___flmul@grs,w
  9400  1766  00AE               	movwf	??___flmul
  9401  1767  30FF               	movlw	255
  9402  1768  0535               	andwf	___flmul@grs+1,w
  9403  1769  00AF               	movwf	??___flmul+1
  9404  176A  30FF               	movlw	255
  9405  176B  0536               	andwf	___flmul@grs+2,w
  9406  176C  00B0               	movwf	??___flmul+2
  9407  176D  307F               	movlw	127
  9408  176E  0537               	andwf	___flmul@grs+3,w
  9409  176F  00B1               	movwf	??___flmul+3
  9410  1770  0831               	movf	??___flmul+3,w
  9411  1771  0430               	iorwf	??___flmul+2,w
  9412  1772  042F               	iorwf	??___flmul+1,w
  9413  1773  042E               	iorwf	??___flmul,w
  9414  1774  1903               	skipnz
  9415  1775  2F77               	goto	u4851
  9416  1776  2F78               	goto	u4850
  9417  1777                     u4851:	
  9418  1777  2F7B               	goto	l1011
  9419  1778                     u4850:	
  9420  1778                     l3767:	
  9421  1778  01B8               	clrf	___flmul@aexp
  9422  1779  0AB8               	incf	___flmul@aexp,f
  9423  177A  2F80               	goto	l3771
  9424  177B                     l1011:	
  9425  177B  1C3A               	btfss	___flmul@prod,0
  9426  177C  2F7E               	goto	u4861
  9427  177D  2F7F               	goto	u4860
  9428  177E                     u4861:	
  9429  177E  2F80               	goto	l3771
  9430  177F                     u4860:	
  9431  177F  2F78               	goto	l3767
  9432  1780                     l3771:	
  9433  1780  0838               	movf	___flmul@aexp,w
  9434  1781  1903               	btfsc	3,2
  9435  1782  2F84               	goto	u4871
  9436  1783  2F85               	goto	u4870
  9437  1784                     u4871:	
  9438  1784  2FAD               	goto	l3781
  9439  1785                     u4870:	
  9440  1785                     l3773:	
  9441  1785  3001               	movlw	1
  9442  1786  07BA               	addwf	___flmul@prod,f
  9443  1787  3000               	movlw	0
  9444  1788  3DBB               	addwfc	___flmul@prod+1,f
  9445  1789  3000               	movlw	0
  9446  178A  3DBC               	addwfc	___flmul@prod+2,f
  9447  178B  3000               	movlw	0
  9448  178C  3DBD               	addwfc	___flmul@prod+3,f
  9449  178D                     l3775:	
  9450  178D  1C3D               	btfss	___flmul@prod+3,0
  9451  178E  2F90               	goto	u4881
  9452  178F  2F91               	goto	u4880
  9453  1790                     u4881:	
  9454  1790  2FAD               	goto	l3781
  9455  1791                     u4880:	
  9456  1791                     l3777:	
  9457  1791  083A               	movf	___flmul@prod,w
  9458  1792  00AE               	movwf	??___flmul
  9459  1793  083B               	movf	___flmul@prod+1,w
  9460  1794  00AF               	movwf	??___flmul+1
  9461  1795  083C               	movf	___flmul@prod+2,w
  9462  1796  00B0               	movwf	??___flmul+2
  9463  1797  083D               	movf	___flmul@prod+3,w
  9464  1798  00B1               	movwf	??___flmul+3
  9465  1799  3001               	movlw	1
  9466  179A  00B2               	movwf	??___flmul+4
  9467  179B                     u4895:	
  9468  179B  37B1               	asrf	??___flmul+3,f
  9469  179C  0CB0               	rrf	??___flmul+2,f
  9470  179D  0CAF               	rrf	??___flmul+1,f
  9471  179E  0CAE               	rrf	??___flmul,f
  9472  179F                     u4890:	
  9473  179F  0BB2               	decfsz	??___flmul+4,f
  9474  17A0  2F9B               	goto	u4895
  9475  17A1  0831               	movf	??___flmul+3,w
  9476  17A2  00BD               	movwf	___flmul@prod+3
  9477  17A3  0830               	movf	??___flmul+2,w
  9478  17A4  00BC               	movwf	___flmul@prod+2
  9479  17A5  082F               	movf	??___flmul+1,w
  9480  17A6  00BB               	movwf	___flmul@prod+1
  9481  17A7  082E               	movf	??___flmul,w
  9482  17A8  00BA               	movwf	___flmul@prod
  9483  17A9                     l3779:	
  9484  17A9  3001               	movlw	1
  9485  17AA  07BE               	addwf	___flmul@temp,f
  9486  17AB  3000               	movlw	0
  9487  17AC  3DBF               	addwfc	___flmul@temp+1,f
  9488  17AD                     l3781:	
  9489  17AD  083F               	movf	___flmul@temp+1,w
  9490  17AE  3A80               	xorlw	128
  9491  17AF  00AE               	movwf	??___flmul
  9492  17B0  3080               	movlw	128
  9493  17B1  022E               	subwf	??___flmul,w
  9494  17B2  1D03               	skipz
  9495  17B3  2FB6               	goto	u4905
  9496  17B4  30FF               	movlw	255
  9497  17B5  023E               	subwf	___flmul@temp,w
  9498  17B6                     u4905:	
  9499  17B6  1C03               	skipc
  9500  17B7  2FB9               	goto	u4901
  9501  17B8  2FBA               	goto	u4900
  9502  17B9                     u4901:	
  9503  17B9  2FC4               	goto	l3785
  9504  17BA                     u4900:	
  9505  17BA                     l3783:	
  9506  17BA  307F               	movlw	127
  9507  17BB  0020               	movlb	0	; select bank0
  9508  17BC  00BD               	movwf	___flmul@prod+3
  9509  17BD  3080               	movlw	128
  9510  17BE  00BC               	movwf	___flmul@prod+2
  9511  17BF  3000               	movlw	0
  9512  17C0  00BB               	movwf	___flmul@prod+1
  9513  17C1  3000               	movlw	0
  9514  17C2  00BA               	movwf	___flmul@prod
  9515  17C3  2FF3               	goto	l1017
  9516  17C4                     l3785:	
  9517  17C4  0020               	movlb	0	; select bank0
  9518  17C5  083F               	movf	___flmul@temp+1,w
  9519  17C6  3A80               	xorlw	128
  9520  17C7  00AE               	movwf	??___flmul
  9521  17C8  3080               	movlw	128
  9522  17C9  022E               	subwf	??___flmul,w
  9523  17CA  1D03               	skipz
  9524  17CB  2FCE               	goto	u4915
  9525  17CC  3001               	movlw	1
  9526  17CD  023E               	subwf	___flmul@temp,w
  9527  17CE                     u4915:	
  9528  17CE  1803               	skipnc
  9529  17CF  2FD1               	goto	u4911
  9530  17D0  2FD2               	goto	u4910
  9531  17D1                     u4911:	
  9532  17D1  2FDD               	goto	l3791
  9533  17D2                     u4910:	
  9534  17D2                     l3787:	
  9535  17D2  3000               	movlw	0
  9536  17D3  0020               	movlb	0	; select bank0
  9537  17D4  00BD               	movwf	___flmul@prod+3
  9538  17D5  3000               	movlw	0
  9539  17D6  00BC               	movwf	___flmul@prod+2
  9540  17D7  3000               	movlw	0
  9541  17D8  00BB               	movwf	___flmul@prod+1
  9542  17D9  3000               	movlw	0
  9543  17DA  00BA               	movwf	___flmul@prod
  9544  17DB                     l3789:	
  9545  17DB  01B3               	clrf	___flmul@sign
  9546  17DC  2FF3               	goto	l1017
  9547  17DD                     l3791:	
  9548  17DD  0020               	movlb	0	; select bank0
  9549  17DE  083E               	movf	___flmul@temp,w
  9550  17DF  00AE               	movwf	??___flmul
  9551  17E0  082E               	movf	??___flmul,w
  9552  17E1  00B9               	movwf	___flmul@bexp
  9553  17E2  30FF               	movlw	255
  9554  17E3  05BA               	andwf	___flmul@prod,f
  9555  17E4  30FF               	movlw	255
  9556  17E5  05BB               	andwf	___flmul@prod+1,f
  9557  17E6  307F               	movlw	127
  9558  17E7  05BC               	andwf	___flmul@prod+2,f
  9559  17E8  3000               	movlw	0
  9560  17E9  05BD               	andwf	___flmul@prod+3,f
  9561  17EA                     l3793:	
  9562  17EA  1C39               	btfss	___flmul@bexp,0
  9563  17EB  2FED               	goto	u4921
  9564  17EC  2FEE               	goto	u4920
  9565  17ED                     u4921:	
  9566  17ED  2FEF               	goto	l3797
  9567  17EE                     u4920:	
  9568  17EE                     l3795:	
  9569  17EE  17BC               	bsf	___flmul@prod+2,7
  9570  17EF                     l3797:	
  9571  17EF  3639               	lsrf	___flmul@bexp,w
  9572  17F0  00AE               	movwf	??___flmul
  9573  17F1  082E               	movf	??___flmul,w
  9574  17F2  00BD               	movwf	___flmul@prod+3
  9575  17F3                     l1017:	
  9576  17F3  0833               	movf	___flmul@sign,w
  9577  17F4  00AE               	movwf	??___flmul
  9578  17F5  082E               	movf	??___flmul,w
  9579  17F6  04BD               	iorwf	___flmul@prod+3,f
  9580  17F7                     l3799:	
  9581  17F7  083D               	movf	___flmul@prod+3,w
  9582  17F8  00A9               	movwf	?___flmul+3
  9583  17F9  083C               	movf	___flmul@prod+2,w
  9584  17FA  00A8               	movwf	?___flmul+2
  9585  17FB  083B               	movf	___flmul@prod+1,w
  9586  17FC  00A7               	movwf	?___flmul+1
  9587  17FD  083A               	movf	___flmul@prod,w
  9588  17FE  00A6               	movwf	?___flmul
  9589  17FF                     l1005:	
  9590  17FF  0008               	return
  9591  1800                     __end_of___flmul:	
  9592                           
  9593                           	psect	text21
  9594  1B2D                     __ptext21:	
  9595 ;; *************** function __Umul8_16 *****************
  9596 ;; Defined at:
  9597 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8_16.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  multiplier      1    wreg     unsigned char 
  9600 ;;  multiplicand    1    0[COMMON] unsigned char 
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  multiplier      1    8[COMMON] unsigned char 
  9603 ;;  word_mpld       2    6[COMMON] unsigned int 
  9604 ;;  product         2    4[COMMON] unsigned int 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  2    0[COMMON] unsigned int 
  9607 ;; Registers used:
  9608 ;;		wreg, status,2, status,0
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;Total ram usage:        9 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; This function calls:
  9621 ;;		Nothing
  9622 ;; This function is called by:
  9623 ;;		___flmul
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           
  9628                           ;psect for function __Umul8_16
  9629  1B2D                     __Umul8_16:	
  9630                           
  9631                           ;incstack = 0
  9632                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9633                           ;__Umul8_16@multiplier stored from wreg
  9634  1B2D  00F8               	movwf	__Umul8_16@multiplier
  9635  1B2E                     l3225:	
  9636  1B2E  01F4               	clrf	__Umul8_16@product
  9637  1B2F  01F5               	clrf	__Umul8_16@product+1
  9638  1B30                     l3227:	
  9639  1B30  0870               	movf	__Umul8_16@multiplicand,w
  9640  1B31  00F2               	movwf	??__Umul8_16
  9641  1B32  01F3               	clrf	??__Umul8_16+1
  9642  1B33  0872               	movf	??__Umul8_16,w
  9643  1B34  00F6               	movwf	__Umul8_16@word_mpld
  9644  1B35  0873               	movf	??__Umul8_16+1,w
  9645  1B36  00F7               	movwf	__Umul8_16@word_mpld+1
  9646  1B37                     l3229:	
  9647  1B37  1C78               	btfss	__Umul8_16@multiplier,0
  9648  1B38  2B3A               	goto	u3641
  9649  1B39  2B3B               	goto	u3640
  9650  1B3A                     u3641:	
  9651  1B3A  2B3F               	goto	l1201
  9652  1B3B                     u3640:	
  9653  1B3B                     l3231:	
  9654  1B3B  0876               	movf	__Umul8_16@word_mpld,w
  9655  1B3C  07F4               	addwf	__Umul8_16@product,f
  9656  1B3D  0877               	movf	__Umul8_16@word_mpld+1,w
  9657  1B3E  3DF5               	addwfc	__Umul8_16@product+1,f
  9658  1B3F                     l1201:	
  9659  1B3F  3001               	movlw	1
  9660  1B40                     u3655:	
  9661  1B40  35F6               	lslf	__Umul8_16@word_mpld,f
  9662  1B41  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9663  1B42  0B89               	decfsz	9,f
  9664  1B43  2B40               	goto	u3655
  9665  1B44  1003               	clrc
  9666  1B45  0CF8               	rrf	__Umul8_16@multiplier,f
  9667  1B46                     l3233:	
  9668  1B46  0878               	movf	__Umul8_16@multiplier,w
  9669  1B47  1D03               	btfss	3,2
  9670  1B48  2B4A               	goto	u3661
  9671  1B49  2B4B               	goto	u3660
  9672  1B4A                     u3661:	
  9673  1B4A  2B37               	goto	l3229
  9674  1B4B                     u3660:	
  9675  1B4B                     l3235:	
  9676  1B4B  0875               	movf	__Umul8_16@product+1,w
  9677  1B4C  00F1               	movwf	?__Umul8_16+1
  9678  1B4D  0874               	movf	__Umul8_16@product,w
  9679  1B4E  00F0               	movwf	?__Umul8_16
  9680  1B4F                     l1203:	
  9681  1B4F  0008               	return
  9682  1B50                     __end_of__Umul8_16:	
  9683                           
  9684                           	psect	text22
  9685  118A                     __ptext22:	
  9686 ;; *************** function ___flge *****************
  9687 ;; Defined at:
  9688 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;  ff1             4   32[BANK0 ] unsigned int 
  9691 ;;  ff2             4   36[BANK0 ] unsigned int 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;		None
  9694 ;; Return value:  Size  Location     Type
  9695 ;;		None               void
  9696 ;; Registers used:
  9697 ;;		wreg, status,2, status,0
  9698 ;; Tracked objects:
  9699 ;;		On entry : 0/0
  9700 ;;		On exit  : 0/0
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9703 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9705 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9706 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9707 ;;Total ram usage:       12 bytes
  9708 ;; Hardware stack levels used:    1
  9709 ;; This function calls:
  9710 ;;		Nothing
  9711 ;; This function is called by:
  9712 ;;		_main
  9713 ;;		_efgtoa
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           
  9718                           ;psect for function ___flge
  9719  118A                     ___flge:	
  9720  118A                     l3453:	
  9721                           ;incstack = 0
  9722                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9723                           
  9724  118A  3000               	movlw	0
  9725  118B  0020               	movlb	0	; select bank0
  9726  118C  0540               	andwf	___flge@ff1,w
  9727  118D  00C8               	movwf	??___flge
  9728  118E  3000               	movlw	0
  9729  118F  0541               	andwf	___flge@ff1+1,w
  9730  1190  00C9               	movwf	??___flge+1
  9731  1191  3080               	movlw	128
  9732  1192  0542               	andwf	___flge@ff1+2,w
  9733  1193  00CA               	movwf	??___flge+2
  9734  1194  307F               	movlw	127
  9735  1195  0543               	andwf	___flge@ff1+3,w
  9736  1196  00CB               	movwf	??___flge+3
  9737  1197  084B               	movf	??___flge+3,w
  9738  1198  044A               	iorwf	??___flge+2,w
  9739  1199  0449               	iorwf	??___flge+1,w
  9740  119A  0448               	iorwf	??___flge,w
  9741  119B  1D03               	skipz
  9742  119C  299E               	goto	u4221
  9743  119D  299F               	goto	u4220
  9744  119E                     u4221:	
  9745  119E  29A7               	goto	l786
  9746  119F                     u4220:	
  9747  119F                     l3455:	
  9748  119F  3000               	movlw	0
  9749  11A0  00C3               	movwf	___flge@ff1+3
  9750  11A1  3000               	movlw	0
  9751  11A2  00C2               	movwf	___flge@ff1+2
  9752  11A3  3000               	movlw	0
  9753  11A4  00C1               	movwf	___flge@ff1+1
  9754  11A5  3000               	movlw	0
  9755  11A6  00C0               	movwf	___flge@ff1
  9756  11A7                     l786:	
  9757  11A7  3000               	movlw	0
  9758  11A8  0544               	andwf	___flge@ff2,w
  9759  11A9  00C8               	movwf	??___flge
  9760  11AA  3000               	movlw	0
  9761  11AB  0545               	andwf	___flge@ff2+1,w
  9762  11AC  00C9               	movwf	??___flge+1
  9763  11AD  3080               	movlw	128
  9764  11AE  0546               	andwf	___flge@ff2+2,w
  9765  11AF  00CA               	movwf	??___flge+2
  9766  11B0  307F               	movlw	127
  9767  11B1  0547               	andwf	___flge@ff2+3,w
  9768  11B2  00CB               	movwf	??___flge+3
  9769  11B3  084B               	movf	??___flge+3,w
  9770  11B4  044A               	iorwf	??___flge+2,w
  9771  11B5  0449               	iorwf	??___flge+1,w
  9772  11B6  0448               	iorwf	??___flge,w
  9773  11B7  1D03               	skipz
  9774  11B8  29BA               	goto	u4231
  9775  11B9  29BB               	goto	u4230
  9776  11BA                     u4231:	
  9777  11BA  29C3               	goto	l3459
  9778  11BB                     u4230:	
  9779  11BB                     l3457:	
  9780  11BB  3000               	movlw	0
  9781  11BC  00C7               	movwf	___flge@ff2+3
  9782  11BD  3000               	movlw	0
  9783  11BE  00C6               	movwf	___flge@ff2+2
  9784  11BF  3000               	movlw	0
  9785  11C0  00C5               	movwf	___flge@ff2+1
  9786  11C1  3000               	movlw	0
  9787  11C2  00C4               	movwf	___flge@ff2
  9788  11C3                     l3459:	
  9789  11C3  1FC3               	btfss	___flge@ff1+3,7
  9790  11C4  29C6               	goto	u4241
  9791  11C5  29C7               	goto	u4240
  9792  11C6                     u4241:	
  9793  11C6  29DF               	goto	l3463
  9794  11C7                     u4240:	
  9795  11C7                     l3461:	
  9796  11C7  3000               	movlw	0
  9797  11C8  00C8               	movwf	??___flge
  9798  11C9  3000               	movlw	0
  9799  11CA  00C9               	movwf	??___flge+1
  9800  11CB  3000               	movlw	0
  9801  11CC  00CA               	movwf	??___flge+2
  9802  11CD  3080               	movlw	128
  9803  11CE  00CB               	movwf	??___flge+3
  9804  11CF  0840               	movf	___flge@ff1,w
  9805  11D0  02C8               	subwf	??___flge,f
  9806  11D1  0841               	movf	___flge@ff1+1,w
  9807  11D2  3BC9               	subwfb	??___flge+1,f
  9808  11D3  0842               	movf	___flge@ff1+2,w
  9809  11D4  3BCA               	subwfb	??___flge+2,f
  9810  11D5  0843               	movf	___flge@ff1+3,w
  9811  11D6  3BCB               	subwfb	??___flge+3,f
  9812  11D7  084B               	movf	??___flge+3,w
  9813  11D8  00C3               	movwf	___flge@ff1+3
  9814  11D9  084A               	movf	??___flge+2,w
  9815  11DA  00C2               	movwf	___flge@ff1+2
  9816  11DB  0849               	movf	??___flge+1,w
  9817  11DC  00C1               	movwf	___flge@ff1+1
  9818  11DD  0848               	movf	??___flge,w
  9819  11DE  00C0               	movwf	___flge@ff1
  9820  11DF                     l3463:	
  9821  11DF  1FC7               	btfss	___flge@ff2+3,7
  9822  11E0  29E2               	goto	u4251
  9823  11E1  29E3               	goto	u4250
  9824  11E2                     u4251:	
  9825  11E2  29FB               	goto	l789
  9826  11E3                     u4250:	
  9827  11E3                     l3465:	
  9828  11E3  3000               	movlw	0
  9829  11E4  00C8               	movwf	??___flge
  9830  11E5  3000               	movlw	0
  9831  11E6  00C9               	movwf	??___flge+1
  9832  11E7  3000               	movlw	0
  9833  11E8  00CA               	movwf	??___flge+2
  9834  11E9  3080               	movlw	128
  9835  11EA  00CB               	movwf	??___flge+3
  9836  11EB  0844               	movf	___flge@ff2,w
  9837  11EC  02C8               	subwf	??___flge,f
  9838  11ED  0845               	movf	___flge@ff2+1,w
  9839  11EE  3BC9               	subwfb	??___flge+1,f
  9840  11EF  0846               	movf	___flge@ff2+2,w
  9841  11F0  3BCA               	subwfb	??___flge+2,f
  9842  11F1  0847               	movf	___flge@ff2+3,w
  9843  11F2  3BCB               	subwfb	??___flge+3,f
  9844  11F3  084B               	movf	??___flge+3,w
  9845  11F4  00C7               	movwf	___flge@ff2+3
  9846  11F5  084A               	movf	??___flge+2,w
  9847  11F6  00C6               	movwf	___flge@ff2+2
  9848  11F7  0849               	movf	??___flge+1,w
  9849  11F8  00C5               	movwf	___flge@ff2+1
  9850  11F9  0848               	movf	??___flge,w
  9851  11FA  00C4               	movwf	___flge@ff2
  9852  11FB                     l789:	
  9853  11FB  3080               	movlw	128
  9854  11FC  06C3               	xorwf	___flge@ff1+3,f
  9855  11FD  3080               	movlw	128
  9856  11FE  06C7               	xorwf	___flge@ff2+3,f
  9857  11FF  0847               	movf	___flge@ff2+3,w
  9858  1200  0243               	subwf	___flge@ff1+3,w
  9859  1201  1D03               	skipz
  9860  1202  2A0D               	goto	u4265
  9861  1203  0846               	movf	___flge@ff2+2,w
  9862  1204  0242               	subwf	___flge@ff1+2,w
  9863  1205  1D03               	skipz
  9864  1206  2A0D               	goto	u4265
  9865  1207  0845               	movf	___flge@ff2+1,w
  9866  1208  0241               	subwf	___flge@ff1+1,w
  9867  1209  1D03               	skipz
  9868  120A  2A0D               	goto	u4265
  9869  120B  0844               	movf	___flge@ff2,w
  9870  120C  0240               	subwf	___flge@ff1,w
  9871  120D                     u4265:	
  9872  120D  1803               	skipnc
  9873  120E  2A10               	goto	u4261
  9874  120F  2A11               	goto	u4260
  9875  1210                     u4261:	
  9876  1210  2A13               	goto	l3469
  9877  1211                     u4260:	
  9878  1211                     l3467:	
  9879  1211  1003               	clrc
  9880  1212  2A14               	goto	l794
  9881  1213                     l3469:	
  9882  1213  1403               	setc
  9883  1214                     l794:	
  9884  1214  0008               	return
  9885  1215                     __end_of___flge:	
  9886                           
  9887                           	psect	text23
  9888  1DFB                     __ptext23:	
  9889 ;; *************** function ___fleq *****************
  9890 ;; Defined at:
  9891 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;  ff1             4    0[COMMON] unsigned int 
  9894 ;;  ff2             4    4[COMMON] unsigned int 
  9895 ;; Auto vars:     Size  Location     Type
  9896 ;;		None
  9897 ;; Return value:  Size  Location     Type
  9898 ;;		None               void
  9899 ;; Registers used:
  9900 ;;		wreg, status,2, status,0
  9901 ;; Tracked objects:
  9902 ;;		On entry : 0/0
  9903 ;;		On exit  : 0/0
  9904 ;;		Unchanged: 0/0
  9905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9906 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9909 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9910 ;;Total ram usage:       12 bytes
  9911 ;; Hardware stack levels used:    1
  9912 ;; This function calls:
  9913 ;;		Nothing
  9914 ;; This function is called by:
  9915 ;;		_efgtoa
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           
  9920                           ;psect for function ___fleq
  9921  1DFB                     ___fleq:	
  9922  1DFB                     l3441:	
  9923                           ;incstack = 0
  9924                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9925                           
  9926  1DFB  3000               	movlw	0
  9927  1DFC  0570               	andwf	___fleq@ff1,w
  9928  1DFD  00F8               	movwf	??___fleq
  9929  1DFE  3000               	movlw	0
  9930  1DFF  0571               	andwf	___fleq@ff1+1,w
  9931  1E00  00F9               	movwf	??___fleq+1
  9932  1E01  3080               	movlw	128
  9933  1E02  0572               	andwf	___fleq@ff1+2,w
  9934  1E03  00FA               	movwf	??___fleq+2
  9935  1E04  307F               	movlw	127
  9936  1E05  0573               	andwf	___fleq@ff1+3,w
  9937  1E06  00FB               	movwf	??___fleq+3
  9938  1E07  087B               	movf	??___fleq+3,w
  9939  1E08  047A               	iorwf	??___fleq+2,w
  9940  1E09  0479               	iorwf	??___fleq+1,w
  9941  1E0A  0478               	iorwf	??___fleq,w
  9942  1E0B  1D03               	skipz
  9943  1E0C  2E0E               	goto	u4191
  9944  1E0D  2E0F               	goto	u4190
  9945  1E0E                     u4191:	
  9946  1E0E  2E17               	goto	l777
  9947  1E0F                     u4190:	
  9948  1E0F                     l3443:	
  9949  1E0F  3000               	movlw	0
  9950  1E10  00F3               	movwf	___fleq@ff1+3
  9951  1E11  3000               	movlw	0
  9952  1E12  00F2               	movwf	___fleq@ff1+2
  9953  1E13  3000               	movlw	0
  9954  1E14  00F1               	movwf	___fleq@ff1+1
  9955  1E15  3000               	movlw	0
  9956  1E16  00F0               	movwf	___fleq@ff1
  9957  1E17                     l777:	
  9958  1E17  3000               	movlw	0
  9959  1E18  0574               	andwf	___fleq@ff2,w
  9960  1E19  00F8               	movwf	??___fleq
  9961  1E1A  3000               	movlw	0
  9962  1E1B  0575               	andwf	___fleq@ff2+1,w
  9963  1E1C  00F9               	movwf	??___fleq+1
  9964  1E1D  3080               	movlw	128
  9965  1E1E  0576               	andwf	___fleq@ff2+2,w
  9966  1E1F  00FA               	movwf	??___fleq+2
  9967  1E20  307F               	movlw	127
  9968  1E21  0577               	andwf	___fleq@ff2+3,w
  9969  1E22  00FB               	movwf	??___fleq+3
  9970  1E23  087B               	movf	??___fleq+3,w
  9971  1E24  047A               	iorwf	??___fleq+2,w
  9972  1E25  0479               	iorwf	??___fleq+1,w
  9973  1E26  0478               	iorwf	??___fleq,w
  9974  1E27  1D03               	skipz
  9975  1E28  2E2A               	goto	u4201
  9976  1E29  2E2B               	goto	u4200
  9977  1E2A                     u4201:	
  9978  1E2A  2E33               	goto	l778
  9979  1E2B                     u4200:	
  9980  1E2B                     l3445:	
  9981  1E2B  3000               	movlw	0
  9982  1E2C  00F7               	movwf	___fleq@ff2+3
  9983  1E2D  3000               	movlw	0
  9984  1E2E  00F6               	movwf	___fleq@ff2+2
  9985  1E2F  3000               	movlw	0
  9986  1E30  00F5               	movwf	___fleq@ff2+1
  9987  1E31  3000               	movlw	0
  9988  1E32  00F4               	movwf	___fleq@ff2
  9989  1E33                     l778:	
  9990  1E33  0877               	movf	___fleq@ff2+3,w
  9991  1E34  0673               	xorwf	___fleq@ff1+3,w
  9992  1E35  1D03               	skipz
  9993  1E36  2E41               	goto	u4215
  9994  1E37  0876               	movf	___fleq@ff2+2,w
  9995  1E38  0672               	xorwf	___fleq@ff1+2,w
  9996  1E39  1D03               	skipz
  9997  1E3A  2E41               	goto	u4215
  9998  1E3B  0875               	movf	___fleq@ff2+1,w
  9999  1E3C  0671               	xorwf	___fleq@ff1+1,w
 10000  1E3D  1D03               	skipz
 10001  1E3E  2E41               	goto	u4215
 10002  1E3F  0874               	movf	___fleq@ff2,w
 10003  1E40  0670               	xorwf	___fleq@ff1,w
 10004  1E41                     u4215:	
 10005  1E41  1903               	skipnz
 10006  1E42  2E44               	goto	u4211
 10007  1E43  2E45               	goto	u4210
 10008  1E44                     u4211:	
 10009  1E44  2E47               	goto	l3449
 10010  1E45                     u4210:	
 10011  1E45                     l3447:	
 10012  1E45  1003               	clrc
 10013  1E46  2E48               	goto	l783
 10014  1E47                     l3449:	
 10015  1E47  1403               	setc
 10016  1E48                     l783:	
 10017  1E48  0008               	return
 10018  1E49                     __end_of___fleq:	
 10019                           
 10020                           	psect	text24
 10021  0861                     __ptext24:	
 10022 ;; *************** function ___fldiv *****************
 10023 ;; Defined at:
 10024 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 10025 ;; Parameters:    Size  Location     Type
 10026 ;;  a               4   32[BANK0 ] unsigned int 
 10027 ;;  b               4   36[BANK0 ] unsigned int 
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;  grs             4   52[BANK0 ] unsigned long 
 10030 ;;  rem             4   45[BANK0 ] unsigned long 
 10031 ;;  new_exp         2   50[BANK0 ] int 
 10032 ;;  aexp            1   57[BANK0 ] unsigned char 
 10033 ;;  bexp            1   56[BANK0 ] unsigned char 
 10034 ;;  sign            1   49[BANK0 ] unsigned char 
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  4   32[BANK0 ] unsigned char 
 10037 ;; Registers used:
 10038 ;;		wreg, status,2, status,0
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10044 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10045 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10046 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10047 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10048 ;;Total ram usage:       26 bytes
 10049 ;; Hardware stack levels used:    1
 10050 ;; This function calls:
 10051 ;;		Nothing
 10052 ;; This function is called by:
 10053 ;;		_main
 10054 ;;		_efgtoa
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           
 10059                           ;psect for function ___fldiv
 10060  0861                     ___fldiv:	
 10061  0861                     l3523:	
 10062                           ;incstack = 0
 10063                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10064                           
 10065  0861  0020               	movlb	0	; select bank0
 10066  0862  0847               	movf	___fldiv@b+3,w
 10067  0863  3980               	andlw	128
 10068  0864  00C8               	movwf	??___fldiv
 10069  0865  0848               	movf	??___fldiv,w
 10070  0866  00D1               	movwf	___fldiv@sign
 10071  0867                     l3525:	
 10072  0867  3547               	lslf	___fldiv@b+3,w
 10073  0868  00C8               	movwf	??___fldiv
 10074  0869  0848               	movf	??___fldiv,w
 10075  086A  00D8               	movwf	___fldiv@bexp
 10076  086B                     l3527:	
 10077  086B  1FC6               	btfss	___fldiv@b+2,7
 10078  086C  286E               	goto	u4381
 10079  086D  286F               	goto	u4380
 10080  086E                     u4381:	
 10081  086E  2870               	goto	l3531
 10082  086F                     u4380:	
 10083  086F                     l3529:	
 10084  086F  1458               	bsf	___fldiv@bexp,0
 10085  0870                     l3531:	
 10086  0870  0858               	movf	___fldiv@bexp,w
 10087  0871  1903               	btfsc	3,2
 10088  0872  2874               	goto	u4391
 10089  0873  2875               	goto	u4390
 10090  0874                     u4391:	
 10091  0874  2885               	goto	l3541
 10092  0875                     u4390:	
 10093  0875                     l3533:	
 10094  0875  0A58               	incf	___fldiv@bexp,w
 10095  0876  1D03               	btfss	3,2
 10096  0877  2879               	goto	u4401
 10097  0878  287A               	goto	u4400
 10098  0879                     u4401:	
 10099  0879  2882               	goto	l3537
 10100  087A                     u4400:	
 10101  087A                     l3535:	
 10102  087A  3000               	movlw	0
 10103  087B  00C7               	movwf	___fldiv@b+3
 10104  087C  3000               	movlw	0
 10105  087D  00C6               	movwf	___fldiv@b+2
 10106  087E  3000               	movlw	0
 10107  087F  00C5               	movwf	___fldiv@b+1
 10108  0880  3000               	movlw	0
 10109  0881  00C4               	movwf	___fldiv@b
 10110  0882                     l3537:	
 10111  0882  17C6               	bsf	___fldiv@b+2,7
 10112  0883                     l3539:	
 10113  0883  01C7               	clrf	___fldiv@b+3
 10114  0884  288D               	goto	l3543
 10115  0885                     l3541:	
 10116  0885  3000               	movlw	0
 10117  0886  00C7               	movwf	___fldiv@b+3
 10118  0887  3000               	movlw	0
 10119  0888  00C6               	movwf	___fldiv@b+2
 10120  0889  3000               	movlw	0
 10121  088A  00C5               	movwf	___fldiv@b+1
 10122  088B  3000               	movlw	0
 10123  088C  00C4               	movwf	___fldiv@b
 10124  088D                     l3543:	
 10125  088D  0843               	movf	___fldiv@a+3,w
 10126  088E  3980               	andlw	128
 10127  088F  00C8               	movwf	??___fldiv
 10128  0890  0848               	movf	??___fldiv,w
 10129  0891  06D1               	xorwf	___fldiv@sign,f
 10130  0892                     l3545:	
 10131  0892  3543               	lslf	___fldiv@a+3,w
 10132  0893  00C8               	movwf	??___fldiv
 10133  0894  0848               	movf	??___fldiv,w
 10134  0895  00D9               	movwf	___fldiv@aexp
 10135  0896                     l3547:	
 10136  0896  1FC2               	btfss	___fldiv@a+2,7
 10137  0897  2899               	goto	u4411
 10138  0898  289A               	goto	u4410
 10139  0899                     u4411:	
 10140  0899  289B               	goto	l3551
 10141  089A                     u4410:	
 10142  089A                     l3549:	
 10143  089A  1459               	bsf	___fldiv@aexp,0
 10144  089B                     l3551:	
 10145  089B  0859               	movf	___fldiv@aexp,w
 10146  089C  1903               	btfsc	3,2
 10147  089D  289F               	goto	u4421
 10148  089E  28A0               	goto	u4420
 10149  089F                     u4421:	
 10150  089F  28B0               	goto	l3561
 10151  08A0                     u4420:	
 10152  08A0                     l3553:	
 10153  08A0  0A59               	incf	___fldiv@aexp,w
 10154  08A1  1D03               	btfss	3,2
 10155  08A2  28A4               	goto	u4431
 10156  08A3  28A5               	goto	u4430
 10157  08A4                     u4431:	
 10158  08A4  28AD               	goto	l3557
 10159  08A5                     u4430:	
 10160  08A5                     l3555:	
 10161  08A5  3000               	movlw	0
 10162  08A6  00C3               	movwf	___fldiv@a+3
 10163  08A7  3000               	movlw	0
 10164  08A8  00C2               	movwf	___fldiv@a+2
 10165  08A9  3000               	movlw	0
 10166  08AA  00C1               	movwf	___fldiv@a+1
 10167  08AB  3000               	movlw	0
 10168  08AC  00C0               	movwf	___fldiv@a
 10169  08AD                     l3557:	
 10170  08AD  17C2               	bsf	___fldiv@a+2,7
 10171  08AE                     l3559:	
 10172  08AE  01C3               	clrf	___fldiv@a+3
 10173  08AF  28B8               	goto	l965
 10174  08B0                     l3561:	
 10175  08B0  3000               	movlw	0
 10176  08B1  00C3               	movwf	___fldiv@a+3
 10177  08B2  3000               	movlw	0
 10178  08B3  00C2               	movwf	___fldiv@a+2
 10179  08B4  3000               	movlw	0
 10180  08B5  00C1               	movwf	___fldiv@a+1
 10181  08B6  3000               	movlw	0
 10182  08B7  00C0               	movwf	___fldiv@a
 10183  08B8                     l965:	
 10184  08B8  0843               	movf	___fldiv@a+3,w
 10185  08B9  0442               	iorwf	___fldiv@a+2,w
 10186  08BA  0441               	iorwf	___fldiv@a+1,w
 10187  08BB  0440               	iorwf	___fldiv@a,w
 10188  08BC  1D03               	skipz
 10189  08BD  28BF               	goto	u4441
 10190  08BE  28C0               	goto	u4440
 10191  08BF                     u4441:	
 10192  08BF  28D9               	goto	l3571
 10193  08C0                     u4440:	
 10194  08C0                     l3563:	
 10195  08C0  3000               	movlw	0
 10196  08C1  00C7               	movwf	___fldiv@b+3
 10197  08C2  3000               	movlw	0
 10198  08C3  00C6               	movwf	___fldiv@b+2
 10199  08C4  3000               	movlw	0
 10200  08C5  00C5               	movwf	___fldiv@b+1
 10201  08C6  3000               	movlw	0
 10202  08C7  00C4               	movwf	___fldiv@b
 10203  08C8  3080               	movlw	128
 10204  08C9  04C6               	iorwf	___fldiv@b+2,f
 10205  08CA  307F               	movlw	127
 10206  08CB  04C7               	iorwf	___fldiv@b+3,f
 10207  08CC                     l3565:	
 10208  08CC  0851               	movf	___fldiv@sign,w
 10209  08CD  00C8               	movwf	??___fldiv
 10210  08CE  0848               	movf	??___fldiv,w
 10211  08CF  04C7               	iorwf	___fldiv@b+3,f
 10212  08D0                     l3567:	
 10213  08D0  0847               	movf	___fldiv@b+3,w
 10214  08D1  00C3               	movwf	?___fldiv+3
 10215  08D2  0846               	movf	___fldiv@b+2,w
 10216  08D3  00C2               	movwf	?___fldiv+2
 10217  08D4  0845               	movf	___fldiv@b+1,w
 10218  08D5  00C1               	movwf	?___fldiv+1
 10219  08D6  0844               	movf	___fldiv@b,w
 10220  08D7  00C0               	movwf	?___fldiv
 10221  08D8  2A14               	goto	l967
 10222  08D9                     l3571:	
 10223  08D9  0858               	movf	___fldiv@bexp,w
 10224  08DA  1D03               	btfss	3,2
 10225  08DB  28DD               	goto	u4451
 10226  08DC  28DE               	goto	u4450
 10227  08DD                     u4451:	
 10228  08DD  28E7               	goto	l3577
 10229  08DE                     u4450:	
 10230  08DE                     l3573:	
 10231  08DE  3000               	movlw	0
 10232  08DF  00C3               	movwf	?___fldiv+3
 10233  08E0  3000               	movlw	0
 10234  08E1  00C2               	movwf	?___fldiv+2
 10235  08E2  3000               	movlw	0
 10236  08E3  00C1               	movwf	?___fldiv+1
 10237  08E4  3000               	movlw	0
 10238  08E5  00C0               	movwf	?___fldiv
 10239  08E6  2A14               	goto	l967
 10240  08E7                     l3577:	
 10241  08E7  0858               	movf	___fldiv@bexp,w
 10242  08E8  00C8               	movwf	??___fldiv
 10243  08E9  01C9               	clrf	??___fldiv+1
 10244  08EA  0849               	movf	??___fldiv+1,w
 10245  08EB  00CB               	movwf	??___fldiv+3
 10246  08EC  0859               	movf	___fldiv@aexp,w
 10247  08ED  0248               	subwf	??___fldiv,w
 10248  08EE  00CA               	movwf	??___fldiv+2
 10249  08EF  1C03               	skipc
 10250  08F0  03CB               	decf	??___fldiv+3,f
 10251  08F1  084A               	movf	??___fldiv+2,w
 10252  08F2  3E7F               	addlw	127
 10253  08F3  00D2               	movwf	___fldiv@new_exp
 10254  08F4  3000               	movlw	0
 10255  08F5  3D4B               	addwfc	??___fldiv+3,w
 10256  08F6  00D3               	movwf	___fldiv@new_exp+1
 10257  08F7                     l3579:	
 10258  08F7  0847               	movf	___fldiv@b+3,w
 10259  08F8  00D0               	movwf	___fldiv@rem+3
 10260  08F9  0846               	movf	___fldiv@b+2,w
 10261  08FA  00CF               	movwf	___fldiv@rem+2
 10262  08FB  0845               	movf	___fldiv@b+1,w
 10263  08FC  00CE               	movwf	___fldiv@rem+1
 10264  08FD  0844               	movf	___fldiv@b,w
 10265  08FE  00CD               	movwf	___fldiv@rem
 10266  08FF                     l3581:	
 10267  08FF  3000               	movlw	0
 10268  0900  00C7               	movwf	___fldiv@b+3
 10269  0901  3000               	movlw	0
 10270  0902  00C6               	movwf	___fldiv@b+2
 10271  0903  3000               	movlw	0
 10272  0904  00C5               	movwf	___fldiv@b+1
 10273  0905  3000               	movlw	0
 10274  0906  00C4               	movwf	___fldiv@b
 10275  0907                     l3583:	
 10276  0907  3000               	movlw	0
 10277  0908  00D7               	movwf	___fldiv@grs+3
 10278  0909  3000               	movlw	0
 10279  090A  00D6               	movwf	___fldiv@grs+2
 10280  090B  3000               	movlw	0
 10281  090C  00D5               	movwf	___fldiv@grs+1
 10282  090D  3000               	movlw	0
 10283  090E  00D4               	movwf	___fldiv@grs
 10284  090F                     l3585:	
 10285  090F  01D9               	clrf	___fldiv@aexp
 10286  0910  294F               	goto	l3605
 10287  0911                     l3587:	
 10288  0911  0859               	movf	___fldiv@aexp,w
 10289  0912  1903               	btfsc	3,2
 10290  0913  2915               	goto	u4461
 10291  0914  2916               	goto	u4460
 10292  0915                     u4461:	
 10293  0915  2930               	goto	l3597
 10294  0916                     u4460:	
 10295  0916                     l3589:	
 10296  0916  3001               	movlw	1
 10297  0917                     u4475:	
 10298  0917  35CD               	lslf	___fldiv@rem,f
 10299  0918  0DCE               	rlf	___fldiv@rem+1,f
 10300  0919  0DCF               	rlf	___fldiv@rem+2,f
 10301  091A  0DD0               	rlf	___fldiv@rem+3,f
 10302  091B  0B89               	decfsz	9,f
 10303  091C  2917               	goto	u4475
 10304  091D  3001               	movlw	1
 10305  091E                     u4485:	
 10306  091E  35C4               	lslf	___fldiv@b,f
 10307  091F  0DC5               	rlf	___fldiv@b+1,f
 10308  0920  0DC6               	rlf	___fldiv@b+2,f
 10309  0921  0DC7               	rlf	___fldiv@b+3,f
 10310  0922  0B89               	decfsz	9,f
 10311  0923  291E               	goto	u4485
 10312  0924                     l3591:	
 10313  0924  1FD7               	btfss	___fldiv@grs+3,7
 10314  0925  2927               	goto	u4491
 10315  0926  2928               	goto	u4490
 10316  0927                     u4491:	
 10317  0927  2929               	goto	l3595
 10318  0928                     u4490:	
 10319  0928                     l3593:	
 10320  0928  1444               	bsf	___fldiv@b,0
 10321  0929                     l3595:	
 10322  0929  3001               	movlw	1
 10323  092A                     u4505:	
 10324  092A  35D4               	lslf	___fldiv@grs,f
 10325  092B  0DD5               	rlf	___fldiv@grs+1,f
 10326  092C  0DD6               	rlf	___fldiv@grs+2,f
 10327  092D  0DD7               	rlf	___fldiv@grs+3,f
 10328  092E  0B89               	decfsz	9,f
 10329  092F  292A               	goto	u4505
 10330  0930                     l3597:	
 10331  0930  0843               	movf	___fldiv@a+3,w
 10332  0931  0250               	subwf	___fldiv@rem+3,w
 10333  0932  1D03               	skipz
 10334  0933  293E               	goto	u4515
 10335  0934  0842               	movf	___fldiv@a+2,w
 10336  0935  024F               	subwf	___fldiv@rem+2,w
 10337  0936  1D03               	skipz
 10338  0937  293E               	goto	u4515
 10339  0938  0841               	movf	___fldiv@a+1,w
 10340  0939  024E               	subwf	___fldiv@rem+1,w
 10341  093A  1D03               	skipz
 10342  093B  293E               	goto	u4515
 10343  093C  0840               	movf	___fldiv@a,w
 10344  093D  024D               	subwf	___fldiv@rem,w
 10345  093E                     u4515:	
 10346  093E  1C03               	skipc
 10347  093F  2941               	goto	u4511
 10348  0940  2942               	goto	u4510
 10349  0941                     u4511:	
 10350  0941  294B               	goto	l3603
 10351  0942                     u4510:	
 10352  0942                     l3599:	
 10353  0942  1757               	bsf	___fldiv@grs+3,6
 10354  0943                     l3601:	
 10355  0943  0840               	movf	___fldiv@a,w
 10356  0944  02CD               	subwf	___fldiv@rem,f
 10357  0945  0841               	movf	___fldiv@a+1,w
 10358  0946  3BCE               	subwfb	___fldiv@rem+1,f
 10359  0947  0842               	movf	___fldiv@a+2,w
 10360  0948  3BCF               	subwfb	___fldiv@rem+2,f
 10361  0949  0843               	movf	___fldiv@a+3,w
 10362  094A  3BD0               	subwfb	___fldiv@rem+3,f
 10363  094B                     l3603:	
 10364  094B  3001               	movlw	1
 10365  094C  00C8               	movwf	??___fldiv
 10366  094D  0848               	movf	??___fldiv,w
 10367  094E  07D9               	addwf	___fldiv@aexp,f
 10368  094F                     l3605:	
 10369  094F  301A               	movlw	26
 10370  0950  0259               	subwf	___fldiv@aexp,w
 10371  0951  1C03               	skipc
 10372  0952  2954               	goto	u4521
 10373  0953  2955               	goto	u4520
 10374  0954                     u4521:	
 10375  0954  2911               	goto	l3587
 10376  0955                     u4520:	
 10377  0955                     l3607:	
 10378  0955  0850               	movf	___fldiv@rem+3,w
 10379  0956  044F               	iorwf	___fldiv@rem+2,w
 10380  0957  044E               	iorwf	___fldiv@rem+1,w
 10381  0958  044D               	iorwf	___fldiv@rem,w
 10382  0959  1903               	skipnz
 10383  095A  295C               	goto	u4531
 10384  095B  295D               	goto	u4530
 10385  095C                     u4531:	
 10386  095C  2976               	goto	l3621
 10387  095D                     u4530:	
 10388  095D                     l3609:	
 10389  095D  1454               	bsf	___fldiv@grs,0
 10390  095E  2976               	goto	l3621
 10391  095F                     l3611:	
 10392  095F  3001               	movlw	1
 10393  0960                     u4545:	
 10394  0960  35C4               	lslf	___fldiv@b,f
 10395  0961  0DC5               	rlf	___fldiv@b+1,f
 10396  0962  0DC6               	rlf	___fldiv@b+2,f
 10397  0963  0DC7               	rlf	___fldiv@b+3,f
 10398  0964  0B89               	decfsz	9,f
 10399  0965  2960               	goto	u4545
 10400  0966                     l3613:	
 10401  0966  1FD7               	btfss	___fldiv@grs+3,7
 10402  0967  2969               	goto	u4551
 10403  0968  296A               	goto	u4550
 10404  0969                     u4551:	
 10405  0969  296B               	goto	l3617
 10406  096A                     u4550:	
 10407  096A                     l3615:	
 10408  096A  1444               	bsf	___fldiv@b,0
 10409  096B                     l3617:	
 10410  096B  3001               	movlw	1
 10411  096C                     u4565:	
 10412  096C  35D4               	lslf	___fldiv@grs,f
 10413  096D  0DD5               	rlf	___fldiv@grs+1,f
 10414  096E  0DD6               	rlf	___fldiv@grs+2,f
 10415  096F  0DD7               	rlf	___fldiv@grs+3,f
 10416  0970  0B89               	decfsz	9,f
 10417  0971  296C               	goto	u4565
 10418  0972                     l3619:	
 10419  0972  30FF               	movlw	255
 10420  0973  07D2               	addwf	___fldiv@new_exp,f
 10421  0974  30FF               	movlw	255
 10422  0975  3DD3               	addwfc	___fldiv@new_exp+1,f
 10423  0976                     l3621:	
 10424  0976  1FC6               	btfss	___fldiv@b+2,7
 10425  0977  2979               	goto	u4571
 10426  0978  297A               	goto	u4570
 10427  0979                     u4571:	
 10428  0979  295F               	goto	l3611
 10429  097A                     u4570:	
 10430  097A                     l3623:	
 10431  097A  01D9               	clrf	___fldiv@aexp
 10432  097B                     l3625:	
 10433  097B  1FD7               	btfss	___fldiv@grs+3,7
 10434  097C  297E               	goto	u4581
 10435  097D  297F               	goto	u4580
 10436  097E                     u4581:	
 10437  097E  299B               	goto	l3633
 10438  097F                     u4580:	
 10439  097F                     l3627:	
 10440  097F  30FF               	movlw	255
 10441  0980  0554               	andwf	___fldiv@grs,w
 10442  0981  00C8               	movwf	??___fldiv
 10443  0982  30FF               	movlw	255
 10444  0983  0555               	andwf	___fldiv@grs+1,w
 10445  0984  00C9               	movwf	??___fldiv+1
 10446  0985  30FF               	movlw	255
 10447  0986  0556               	andwf	___fldiv@grs+2,w
 10448  0987  00CA               	movwf	??___fldiv+2
 10449  0988  307F               	movlw	127
 10450  0989  0557               	andwf	___fldiv@grs+3,w
 10451  098A  00CB               	movwf	??___fldiv+3
 10452  098B  084B               	movf	??___fldiv+3,w
 10453  098C  044A               	iorwf	??___fldiv+2,w
 10454  098D  0449               	iorwf	??___fldiv+1,w
 10455  098E  0448               	iorwf	??___fldiv,w
 10456  098F  1903               	skipnz
 10457  0990  2992               	goto	u4591
 10458  0991  2993               	goto	u4590
 10459  0992                     u4591:	
 10460  0992  2996               	goto	l981
 10461  0993                     u4590:	
 10462  0993                     l3629:	
 10463  0993  01D9               	clrf	___fldiv@aexp
 10464  0994  0AD9               	incf	___fldiv@aexp,f
 10465  0995  299B               	goto	l3633
 10466  0996                     l981:	
 10467  0996  1C44               	btfss	___fldiv@b,0
 10468  0997  2999               	goto	u4601
 10469  0998  299A               	goto	u4600
 10470  0999                     u4601:	
 10471  0999  299B               	goto	l3633
 10472  099A                     u4600:	
 10473  099A  2993               	goto	l3629
 10474  099B                     l3633:	
 10475  099B  0859               	movf	___fldiv@aexp,w
 10476  099C  1903               	btfsc	3,2
 10477  099D  299F               	goto	u4611
 10478  099E  29A0               	goto	u4610
 10479  099F                     u4611:	
 10480  099F  29C8               	goto	l3643
 10481  09A0                     u4610:	
 10482  09A0                     l3635:	
 10483  09A0  3001               	movlw	1
 10484  09A1  07C4               	addwf	___fldiv@b,f
 10485  09A2  3000               	movlw	0
 10486  09A3  3DC5               	addwfc	___fldiv@b+1,f
 10487  09A4  3000               	movlw	0
 10488  09A5  3DC6               	addwfc	___fldiv@b+2,f
 10489  09A6  3000               	movlw	0
 10490  09A7  3DC7               	addwfc	___fldiv@b+3,f
 10491  09A8                     l3637:	
 10492  09A8  1C47               	btfss	___fldiv@b+3,0
 10493  09A9  29AB               	goto	u4621
 10494  09AA  29AC               	goto	u4620
 10495  09AB                     u4621:	
 10496  09AB  29C8               	goto	l3643
 10497  09AC                     u4620:	
 10498  09AC                     l3639:	
 10499  09AC  0844               	movf	___fldiv@b,w
 10500  09AD  00C8               	movwf	??___fldiv
 10501  09AE  0845               	movf	___fldiv@b+1,w
 10502  09AF  00C9               	movwf	??___fldiv+1
 10503  09B0  0846               	movf	___fldiv@b+2,w
 10504  09B1  00CA               	movwf	??___fldiv+2
 10505  09B2  0847               	movf	___fldiv@b+3,w
 10506  09B3  00CB               	movwf	??___fldiv+3
 10507  09B4  3001               	movlw	1
 10508  09B5  00CC               	movwf	??___fldiv+4
 10509  09B6                     u4635:	
 10510  09B6  37CB               	asrf	??___fldiv+3,f
 10511  09B7  0CCA               	rrf	??___fldiv+2,f
 10512  09B8  0CC9               	rrf	??___fldiv+1,f
 10513  09B9  0CC8               	rrf	??___fldiv,f
 10514  09BA                     u4630:	
 10515  09BA  0BCC               	decfsz	??___fldiv+4,f
 10516  09BB  29B6               	goto	u4635
 10517  09BC  084B               	movf	??___fldiv+3,w
 10518  09BD  00C7               	movwf	___fldiv@b+3
 10519  09BE  084A               	movf	??___fldiv+2,w
 10520  09BF  00C6               	movwf	___fldiv@b+2
 10521  09C0  0849               	movf	??___fldiv+1,w
 10522  09C1  00C5               	movwf	___fldiv@b+1
 10523  09C2  0848               	movf	??___fldiv,w
 10524  09C3  00C4               	movwf	___fldiv@b
 10525  09C4                     l3641:	
 10526  09C4  3001               	movlw	1
 10527  09C5  07D2               	addwf	___fldiv@new_exp,f
 10528  09C6  3000               	movlw	0
 10529  09C7  3DD3               	addwfc	___fldiv@new_exp+1,f
 10530  09C8                     l3643:	
 10531  09C8  0853               	movf	___fldiv@new_exp+1,w
 10532  09C9  3A80               	xorlw	128
 10533  09CA  00C8               	movwf	??___fldiv
 10534  09CB  3080               	movlw	128
 10535  09CC  0248               	subwf	??___fldiv,w
 10536  09CD  1D03               	skipz
 10537  09CE  29D1               	goto	u4645
 10538  09CF  30FF               	movlw	255
 10539  09D0  0252               	subwf	___fldiv@new_exp,w
 10540  09D1                     u4645:	
 10541  09D1  1C03               	skipc
 10542  09D2  29D4               	goto	u4641
 10543  09D3  29D5               	goto	u4640
 10544  09D4                     u4641:	
 10545  09D4  29E2               	goto	l986
 10546  09D5                     u4640:	
 10547  09D5                     l3645:	
 10548  09D5  30FF               	movlw	255
 10549  09D6  0020               	movlb	0	; select bank0
 10550  09D7  00D2               	movwf	___fldiv@new_exp
 10551  09D8  3000               	movlw	0
 10552  09D9  00D3               	movwf	___fldiv@new_exp+1
 10553  09DA  3000               	movlw	0
 10554  09DB  00C7               	movwf	___fldiv@b+3
 10555  09DC  3000               	movlw	0
 10556  09DD  00C6               	movwf	___fldiv@b+2
 10557  09DE  3000               	movlw	0
 10558  09DF  00C5               	movwf	___fldiv@b+1
 10559  09E0  3000               	movlw	0
 10560  09E1  00C4               	movwf	___fldiv@b
 10561  09E2                     l986:	
 10562  09E2  0020               	movlb	0	; select bank0
 10563  09E3  0853               	movf	___fldiv@new_exp+1,w
 10564  09E4  3A80               	xorlw	128
 10565  09E5  00C8               	movwf	??___fldiv
 10566  09E6  3080               	movlw	128
 10567  09E7  0248               	subwf	??___fldiv,w
 10568  09E8  1D03               	skipz
 10569  09E9  29EC               	goto	u4655
 10570  09EA  3001               	movlw	1
 10571  09EB  0252               	subwf	___fldiv@new_exp,w
 10572  09EC                     u4655:	
 10573  09EC  1803               	skipnc
 10574  09ED  29EF               	goto	u4651
 10575  09EE  29F0               	goto	u4650
 10576  09EF                     u4651:	
 10577  09EF  29FC               	goto	l987
 10578  09F0                     u4650:	
 10579  09F0                     l3647:	
 10580  09F0  0020               	movlb	0	; select bank0
 10581  09F1  01D2               	clrf	___fldiv@new_exp
 10582  09F2  01D3               	clrf	___fldiv@new_exp+1
 10583  09F3                     l3649:	
 10584  09F3  3000               	movlw	0
 10585  09F4  00C7               	movwf	___fldiv@b+3
 10586  09F5  3000               	movlw	0
 10587  09F6  00C6               	movwf	___fldiv@b+2
 10588  09F7  3000               	movlw	0
 10589  09F8  00C5               	movwf	___fldiv@b+1
 10590  09F9  3000               	movlw	0
 10591  09FA  00C4               	movwf	___fldiv@b
 10592  09FB                     l3651:	
 10593  09FB  01D1               	clrf	___fldiv@sign
 10594  09FC                     l987:	
 10595  09FC  0020               	movlb	0	; select bank0
 10596  09FD  0852               	movf	___fldiv@new_exp,w
 10597  09FE  00C8               	movwf	??___fldiv
 10598  09FF  0848               	movf	??___fldiv,w
 10599  0A00  00D8               	movwf	___fldiv@bexp
 10600  0A01                     l3653:	
 10601  0A01  1C58               	btfss	___fldiv@bexp,0
 10602  0A02  2A04               	goto	u4661
 10603  0A03  2A05               	goto	u4660
 10604  0A04                     u4661:	
 10605  0A04  2A07               	goto	l3657
 10606  0A05                     u4660:	
 10607  0A05                     l3655:	
 10608  0A05  17C6               	bsf	___fldiv@b+2,7
 10609  0A06  2A0B               	goto	l989
 10610  0A07                     l3657:	
 10611  0A07  307F               	movlw	127
 10612  0A08  00C8               	movwf	??___fldiv
 10613  0A09  0848               	movf	??___fldiv,w
 10614  0A0A  05C6               	andwf	___fldiv@b+2,f
 10615  0A0B                     l989:	
 10616  0A0B  3658               	lsrf	___fldiv@bexp,w
 10617  0A0C  00C8               	movwf	??___fldiv
 10618  0A0D  0848               	movf	??___fldiv,w
 10619  0A0E  00C7               	movwf	___fldiv@b+3
 10620  0A0F  0851               	movf	___fldiv@sign,w
 10621  0A10  00C8               	movwf	??___fldiv
 10622  0A11  0848               	movf	??___fldiv,w
 10623  0A12  04C7               	iorwf	___fldiv@b+3,f
 10624  0A13  28D0               	goto	l3567
 10625  0A14                     l967:	
 10626  0A14  0008               	return
 10627  0A15                     __end_of___fldiv:	
 10628                           
 10629                           	psect	text25
 10630  1E49                     __ptext25:	
 10631 ;; *************** function ___awmod *****************
 10632 ;; Defined at:
 10633 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;  divisor         2    0[COMMON] int 
 10636 ;;  dividend        2    2[COMMON] int 
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;  sign            1    6[COMMON] unsigned char 
 10639 ;;  counter         1    5[COMMON] unsigned char 
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  2    0[COMMON] int 
 10642 ;; Registers used:
 10643 ;;		wreg, status,2, status,0
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;Total ram usage:        7 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; This function calls:
 10656 ;;		Nothing
 10657 ;; This function is called by:
 10658 ;;		_efgtoa
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           
 10663                           ;psect for function ___awmod
 10664  1E49                     ___awmod:	
 10665  1E49                     l3403:	
 10666                           ;incstack = 0
 10667                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10668                           
 10669  1E49  01F6               	clrf	___awmod@sign
 10670  1E4A                     l3405:	
 10671  1E4A  1FF3               	btfss	___awmod@dividend+1,7
 10672  1E4B  2E4D               	goto	u4101
 10673  1E4C  2E4E               	goto	u4100
 10674  1E4D                     u4101:	
 10675  1E4D  2E55               	goto	l3411
 10676  1E4E                     u4100:	
 10677  1E4E                     l3407:	
 10678  1E4E  09F2               	comf	___awmod@dividend,f
 10679  1E4F  09F3               	comf	___awmod@dividend+1,f
 10680  1E50  0AF2               	incf	___awmod@dividend,f
 10681  1E51  1903               	skipnz
 10682  1E52  0AF3               	incf	___awmod@dividend+1,f
 10683  1E53                     l3409:	
 10684  1E53  01F6               	clrf	___awmod@sign
 10685  1E54  0AF6               	incf	___awmod@sign,f
 10686  1E55                     l3411:	
 10687  1E55  1FF1               	btfss	___awmod@divisor+1,7
 10688  1E56  2E58               	goto	u4111
 10689  1E57  2E59               	goto	u4110
 10690  1E58                     u4111:	
 10691  1E58  2E5E               	goto	l3415
 10692  1E59                     u4110:	
 10693  1E59                     l3413:	
 10694  1E59  09F0               	comf	___awmod@divisor,f
 10695  1E5A  09F1               	comf	___awmod@divisor+1,f
 10696  1E5B  0AF0               	incf	___awmod@divisor,f
 10697  1E5C  1903               	skipnz
 10698  1E5D  0AF1               	incf	___awmod@divisor+1,f
 10699  1E5E                     l3415:	
 10700  1E5E  0870               	movf	___awmod@divisor,w
 10701  1E5F  0471               	iorwf	___awmod@divisor+1,w
 10702  1E60  1903               	btfsc	3,2
 10703  1E61  2E63               	goto	u4121
 10704  1E62  2E64               	goto	u4120
 10705  1E63                     u4121:	
 10706  1E63  2E8D               	goto	l3433
 10707  1E64                     u4120:	
 10708  1E64                     l3417:	
 10709  1E64  01F5               	clrf	___awmod@counter
 10710  1E65  0AF5               	incf	___awmod@counter,f
 10711  1E66  2E70               	goto	l3423
 10712  1E67                     l3419:	
 10713  1E67  3001               	movlw	1
 10714  1E68                     u4135:	
 10715  1E68  35F0               	lslf	___awmod@divisor,f
 10716  1E69  0DF1               	rlf	___awmod@divisor+1,f
 10717  1E6A  0B89               	decfsz	9,f
 10718  1E6B  2E68               	goto	u4135
 10719  1E6C                     l3421:	
 10720  1E6C  3001               	movlw	1
 10721  1E6D  00F4               	movwf	??___awmod
 10722  1E6E  0874               	movf	??___awmod,w
 10723  1E6F  07F5               	addwf	___awmod@counter,f
 10724  1E70                     l3423:	
 10725  1E70  1FF1               	btfss	___awmod@divisor+1,7
 10726  1E71  2E73               	goto	u4141
 10727  1E72  2E74               	goto	u4140
 10728  1E73                     u4141:	
 10729  1E73  2E67               	goto	l3419
 10730  1E74                     u4140:	
 10731  1E74                     l3425:	
 10732  1E74  0871               	movf	___awmod@divisor+1,w
 10733  1E75  0273               	subwf	___awmod@dividend+1,w
 10734  1E76  1D03               	skipz
 10735  1E77  2E7A               	goto	u4155
 10736  1E78  0870               	movf	___awmod@divisor,w
 10737  1E79  0272               	subwf	___awmod@dividend,w
 10738  1E7A                     u4155:	
 10739  1E7A  1C03               	skipc
 10740  1E7B  2E7D               	goto	u4151
 10741  1E7C  2E7E               	goto	u4150
 10742  1E7D                     u4151:	
 10743  1E7D  2E82               	goto	l3429
 10744  1E7E                     u4150:	
 10745  1E7E                     l3427:	
 10746  1E7E  0870               	movf	___awmod@divisor,w
 10747  1E7F  02F2               	subwf	___awmod@dividend,f
 10748  1E80  0871               	movf	___awmod@divisor+1,w
 10749  1E81  3BF3               	subwfb	___awmod@dividend+1,f
 10750  1E82                     l3429:	
 10751  1E82  3001               	movlw	1
 10752  1E83                     u4165:	
 10753  1E83  36F1               	lsrf	___awmod@divisor+1,f
 10754  1E84  0CF0               	rrf	___awmod@divisor,f
 10755  1E85  0B89               	decfsz	9,f
 10756  1E86  2E83               	goto	u4165
 10757  1E87                     l3431:	
 10758  1E87  3001               	movlw	1
 10759  1E88  02F5               	subwf	___awmod@counter,f
 10760  1E89  1D03               	btfss	3,2
 10761  1E8A  2E8C               	goto	u4171
 10762  1E8B  2E8D               	goto	u4170
 10763  1E8C                     u4171:	
 10764  1E8C  2E74               	goto	l3425
 10765  1E8D                     u4170:	
 10766  1E8D                     l3433:	
 10767  1E8D  0876               	movf	___awmod@sign,w
 10768  1E8E  1903               	btfsc	3,2
 10769  1E8F  2E91               	goto	u4181
 10770  1E90  2E92               	goto	u4180
 10771  1E91                     u4181:	
 10772  1E91  2E97               	goto	l3437
 10773  1E92                     u4180:	
 10774  1E92                     l3435:	
 10775  1E92  09F2               	comf	___awmod@dividend,f
 10776  1E93  09F3               	comf	___awmod@dividend+1,f
 10777  1E94  0AF2               	incf	___awmod@dividend,f
 10778  1E95  1903               	skipnz
 10779  1E96  0AF3               	incf	___awmod@dividend+1,f
 10780  1E97                     l3437:	
 10781  1E97  0873               	movf	___awmod@dividend+1,w
 10782  1E98  00F1               	movwf	?___awmod+1
 10783  1E99  0872               	movf	___awmod@dividend,w
 10784  1E9A  00F0               	movwf	?___awmod
 10785  1E9B                     l774:	
 10786  1E9B  0008               	return
 10787  1E9C                     __end_of___awmod:	
 10788                           
 10789                           	psect	text26
 10790  0802                     __ptext26:	
 10791 ;; *************** function ___awdiv *****************
 10792 ;; Defined at:
 10793 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;  divisor         2    0[COMMON] int 
 10796 ;;  dividend        2    2[COMMON] int 
 10797 ;; Auto vars:     Size  Location     Type
 10798 ;;  quotient        2    7[COMMON] int 
 10799 ;;  sign            1    6[COMMON] unsigned char 
 10800 ;;  counter         1    5[COMMON] unsigned char 
 10801 ;; Return value:  Size  Location     Type
 10802 ;;                  2    0[COMMON] int 
 10803 ;; Registers used:
 10804 ;;		wreg, status,2, status,0
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;Total ram usage:        9 bytes
 10815 ;; Hardware stack levels used:    1
 10816 ;; This function calls:
 10817 ;;		Nothing
 10818 ;; This function is called by:
 10819 ;;		_efgtoa
 10820 ;; This function uses a non-reentrant model
 10821 ;;
 10822                           
 10823                           
 10824                           ;psect for function ___awdiv
 10825  0802                     ___awdiv:	
 10826  0802                     l3359:	
 10827                           ;incstack = 0
 10828                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10829                           
 10830  0802  01F6               	clrf	___awdiv@sign
 10831  0803                     l3361:	
 10832  0803  1FF1               	btfss	___awdiv@divisor+1,7
 10833  0804  2806               	goto	u4001
 10834  0805  2807               	goto	u4000
 10835  0806                     u4001:	
 10836  0806  280E               	goto	l3367
 10837  0807                     u4000:	
 10838  0807                     l3363:	
 10839  0807  09F0               	comf	___awdiv@divisor,f
 10840  0808  09F1               	comf	___awdiv@divisor+1,f
 10841  0809  0AF0               	incf	___awdiv@divisor,f
 10842  080A  1903               	skipnz
 10843  080B  0AF1               	incf	___awdiv@divisor+1,f
 10844  080C                     l3365:	
 10845  080C  01F6               	clrf	___awdiv@sign
 10846  080D  0AF6               	incf	___awdiv@sign,f
 10847  080E                     l3367:	
 10848  080E  1FF3               	btfss	___awdiv@dividend+1,7
 10849  080F  2811               	goto	u4011
 10850  0810  2812               	goto	u4010
 10851  0811                     u4011:	
 10852  0811  281B               	goto	l3373
 10853  0812                     u4010:	
 10854  0812                     l3369:	
 10855  0812  09F2               	comf	___awdiv@dividend,f
 10856  0813  09F3               	comf	___awdiv@dividend+1,f
 10857  0814  0AF2               	incf	___awdiv@dividend,f
 10858  0815  1903               	skipnz
 10859  0816  0AF3               	incf	___awdiv@dividend+1,f
 10860  0817                     l3371:	
 10861  0817  3001               	movlw	1
 10862  0818  00F4               	movwf	??___awdiv
 10863  0819  0874               	movf	??___awdiv,w
 10864  081A  06F6               	xorwf	___awdiv@sign,f
 10865  081B                     l3373:	
 10866  081B  01F7               	clrf	___awdiv@quotient
 10867  081C  01F8               	clrf	___awdiv@quotient+1
 10868  081D                     l3375:	
 10869  081D  0870               	movf	___awdiv@divisor,w
 10870  081E  0471               	iorwf	___awdiv@divisor+1,w
 10871  081F  1903               	btfsc	3,2
 10872  0820  2822               	goto	u4021
 10873  0821  2823               	goto	u4020
 10874  0822                     u4021:	
 10875  0822  2852               	goto	l3395
 10876  0823                     u4020:	
 10877  0823                     l3377:	
 10878  0823  01F5               	clrf	___awdiv@counter
 10879  0824  0AF5               	incf	___awdiv@counter,f
 10880  0825  282F               	goto	l3383
 10881  0826                     l3379:	
 10882  0826  3001               	movlw	1
 10883  0827                     u4035:	
 10884  0827  35F0               	lslf	___awdiv@divisor,f
 10885  0828  0DF1               	rlf	___awdiv@divisor+1,f
 10886  0829  0B89               	decfsz	9,f
 10887  082A  2827               	goto	u4035
 10888  082B                     l3381:	
 10889  082B  3001               	movlw	1
 10890  082C  00F4               	movwf	??___awdiv
 10891  082D  0874               	movf	??___awdiv,w
 10892  082E  07F5               	addwf	___awdiv@counter,f
 10893  082F                     l3383:	
 10894  082F  1FF1               	btfss	___awdiv@divisor+1,7
 10895  0830  2832               	goto	u4041
 10896  0831  2833               	goto	u4040
 10897  0832                     u4041:	
 10898  0832  2826               	goto	l3379
 10899  0833                     u4040:	
 10900  0833                     l3385:	
 10901  0833  3001               	movlw	1
 10902  0834                     u4055:	
 10903  0834  35F7               	lslf	___awdiv@quotient,f
 10904  0835  0DF8               	rlf	___awdiv@quotient+1,f
 10905  0836  0B89               	decfsz	9,f
 10906  0837  2834               	goto	u4055
 10907  0838  0871               	movf	___awdiv@divisor+1,w
 10908  0839  0273               	subwf	___awdiv@dividend+1,w
 10909  083A  1D03               	skipz
 10910  083B  283E               	goto	u4065
 10911  083C  0870               	movf	___awdiv@divisor,w
 10912  083D  0272               	subwf	___awdiv@dividend,w
 10913  083E                     u4065:	
 10914  083E  1C03               	skipc
 10915  083F  2841               	goto	u4061
 10916  0840  2842               	goto	u4060
 10917  0841                     u4061:	
 10918  0841  2847               	goto	l3391
 10919  0842                     u4060:	
 10920  0842                     l3387:	
 10921  0842  0870               	movf	___awdiv@divisor,w
 10922  0843  02F2               	subwf	___awdiv@dividend,f
 10923  0844  0871               	movf	___awdiv@divisor+1,w
 10924  0845  3BF3               	subwfb	___awdiv@dividend+1,f
 10925  0846                     l3389:	
 10926  0846  1477               	bsf	___awdiv@quotient,0
 10927  0847                     l3391:	
 10928  0847  3001               	movlw	1
 10929  0848                     u4075:	
 10930  0848  36F1               	lsrf	___awdiv@divisor+1,f
 10931  0849  0CF0               	rrf	___awdiv@divisor,f
 10932  084A  0B89               	decfsz	9,f
 10933  084B  2848               	goto	u4075
 10934  084C                     l3393:	
 10935  084C  3001               	movlw	1
 10936  084D  02F5               	subwf	___awdiv@counter,f
 10937  084E  1D03               	btfss	3,2
 10938  084F  2851               	goto	u4081
 10939  0850  2852               	goto	u4080
 10940  0851                     u4081:	
 10941  0851  2833               	goto	l3385
 10942  0852                     u4080:	
 10943  0852                     l3395:	
 10944  0852  0876               	movf	___awdiv@sign,w
 10945  0853  1903               	btfsc	3,2
 10946  0854  2856               	goto	u4091
 10947  0855  2857               	goto	u4090
 10948  0856                     u4091:	
 10949  0856  285C               	goto	l3399
 10950  0857                     u4090:	
 10951  0857                     l3397:	
 10952  0857  09F7               	comf	___awdiv@quotient,f
 10953  0858  09F8               	comf	___awdiv@quotient+1,f
 10954  0859  0AF7               	incf	___awdiv@quotient,f
 10955  085A  1903               	skipnz
 10956  085B  0AF8               	incf	___awdiv@quotient+1,f
 10957  085C                     l3399:	
 10958  085C  0878               	movf	___awdiv@quotient+1,w
 10959  085D  00F1               	movwf	?___awdiv+1
 10960  085E  0877               	movf	___awdiv@quotient,w
 10961  085F  00F0               	movwf	?___awdiv
 10962  0860                     l761:	
 10963  0860  0008               	return
 10964  0861                     __end_of___awdiv:	
 10965                           
 10966                           	psect	text27
 10967  12C2                     __ptext27:	
 10968 ;; *************** function _atoi *****************
 10969 ;; Defined at:
 10970 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;  s               2    6[COMMON] PTR const unsigned char 
 10973 ;;		 -> STR_5(6), STR_3(6), STR_1(6), 
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;  n               2    7[BANK0 ] int 
 10976 ;;  neg             2    0[BANK0 ] int 
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  2    6[COMMON] int 
 10979 ;; Registers used:
 10980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;Total ram usage:       15 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; Hardware stack levels required when called:    1
 10993 ;; This function calls:
 10994 ;;		___wmul
 10995 ;;		_isdigit
 10996 ;;		_isspace
 10997 ;; This function is called by:
 10998 ;;		_vfpfcnvrt
 10999 ;; This function uses a non-reentrant model
 11000 ;;
 11001                           
 11002                           
 11003                           ;psect for function _atoi
 11004  12C2                     _atoi:	
 11005  12C2                     l4109:	
 11006                           ;incstack = 0
 11007                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11008                           
 11009  12C2  0020               	movlb	0	; select bank0
 11010  12C3  01A7               	clrf	atoi@n
 11011  12C4  01A8               	clrf	atoi@n+1
 11012  12C5  01A0               	clrf	atoi@neg
 11013  12C6  01A1               	clrf	atoi@neg+1
 11014  12C7  2ACC               	goto	l4113
 11015  12C8                     l4111:	
 11016  12C8  3001               	movlw	1
 11017  12C9  07F6               	addwf	atoi@s,f
 11018  12CA  3000               	movlw	0
 11019  12CB  3DF7               	addwfc	atoi@s+1,f
 11020  12CC                     l4113:	
 11021  12CC  01A6               	clrf	_atoi$1159
 11022  12CD  0AA6               	incf	_atoi$1159,f
 11023  12CE                     l4115:	
 11024  12CE  0876               	movf	atoi@s,w
 11025  12CF  0084               	movwf	4
 11026  12D0  0877               	movf	atoi@s+1,w
 11027  12D1  0085               	movwf	5
 11028  12D2  0012               	moviw fsr0++
 11029  12D3  3A20               	xorlw	32
 11030  12D4  1903               	btfsc	3,2
 11031  12D5  2AD7               	goto	u5471
 11032  12D6  2AD8               	goto	u5470
 11033  12D7                     u5471:	
 11034  12D7  2AED               	goto	l4121
 11035  12D8                     u5470:	
 11036  12D8                     l4117:	
 11037  12D8  0876               	movf	atoi@s,w
 11038  12D9  0084               	movwf	4
 11039  12DA  0877               	movf	atoi@s+1,w
 11040  12DB  0085               	movwf	5
 11041  12DC  0800               	movf	0,w	;code access
 11042  12DD  3EF7               	addlw	247
 11043  12DE  00F8               	movwf	??_atoi
 11044  12DF  30FF               	movlw	255
 11045  12E0  1803               	skipnc
 11046  12E1  3000               	movlw	0
 11047  12E2  00F9               	movwf	??_atoi+1
 11048  12E3  3000               	movlw	0
 11049  12E4  0279               	subwf	??_atoi+1,w
 11050  12E5  3005               	movlw	5
 11051  12E6  1903               	skipnz
 11052  12E7  0278               	subwf	??_atoi,w
 11053  12E8  1C03               	skipc
 11054  12E9  2AEB               	goto	u5481
 11055  12EA  2AEC               	goto	u5480
 11056  12EB                     u5481:	
 11057  12EB  2AED               	goto	l4121
 11058  12EC                     u5480:	
 11059  12EC                     l4119:	
 11060  12EC  01A6               	clrf	_atoi$1159
 11061  12ED                     l4121:	
 11062  12ED  0826               	movf	_atoi$1159,w
 11063  12EE  00F8               	movwf	??_atoi
 11064  12EF  01F9               	clrf	??_atoi+1
 11065  12F0  0878               	movf	??_atoi,w
 11066  12F1  00A2               	movwf	_atoi$1158
 11067  12F2  0879               	movf	??_atoi+1,w
 11068  12F3  00A3               	movwf	_atoi$1158+1
 11069  12F4                     l4125:	
 11070  12F4  0822               	movf	_atoi$1158,w
 11071  12F5  0423               	iorwf	_atoi$1158+1,w
 11072  12F6  1D03               	btfss	3,2
 11073  12F7  2AF9               	goto	u5491
 11074  12F8  2AFA               	goto	u5490
 11075  12F9                     u5491:	
 11076  12F9  2AC8               	goto	l4111
 11077  12FA                     u5490:	
 11078  12FA  2B04               	goto	l4129
 11079  12FB                     l4127:	
 11080  12FB  3001               	movlw	1
 11081  12FC  00A0               	movwf	atoi@neg
 11082  12FD  3000               	movlw	0
 11083  12FE  00A1               	movwf	atoi@neg+1
 11084  12FF                     l1087:	
 11085  12FF  3001               	movlw	1
 11086  1300  07F6               	addwf	atoi@s,f
 11087  1301  3000               	movlw	0
 11088  1302  3DF7               	addwfc	atoi@s+1,f
 11089  1303  2B38               	goto	l4135
 11090  1304                     l4129:	
 11091  1304  0876               	movf	atoi@s,w
 11092  1305  0084               	movwf	4
 11093  1306  0877               	movf	atoi@s+1,w
 11094  1307  0085               	movwf	5
 11095  1308  0800               	movf	0,w	;code access
 11096  1309  00F8               	movwf	??_atoi
 11097  130A  01F9               	clrf	??_atoi+1
 11098                           
 11099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11100                           ; Switch size 1, requested type "simple"
 11101                           ; Number of cases is 1, Range of values is 0 to 0
 11102                           ; switch strategies available:
 11103                           ; Name         Instructions Cycles
 11104                           ; simple_byte            4     3 (average)
 11105                           ; direct_byte            8     6 (fixed)
 11106                           ; jumptable            260     6 (fixed)
 11107                           ;	Chosen strategy is simple_byte
 11108  130B  0879               	movf	??_atoi+1,w
 11109  130C  3A00               	xorlw	0	; case 0
 11110  130D  1903               	skipnz
 11111  130E  2B10               	goto	l4773
 11112  130F  2B38               	goto	l4135
 11113  1310                     l4773:	
 11114                           
 11115                           ; Switch size 1, requested type "simple"
 11116                           ; Number of cases is 2, Range of values is 43 to 45
 11117                           ; switch strategies available:
 11118                           ; Name         Instructions Cycles
 11119                           ; simple_byte            7     4 (average)
 11120                           ; direct_byte           15     9 (fixed)
 11121                           ; jumptable            263     9 (fixed)
 11122                           ;	Chosen strategy is simple_byte
 11123  1310  0878               	movf	??_atoi,w
 11124  1311  3A2B               	xorlw	43	; case 43
 11125  1312  1903               	skipnz
 11126  1313  2AFF               	goto	l1087
 11127  1314  3A06               	xorlw	6	; case 45
 11128  1315  1903               	skipnz
 11129  1316  2AFB               	goto	l4127
 11130  1317  2B38               	goto	l4135
 11131  1318                     l4131:	
 11132  1318  0876               	movf	atoi@s,w
 11133  1319  0084               	movwf	4
 11134  131A  0877               	movf	atoi@s+1,w
 11135  131B  0085               	movwf	5
 11136  131C  0800               	movf	0,w	;code access
 11137  131D  00F8               	movwf	??_atoi
 11138  131E  0828               	movf	atoi@n+1,w
 11139  131F  00F1               	movwf	___wmul@multiplier+1
 11140  1320  0827               	movf	atoi@n,w
 11141  1321  00F0               	movwf	___wmul@multiplier
 11142  1322  300A               	movlw	10
 11143  1323  00F2               	movwf	___wmul@multiplicand
 11144  1324  3000               	movlw	0
 11145  1325  00F3               	movwf	___wmul@multiplicand+1
 11146  1326  319A  22CC  3192   	fcall	___wmul
 11147  1329  0871               	movf	?___wmul+1,w
 11148  132A  00FA               	movwf	??_atoi+2
 11149  132B  0878               	movf	??_atoi,w
 11150  132C  0270               	subwf	?___wmul,w
 11151  132D  00F9               	movwf	??_atoi+1
 11152  132E  1C03               	skipc
 11153  132F  03FA               	decf	??_atoi+2,f
 11154  1330  0879               	movf	??_atoi+1,w
 11155  1331  3E30               	addlw	48
 11156  1332  0020               	movlb	0	; select bank0
 11157  1333  00A7               	movwf	atoi@n
 11158  1334  3000               	movlw	0
 11159  1335  3D7A               	addwfc	??_atoi+2,w
 11160  1336  00A8               	movwf	atoi@n+1
 11161  1337  2AFF               	goto	l1087
 11162  1338                     l4135:	
 11163  1338  0876               	movf	atoi@s,w
 11164  1339  0084               	movwf	4
 11165  133A  0877               	movf	atoi@s+1,w
 11166  133B  0085               	movwf	5
 11167  133C  0800               	movf	0,w	;code access
 11168  133D  3ED0               	addlw	208
 11169  133E  00F8               	movwf	??_atoi
 11170  133F  30FF               	movlw	255
 11171  1340  1803               	skipnc
 11172  1341  3000               	movlw	0
 11173  1342  00F9               	movwf	??_atoi+1
 11174  1343  3000               	movlw	0
 11175  1344  0279               	subwf	??_atoi+1,w
 11176  1345  300A               	movlw	10
 11177  1346  1903               	skipnz
 11178  1347  0278               	subwf	??_atoi,w
 11179  1348  1C03               	skipc
 11180  1349  2B4B               	goto	u5501
 11181  134A  2B4D               	goto	u5500
 11182  134B                     u5501:	
 11183  134B  3001               	movlw	1
 11184  134C  2B4E               	goto	u5510
 11185  134D                     u5500:	
 11186  134D  3000               	movlw	0
 11187  134E                     u5510:	
 11188  134E  00FA               	movwf	??_atoi+2
 11189  134F  01FB               	clrf	??_atoi+3
 11190  1350  087A               	movf	??_atoi+2,w
 11191  1351  00A4               	movwf	_atoi$1160
 11192  1352  087B               	movf	??_atoi+3,w
 11193  1353  00A5               	movwf	_atoi$1160+1
 11194  1354                     l4139:	
 11195  1354  0824               	movf	_atoi$1160,w
 11196  1355  0425               	iorwf	_atoi$1160+1,w
 11197  1356  1D03               	btfss	3,2
 11198  1357  2B59               	goto	u5521
 11199  1358  2B5A               	goto	u5520
 11200  1359                     u5521:	
 11201  1359  2B18               	goto	l4131
 11202  135A                     u5520:	
 11203  135A                     l4141:	
 11204  135A  0820               	movf	atoi@neg,w
 11205  135B  0421               	iorwf	atoi@neg+1,w
 11206  135C  1D03               	btfss	3,2
 11207  135D  2B5F               	goto	u5531
 11208  135E  2B60               	goto	u5530
 11209  135F                     u5531:	
 11210  135F  2B6C               	goto	l4145
 11211  1360                     u5530:	
 11212  1360                     l4143:	
 11213  1360  0927               	comf	atoi@n,w
 11214  1361  00F8               	movwf	??_atoi
 11215  1362  0928               	comf	atoi@n+1,w
 11216  1363  00F9               	movwf	??_atoi+1
 11217  1364  0AF8               	incf	??_atoi,f
 11218  1365  1903               	skipnz
 11219  1366  0AF9               	incf	??_atoi+1,f
 11220  1367  0878               	movf	??_atoi,w
 11221  1368  00F6               	movwf	?_atoi
 11222  1369  0879               	movf	??_atoi+1,w
 11223  136A  00F7               	movwf	?_atoi+1
 11224  136B  2B70               	goto	l1100
 11225  136C                     l4145:	
 11226  136C  0828               	movf	atoi@n+1,w
 11227  136D  00F7               	movwf	?_atoi+1
 11228  136E  0827               	movf	atoi@n,w
 11229  136F  00F6               	movwf	?_atoi
 11230  1370                     l1100:	
 11231  1370  0008               	return
 11232  1371                     __end_of_atoi:	
 11233                           
 11234                           	psect	text28
 11235  1AEB                     __ptext28:	
 11236 ;; *************** function _isspace *****************
 11237 ;; Defined at:
 11238 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 11239 ;; Parameters:    Size  Location     Type
 11240 ;;  c               2    0[COMMON] int 
 11241 ;; Auto vars:     Size  Location     Type
 11242 ;;		None
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  2    0[COMMON] int 
 11245 ;; Registers used:
 11246 ;;		wreg, status,2, status,0
 11247 ;; Tracked objects:
 11248 ;;		On entry : 0/0
 11249 ;;		On exit  : 0/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11255 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11256 ;;Total ram usage:        5 bytes
 11257 ;; Hardware stack levels used:    1
 11258 ;; This function calls:
 11259 ;;		Nothing
 11260 ;; This function is called by:
 11261 ;;		_atoi
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           
 11266                           ;psect for function _isspace
 11267  1AEB                     _isspace:	
 11268  1AEB                     l3803:	
 11269                           ;incstack = 0
 11270                           ; Regs used in _isspace: [wreg+status,2+status,0]
 11271                           
 11272  1AEB  01F4               	clrf	_isspace$1189
 11273  1AEC  0AF4               	incf	_isspace$1189,f
 11274  1AED                     l3805:	
 11275  1AED  3020               	movlw	32
 11276  1AEE  0670               	xorwf	isspace@c,w
 11277  1AEF  0471               	iorwf	isspace@c+1,w
 11278  1AF0  1903               	btfsc	3,2
 11279  1AF1  2AF3               	goto	u4931
 11280  1AF2  2AF4               	goto	u4930
 11281  1AF3                     u4931:	
 11282  1AF3  2B04               	goto	l3811
 11283  1AF4                     u4930:	
 11284  1AF4                     l3807:	
 11285  1AF4  0870               	movf	isspace@c,w
 11286  1AF5  3EF7               	addlw	247
 11287  1AF6  00F2               	movwf	??_isspace
 11288  1AF7  30FF               	movlw	255
 11289  1AF8  3D71               	addwfc	isspace@c+1,w
 11290  1AF9  00F3               	movwf	??_isspace+1
 11291  1AFA  3000               	movlw	0
 11292  1AFB  0273               	subwf	??_isspace+1,w
 11293  1AFC  3005               	movlw	5
 11294  1AFD  1903               	skipnz
 11295  1AFE  0272               	subwf	??_isspace,w
 11296  1AFF  1C03               	skipc
 11297  1B00  2B02               	goto	u4941
 11298  1B01  2B03               	goto	u4940
 11299  1B02                     u4941:	
 11300  1B02  2B04               	goto	l3811
 11301  1B03                     u4940:	
 11302  1B03                     l3809:	
 11303  1B03  01F4               	clrf	_isspace$1189
 11304  1B04                     l3811:	
 11305  1B04  0874               	movf	_isspace$1189,w
 11306  1B05  00F2               	movwf	??_isspace
 11307  1B06  01F3               	clrf	??_isspace+1
 11308  1B07  0872               	movf	??_isspace,w
 11309  1B08  00F0               	movwf	?_isspace
 11310  1B09  0873               	movf	??_isspace+1,w
 11311  1B0A  00F1               	movwf	?_isspace+1
 11312  1B0B                     l1124:	
 11313  1B0B  0008               	return
 11314  1B0C                     __end_of_isspace:	
 11315                           
 11316                           	psect	text29
 11317  1A4A                     __ptext29:	
 11318 ;; *************** function _isdigit *****************
 11319 ;; Defined at:
 11320 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;  c               2    0[COMMON] int 
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;		None
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  2    0[COMMON] int 
 11327 ;; Registers used:
 11328 ;;		wreg, status,2, status,0
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;Total ram usage:        6 bytes
 11339 ;; Hardware stack levels used:    1
 11340 ;; This function calls:
 11341 ;;		Nothing
 11342 ;; This function is called by:
 11343 ;;		_vfpfcnvrt
 11344 ;;		_atoi
 11345 ;; This function uses a non-reentrant model
 11346 ;;
 11347                           
 11348                           
 11349                           ;psect for function _isdigit
 11350  1A4A                     _isdigit:	
 11351  1A4A                     l3341:	
 11352                           ;incstack = 0
 11353                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11354                           
 11355  1A4A  0870               	movf	isdigit@c,w
 11356  1A4B  3ED0               	addlw	208
 11357  1A4C  00F2               	movwf	??_isdigit
 11358  1A4D  30FF               	movlw	255
 11359  1A4E  3D71               	addwfc	isdigit@c+1,w
 11360  1A4F  00F3               	movwf	??_isdigit+1
 11361  1A50  3000               	movlw	0
 11362  1A51  0273               	subwf	??_isdigit+1,w
 11363  1A52  300A               	movlw	10
 11364  1A53  1903               	skipnz
 11365  1A54  0272               	subwf	??_isdigit,w
 11366  1A55  1C03               	skipc
 11367  1A56  2A58               	goto	u3941
 11368  1A57  2A5A               	goto	u3940
 11369  1A58                     u3941:	
 11370  1A58  3001               	movlw	1
 11371  1A59  2A5B               	goto	u3950
 11372  1A5A                     u3940:	
 11373  1A5A  3000               	movlw	0
 11374  1A5B                     u3950:	
 11375  1A5B  00F4               	movwf	??_isdigit+2
 11376  1A5C  01F5               	clrf	??_isdigit+3
 11377  1A5D  0874               	movf	??_isdigit+2,w
 11378  1A5E  00F0               	movwf	?_isdigit
 11379  1A5F  0875               	movf	??_isdigit+3,w
 11380  1A60  00F1               	movwf	?_isdigit+1
 11381  1A61                     l1116:	
 11382  1A61  0008               	return
 11383  1A62                     __end_of_isdigit:	
 11384                           
 11385                           	psect	text30
 11386  1ACC                     __ptext30:	
 11387 ;; *************** function ___wmul *****************
 11388 ;; Defined at:
 11389 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;  multiplier      2    0[COMMON] unsigned int 
 11392 ;;  multiplicand    2    2[COMMON] unsigned int 
 11393 ;; Auto vars:     Size  Location     Type
 11394 ;;  product         2    4[COMMON] unsigned int 
 11395 ;; Return value:  Size  Location     Type
 11396 ;;                  2    0[COMMON] unsigned int 
 11397 ;; Registers used:
 11398 ;;		wreg, status,2, status,0
 11399 ;; Tracked objects:
 11400 ;;		On entry : 0/0
 11401 ;;		On exit  : 0/0
 11402 ;;		Unchanged: 0/0
 11403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;Total ram usage:        6 bytes
 11409 ;; Hardware stack levels used:    1
 11410 ;; This function calls:
 11411 ;;		Nothing
 11412 ;; This function is called by:
 11413 ;;		_atoi
 11414 ;; This function uses a non-reentrant model
 11415 ;;
 11416                           
 11417                           
 11418                           ;psect for function ___wmul
 11419  1ACC                     ___wmul:	
 11420  1ACC                     l3345:	
 11421                           ;incstack = 0
 11422                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11423                           
 11424  1ACC  01F4               	clrf	___wmul@product
 11425  1ACD  01F5               	clrf	___wmul@product+1
 11426  1ACE                     l3347:	
 11427  1ACE  1C70               	btfss	___wmul@multiplier,0
 11428  1ACF  2AD1               	goto	u3961
 11429  1AD0  2AD2               	goto	u3960
 11430  1AD1                     u3961:	
 11431  1AD1  2AD6               	goto	l608
 11432  1AD2                     u3960:	
 11433  1AD2                     l3349:	
 11434  1AD2  0872               	movf	___wmul@multiplicand,w
 11435  1AD3  07F4               	addwf	___wmul@product,f
 11436  1AD4  0873               	movf	___wmul@multiplicand+1,w
 11437  1AD5  3DF5               	addwfc	___wmul@product+1,f
 11438  1AD6                     l608:	
 11439  1AD6  3001               	movlw	1
 11440  1AD7                     u3975:	
 11441  1AD7  35F2               	lslf	___wmul@multiplicand,f
 11442  1AD8  0DF3               	rlf	___wmul@multiplicand+1,f
 11443  1AD9  0B89               	decfsz	9,f
 11444  1ADA  2AD7               	goto	u3975
 11445  1ADB                     l3351:	
 11446  1ADB  3001               	movlw	1
 11447  1ADC                     u3985:	
 11448  1ADC  36F1               	lsrf	___wmul@multiplier+1,f
 11449  1ADD  0CF0               	rrf	___wmul@multiplier,f
 11450  1ADE  0B89               	decfsz	9,f
 11451  1ADF  2ADC               	goto	u3985
 11452  1AE0                     l3353:	
 11453  1AE0  0870               	movf	___wmul@multiplier,w
 11454  1AE1  0471               	iorwf	___wmul@multiplier+1,w
 11455  1AE2  1D03               	btfss	3,2
 11456  1AE3  2AE5               	goto	u3991
 11457  1AE4  2AE6               	goto	u3990
 11458  1AE5                     u3991:	
 11459  1AE5  2ACE               	goto	l3347
 11460  1AE6                     u3990:	
 11461  1AE6                     l3355:	
 11462  1AE6  0875               	movf	___wmul@product+1,w
 11463  1AE7  00F1               	movwf	?___wmul+1
 11464  1AE8  0874               	movf	___wmul@product,w
 11465  1AE9  00F0               	movwf	?___wmul
 11466  1AEA                     l610:	
 11467  1AEA  0008               	return
 11468  1AEB                     __end_of___wmul:	
 11469                           
 11470                           	psect	text31
 11471  1DB1                     __ptext31:	
 11472 ;; *************** function _read_U *****************
 11473 ;; Defined at:
 11474 ;;		line 157 in file "main.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;		None
 11477 ;; Auto vars:     Size  Location     Type
 11478 ;;		None
 11479 ;; Return value:  Size  Location     Type
 11480 ;;                  1    wreg      unsigned char 
 11481 ;; Registers used:
 11482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11490 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11491 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11492 ;;Total ram usage:        6 bytes
 11493 ;; Hardware stack levels used:    1
 11494 ;; This function calls:
 11495 ;;		Nothing
 11496 ;; This function is called by:
 11497 ;;		_main
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           
 11502                           ;psect for function _read_U
 11503  1DB1                     _read_U:	
 11504  1DB1                     l4525:	
 11505                           ;incstack = 0
 11506                           ; Regs used in _read_U: [wreg-fsr1h+status,2+status,0]
 11507                           
 11508                           
 11509                           ;main.c: 159:     ADCON0=0b00011001;
 11510  1DB1  3019               	movlw	25
 11511  1DB2  0021               	movlb	1	; select bank1
 11512  1DB3  009D               	movwf	29	;volatile
 11513                           
 11514                           ;main.c: 160:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 11515  1DB4  3042               	movlw	66
 11516  1DB5                     u6267:	
 11517  1DB5  0B89               	decfsz	9,f
 11518  1DB6  2DB5               	goto	u6267
 11519  1DB7  3200               	nop2
 11520  1DB8                     l4527:	
 11521                           
 11522                           ;main.c: 161:     ADCON0bits.GO=1;
 11523  1DB8  0021               	movlb	1	; select bank1
 11524  1DB9  149D               	bsf	29,1	;volatile
 11525  1DBA                     l100:	
 11526                           ;main.c: 162:     while(ADCON0bits.GO==1){};
 11527                           
 11528  1DBA  189D               	btfsc	29,1	;volatile
 11529  1DBB  2DBD               	goto	u5961
 11530  1DBC  2DBE               	goto	u5960
 11531  1DBD                     u5961:	
 11532  1DBD  2DBA               	goto	l100
 11533  1DBE                     u5960:	
 11534  1DBE                     l4529:	
 11535                           
 11536                           ;main.c: 163:     esantion_curent_u=ADRESH;
 11537  1DBE  081C               	movf	28,w	;volatile
 11538  1DBF  00F0               	movwf	??_read_U
 11539  1DC0  01F1               	clrf	??_read_U+1
 11540  1DC1  0870               	movf	??_read_U,w
 11541  1DC2  0022               	movlb	2	; select bank2
 11542  1DC3  00E9               	movwf	_esantion_curent_u^(0+256)
 11543  1DC4  0871               	movf	??_read_U+1,w
 11544  1DC5  00EA               	movwf	(_esantion_curent_u+1)^(0+256)
 11545  1DC6                     l4531:	
 11546                           
 11547                           ;main.c: 164:     esantioane_u[0]=(esantion_curent_u+esantioane_u[1]+esantioane_u[2]+esa
      +                          ntioane_u[3])/4;
 11548  1DC6  3006               	movlw	6
 11549  1DC7  3EB0               	addlw	(low (_esantioane_u| (0+256)))& (0+255)
 11550  1DC8  0086               	movwf	6
 11551  1DC9  3001               	movlw	1	; select bank3/4
 11552  1DCA  0087               	movwf	7
 11553  1DCB  3004               	movlw	4
 11554  1DCC  3EB0               	addlw	(low (_esantioane_u| (0+256)))& (0+255)
 11555  1DCD  0084               	movwf	4
 11556  1DCE  3001               	movlw	1	; select bank3/4
 11557  1DCF  0085               	movwf	5
 11558  1DD0  3F00               	moviw [0]fsr0
 11559  1DD1  0023               	movlb	3	; select bank3
 11560  1DD2  0732               	addwf	(_esantioane_u^(0+384)+2),w
 11561  1DD3  00F0               	movwf	??_read_U
 11562  1DD4  3F01               	moviw [1]fsr0
 11563  1DD5  3D33               	addwfc	((_esantioane_u+1)^(0+384)+2),w
 11564  1DD6  00F1               	movwf	??_read_U+1
 11565  1DD7  3F40               	moviw [0]fsr1
 11566  1DD8  0770               	addwf	??_read_U,w
 11567  1DD9  00F2               	movwf	??_read_U+2
 11568  1DDA  3F41               	moviw [1]fsr1
 11569  1DDB  3D71               	addwfc	??_read_U+1,w
 11570  1DDC  00F3               	movwf	??_read_U+3
 11571  1DDD  0022               	movlb	2	; select bank2
 11572  1DDE  0869               	movf	_esantion_curent_u^(0+256),w
 11573  1DDF  0772               	addwf	??_read_U+2,w
 11574  1DE0  00F4               	movwf	??_read_U+4
 11575  1DE1  086A               	movf	(_esantion_curent_u+1)^(0+256),w
 11576  1DE2  3D73               	addwfc	??_read_U+3,w
 11577  1DE3  00F5               	movwf	??_read_U+5
 11578  1DE4  36F5               	lsrf	??_read_U+5,f
 11579  1DE5  0CF4               	rrf	??_read_U+4,f
 11580  1DE6  36F5               	lsrf	??_read_U+5,f
 11581  1DE7  0CF4               	rrf	??_read_U+4,f
 11582  1DE8  0874               	movf	??_read_U+4,w
 11583  1DE9  0023               	movlb	3	; select bank3
 11584  1DEA  00B0               	movwf	_esantioane_u^(0+384)
 11585  1DEB  0875               	movf	??_read_U+5,w
 11586  1DEC  00B1               	movwf	(_esantioane_u+1)^(0+384)
 11587  1DED                     l4533:	
 11588                           
 11589                           ;main.c: 165:     esantioane_u[3]=esantioane_u[2];
 11590  1DED  0835               	movf	((_esantioane_u+1)^(0+384)+4),w
 11591  1DEE  00B7               	movwf	((_esantioane_u+1)^(0+384)+6)
 11592  1DEF  0834               	movf	(_esantioane_u^(0+384)+4),w
 11593  1DF0  00B6               	movwf	(_esantioane_u^(0+384)+6)
 11594  1DF1                     l4535:	
 11595                           
 11596                           ;main.c: 166:     esantioane_u[2]=esantioane_u[1];
 11597  1DF1  0833               	movf	((_esantioane_u+1)^(0+384)+2),w
 11598  1DF2  00B5               	movwf	((_esantioane_u+1)^(0+384)+4)
 11599  1DF3  0832               	movf	(_esantioane_u^(0+384)+2),w
 11600  1DF4  00B4               	movwf	(_esantioane_u^(0+384)+4)
 11601  1DF5                     l4537:	
 11602                           
 11603                           ;main.c: 167:     esantioane_u[1]=esantioane_u[0];
 11604  1DF5  0831               	movf	(_esantioane_u+1)^(0+384),w
 11605  1DF6  00B3               	movwf	((_esantioane_u+1)^(0+384)+2)
 11606  1DF7  0830               	movf	_esantioane_u^(0+384),w
 11607  1DF8  00B2               	movwf	(_esantioane_u^(0+384)+2)
 11608  1DF9                     l4539:	
 11609                           
 11610                           ;main.c: 169:     return esantioane_u[0];
 11611  1DF9  0830               	movf	_esantioane_u^(0+384),w
 11612  1DFA                     l103:	
 11613  1DFA  0008               	return
 11614  1DFB                     __end_of_read_U:	
 11615                           
 11616                           	psect	text32
 11617  1D67                     __ptext32:	
 11618 ;; *************** function _read_Temp *****************
 11619 ;; Defined at:
 11620 ;;		line 142 in file "main.c"
 11621 ;; Parameters:    Size  Location     Type
 11622 ;;		None
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;		None
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  1    wreg      unsigned char 
 11627 ;; Registers used:
 11628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11638 ;;Total ram usage:        6 bytes
 11639 ;; Hardware stack levels used:    1
 11640 ;; This function calls:
 11641 ;;		Nothing
 11642 ;; This function is called by:
 11643 ;;		_main
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647                           
 11648                           ;psect for function _read_Temp
 11649  1D67                     _read_Temp:	
 11650  1D67                     l4489:	
 11651                           ;incstack = 0
 11652                           ; Regs used in _read_Temp: [wreg-fsr1h+status,2+status,0]
 11653                           
 11654                           
 11655                           ;main.c: 144:     ADCON0=0b00001101;
 11656  1D67  300D               	movlw	13
 11657  1D68  0021               	movlb	1	; select bank1
 11658  1D69  009D               	movwf	29	;volatile
 11659                           
 11660                           ;main.c: 145:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 11661  1D6A  3042               	movlw	66
 11662  1D6B                     u6277:	
 11663  1D6B  0B89               	decfsz	9,f
 11664  1D6C  2D6B               	goto	u6277
 11665  1D6D  3200               	nop2
 11666  1D6E                     l4491:	
 11667                           
 11668                           ;main.c: 146:     ADCON0bits.GO=1;
 11669  1D6E  0021               	movlb	1	; select bank1
 11670  1D6F  149D               	bsf	29,1	;volatile
 11671  1D70                     l94:	
 11672                           ;main.c: 147:     while(ADCON0bits.GO==1){};
 11673                           
 11674  1D70  189D               	btfsc	29,1	;volatile
 11675  1D71  2D73               	goto	u5941
 11676  1D72  2D74               	goto	u5940
 11677  1D73                     u5941:	
 11678  1D73  2D70               	goto	l94
 11679  1D74                     u5940:	
 11680  1D74                     l4493:	
 11681                           
 11682                           ;main.c: 148:     esantion_curent_t=ADRESH;
 11683  1D74  081C               	movf	28,w	;volatile
 11684  1D75  00F0               	movwf	??_read_Temp
 11685  1D76  01F1               	clrf	??_read_Temp+1
 11686  1D77  0870               	movf	??_read_Temp,w
 11687  1D78  0022               	movlb	2	; select bank2
 11688  1D79  00E5               	movwf	_esantion_curent_t^(0+256)
 11689  1D7A  0871               	movf	??_read_Temp+1,w
 11690  1D7B  00E6               	movwf	(_esantion_curent_t+1)^(0+256)
 11691  1D7C                     l4495:	
 11692                           
 11693                           ;main.c: 149:     esantioane_t[0]=(esantion_curent_t+esantioane_t[1]+esantioane_t[2]+esa
      +                          ntioane_t[3])/4;
 11694  1D7C  3006               	movlw	6
 11695  1D7D  3EA0               	addlw	(low (_esantioane_t| (0+256)))& (0+255)
 11696  1D7E  0086               	movwf	6
 11697  1D7F  3001               	movlw	1	; select bank3/4
 11698  1D80  0087               	movwf	7
 11699  1D81  3004               	movlw	4
 11700  1D82  3EA0               	addlw	(low (_esantioane_t| (0+256)))& (0+255)
 11701  1D83  0084               	movwf	4
 11702  1D84  3001               	movlw	1	; select bank3/4
 11703  1D85  0085               	movwf	5
 11704  1D86  3F00               	moviw [0]fsr0
 11705  1D87  0023               	movlb	3	; select bank3
 11706  1D88  0722               	addwf	(_esantioane_t^(0+384)+2),w
 11707  1D89  00F0               	movwf	??_read_Temp
 11708  1D8A  3F01               	moviw [1]fsr0
 11709  1D8B  3D23               	addwfc	((_esantioane_t+1)^(0+384)+2),w
 11710  1D8C  00F1               	movwf	??_read_Temp+1
 11711  1D8D  3F40               	moviw [0]fsr1
 11712  1D8E  0770               	addwf	??_read_Temp,w
 11713  1D8F  00F2               	movwf	??_read_Temp+2
 11714  1D90  3F41               	moviw [1]fsr1
 11715  1D91  3D71               	addwfc	??_read_Temp+1,w
 11716  1D92  00F3               	movwf	??_read_Temp+3
 11717  1D93  0022               	movlb	2	; select bank2
 11718  1D94  0865               	movf	_esantion_curent_t^(0+256),w
 11719  1D95  0772               	addwf	??_read_Temp+2,w
 11720  1D96  00F4               	movwf	??_read_Temp+4
 11721  1D97  0866               	movf	(_esantion_curent_t+1)^(0+256),w
 11722  1D98  3D73               	addwfc	??_read_Temp+3,w
 11723  1D99  00F5               	movwf	??_read_Temp+5
 11724  1D9A  36F5               	lsrf	??_read_Temp+5,f
 11725  1D9B  0CF4               	rrf	??_read_Temp+4,f
 11726  1D9C  36F5               	lsrf	??_read_Temp+5,f
 11727  1D9D  0CF4               	rrf	??_read_Temp+4,f
 11728  1D9E  0874               	movf	??_read_Temp+4,w
 11729  1D9F  0023               	movlb	3	; select bank3
 11730  1DA0  00A0               	movwf	_esantioane_t^(0+384)
 11731  1DA1  0875               	movf	??_read_Temp+5,w
 11732  1DA2  00A1               	movwf	(_esantioane_t+1)^(0+384)
 11733  1DA3                     l4497:	
 11734                           
 11735                           ;main.c: 150:     esantioane_t[3]=esantioane_t[2];
 11736  1DA3  0825               	movf	((_esantioane_t+1)^(0+384)+4),w
 11737  1DA4  00A7               	movwf	((_esantioane_t+1)^(0+384)+6)
 11738  1DA5  0824               	movf	(_esantioane_t^(0+384)+4),w
 11739  1DA6  00A6               	movwf	(_esantioane_t^(0+384)+6)
 11740  1DA7                     l4499:	
 11741                           
 11742                           ;main.c: 151:     esantioane_t[2]=esantioane_t[1];
 11743  1DA7  0823               	movf	((_esantioane_t+1)^(0+384)+2),w
 11744  1DA8  00A5               	movwf	((_esantioane_t+1)^(0+384)+4)
 11745  1DA9  0822               	movf	(_esantioane_t^(0+384)+2),w
 11746  1DAA  00A4               	movwf	(_esantioane_t^(0+384)+4)
 11747  1DAB                     l4501:	
 11748                           
 11749                           ;main.c: 152:     esantioane_t[1]=esantioane_t[0];
 11750  1DAB  0821               	movf	(_esantioane_t+1)^(0+384),w
 11751  1DAC  00A3               	movwf	((_esantioane_t+1)^(0+384)+2)
 11752  1DAD  0820               	movf	_esantioane_t^(0+384),w
 11753  1DAE  00A2               	movwf	(_esantioane_t^(0+384)+2)
 11754  1DAF                     l4503:	
 11755                           
 11756                           ;main.c: 154:     return esantioane_t[0];
 11757  1DAF  0820               	movf	_esantioane_t^(0+384),w
 11758  1DB0                     l97:	
 11759  1DB0  0008               	return
 11760  1DB1                     __end_of_read_Temp:	
 11761                           
 11762                           	psect	text33
 11763  1D1D                     __ptext33:	
 11764 ;; *************** function _read_I *****************
 11765 ;; Defined at:
 11766 ;;		line 172 in file "main.c"
 11767 ;; Parameters:    Size  Location     Type
 11768 ;;		None
 11769 ;; Auto vars:     Size  Location     Type
 11770 ;;		None
 11771 ;; Return value:  Size  Location     Type
 11772 ;;                  1    wreg      unsigned char 
 11773 ;; Registers used:
 11774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11775 ;; Tracked objects:
 11776 ;;		On entry : 0/0
 11777 ;;		On exit  : 0/0
 11778 ;;		Unchanged: 0/0
 11779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;Total ram usage:        6 bytes
 11785 ;; Hardware stack levels used:    1
 11786 ;; This function calls:
 11787 ;;		Nothing
 11788 ;; This function is called by:
 11789 ;;		_main
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           
 11794                           ;psect for function _read_I
 11795  1D1D                     _read_I:	
 11796  1D1D                     l4507:	
 11797                           ;incstack = 0
 11798                           ; Regs used in _read_I: [wreg-fsr1h+status,2+status,0]
 11799                           
 11800                           
 11801                           ;main.c: 174:     ADCON0=0b00011101;
 11802  1D1D  301D               	movlw	29
 11803  1D1E  0021               	movlb	1	; select bank1
 11804  1D1F  009D               	movwf	29	;volatile
 11805                           
 11806                           ;main.c: 175:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 11807  1D20  3042               	movlw	66
 11808  1D21                     u6287:	
 11809  1D21  0B89               	decfsz	9,f
 11810  1D22  2D21               	goto	u6287
 11811  1D23  3200               	nop2
 11812  1D24                     l4509:	
 11813                           
 11814                           ;main.c: 176:     ADCON0bits.GO=1;
 11815  1D24  0021               	movlb	1	; select bank1
 11816  1D25  149D               	bsf	29,1	;volatile
 11817  1D26                     l106:	
 11818                           ;main.c: 177:     while(ADCON0bits.GO==1){};
 11819                           
 11820  1D26  189D               	btfsc	29,1	;volatile
 11821  1D27  2D29               	goto	u5951
 11822  1D28  2D2A               	goto	u5950
 11823  1D29                     u5951:	
 11824  1D29  2D26               	goto	l106
 11825  1D2A                     u5950:	
 11826  1D2A                     l4511:	
 11827                           
 11828                           ;main.c: 178:     esantion_curent_i=ADRESH;
 11829  1D2A  081C               	movf	28,w	;volatile
 11830  1D2B  00F0               	movwf	??_read_I
 11831  1D2C  01F1               	clrf	??_read_I+1
 11832  1D2D  0870               	movf	??_read_I,w
 11833  1D2E  0022               	movlb	2	; select bank2
 11834  1D2F  00E7               	movwf	_esantion_curent_i^(0+256)
 11835  1D30  0871               	movf	??_read_I+1,w
 11836  1D31  00E8               	movwf	(_esantion_curent_i+1)^(0+256)
 11837  1D32                     l4513:	
 11838                           
 11839                           ;main.c: 179:     esantioane_i[0]=(esantion_curent_i+esantioane_i[1]+esantioane_i[2]+esa
      +                          ntioane_i[3])/4;
 11840  1D32  3006               	movlw	6
 11841  1D33  3EA8               	addlw	(low (_esantioane_i| (0+256)))& (0+255)
 11842  1D34  0086               	movwf	6
 11843  1D35  3001               	movlw	1	; select bank3/4
 11844  1D36  0087               	movwf	7
 11845  1D37  3004               	movlw	4
 11846  1D38  3EA8               	addlw	(low (_esantioane_i| (0+256)))& (0+255)
 11847  1D39  0084               	movwf	4
 11848  1D3A  3001               	movlw	1	; select bank3/4
 11849  1D3B  0085               	movwf	5
 11850  1D3C  3F00               	moviw [0]fsr0
 11851  1D3D  0023               	movlb	3	; select bank3
 11852  1D3E  072A               	addwf	(_esantioane_i^(0+384)+2),w
 11853  1D3F  00F0               	movwf	??_read_I
 11854  1D40  3F01               	moviw [1]fsr0
 11855  1D41  3D2B               	addwfc	((_esantioane_i+1)^(0+384)+2),w
 11856  1D42  00F1               	movwf	??_read_I+1
 11857  1D43  3F40               	moviw [0]fsr1
 11858  1D44  0770               	addwf	??_read_I,w
 11859  1D45  00F2               	movwf	??_read_I+2
 11860  1D46  3F41               	moviw [1]fsr1
 11861  1D47  3D71               	addwfc	??_read_I+1,w
 11862  1D48  00F3               	movwf	??_read_I+3
 11863  1D49  0022               	movlb	2	; select bank2
 11864  1D4A  0867               	movf	_esantion_curent_i^(0+256),w
 11865  1D4B  0772               	addwf	??_read_I+2,w
 11866  1D4C  00F4               	movwf	??_read_I+4
 11867  1D4D  0868               	movf	(_esantion_curent_i+1)^(0+256),w
 11868  1D4E  3D73               	addwfc	??_read_I+3,w
 11869  1D4F  00F5               	movwf	??_read_I+5
 11870  1D50  36F5               	lsrf	??_read_I+5,f
 11871  1D51  0CF4               	rrf	??_read_I+4,f
 11872  1D52  36F5               	lsrf	??_read_I+5,f
 11873  1D53  0CF4               	rrf	??_read_I+4,f
 11874  1D54  0874               	movf	??_read_I+4,w
 11875  1D55  0023               	movlb	3	; select bank3
 11876  1D56  00A8               	movwf	_esantioane_i^(0+384)
 11877  1D57  0875               	movf	??_read_I+5,w
 11878  1D58  00A9               	movwf	(_esantioane_i+1)^(0+384)
 11879  1D59                     l4515:	
 11880                           
 11881                           ;main.c: 180:     esantioane_i[3]=esantioane_i[2];
 11882  1D59  082D               	movf	((_esantioane_i+1)^(0+384)+4),w
 11883  1D5A  00AF               	movwf	((_esantioane_i+1)^(0+384)+6)
 11884  1D5B  082C               	movf	(_esantioane_i^(0+384)+4),w
 11885  1D5C  00AE               	movwf	(_esantioane_i^(0+384)+6)
 11886  1D5D                     l4517:	
 11887                           
 11888                           ;main.c: 181:     esantioane_i[2]=esantioane_i[1];
 11889  1D5D  082B               	movf	((_esantioane_i+1)^(0+384)+2),w
 11890  1D5E  00AD               	movwf	((_esantioane_i+1)^(0+384)+4)
 11891  1D5F  082A               	movf	(_esantioane_i^(0+384)+2),w
 11892  1D60  00AC               	movwf	(_esantioane_i^(0+384)+4)
 11893  1D61                     l4519:	
 11894                           
 11895                           ;main.c: 182:     esantioane_i[1]=esantioane_i[0];
 11896  1D61  0829               	movf	(_esantioane_i+1)^(0+384),w
 11897  1D62  00AB               	movwf	((_esantioane_i+1)^(0+384)+2)
 11898  1D63  0828               	movf	_esantioane_i^(0+384),w
 11899  1D64  00AA               	movwf	(_esantioane_i^(0+384)+2)
 11900  1D65                     l4521:	
 11901                           
 11902                           ;main.c: 184:     return esantioane_i[0];
 11903  1D65  0828               	movf	_esantioane_i^(0+384),w
 11904  1D66                     l109:	
 11905  1D66  0008               	return
 11906  1D67                     __end_of_read_I:	
 11907                           
 11908                           	psect	text34
 11909  1A34                     __ptext34:	
 11910 ;; *************** function _pwm_config *****************
 11911 ;; Defined at:
 11912 ;;		line 68 in file "config.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;		None
 11915 ;; Auto vars:     Size  Location     Type
 11916 ;;		None
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  1    wreg      void 
 11919 ;; Registers used:
 11920 ;;		wreg, status,2
 11921 ;; Tracked objects:
 11922 ;;		On entry : 0/0
 11923 ;;		On exit  : 0/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11930 ;;Total ram usage:        0 bytes
 11931 ;; Hardware stack levels used:    1
 11932 ;; This function calls:
 11933 ;;		Nothing
 11934 ;; This function is called by:
 11935 ;;		_main
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           
 11940                           ;psect for function _pwm_config
 11941  1A34                     _pwm_config:	
 11942  1A34                     l4471:	
 11943                           ;incstack = 0
 11944                           ; Regs used in _pwm_config: [wreg+status,2]
 11945                           
 11946                           
 11947                           ;config.c: 70:     TRISAbits.TRISA5 = 1;
 11948  1A34  0021               	movlb	1	; select bank1
 11949  1A35  168C               	bsf	12,5	;volatile
 11950                           
 11951                           ;config.c: 71:     PIR1bits.TMR2IF = 0;
 11952  1A36  0020               	movlb	0	; select bank0
 11953  1A37  1091               	bcf	17,1	;volatile
 11954                           
 11955                           ;config.c: 72:     APFCON1bits.CCP2SEL = 1;
 11956  1A38  0022               	movlb	2	; select bank2
 11957  1A39  141E               	bsf	30,0	;volatile
 11958  1A3A                     l4473:	
 11959                           
 11960                           ;config.c: 73:     CCP2CON=0b00001100;
 11961  1A3A  300C               	movlw	12
 11962  1A3B  0025               	movlb	5	; select bank5
 11963  1A3C  009A               	movwf	26	;volatile
 11964  1A3D                     l4475:	
 11965                           
 11966                           ;config.c: 74:     CCPTMRS = 0b00000000;
 11967  1A3D  019E               	clrf	30	;volatile
 11968  1A3E                     l4477:	
 11969                           
 11970                           ;config.c: 75:     CCP2AS=0b00000000;
 11971  1A3E  019C               	clrf	28	;volatile
 11972                           
 11973                           ;config.c: 76:     PR2=0x65;
 11974  1A3F  3065               	movlw	101
 11975  1A40  0020               	movlb	0	; select bank0
 11976  1A41  009B               	movwf	27	;volatile
 11977  1A42                     l4479:	
 11978                           
 11979                           ;config.c: 77:     CCPR2L=0;
 11980  1A42  0025               	movlb	5	; select bank5
 11981  1A43  0198               	clrf	24	;volatile
 11982  1A44                     l4481:	
 11983                           
 11984                           ;config.c: 78:     T2CON=0b00000100;
 11985  1A44  3004               	movlw	4
 11986  1A45  0020               	movlb	0	; select bank0
 11987  1A46  009C               	movwf	28	;volatile
 11988  1A47                     l4483:	
 11989                           
 11990                           ;config.c: 79:     TRISAbits.TRISA5 = 0;
 11991  1A47  0021               	movlb	1	; select bank1
 11992  1A48  128C               	bcf	12,5	;volatile
 11993  1A49                     l177:	
 11994  1A49  0008               	return
 11995  1A4A                     __end_of_pwm_config:	
 11996                           
 11997                           	psect	text35
 11998  103B                     __ptext35:	
 11999 ;; *************** function _config *****************
 12000 ;; Defined at:
 12001 ;;		line 13 in file "config.c"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;		None
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;		None
 12006 ;; Return value:  Size  Location     Type
 12007 ;;                  1    wreg      void 
 12008 ;; Registers used:
 12009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12010 ;; Tracked objects:
 12011 ;;		On entry : 0/0
 12012 ;;		On exit  : 0/0
 12013 ;;		Unchanged: 0/0
 12014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12017 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12018 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12019 ;;Total ram usage:        2 bytes
 12020 ;; Hardware stack levels used:    1
 12021 ;; Hardware stack levels required when called:    5
 12022 ;; This function calls:
 12023 ;;		_Cursor_Off
 12024 ;;		_I2C_Master_Init
 12025 ;;		_Lcd_Clear
 12026 ;;		_Lcd_Init
 12027 ;;		_Lcd_Set_Cursor
 12028 ;;		_Lcd_Write_String
 12029 ;; This function is called by:
 12030 ;;		_main
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           
 12035                           ;psect for function _config
 12036  103B                     _config:	
 12037  103B                     l4431:	
 12038                           ;incstack = 0
 12039                           ; Regs used in _config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12040                           
 12041                           
 12042                           ;config.c: 15:     OSCCONbits.IRCF0=0;
 12043  103B  0021               	movlb	1	; select bank1
 12044  103C  1199               	bcf	25,3	;volatile
 12045                           
 12046                           ;config.c: 16:     OSCCONbits.IRCF1=1;
 12047  103D  1619               	bsf	25,4	;volatile
 12048                           
 12049                           ;config.c: 17:     OSCCONbits.IRCF2=1;
 12050  103E  1699               	bsf	25,5	;volatile
 12051                           
 12052                           ;config.c: 18:     OSCCONbits.IRCF3=1;
 12053  103F  1719               	bsf	25,6	;volatile
 12054                           
 12055                           ;config.c: 20:     INTCONbits.GIE = 0;
 12056  1040  138B               	bcf	11,7	;volatile
 12057                           
 12058                           ;config.c: 21:     INTCONbits.INTE = 0;
 12059  1041  120B               	bcf	11,4	;volatile
 12060                           
 12061                           ;config.c: 22:     INTCONbits.PEIE = 0;
 12062  1042  130B               	bcf	11,6	;volatile
 12063  1043                     l4433:	
 12064                           
 12065                           ;config.c: 24:     ANSELA=0X00;
 12066  1043  0023               	movlb	3	; select bank3
 12067  1044  018C               	clrf	12	;volatile
 12068                           
 12069                           ;config.c: 25:     ANSELC=0X00;
 12070  1045  018E               	clrf	14	;volatile
 12071                           
 12072                           ;config.c: 26:     TRISA=0X00;
 12073  1046  0021               	movlb	1	; select bank1
 12074  1047  018C               	clrf	12	;volatile
 12075                           
 12076                           ;config.c: 27:     TRISC=0X00;
 12077  1048  018E               	clrf	14	;volatile
 12078                           
 12079                           ;config.c: 28:     PORTA=0X00;
 12080  1049  0020               	movlb	0	; select bank0
 12081  104A  018C               	clrf	12	;volatile
 12082                           
 12083                           ;config.c: 29:     PORTC=0X00;
 12084  104B  018E               	clrf	14	;volatile
 12085                           
 12086                           ;config.c: 30:     LATA=0X00;
 12087  104C  0022               	movlb	2	; select bank2
 12088  104D  018C               	clrf	12	;volatile
 12089                           
 12090                           ;config.c: 31:     LATC=0X00;
 12091  104E  018E               	clrf	14	;volatile
 12092  104F                     l4435:	
 12093                           
 12094                           ;config.c: 34:     TRISAbits.TRISA0 = 1;
 12095  104F  0021               	movlb	1	; select bank1
 12096  1050  140C               	bsf	12,0	;volatile
 12097  1051                     l4437:	
 12098                           
 12099                           ;config.c: 35:     TRISAbits.TRISA1 = 1;
 12100  1051  148C               	bsf	12,1	;volatile
 12101  1052                     l4439:	
 12102                           
 12103                           ;config.c: 36:     TRISAbits.TRISA2 = 1;
 12104  1052  150C               	bsf	12,2	;volatile
 12105  1053                     l4441:	
 12106                           
 12107                           ;config.c: 39:     TRISCbits.TRISC4 = 0;
 12108  1053  120E               	bcf	14,4	;volatile
 12109  1054                     l4443:	
 12110                           
 12111                           ;config.c: 40:     TRISCbits.TRISC5 = 0;
 12112  1054  128E               	bcf	14,5	;volatile
 12113  1055                     l4445:	
 12114                           
 12115                           ;config.c: 45:     TRISAbits.TRISA4 = 1;
 12116  1055  160C               	bsf	12,4	;volatile
 12117  1056                     l4447:	
 12118                           
 12119                           ;config.c: 46:     TRISCbits.TRISC2 = 1;
 12120  1056  150E               	bsf	14,2	;volatile
 12121  1057                     l4449:	
 12122                           
 12123                           ;config.c: 47:     TRISCbits.TRISC3 = 1;
 12124  1057  158E               	bsf	14,3	;volatile
 12125  1058                     l4451:	
 12126                           
 12127                           ;config.c: 50:     TRISCbits.TRISC0=1;
 12128  1058  140E               	bsf	14,0	;volatile
 12129  1059                     l4453:	
 12130                           
 12131                           ;config.c: 51:     TRISCbits.TRISC1=1;
 12132  1059  148E               	bsf	14,1	;volatile
 12133  105A                     l4455:	
 12134                           
 12135                           ;config.c: 52:     I2C_Master_Init(100000);
 12136  105A  3000               	movlw	0
 12137  105B  0020               	movlb	0	; select bank0
 12138  105C  00A3               	movwf	I2C_Master_Init@c+3
 12139  105D  3001               	movlw	1
 12140  105E  00A2               	movwf	I2C_Master_Init@c+2
 12141  105F  3086               	movlw	134
 12142  1060  00A1               	movwf	I2C_Master_Init@c+1
 12143  1061  30A0               	movlw	160
 12144  1062  00A0               	movwf	I2C_Master_Init@c
 12145  1063  319B  23F1  3190   	fcall	_I2C_Master_Init
 12146  1066                     l4457:	
 12147                           
 12148                           ;config.c: 53:     _delay((unsigned long)((100)*(8000000/4000.0)));
 12149  1066  3002               	movlw	2
 12150  1067  0020               	movlb	0	; select bank0
 12151  1068  00A9               	movwf	??_config+1
 12152  1069  3004               	movlw	4
 12153  106A  00A8               	movwf	??_config
 12154  106B  30BA               	movlw	186
 12155  106C                     u6297:	
 12156  106C  0B89               	decfsz	9,f
 12157  106D  286C               	goto	u6297
 12158  106E  0BA8               	decfsz	??_config,f
 12159  106F  286C               	goto	u6297
 12160  1070  0BA9               	decfsz	??_config+1,f
 12161  1071  286C               	goto	u6297
 12162  1072  0000               	nop
 12163  1073                     l4459:	
 12164                           
 12165                           ;config.c: 54:     Lcd_Init();
 12166  1073  319C  2491  3190   	fcall	_Lcd_Init
 12167  1076                     l4461:	
 12168                           
 12169                           ;config.c: 55:     Lcd_Clear();
 12170  1076  319A  2214  3190   	fcall	_Lcd_Clear
 12171  1079                     l4463:	
 12172                           
 12173                           ;config.c: 56:     Cursor_Off();
 12174  1079  319A  220B  3190   	fcall	_Cursor_Off
 12175  107C                     l4465:	
 12176                           
 12177                           ;config.c: 57:     Lcd_Set_Cursor(1,1);
 12178  107C  01FB               	clrf	Lcd_Set_Cursor@b
 12179  107D  0AFB               	incf	Lcd_Set_Cursor@b,f
 12180  107E  3001               	movlw	1
 12181  107F  319C  24D4  3190   	fcall	_Lcd_Set_Cursor
 12182  1082                     l4467:	
 12183                           
 12184                           ;config.c: 58:     Lcd_Write_String("Paul Iorga");
 12185  1082  3028               	movlw	low (STR_10| (0+32768))
 12186  1083  00FA               	movwf	Lcd_Write_String@a
 12187  1084  3098               	movlw	high (STR_10| (0+32768))
 12188  1085  00FB               	movwf	Lcd_Write_String@a+1
 12189  1086  319A  22AD  3190   	fcall	_Lcd_Write_String
 12190  1089                     l4469:	
 12191                           
 12192                           ;config.c: 59:     _delay((unsigned long)((2000)*(8000000/4000.0)));
 12193  1089  3015               	movlw	21
 12194  108A  0020               	movlb	0	; select bank0
 12195  108B  00A9               	movwf	??_config+1
 12196  108C  304B               	movlw	75
 12197  108D  00A8               	movwf	??_config
 12198  108E  30BE               	movlw	190
 12199  108F                     u6307:	
 12200  108F  0B89               	decfsz	9,f
 12201  1090  288F               	goto	u6307
 12202  1091  0BA8               	decfsz	??_config,f
 12203  1092  288F               	goto	u6307
 12204  1093  0BA9               	decfsz	??_config+1,f
 12205  1094  288F               	goto	u6307
 12206  1095  0000               	nop
 12207  1096                     l174:	
 12208  1096  0008               	return
 12209  1097                     __end_of_config:	
 12210                           
 12211                           	psect	text36
 12212  1AAD                     __ptext36:	
 12213 ;; *************** function _Lcd_Write_String *****************
 12214 ;; Defined at:
 12215 ;;		line 114 in file "i2c_display.c"
 12216 ;; Parameters:    Size  Location     Type
 12217 ;;  a               2   10[COMMON] PTR unsigned char 
 12218 ;;		 -> STR_10(11), STR_9(12), STR_8(16), STR_7(12), 
 12219 ;;		 -> STR_6(3), STR_4(3), STR_2(3), temp(5), 
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;  i               2    0[BANK0 ] int 
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  1    wreg      void 
 12224 ;; Registers used:
 12225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12226 ;; Tracked objects:
 12227 ;;		On entry : 0/0
 12228 ;;		On exit  : 0/0
 12229 ;;		Unchanged: 0/0
 12230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12235 ;;Total ram usage:        5 bytes
 12236 ;; Hardware stack levels used:    1
 12237 ;; Hardware stack levels required when called:    4
 12238 ;; This function calls:
 12239 ;;		_Lcd_Write_Char
 12240 ;; This function is called by:
 12241 ;;		_main
 12242 ;;		_config
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           
 12247                           ;psect for function _Lcd_Write_String
 12248  1AAD                     _Lcd_Write_String:	
 12249  1AAD                     l4387:	
 12250                           ;incstack = 0
 12251                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12252                           
 12253                           
 12254                           ;i2c_display.c: 114: void Lcd_Write_String(char *a);i2c_display.c: 115: {;i2c_display.c:
      +                           116:  int i;;i2c_display.c: 117:  for(i=0;a[i]!='\0';i++)
 12255  1AAD  0020               	movlb	0	; select bank0
 12256  1AAE  01A0               	clrf	Lcd_Write_String@i
 12257  1AAF  01A1               	clrf	Lcd_Write_String@i+1
 12258  1AB0  2AC0               	goto	l4393
 12259  1AB1                     l4389:	
 12260                           
 12261                           ;i2c_display.c: 118:     Lcd_Write_Char(a[i]);
 12262  1AB1  087A               	movf	Lcd_Write_String@a,w
 12263  1AB2  0720               	addwf	Lcd_Write_String@i,w
 12264  1AB3  0084               	movwf	4
 12265  1AB4  087B               	movf	Lcd_Write_String@a+1,w
 12266  1AB5  3D21               	addwfc	Lcd_Write_String@i+1,w
 12267  1AB6  0085               	movwf	5
 12268  1AB7  0800               	movf	0,w	;code access
 12269  1AB8  319C  2452  319A   	fcall	_Lcd_Write_Char
 12270  1ABB                     l4391:	
 12271  1ABB  3001               	movlw	1
 12272  1ABC  0020               	movlb	0	; select bank0
 12273  1ABD  07A0               	addwf	Lcd_Write_String@i,f
 12274  1ABE  3000               	movlw	0
 12275  1ABF  3DA1               	addwfc	Lcd_Write_String@i+1,f
 12276  1AC0                     l4393:	
 12277  1AC0  087A               	movf	Lcd_Write_String@a,w
 12278  1AC1  0720               	addwf	Lcd_Write_String@i,w
 12279  1AC2  0084               	movwf	4
 12280  1AC3  087B               	movf	Lcd_Write_String@a+1,w
 12281  1AC4  3D21               	addwfc	Lcd_Write_String@i+1,w
 12282  1AC5  0085               	movwf	5
 12283  1AC6  0012               	moviw fsr0++
 12284  1AC7  1D03               	btfss	3,2
 12285  1AC8  2ACA               	goto	u5911
 12286  1AC9  2ACB               	goto	u5910
 12287  1ACA                     u5911:	
 12288  1ACA  2AB1               	goto	l4389
 12289  1ACB                     u5910:	
 12290  1ACB                     l235:	
 12291  1ACB  0008               	return
 12292  1ACC                     __end_of_Lcd_Write_String:	
 12293                           
 12294                           	psect	text37
 12295  1C52                     __ptext37:	
 12296 ;; *************** function _Lcd_Write_Char *****************
 12297 ;; Defined at:
 12298 ;;		line 90 in file "i2c_display.c"
 12299 ;; Parameters:    Size  Location     Type
 12300 ;;  a               1    wreg     unsigned char 
 12301 ;; Auto vars:     Size  Location     Type
 12302 ;;  a               1    7[COMMON] unsigned char 
 12303 ;;  temp            1    9[COMMON] unsigned char 
 12304 ;;  y               1    8[COMMON] unsigned char 
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      void 
 12307 ;; Registers used:
 12308 ;;		wreg, status,2, status,0, pclath, cstack
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12315 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;Total ram usage:        5 bytes
 12319 ;; Hardware stack levels used:    1
 12320 ;; Hardware stack levels required when called:    3
 12321 ;; This function calls:
 12322 ;;		_Lcd_Port
 12323 ;; This function is called by:
 12324 ;;		_Lcd_Write_String
 12325 ;; This function uses a non-reentrant model
 12326 ;;
 12327                           
 12328                           
 12329                           ;psect for function _Lcd_Write_Char
 12330  1C52                     _Lcd_Write_Char:	
 12331                           
 12332                           ;incstack = 0
 12333                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12334                           ;Lcd_Write_Char@a stored from wreg
 12335  1C52  00F7               	movwf	Lcd_Write_Char@a
 12336  1C53                     l4201:	
 12337                           
 12338                           ;i2c_display.c: 90: void Lcd_Write_Char(char a);i2c_display.c: 91: {;i2c_display.c: 92: 
      +                             char temp,y;;i2c_display.c: 93:    temp = a&0x0F;
 12339  1C53  0877               	movf	Lcd_Write_Char@a,w
 12340  1C54  390F               	andlw	15
 12341  1C55  00F5               	movwf	??_Lcd_Write_Char
 12342  1C56  0875               	movf	??_Lcd_Write_Char,w
 12343  1C57  00F9               	movwf	Lcd_Write_Char@temp
 12344  1C58                     l4203:	
 12345                           
 12346                           ;i2c_display.c: 94:    temp=temp<<4;
 12347  1C58  0879               	movf	Lcd_Write_Char@temp,w
 12348  1C59  00F5               	movwf	??_Lcd_Write_Char
 12349  1C5A  3003               	movlw	3
 12350  1C5B                     u5605:	
 12351  1C5B  35F5               	lslf	??_Lcd_Write_Char,f
 12352  1C5C  3EFF               	addlw	-1
 12353  1C5D  1D03               	skipz
 12354  1C5E  2C5B               	goto	u5605
 12355  1C5F  3575               	lslf	??_Lcd_Write_Char,w
 12356  1C60  00F6               	movwf	??_Lcd_Write_Char+1
 12357  1C61  0876               	movf	??_Lcd_Write_Char+1,w
 12358  1C62  00F9               	movwf	Lcd_Write_Char@temp
 12359  1C63                     l4205:	
 12360                           
 12361                           ;i2c_display.c: 95:    y = a&0xF0;
 12362  1C63  0877               	movf	Lcd_Write_Char@a,w
 12363  1C64  39F0               	andlw	240
 12364  1C65  00F5               	movwf	??_Lcd_Write_Char
 12365  1C66  0875               	movf	??_Lcd_Write_Char,w
 12366  1C67  00F8               	movwf	Lcd_Write_Char@y
 12367  1C68                     l4207:	
 12368                           
 12369                           ;i2c_display.c: 98:    Lcd_Port(0x00 | 0x01 | 0x00 | 0x00);
 12370  1C68  3001               	movlw	1
 12371  1C69  319A  227A  319C   	fcall	_Lcd_Port
 12372  1C6C                     l4209:	
 12373                           
 12374                           ;i2c_display.c: 99:    Lcd_Port(y);
 12375  1C6C  0878               	movf	Lcd_Write_Char@y,w
 12376  1C6D  319A  227A  319C   	fcall	_Lcd_Port
 12377  1C70                     l4211:	
 12378                           
 12379                           ;i2c_display.c: 101:    Lcd_Port(y | 0x01 | 0x04 | 0x00);
 12380  1C70  0878               	movf	Lcd_Write_Char@y,w
 12381  1C71  3805               	iorlw	5
 12382  1C72  319A  227A  319C   	fcall	_Lcd_Port
 12383  1C75                     l4213:	
 12384                           
 12385                           ;i2c_display.c: 102:    _delay((unsigned long)((40)*(8000000/4000000.0)));
 12386  1C75  301A               	movlw	26
 12387  1C76                     u6317:	
 12388  1C76  0B89               	decfsz	9,f
 12389  1C77  2C76               	goto	u6317
 12390  1C78  3200               	nop2
 12391  1C79                     l4215:	
 12392                           
 12393                           ;i2c_display.c: 104:    Lcd_Port(y | 0x01 | 0x00 | 0x00);
 12394  1C79  0878               	movf	Lcd_Write_Char@y,w
 12395  1C7A  3801               	iorlw	1
 12396  1C7B  319A  227A  319C   	fcall	_Lcd_Port
 12397  1C7E                     l4217:	
 12398                           
 12399                           ;i2c_display.c: 105:    Lcd_Port(temp);
 12400  1C7E  0879               	movf	Lcd_Write_Char@temp,w
 12401  1C7F  319A  227A  319C   	fcall	_Lcd_Port
 12402  1C82                     l4219:	
 12403                           
 12404                           ;i2c_display.c: 108:    Lcd_Port(temp | 0x01 | 0x04 | 0x00);
 12405  1C82  0879               	movf	Lcd_Write_Char@temp,w
 12406  1C83  3805               	iorlw	5
 12407  1C84  319A  227A  319C   	fcall	_Lcd_Port
 12408  1C87                     l4221:	
 12409                           
 12410                           ;i2c_display.c: 109:    _delay((unsigned long)((40)*(8000000/4000000.0)));
 12411  1C87  301A               	movlw	26
 12412  1C88                     u6327:	
 12413  1C88  0B89               	decfsz	9,f
 12414  1C89  2C88               	goto	u6327
 12415  1C8A  3200               	nop2
 12416  1C8B                     l4223:	
 12417                           
 12418                           ;i2c_display.c: 111:    Lcd_Port(temp | 0x01 | 0x00 | 0x00);
 12419  1C8B  0879               	movf	Lcd_Write_Char@temp,w
 12420  1C8C  3801               	iorlw	1
 12421  1C8D  319A  227A  319C   	fcall	_Lcd_Port
 12422  1C90                     l229:	
 12423  1C90  0008               	return
 12424  1C91                     __end_of_Lcd_Write_Char:	
 12425                           
 12426                           	psect	text38
 12427  1CD4                     __ptext38:	
 12428 ;; *************** function _Lcd_Set_Cursor *****************
 12429 ;; Defined at:
 12430 ;;		line 50 in file "i2c_display.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;  a               1    wreg     unsigned char 
 12433 ;;  b               1   11[COMMON] unsigned char 
 12434 ;; Auto vars:     Size  Location     Type
 12435 ;;  a               1    0[BANK0 ] unsigned char 
 12436 ;;  temp            1    3[BANK0 ] unsigned char 
 12437 ;;  y               1    2[BANK0 ] unsigned char 
 12438 ;;  z               1    1[BANK0 ] unsigned char 
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      void 
 12441 ;; Registers used:
 12442 ;;		wreg, status,2, status,0, pclath, cstack
 12443 ;; Tracked objects:
 12444 ;;		On entry : 0/0
 12445 ;;		On exit  : 0/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12448 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12452 ;;Total ram usage:        7 bytes
 12453 ;; Hardware stack levels used:    1
 12454 ;; Hardware stack levels required when called:    4
 12455 ;; This function calls:
 12456 ;;		_Lcd_Cmd
 12457 ;; This function is called by:
 12458 ;;		_main
 12459 ;;		_config
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463                           
 12464                           ;psect for function _Lcd_Set_Cursor
 12465  1CD4                     _Lcd_Set_Cursor:	
 12466                           
 12467                           ;incstack = 0
 12468                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 12469                           ;Lcd_Set_Cursor@a stored from wreg
 12470  1CD4  0020               	movlb	0	; select bank0
 12471  1CD5  00A0               	movwf	Lcd_Set_Cursor@a
 12472  1CD6                     l4367:	
 12473                           
 12474                           ;i2c_display.c: 50: void Lcd_Set_Cursor(char a, char b);i2c_display.c: 51: {;i2c_display
      +                          .c: 52:  char temp,z,y;;i2c_display.c: 53:  if(a == 1)
 12475  1CD6  0320               	decf	Lcd_Set_Cursor@a,w
 12476  1CD7  1D03               	btfss	3,2
 12477  1CD8  2CDA               	goto	u5871
 12478  1CD9  2CDB               	goto	u5870
 12479  1CDA                     u5871:	
 12480  1CDA  2CF9               	goto	l4377
 12481  1CDB                     u5870:	
 12482  1CDB                     l4369:	
 12483                           
 12484                           ;i2c_display.c: 54:  {;i2c_display.c: 55:    temp = 0x80 + b - 1;
 12485  1CDB  087B               	movf	Lcd_Set_Cursor@b,w
 12486  1CDC  3E7F               	addlw	127
 12487  1CDD  00FC               	movwf	??_Lcd_Set_Cursor
 12488  1CDE  087C               	movf	??_Lcd_Set_Cursor,w
 12489  1CDF  00A3               	movwf	Lcd_Set_Cursor@temp
 12490                           
 12491                           ;i2c_display.c: 56:   z = temp>>4;
 12492  1CE0  0823               	movf	Lcd_Set_Cursor@temp,w
 12493  1CE1  00FC               	movwf	??_Lcd_Set_Cursor
 12494  1CE2  3004               	movlw	4
 12495  1CE3                     u5885:	
 12496  1CE3  36FC               	lsrf	??_Lcd_Set_Cursor,f
 12497  1CE4  0B89               	decfsz	9,f
 12498  1CE5  2CE3               	goto	u5885
 12499  1CE6  087C               	movf	??_Lcd_Set_Cursor,w
 12500  1CE7  00FD               	movwf	??_Lcd_Set_Cursor+1
 12501  1CE8  087D               	movf	??_Lcd_Set_Cursor+1,w
 12502  1CE9  00A1               	movwf	Lcd_Set_Cursor@z
 12503  1CEA                     l4371:	
 12504                           
 12505                           ;i2c_display.c: 57:   y = temp & 0x0F;
 12506  1CEA  0823               	movf	Lcd_Set_Cursor@temp,w
 12507  1CEB  390F               	andlw	15
 12508  1CEC  00FC               	movwf	??_Lcd_Set_Cursor
 12509  1CED  087C               	movf	??_Lcd_Set_Cursor,w
 12510  1CEE  00A2               	movwf	Lcd_Set_Cursor@y
 12511  1CEF                     l4373:	
 12512                           
 12513                           ;i2c_display.c: 58:   Lcd_Cmd(z);
 12514  1CEF  0821               	movf	Lcd_Set_Cursor@z,w
 12515  1CF0  319C  2421  319C   	fcall	_Lcd_Cmd
 12516  1CF3                     l4375:	
 12517                           
 12518                           ;i2c_display.c: 59:   Lcd_Cmd(y);
 12519  1CF3  0020               	movlb	0	; select bank0
 12520  1CF4  0822               	movf	Lcd_Set_Cursor@y,w
 12521  1CF5  319C  2421  319C   	fcall	_Lcd_Cmd
 12522                           
 12523                           ;i2c_display.c: 60:  }
 12524  1CF8  2D1C               	goto	l223
 12525  1CF9                     l4377:	
 12526  1CF9  3002               	movlw	2
 12527  1CFA  0620               	xorwf	Lcd_Set_Cursor@a,w
 12528  1CFB  1D03               	btfss	3,2
 12529  1CFC  2CFE               	goto	u5891
 12530  1CFD  2CFF               	goto	u5890
 12531  1CFE                     u5891:	
 12532  1CFE  2D1C               	goto	l223
 12533  1CFF                     u5890:	
 12534  1CFF                     l4379:	
 12535                           
 12536                           ;i2c_display.c: 62:  {;i2c_display.c: 63:   temp = 0xC0 + b - 1;
 12537  1CFF  087B               	movf	Lcd_Set_Cursor@b,w
 12538  1D00  3EBF               	addlw	191
 12539  1D01  00FC               	movwf	??_Lcd_Set_Cursor
 12540  1D02  087C               	movf	??_Lcd_Set_Cursor,w
 12541  1D03  00A3               	movwf	Lcd_Set_Cursor@temp
 12542                           
 12543                           ;i2c_display.c: 64:   z = temp>>4;
 12544  1D04  0823               	movf	Lcd_Set_Cursor@temp,w
 12545  1D05  00FC               	movwf	??_Lcd_Set_Cursor
 12546  1D06  3004               	movlw	4
 12547  1D07                     u5905:	
 12548  1D07  36FC               	lsrf	??_Lcd_Set_Cursor,f
 12549  1D08  0B89               	decfsz	9,f
 12550  1D09  2D07               	goto	u5905
 12551  1D0A  087C               	movf	??_Lcd_Set_Cursor,w
 12552  1D0B  00FD               	movwf	??_Lcd_Set_Cursor+1
 12553  1D0C  087D               	movf	??_Lcd_Set_Cursor+1,w
 12554  1D0D  00A1               	movwf	Lcd_Set_Cursor@z
 12555  1D0E                     l4381:	
 12556                           
 12557                           ;i2c_display.c: 65:   y = temp & 0x0F;
 12558  1D0E  0823               	movf	Lcd_Set_Cursor@temp,w
 12559  1D0F  390F               	andlw	15
 12560  1D10  00FC               	movwf	??_Lcd_Set_Cursor
 12561  1D11  087C               	movf	??_Lcd_Set_Cursor,w
 12562  1D12  00A2               	movwf	Lcd_Set_Cursor@y
 12563  1D13                     l4383:	
 12564                           
 12565                           ;i2c_display.c: 66:   Lcd_Cmd(z);
 12566  1D13  0821               	movf	Lcd_Set_Cursor@z,w
 12567  1D14  319C  2421  319C   	fcall	_Lcd_Cmd
 12568  1D17                     l4385:	
 12569                           
 12570                           ;i2c_display.c: 67:   Lcd_Cmd(y);
 12571  1D17  0020               	movlb	0	; select bank0
 12572  1D18  0822               	movf	Lcd_Set_Cursor@y,w
 12573  1D19  319C  2421  319C   	fcall	_Lcd_Cmd
 12574  1D1C                     l223:	
 12575  1D1C  0008               	return
 12576  1D1D                     __end_of_Lcd_Set_Cursor:	
 12577                           
 12578                           	psect	text39
 12579  1C91                     __ptext39:	
 12580 ;; *************** function _Lcd_Init *****************
 12581 ;; Defined at:
 12582 ;;		line 71 in file "i2c_display.c"
 12583 ;; Parameters:    Size  Location     Type
 12584 ;;		None
 12585 ;; Auto vars:     Size  Location     Type
 12586 ;;		None
 12587 ;; Return value:  Size  Location     Type
 12588 ;;                  1    wreg      void 
 12589 ;; Registers used:
 12590 ;;		wreg, status,2, status,0, pclath, cstack
 12591 ;; Tracked objects:
 12592 ;;		On entry : 0/0
 12593 ;;		On exit  : 0/0
 12594 ;;		Unchanged: 0/0
 12595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;Total ram usage:        1 bytes
 12601 ;; Hardware stack levels used:    1
 12602 ;; Hardware stack levels required when called:    4
 12603 ;; This function calls:
 12604 ;;		_Lcd_Cmd
 12605 ;;		_Lcd_Port
 12606 ;; This function is called by:
 12607 ;;		_config
 12608 ;; This function uses a non-reentrant model
 12609 ;;
 12610                           
 12611                           
 12612                           ;psect for function _Lcd_Init
 12613  1C91                     _Lcd_Init:	
 12614  1C91                     l4407:	
 12615                           ;incstack = 0
 12616                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 12617                           
 12618                           
 12619                           ;i2c_display.c: 73:   Lcd_Port(0x00);
 12620  1C91  3000               	movlw	0
 12621  1C92  319A  227A  319C   	fcall	_Lcd_Port
 12622  1C95                     l4409:	
 12623                           
 12624                           ;i2c_display.c: 74:    _delay((unsigned long)((20)*(8000000/4000.0)));
 12625  1C95  3034               	movlw	52
 12626  1C96  00FB               	movwf	??_Lcd_Init
 12627  1C97  30F2               	movlw	242
 12628  1C98                     u6337:	
 12629  1C98  0B89               	decfsz	9,f
 12630  1C99  2C98               	goto	u6337
 12631  1C9A  0BFB               	decfsz	??_Lcd_Init,f
 12632  1C9B  2C98               	goto	u6337
 12633  1C9C                     l4411:	
 12634                           
 12635                           ;i2c_display.c: 75:   Lcd_Cmd(0x03);
 12636  1C9C  3003               	movlw	3
 12637  1C9D  319C  2421  319C   	fcall	_Lcd_Cmd
 12638                           
 12639                           ;i2c_display.c: 76:  _delay((unsigned long)((5)*(8000000/4000.0)));
 12640  1CA0  300D               	movlw	13
 12641  1CA1  00FB               	movwf	??_Lcd_Init
 12642  1CA2  30FC               	movlw	252
 12643  1CA3                     u6347:	
 12644  1CA3  0B89               	decfsz	9,f
 12645  1CA4  2CA3               	goto	u6347
 12646  1CA5  0BFB               	decfsz	??_Lcd_Init,f
 12647  1CA6  2CA3               	goto	u6347
 12648  1CA7                     l4413:	
 12649                           
 12650                           ;i2c_display.c: 77:   Lcd_Cmd(0x03);
 12651  1CA7  3003               	movlw	3
 12652  1CA8  319C  2421  319C   	fcall	_Lcd_Cmd
 12653  1CAB                     l4415:	
 12654                           
 12655                           ;i2c_display.c: 78:  _delay((unsigned long)((11)*(8000000/4000.0)));
 12656  1CAB  301D               	movlw	29
 12657  1CAC  00FB               	movwf	??_Lcd_Init
 12658  1CAD  3091               	movlw	145
 12659  1CAE                     u6357:	
 12660  1CAE  0B89               	decfsz	9,f
 12661  1CAF  2CAE               	goto	u6357
 12662  1CB0  0BFB               	decfsz	??_Lcd_Init,f
 12663  1CB1  2CAE               	goto	u6357
 12664  1CB2  0000               	nop
 12665                           
 12666                           ;i2c_display.c: 79:   Lcd_Cmd(0x03);
 12667  1CB3  3003               	movlw	3
 12668  1CB4  319C  2421  319C   	fcall	_Lcd_Cmd
 12669                           
 12670                           ;i2c_display.c: 81:   Lcd_Cmd(0x02);
 12671  1CB7  3002               	movlw	2
 12672  1CB8  319C  2421  319C   	fcall	_Lcd_Cmd
 12673                           
 12674                           ;i2c_display.c: 82:   Lcd_Cmd(0x02);
 12675  1CBB  3002               	movlw	2
 12676  1CBC  319C  2421  319C   	fcall	_Lcd_Cmd
 12677                           
 12678                           ;i2c_display.c: 83:   Lcd_Cmd(0x08);
 12679  1CBF  3008               	movlw	8
 12680  1CC0  319C  2421  319C   	fcall	_Lcd_Cmd
 12681                           
 12682                           ;i2c_display.c: 84:   Lcd_Cmd(0x00);
 12683  1CC3  3000               	movlw	0
 12684  1CC4  319C  2421  319C   	fcall	_Lcd_Cmd
 12685                           
 12686                           ;i2c_display.c: 85:   Lcd_Cmd(0x0C);
 12687  1CC7  300C               	movlw	12
 12688  1CC8  319C  2421  319C   	fcall	_Lcd_Cmd
 12689                           
 12690                           ;i2c_display.c: 86:   Lcd_Cmd(0x00);
 12691  1CCB  3000               	movlw	0
 12692  1CCC  319C  2421  319C   	fcall	_Lcd_Cmd
 12693                           
 12694                           ;i2c_display.c: 87:   Lcd_Cmd(0x06);
 12695  1CCF  3006               	movlw	6
 12696  1CD0  319C  2421  319C   	fcall	_Lcd_Cmd
 12697  1CD3                     l226:	
 12698  1CD3  0008               	return
 12699  1CD4                     __end_of_Lcd_Init:	
 12700                           
 12701                           	psect	text40
 12702  1A14                     __ptext40:	
 12703 ;; *************** function _Lcd_Clear *****************
 12704 ;; Defined at:
 12705 ;;		line 44 in file "i2c_display.c"
 12706 ;; Parameters:    Size  Location     Type
 12707 ;;		None
 12708 ;; Auto vars:     Size  Location     Type
 12709 ;;		None
 12710 ;; Return value:  Size  Location     Type
 12711 ;;                  1    wreg      void 
 12712 ;; Registers used:
 12713 ;;		wreg, status,2, status,0, pclath, cstack
 12714 ;; Tracked objects:
 12715 ;;		On entry : 0/0
 12716 ;;		On exit  : 0/0
 12717 ;;		Unchanged: 0/0
 12718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12723 ;;Total ram usage:        0 bytes
 12724 ;; Hardware stack levels used:    1
 12725 ;; Hardware stack levels required when called:    4
 12726 ;; This function calls:
 12727 ;;		_Lcd_Cmd
 12728 ;; This function is called by:
 12729 ;;		_main
 12730 ;;		_config
 12731 ;; This function uses a non-reentrant model
 12732 ;;
 12733                           
 12734                           
 12735                           ;psect for function _Lcd_Clear
 12736  1A14                     _Lcd_Clear:	
 12737  1A14                     l4365:	
 12738                           ;incstack = 0
 12739                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 12740                           
 12741                           
 12742                           ;i2c_display.c: 46:  Lcd_Cmd(0);
 12743  1A14  3000               	movlw	0
 12744  1A15  319C  2421  319A   	fcall	_Lcd_Cmd
 12745                           
 12746                           ;i2c_display.c: 47:  Lcd_Cmd(1);
 12747  1A18  3001               	movlw	1
 12748  1A19  319C  2421  319A   	fcall	_Lcd_Cmd
 12749  1A1C                     l217:	
 12750  1A1C  0008               	return
 12751  1A1D                     __end_of_Lcd_Clear:	
 12752                           
 12753                           	psect	text41
 12754  1BF1                     __ptext41:	
 12755 ;; *************** function _I2C_Master_Init *****************
 12756 ;; Defined at:
 12757 ;;		line 164 in file "i2c_display.c"
 12758 ;; Parameters:    Size  Location     Type
 12759 ;;  c               4    0[BANK0 ] const unsigned long 
 12760 ;; Auto vars:     Size  Location     Type
 12761 ;;		None
 12762 ;; Return value:  Size  Location     Type
 12763 ;;                  1    wreg      void 
 12764 ;; Registers used:
 12765 ;;		wreg, status,2, status,0, pclath, cstack
 12766 ;; Tracked objects:
 12767 ;;		On entry : 0/0
 12768 ;;		On exit  : 0/0
 12769 ;;		Unchanged: 0/0
 12770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12771 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12773 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12774 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12775 ;;Total ram usage:        8 bytes
 12776 ;; Hardware stack levels used:    1
 12777 ;; Hardware stack levels required when called:    1
 12778 ;; This function calls:
 12779 ;;		___lldiv
 12780 ;; This function is called by:
 12781 ;;		_config
 12782 ;; This function uses a non-reentrant model
 12783 ;;
 12784                           
 12785                           
 12786                           ;psect for function _I2C_Master_Init
 12787  1BF1                     _I2C_Master_Init:	
 12788  1BF1                     l4395:	
 12789                           ;incstack = 0
 12790                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 12791                           
 12792                           
 12793                           ;i2c_display.c: 164: void I2C_Master_Init(const unsigned long c);i2c_display.c: 165: {;i
      +                          2c_display.c: 166:     SSP1CON1 = 0b00101000;
 12794  1BF1  3028               	movlw	40
 12795  1BF2  0024               	movlb	4	; select bank4
 12796  1BF3  0095               	movwf	21	;volatile
 12797  1BF4                     l4397:	
 12798                           
 12799                           ;i2c_display.c: 167:     SSP1CON2 = 0x00;
 12800  1BF4  0196               	clrf	22	;volatile
 12801  1BF5                     l4399:	
 12802                           
 12803                           ;i2c_display.c: 168:     SSP1ADD = (8000000/(4*c))-1;
 12804  1BF5  0020               	movlb	0	; select bank0
 12805  1BF6  0820               	movf	I2C_Master_Init@c,w
 12806  1BF7  00A4               	movwf	??_I2C_Master_Init
 12807  1BF8  0821               	movf	I2C_Master_Init@c+1,w
 12808  1BF9  00A5               	movwf	??_I2C_Master_Init+1
 12809  1BFA  0822               	movf	I2C_Master_Init@c+2,w
 12810  1BFB  00A6               	movwf	??_I2C_Master_Init+2
 12811  1BFC  0823               	movf	I2C_Master_Init@c+3,w
 12812  1BFD  00A7               	movwf	??_I2C_Master_Init+3
 12813  1BFE  3002               	movlw	2
 12814  1BFF                     u5925:	
 12815  1BFF  35A4               	lslf	??_I2C_Master_Init,f
 12816  1C00  0DA5               	rlf	??_I2C_Master_Init+1,f
 12817  1C01  0DA6               	rlf	??_I2C_Master_Init+2,f
 12818  1C02  0DA7               	rlf	??_I2C_Master_Init+3,f
 12819  1C03                     u5920:	
 12820  1C03  0B89               	decfsz	9,f
 12821  1C04  2BFF               	goto	u5925
 12822  1C05  0827               	movf	??_I2C_Master_Init+3,w
 12823  1C06  00F3               	movwf	___lldiv@divisor+3
 12824  1C07  0826               	movf	??_I2C_Master_Init+2,w
 12825  1C08  00F2               	movwf	___lldiv@divisor+2
 12826  1C09  0825               	movf	??_I2C_Master_Init+1,w
 12827  1C0A  00F1               	movwf	___lldiv@divisor+1
 12828  1C0B  0824               	movf	??_I2C_Master_Init,w
 12829  1C0C  00F0               	movwf	___lldiv@divisor
 12830  1C0D  3000               	movlw	0
 12831  1C0E  00F7               	movwf	___lldiv@dividend+3
 12832  1C0F  307A               	movlw	122
 12833  1C10  00F6               	movwf	___lldiv@dividend+2
 12834  1C11  3012               	movlw	18
 12835  1C12  00F5               	movwf	___lldiv@dividend+1
 12836  1C13  3000               	movlw	0
 12837  1C14  00F4               	movwf	___lldiv@dividend
 12838  1C15  319F  274B  319B   	fcall	___lldiv
 12839  1C18  0870               	movf	?___lldiv,w
 12840  1C19  3EFF               	addlw	255
 12841  1C1A  0024               	movlb	4	; select bank4
 12842  1C1B  0092               	movwf	18	;volatile
 12843  1C1C                     l4401:	
 12844                           
 12845                           ;i2c_display.c: 169:     SSP1STAT = 0x00;
 12846  1C1C  0194               	clrf	20	;volatile
 12847  1C1D                     l4403:	
 12848                           
 12849                           ;i2c_display.c: 170:     TRISCbits.TRISC0=1;
 12850  1C1D  0021               	movlb	1	; select bank1
 12851  1C1E  140E               	bsf	14,0	;volatile
 12852  1C1F                     l4405:	
 12853                           
 12854                           ;i2c_display.c: 171:     TRISCbits.TRISC1=1;
 12855  1C1F  148E               	bsf	14,1	;volatile
 12856  1C20                     l256:	
 12857  1C20  0008               	return
 12858  1C21                     __end_of_I2C_Master_Init:	
 12859                           
 12860                           	psect	text42
 12861  1F4B                     __ptext42:	
 12862 ;; *************** function ___lldiv *****************
 12863 ;; Defined at:
 12864 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 12865 ;; Parameters:    Size  Location     Type
 12866 ;;  divisor         4    0[COMMON] unsigned long 
 12867 ;;  dividend        4    4[COMMON] unsigned long 
 12868 ;; Auto vars:     Size  Location     Type
 12869 ;;  quotient        4    9[COMMON] unsigned long 
 12870 ;;  counter         1   13[COMMON] unsigned char 
 12871 ;; Return value:  Size  Location     Type
 12872 ;;                  4    0[COMMON] unsigned long 
 12873 ;; Registers used:
 12874 ;;		wreg, status,2, status,0
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12880 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12881 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12883 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12884 ;;Total ram usage:       14 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; This function calls:
 12887 ;;		Nothing
 12888 ;; This function is called by:
 12889 ;;		_I2C_Master_Init
 12890 ;; This function uses a non-reentrant model
 12891 ;;
 12892                           
 12893                           
 12894                           ;psect for function ___lldiv
 12895  1F4B                     ___lldiv:	
 12896  1F4B                     l4341:	
 12897                           ;incstack = 0
 12898                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12899                           
 12900  1F4B  3000               	movlw	0
 12901  1F4C  00FC               	movwf	___lldiv@quotient+3
 12902  1F4D  3000               	movlw	0
 12903  1F4E  00FB               	movwf	___lldiv@quotient+2
 12904  1F4F  3000               	movlw	0
 12905  1F50  00FA               	movwf	___lldiv@quotient+1
 12906  1F51  3000               	movlw	0
 12907  1F52  00F9               	movwf	___lldiv@quotient
 12908  1F53  0873               	movf	___lldiv@divisor+3,w
 12909  1F54  0472               	iorwf	___lldiv@divisor+2,w
 12910  1F55  0471               	iorwf	___lldiv@divisor+1,w
 12911  1F56  0470               	iorwf	___lldiv@divisor,w
 12912  1F57  1903               	skipnz
 12913  1F58  2F5A               	goto	u5801
 12914  1F59  2F5B               	goto	u5800
 12915  1F5A                     u5801:	
 12916  1F5A  2F9C               	goto	l4361
 12917  1F5B                     u5800:	
 12918  1F5B                     l4343:	
 12919  1F5B  01FD               	clrf	___lldiv@counter
 12920  1F5C  0AFD               	incf	___lldiv@counter,f
 12921  1F5D  2F69               	goto	l4347
 12922  1F5E                     l4345:	
 12923  1F5E  3001               	movlw	1
 12924  1F5F                     u5815:	
 12925  1F5F  35F0               	lslf	___lldiv@divisor,f
 12926  1F60  0DF1               	rlf	___lldiv@divisor+1,f
 12927  1F61  0DF2               	rlf	___lldiv@divisor+2,f
 12928  1F62  0DF3               	rlf	___lldiv@divisor+3,f
 12929  1F63  0B89               	decfsz	9,f
 12930  1F64  2F5F               	goto	u5815
 12931  1F65  3001               	movlw	1
 12932  1F66  00F8               	movwf	??___lldiv
 12933  1F67  0878               	movf	??___lldiv,w
 12934  1F68  07FD               	addwf	___lldiv@counter,f
 12935  1F69                     l4347:	
 12936  1F69  1FF3               	btfss	___lldiv@divisor+3,7
 12937  1F6A  2F6C               	goto	u5821
 12938  1F6B  2F6D               	goto	u5820
 12939  1F6C                     u5821:	
 12940  1F6C  2F5E               	goto	l4345
 12941  1F6D                     u5820:	
 12942  1F6D                     l4349:	
 12943  1F6D  3001               	movlw	1
 12944  1F6E                     u5835:	
 12945  1F6E  35F9               	lslf	___lldiv@quotient,f
 12946  1F6F  0DFA               	rlf	___lldiv@quotient+1,f
 12947  1F70  0DFB               	rlf	___lldiv@quotient+2,f
 12948  1F71  0DFC               	rlf	___lldiv@quotient+3,f
 12949  1F72  0B89               	decfsz	9,f
 12950  1F73  2F6E               	goto	u5835
 12951  1F74                     l4351:	
 12952  1F74  0873               	movf	___lldiv@divisor+3,w
 12953  1F75  0277               	subwf	___lldiv@dividend+3,w
 12954  1F76  1D03               	skipz
 12955  1F77  2F82               	goto	u5845
 12956  1F78  0872               	movf	___lldiv@divisor+2,w
 12957  1F79  0276               	subwf	___lldiv@dividend+2,w
 12958  1F7A  1D03               	skipz
 12959  1F7B  2F82               	goto	u5845
 12960  1F7C  0871               	movf	___lldiv@divisor+1,w
 12961  1F7D  0275               	subwf	___lldiv@dividend+1,w
 12962  1F7E  1D03               	skipz
 12963  1F7F  2F82               	goto	u5845
 12964  1F80  0870               	movf	___lldiv@divisor,w
 12965  1F81  0274               	subwf	___lldiv@dividend,w
 12966  1F82                     u5845:	
 12967  1F82  1C03               	skipc
 12968  1F83  2F85               	goto	u5841
 12969  1F84  2F86               	goto	u5840
 12970  1F85                     u5841:	
 12971  1F85  2F8F               	goto	l4357
 12972  1F86                     u5840:	
 12973  1F86                     l4353:	
 12974  1F86  0870               	movf	___lldiv@divisor,w
 12975  1F87  02F4               	subwf	___lldiv@dividend,f
 12976  1F88  0871               	movf	___lldiv@divisor+1,w
 12977  1F89  3BF5               	subwfb	___lldiv@dividend+1,f
 12978  1F8A  0872               	movf	___lldiv@divisor+2,w
 12979  1F8B  3BF6               	subwfb	___lldiv@dividend+2,f
 12980  1F8C  0873               	movf	___lldiv@divisor+3,w
 12981  1F8D  3BF7               	subwfb	___lldiv@dividend+3,f
 12982  1F8E                     l4355:	
 12983  1F8E  1479               	bsf	___lldiv@quotient,0
 12984  1F8F                     l4357:	
 12985  1F8F  3001               	movlw	1
 12986  1F90                     u5855:	
 12987  1F90  36F3               	lsrf	___lldiv@divisor+3,f
 12988  1F91  0CF2               	rrf	___lldiv@divisor+2,f
 12989  1F92  0CF1               	rrf	___lldiv@divisor+1,f
 12990  1F93  0CF0               	rrf	___lldiv@divisor,f
 12991  1F94  0B89               	decfsz	9,f
 12992  1F95  2F90               	goto	u5855
 12993  1F96                     l4359:	
 12994  1F96  3001               	movlw	1
 12995  1F97  02FD               	subwf	___lldiv@counter,f
 12996  1F98  1D03               	btfss	3,2
 12997  1F99  2F9B               	goto	u5861
 12998  1F9A  2F9C               	goto	u5860
 12999  1F9B                     u5861:	
 13000  1F9B  2F6D               	goto	l4349
 13001  1F9C                     u5860:	
 13002  1F9C                     l4361:	
 13003  1F9C  087C               	movf	___lldiv@quotient+3,w
 13004  1F9D  00F3               	movwf	?___lldiv+3
 13005  1F9E  087B               	movf	___lldiv@quotient+2,w
 13006  1F9F  00F2               	movwf	?___lldiv+2
 13007  1FA0  087A               	movf	___lldiv@quotient+1,w
 13008  1FA1  00F1               	movwf	?___lldiv+1
 13009  1FA2  0879               	movf	___lldiv@quotient,w
 13010  1FA3  00F0               	movwf	?___lldiv
 13011  1FA4                     l644:	
 13012  1FA4  0008               	return
 13013  1FA5                     __end_of___lldiv:	
 13014                           
 13015                           	psect	text43
 13016  1A0B                     __ptext43:	
 13017 ;; *************** function _Cursor_Off *****************
 13018 ;; Defined at:
 13019 ;;		line 139 in file "i2c_display.c"
 13020 ;; Parameters:    Size  Location     Type
 13021 ;;		None
 13022 ;; Auto vars:     Size  Location     Type
 13023 ;;		None
 13024 ;; Return value:  Size  Location     Type
 13025 ;;                  1    wreg      void 
 13026 ;; Registers used:
 13027 ;;		wreg, status,2, status,0, pclath, cstack
 13028 ;; Tracked objects:
 13029 ;;		On entry : 0/0
 13030 ;;		On exit  : 0/0
 13031 ;;		Unchanged: 0/0
 13032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13037 ;;Total ram usage:        0 bytes
 13038 ;; Hardware stack levels used:    1
 13039 ;; Hardware stack levels required when called:    4
 13040 ;; This function calls:
 13041 ;;		_Lcd_Cmd
 13042 ;; This function is called by:
 13043 ;;		_config
 13044 ;; This function uses a non-reentrant model
 13045 ;;
 13046                           
 13047                           
 13048                           ;psect for function _Cursor_Off
 13049  1A0B                     _Cursor_Off:	
 13050  1A0B                     l4417:	
 13051                           ;incstack = 0
 13052                           ; Regs used in _Cursor_Off: [wreg+status,2+status,0+pclath+cstack]
 13053                           
 13054                           
 13055                           ;i2c_display.c: 141: Lcd_Cmd(0x00);
 13056  1A0B  3000               	movlw	0
 13057  1A0C  319C  2421  319A   	fcall	_Lcd_Cmd
 13058                           
 13059                           ;i2c_display.c: 142: Lcd_Cmd(0x0C);
 13060  1A0F  300C               	movlw	12
 13061  1A10  319C  2421  319A   	fcall	_Lcd_Cmd
 13062  1A13                     l247:	
 13063  1A13  0008               	return
 13064  1A14                     __end_of_Cursor_Off:	
 13065                           
 13066                           	psect	text44
 13067  1C21                     __ptext44:	
 13068 ;; *************** function _Lcd_Cmd *****************
 13069 ;; Defined at:
 13070 ;;		line 25 in file "i2c_display.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;  a               1    wreg     unsigned char 
 13073 ;; Auto vars:     Size  Location     Type
 13074 ;;  a               1   10[COMMON] unsigned char 
 13075 ;;  buff            2    8[COMMON] int 
 13076 ;; Return value:  Size  Location     Type
 13077 ;;                  1    wreg      void 
 13078 ;; Registers used:
 13079 ;;		wreg, status,2, status,0, pclath, cstack
 13080 ;; Tracked objects:
 13081 ;;		On entry : 0/0
 13082 ;;		On exit  : 0/0
 13083 ;;		Unchanged: 0/0
 13084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13086 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13089 ;;Total ram usage:        6 bytes
 13090 ;; Hardware stack levels used:    1
 13091 ;; Hardware stack levels required when called:    3
 13092 ;; This function calls:
 13093 ;;		_Lcd_Port
 13094 ;; This function is called by:
 13095 ;;		_Lcd_Clear
 13096 ;;		_Lcd_Set_Cursor
 13097 ;;		_Lcd_Init
 13098 ;;		_Cursor_Off
 13099 ;;		_Lcd_Shift_Right
 13100 ;;		_Lcd_Shift_Left
 13101 ;;		_Cursor_On
 13102 ;;		_Cursor_Left
 13103 ;;		_Cursor_Right
 13104 ;; This function uses a non-reentrant model
 13105 ;;
 13106                           
 13107                           
 13108                           ;psect for function _Lcd_Cmd
 13109  1C21                     _Lcd_Cmd:	
 13110                           
 13111                           ;incstack = 0
 13112                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 13113                           ;Lcd_Cmd@a stored from wreg
 13114  1C21  00FA               	movwf	Lcd_Cmd@a
 13115  1C22                     l4181:	
 13116                           
 13117                           ;i2c_display.c: 25: void Lcd_Cmd(char a);i2c_display.c: 26: {;i2c_display.c: 27:     int
      +                           buff;;i2c_display.c: 28:     a=a<<4;
 13118  1C22  087A               	movf	Lcd_Cmd@a,w
 13119  1C23  00F5               	movwf	??_Lcd_Cmd
 13120  1C24  3003               	movlw	3
 13121  1C25                     u5595:	
 13122  1C25  35F5               	lslf	??_Lcd_Cmd,f
 13123  1C26  3EFF               	addlw	-1
 13124  1C27  1D03               	skipz
 13125  1C28  2C25               	goto	u5595
 13126  1C29  3575               	lslf	??_Lcd_Cmd,w
 13127  1C2A  00F6               	movwf	??_Lcd_Cmd+1
 13128  1C2B  0876               	movf	??_Lcd_Cmd+1,w
 13129  1C2C  00FA               	movwf	Lcd_Cmd@a
 13130  1C2D                     l4183:	
 13131  1C2D                     l4185:	
 13132  1C2D                     l4187:	
 13133  1C2D  3000               	movlw	0
 13134  1C2E  319A  227A  319C   	fcall	_Lcd_Port
 13135  1C31                     l4189:	
 13136                           
 13137                           ;i2c_display.c: 33:  Lcd_Port(a);
 13138  1C31  087A               	movf	Lcd_Cmd@a,w
 13139  1C32  319A  227A  319C   	fcall	_Lcd_Port
 13140  1C35                     l4191:	
 13141                           
 13142                           ;i2c_display.c: 36:     buff=a | 0x00 | 0x04 | 0x00;
 13143  1C35  3004               	movlw	4
 13144  1C36  047A               	iorwf	Lcd_Cmd@a,w
 13145  1C37  00F8               	movwf	Lcd_Cmd@buff
 13146  1C38  3000               	movlw	0
 13147  1C39  00F9               	movwf	Lcd_Cmd@buff+1
 13148  1C3A                     l4193:	
 13149                           
 13150                           ;i2c_display.c: 37:     Lcd_Port(buff);
 13151  1C3A  0878               	movf	Lcd_Cmd@buff,w
 13152  1C3B  319A  227A  319C   	fcall	_Lcd_Port
 13153  1C3E                     l4195:	
 13154                           
 13155                           ;i2c_display.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
 13156  1C3E  300B               	movlw	11
 13157  1C3F  00F5               	movwf	??_Lcd_Cmd
 13158  1C40  3062               	movlw	98
 13159  1C41                     u6367:	
 13160  1C41  0B89               	decfsz	9,f
 13161  1C42  2C41               	goto	u6367
 13162  1C43  0BF5               	decfsz	??_Lcd_Cmd,f
 13163  1C44  2C41               	goto	u6367
 13164  1C45  3200               	nop2
 13165  1C46                     l4197:	
 13166                           
 13167                           ;i2c_display.c: 40:     buff=a | 0x00 | 0x00 | 0x00;
 13168  1C46  087A               	movf	Lcd_Cmd@a,w
 13169  1C47  00F5               	movwf	??_Lcd_Cmd
 13170  1C48  01F6               	clrf	??_Lcd_Cmd+1
 13171  1C49  0875               	movf	??_Lcd_Cmd,w
 13172  1C4A  00F8               	movwf	Lcd_Cmd@buff
 13173  1C4B  0876               	movf	??_Lcd_Cmd+1,w
 13174  1C4C  00F9               	movwf	Lcd_Cmd@buff+1
 13175  1C4D                     l4199:	
 13176                           
 13177                           ;i2c_display.c: 41:     Lcd_Port(buff);
 13178  1C4D  0878               	movf	Lcd_Cmd@buff,w
 13179  1C4E  319A  227A  319C   	fcall	_Lcd_Port
 13180  1C51                     l214:	
 13181  1C51  0008               	return
 13182  1C52                     __end_of_Lcd_Cmd:	
 13183                           
 13184                           	psect	text45
 13185  1A7A                     __ptext45:	
 13186 ;; *************** function _Lcd_Port *****************
 13187 ;; Defined at:
 13188 ;;		line 19 in file "i2c_display.c"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;  data            1    wreg     unsigned char 
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;  data            1    4[COMMON] unsigned char 
 13193 ;; Return value:  Size  Location     Type
 13194 ;;                  1    wreg      void 
 13195 ;; Registers used:
 13196 ;;		wreg, status,2, status,0, pclath, cstack
 13197 ;; Tracked objects:
 13198 ;;		On entry : 0/0
 13199 ;;		On exit  : 0/0
 13200 ;;		Unchanged: 0/0
 13201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13205 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13206 ;;Total ram usage:        3 bytes
 13207 ;; Hardware stack levels used:    1
 13208 ;; Hardware stack levels required when called:    2
 13209 ;; This function calls:
 13210 ;;		_I2C_Master_Start
 13211 ;;		_I2C_Master_Stop
 13212 ;;		_I2C_Write_Display
 13213 ;; This function is called by:
 13214 ;;		_Lcd_Cmd
 13215 ;;		_Lcd_Init
 13216 ;;		_Lcd_Write_Char
 13217 ;; This function uses a non-reentrant model
 13218 ;;
 13219                           
 13220                           
 13221                           ;psect for function _Lcd_Port
 13222  1A7A                     _Lcd_Port:	
 13223                           
 13224                           ;incstack = 0
 13225                           ; Regs used in _Lcd_Port: [wreg+status,2+status,0+pclath+cstack]
 13226                           ;Lcd_Port@data stored from wreg
 13227  1A7A  00F4               	movwf	Lcd_Port@data
 13228  1A7B                     l3815:	
 13229                           
 13230                           ;i2c_display.c: 19: void Lcd_Port(char data);i2c_display.c: 20: { I2C_Master_Start();
 13231  1A7B  3199  21F2  319A   	fcall	_I2C_Master_Start
 13232                           
 13233                           ;i2c_display.c: 21:     I2C_Write_Display(0x70);
 13234  1A7E  3070               	movlw	112
 13235  1A7F  00F0               	movwf	I2C_Write_Display@d
 13236  1A80  3000               	movlw	0
 13237  1A81  00F1               	movwf	I2C_Write_Display@d+1
 13238  1A82  319A  2204  319A   	fcall	_I2C_Write_Display
 13239                           
 13240                           ;i2c_display.c: 22:  I2C_Write_Display(data);
 13241  1A85  0874               	movf	Lcd_Port@data,w
 13242  1A86  00F2               	movwf	??_Lcd_Port
 13243  1A87  01F3               	clrf	??_Lcd_Port+1
 13244  1A88  0872               	movf	??_Lcd_Port,w
 13245  1A89  00F0               	movwf	I2C_Write_Display@d
 13246  1A8A  0873               	movf	??_Lcd_Port+1,w
 13247  1A8B  00F1               	movwf	I2C_Write_Display@d+1
 13248  1A8C  319A  2204  319A   	fcall	_I2C_Write_Display
 13249                           
 13250                           ;i2c_display.c: 23:     I2C_Master_Stop();
 13251  1A8F  3199  21F8  319A   	fcall	_I2C_Master_Stop
 13252  1A92                     l209:	
 13253  1A92  0008               	return
 13254  1A93                     __end_of_Lcd_Port:	
 13255                           
 13256                           	psect	text46
 13257  1A04                     __ptext46:	
 13258 ;; *************** function _I2C_Write_Display *****************
 13259 ;; Defined at:
 13260 ;;		line 205 in file "i2c_display.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;  d               2    0[COMMON] unsigned int 
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;		None
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  1    wreg      void 
 13267 ;; Registers used:
 13268 ;;		wreg, status,2, status,0, pclath, cstack
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/0
 13271 ;;		On exit  : 0/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13278 ;;Total ram usage:        2 bytes
 13279 ;; Hardware stack levels used:    1
 13280 ;; Hardware stack levels required when called:    1
 13281 ;; This function calls:
 13282 ;;		_I2C_Master_Wait
 13283 ;; This function is called by:
 13284 ;;		_Lcd_Port
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288                           
 13289                           ;psect for function _I2C_Write_Display
 13290  1A04                     _I2C_Write_Display:	
 13291  1A04                     l3243:	
 13292                           ;incstack = 0
 13293                           ; Regs used in _I2C_Write_Display: [wreg+status,2+status,0+pclath+cstack]
 13294                           
 13295                           
 13296                           ;i2c_display.c: 205: void I2C_Write_Display(unsigned d);i2c_display.c: 206: {;i2c_displa
      +                          y.c: 207:     I2C_Master_Wait();
 13297  1A04  319A  2228  319A   	fcall	_I2C_Master_Wait
 13298  1A07                     l3245:	
 13299                           
 13300                           ;i2c_display.c: 208:     SSP1BUF = d;
 13301  1A07  0870               	movf	I2C_Write_Display@d,w
 13302  1A08  0024               	movlb	4	; select bank4
 13303  1A09  0091               	movwf	17	;volatile
 13304  1A0A                     l277:	
 13305  1A0A  0008               	return
 13306  1A0B                     __end_of_I2C_Write_Display:	
 13307                           
 13308                           	psect	text47
 13309  19F8                     __ptext47:	
 13310 ;; *************** function _I2C_Master_Stop *****************
 13311 ;; Defined at:
 13312 ;;		line 193 in file "i2c_display.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;		None
 13315 ;; Auto vars:     Size  Location     Type
 13316 ;;		None
 13317 ;; Return value:  Size  Location     Type
 13318 ;;                  1    wreg      void 
 13319 ;; Registers used:
 13320 ;;		wreg, status,2, status,0, pclath, cstack
 13321 ;; Tracked objects:
 13322 ;;		On entry : 0/0
 13323 ;;		On exit  : 0/0
 13324 ;;		Unchanged: 0/0
 13325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13330 ;;Total ram usage:        0 bytes
 13331 ;; Hardware stack levels used:    1
 13332 ;; Hardware stack levels required when called:    1
 13333 ;; This function calls:
 13334 ;;		_I2C_Master_Wait
 13335 ;; This function is called by:
 13336 ;;		_Lcd_Port
 13337 ;; This function uses a non-reentrant model
 13338 ;;
 13339                           
 13340                           
 13341                           ;psect for function _I2C_Master_Stop
 13342  19F8                     _I2C_Master_Stop:	
 13343  19F8                     l3247:	
 13344                           ;incstack = 0
 13345                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13346                           
 13347                           
 13348                           ;i2c_display.c: 195:     I2C_Master_Wait();
 13349  19F8  319A  2228  3199   	fcall	_I2C_Master_Wait
 13350  19FB                     l3249:	
 13351                           
 13352                           ;i2c_display.c: 196:     SSP1CON2bits.PEN = 1;
 13353  19FB  0024               	movlb	4	; select bank4
 13354  19FC  1516               	bsf	22,2	;volatile
 13355  19FD                     l271:	
 13356  19FD  0008               	return
 13357  19FE                     __end_of_I2C_Master_Stop:	
 13358                           
 13359                           	psect	text48
 13360  19F2                     __ptext48:	
 13361 ;; *************** function _I2C_Master_Start *****************
 13362 ;; Defined at:
 13363 ;;		line 181 in file "i2c_display.c"
 13364 ;; Parameters:    Size  Location     Type
 13365 ;;		None
 13366 ;; Auto vars:     Size  Location     Type
 13367 ;;		None
 13368 ;; Return value:  Size  Location     Type
 13369 ;;                  1    wreg      void 
 13370 ;; Registers used:
 13371 ;;		wreg, status,2, status,0, pclath, cstack
 13372 ;; Tracked objects:
 13373 ;;		On entry : 0/0
 13374 ;;		On exit  : 0/0
 13375 ;;		Unchanged: 0/0
 13376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13381 ;;Total ram usage:        0 bytes
 13382 ;; Hardware stack levels used:    1
 13383 ;; Hardware stack levels required when called:    1
 13384 ;; This function calls:
 13385 ;;		_I2C_Master_Wait
 13386 ;; This function is called by:
 13387 ;;		_Lcd_Port
 13388 ;; This function uses a non-reentrant model
 13389 ;;
 13390                           
 13391                           
 13392                           ;psect for function _I2C_Master_Start
 13393  19F2                     _I2C_Master_Start:	
 13394  19F2                     l3239:	
 13395                           ;incstack = 0
 13396                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13397                           
 13398                           
 13399                           ;i2c_display.c: 183:     I2C_Master_Wait();
 13400  19F2  319A  2228  3199   	fcall	_I2C_Master_Wait
 13401  19F5                     l3241:	
 13402                           
 13403                           ;i2c_display.c: 184:     SSP1CON2bits.SEN = 1;
 13404  19F5  0024               	movlb	4	; select bank4
 13405  19F6  1416               	bsf	22,0	;volatile
 13406  19F7                     l265:	
 13407  19F7  0008               	return
 13408  19F8                     __end_of_I2C_Master_Start:	
 13409                           
 13410                           	psect	text49
 13411  1A28                     __ptext49:	
 13412 ;; *************** function _I2C_Master_Wait *****************
 13413 ;; Defined at:
 13414 ;;		line 174 in file "i2c_display.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;		None
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;		None
 13419 ;; Return value:  Size  Location     Type
 13420 ;;                  1    wreg      void 
 13421 ;; Registers used:
 13422 ;;		wreg, status,2
 13423 ;; Tracked objects:
 13424 ;;		On entry : 0/0
 13425 ;;		On exit  : 0/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13432 ;;Total ram usage:        0 bytes
 13433 ;; Hardware stack levels used:    1
 13434 ;; This function calls:
 13435 ;;		Nothing
 13436 ;; This function is called by:
 13437 ;;		_I2C_Master_Start
 13438 ;;		_I2C_Master_Stop
 13439 ;;		_I2C_Write_Display
 13440 ;;		_I2C_Master_RepeatedStart
 13441 ;;		_I2C_Master_Write
 13442 ;;		_I2C_Master_Read
 13443 ;; This function uses a non-reentrant model
 13444 ;;
 13445                           
 13446                           
 13447                           ;psect for function _I2C_Master_Wait
 13448  1A28                     _I2C_Master_Wait:	
 13449  1A28                     l3005:	
 13450                           ;incstack = 0
 13451                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 13452                           
 13453  1A28                     l259:	
 13454                           ;i2c_display.c: 176:    while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 13455                           
 13456  1A28  0024               	movlb	4	; select bank4
 13457  1A29  1914               	btfsc	20,2	;volatile
 13458  1A2A  2A2C               	goto	u3151
 13459  1A2B  2A2D               	goto	u3150
 13460  1A2C                     u3151:	
 13461  1A2C  2A28               	goto	l259
 13462  1A2D                     u3150:	
 13463  1A2D                     l3007:	
 13464  1A2D  0816               	movf	22,w	;volatile
 13465  1A2E  391F               	andlw	31
 13466  1A2F  1D03               	btfss	3,2
 13467  1A30  2A32               	goto	u3161
 13468  1A31  2A33               	goto	u3160
 13469  1A32                     u3161:	
 13470  1A32  2A28               	goto	l259
 13471  1A33                     u3160:	
 13472  1A33                     l262:	
 13473  1A33  0008               	return
 13474  1A34                     __end_of_I2C_Master_Wait:	
 13475                           
 13476                           	psect	text50
 13477  0007                     __ptext50:	
 13478 ;; *************** function _adc_config *****************
 13479 ;; Defined at:
 13480 ;;		line 82 in file "config.c"
 13481 ;; Parameters:    Size  Location     Type
 13482 ;;		None
 13483 ;; Auto vars:     Size  Location     Type
 13484 ;;		None
 13485 ;; Return value:  Size  Location     Type
 13486 ;;                  1    wreg      void 
 13487 ;; Registers used:
 13488 ;;		wreg
 13489 ;; Tracked objects:
 13490 ;;		On entry : 0/0
 13491 ;;		On exit  : 0/0
 13492 ;;		Unchanged: 0/0
 13493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13498 ;;Total ram usage:        0 bytes
 13499 ;; Hardware stack levels used:    1
 13500 ;; This function calls:
 13501 ;;		Nothing
 13502 ;; This function is called by:
 13503 ;;		_main
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507                           
 13508                           ;psect for function _adc_config
 13509  0007                     _adc_config:	
 13510  0007                     l4485:	
 13511                           ;incstack = 0
 13512                           ; Regs used in _adc_config: [wreg]
 13513                           
 13514                           
 13515                           ;config.c: 84:     TRISAbits.TRISA4 = 1;
 13516  0007  0021               	movlb	1	; select bank1
 13517  0008  160C               	bsf	12,4	;volatile
 13518                           
 13519                           ;config.c: 85:     TRISCbits.TRISC2 = 1;
 13520  0009  150E               	bsf	14,2	;volatile
 13521                           
 13522                           ;config.c: 86:     TRISCbits.TRISC3 = 1;
 13523  000A  158E               	bsf	14,3	;volatile
 13524                           
 13525                           ;config.c: 88:     ANSELAbits.ANSA4 = 1;
 13526  000B  0023               	movlb	3	; select bank3
 13527  000C  160C               	bsf	12,4	;volatile
 13528                           
 13529                           ;config.c: 89:     ANSELCbits.ANSC2 = 1;
 13530  000D  150E               	bsf	14,2	;volatile
 13531                           
 13532                           ;config.c: 90:     ANSELCbits.ANSC3 = 1;
 13533  000E  158E               	bsf	14,3	;volatile
 13534  000F                     l4487:	
 13535                           
 13536                           ;config.c: 93:     ADCON0=0b00001101;
 13537  000F  300D               	movlw	13
 13538  0010  0021               	movlb	1	; select bank1
 13539  0011  009D               	movwf	29	;volatile
 13540                           
 13541                           ;config.c: 94:     ADCON1=0b0101000;
 13542  0012  3028               	movlw	40
 13543  0013  009E               	movwf	30	;volatile
 13544  0014                     l180:	
 13545  0014  0008               	return
 13546  0015                     __end_of_adc_config:	
 13547                           
 13548                           	psect	text51
 13549  1215                     __ptext51:	
 13550 ;; *************** function ___xxtofl *****************
 13551 ;; Defined at:
 13552 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 13553 ;; Parameters:    Size  Location     Type
 13554 ;;  sign            1    wreg     unsigned char 
 13555 ;;  val             4    6[COMMON] long 
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;  sign            1    0[BANK0 ] unsigned char 
 13558 ;;  arg             4    2[BANK0 ] unsigned long 
 13559 ;;  exp             1    1[BANK0 ] unsigned char 
 13560 ;; Return value:  Size  Location     Type
 13561 ;;                  4    6[COMMON] unsigned char 
 13562 ;; Registers used:
 13563 ;;		wreg, status,2, status,0
 13564 ;; Tracked objects:
 13565 ;;		On entry : 0/0
 13566 ;;		On exit  : 0/0
 13567 ;;		Unchanged: 0/0
 13568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13570 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13571 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13573 ;;Total ram usage:       14 bytes
 13574 ;; Hardware stack levels used:    1
 13575 ;; This function calls:
 13576 ;;		Nothing
 13577 ;; This function is called by:
 13578 ;;		_main
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           
 13583                           ;psect for function ___xxtofl
 13584  1215                     ___xxtofl:	
 13585                           
 13586                           ;incstack = 0
 13587                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 13588                           ;___xxtofl@sign stored from wreg
 13589  1215  0020               	movlb	0	; select bank0
 13590  1216  00A0               	movwf	___xxtofl@sign
 13591  1217                     l4555:	
 13592  1217  0820               	movf	___xxtofl@sign,w
 13593  1218  1903               	btfsc	3,2
 13594  1219  2A1B               	goto	u5971
 13595  121A  2A1C               	goto	u5970
 13596  121B                     u5971:	
 13597  121B  2A30               	goto	l4561
 13598  121C                     u5970:	
 13599  121C                     l4557:	
 13600  121C  1FF9               	btfss	___xxtofl@val+3,7
 13601  121D  2A1F               	goto	u5981
 13602  121E  2A20               	goto	u5980
 13603  121F                     u5981:	
 13604  121F  2A30               	goto	l4561
 13605  1220                     u5980:	
 13606  1220                     l4559:	
 13607  1220  0976               	comf	___xxtofl@val,w
 13608  1221  00A2               	movwf	___xxtofl@arg
 13609  1222  0977               	comf	___xxtofl@val+1,w
 13610  1223  00A3               	movwf	___xxtofl@arg+1
 13611  1224  0978               	comf	___xxtofl@val+2,w
 13612  1225  00A4               	movwf	___xxtofl@arg+2
 13613  1226  0979               	comf	___xxtofl@val+3,w
 13614  1227  00A5               	movwf	___xxtofl@arg+3
 13615  1228  0AA2               	incf	___xxtofl@arg,f
 13616  1229  1903               	skipnz
 13617  122A  0AA3               	incf	___xxtofl@arg+1,f
 13618  122B  1903               	skipnz
 13619  122C  0AA4               	incf	___xxtofl@arg+2,f
 13620  122D  1903               	skipnz
 13621  122E  0AA5               	incf	___xxtofl@arg+3,f
 13622  122F  2A38               	goto	l1043
 13623  1230                     l4561:	
 13624  1230  0879               	movf	___xxtofl@val+3,w
 13625  1231  00A5               	movwf	___xxtofl@arg+3
 13626  1232  0878               	movf	___xxtofl@val+2,w
 13627  1233  00A4               	movwf	___xxtofl@arg+2
 13628  1234  0877               	movf	___xxtofl@val+1,w
 13629  1235  00A3               	movwf	___xxtofl@arg+1
 13630  1236  0876               	movf	___xxtofl@val,w
 13631  1237  00A2               	movwf	___xxtofl@arg
 13632  1238                     l1043:	
 13633  1238  0879               	movf	___xxtofl@val+3,w
 13634  1239  0478               	iorwf	___xxtofl@val+2,w
 13635  123A  0477               	iorwf	___xxtofl@val+1,w
 13636  123B  0476               	iorwf	___xxtofl@val,w
 13637  123C  1D03               	skipz
 13638  123D  2A3F               	goto	u5991
 13639  123E  2A40               	goto	u5990
 13640  123F                     u5991:	
 13641  123F  2A49               	goto	l4567
 13642  1240                     u5990:	
 13643  1240                     l4563:	
 13644  1240  3000               	movlw	0
 13645  1241  00F9               	movwf	?___xxtofl+3
 13646  1242  3000               	movlw	0
 13647  1243  00F8               	movwf	?___xxtofl+2
 13648  1244  3000               	movlw	0
 13649  1245  00F7               	movwf	?___xxtofl+1
 13650  1246  3000               	movlw	0
 13651  1247  00F6               	movwf	?___xxtofl
 13652  1248  2AC1               	goto	l1045
 13653  1249                     l4567:	
 13654  1249  3096               	movlw	150
 13655  124A  00FA               	movwf	??___xxtofl
 13656  124B  087A               	movf	??___xxtofl,w
 13657  124C  00A1               	movwf	___xxtofl@exp
 13658  124D  2A59               	goto	l4571
 13659  124E                     l4569:	
 13660  124E  3001               	movlw	1
 13661  124F  00FA               	movwf	??___xxtofl
 13662  1250  087A               	movf	??___xxtofl,w
 13663  1251  07A1               	addwf	___xxtofl@exp,f
 13664  1252  3001               	movlw	1
 13665  1253                     u6005:	
 13666  1253  36A5               	lsrf	___xxtofl@arg+3,f
 13667  1254  0CA4               	rrf	___xxtofl@arg+2,f
 13668  1255  0CA3               	rrf	___xxtofl@arg+1,f
 13669  1256  0CA2               	rrf	___xxtofl@arg,f
 13670  1257  0B89               	decfsz	9,f
 13671  1258  2A53               	goto	u6005
 13672  1259                     l4571:	
 13673  1259  30FE               	movlw	254
 13674  125A  0525               	andwf	___xxtofl@arg+3,w
 13675  125B  1D03               	btfss	3,2
 13676  125C  2A5E               	goto	u6011
 13677  125D  2A5F               	goto	u6010
 13678  125E                     u6011:	
 13679  125E  2A4E               	goto	l4569
 13680  125F                     u6010:	
 13681  125F  2A73               	goto	l1049
 13682  1260                     l4573:	
 13683  1260  3001               	movlw	1
 13684  1261  00FA               	movwf	??___xxtofl
 13685  1262  087A               	movf	??___xxtofl,w
 13686  1263  07A1               	addwf	___xxtofl@exp,f
 13687  1264                     l4575:	
 13688  1264  3001               	movlw	1
 13689  1265  07A2               	addwf	___xxtofl@arg,f
 13690  1266  3000               	movlw	0
 13691  1267  3DA3               	addwfc	___xxtofl@arg+1,f
 13692  1268  3000               	movlw	0
 13693  1269  3DA4               	addwfc	___xxtofl@arg+2,f
 13694  126A  3000               	movlw	0
 13695  126B  3DA5               	addwfc	___xxtofl@arg+3,f
 13696  126C                     l4577:	
 13697  126C  3001               	movlw	1
 13698  126D                     u6025:	
 13699  126D  36A5               	lsrf	___xxtofl@arg+3,f
 13700  126E  0CA4               	rrf	___xxtofl@arg+2,f
 13701  126F  0CA3               	rrf	___xxtofl@arg+1,f
 13702  1270  0CA2               	rrf	___xxtofl@arg,f
 13703  1271  0B89               	decfsz	9,f
 13704  1272  2A6D               	goto	u6025
 13705  1273                     l1049:	
 13706  1273  30FF               	movlw	255
 13707  1274  0525               	andwf	___xxtofl@arg+3,w
 13708  1275  1D03               	btfss	3,2
 13709  1276  2A78               	goto	u6031
 13710  1277  2A79               	goto	u6030
 13711  1278                     u6031:	
 13712  1278  2A60               	goto	l4573
 13713  1279                     u6030:	
 13714  1279  2A83               	goto	l4581
 13715  127A                     l4579:	
 13716  127A  3001               	movlw	1
 13717  127B  02A1               	subwf	___xxtofl@exp,f
 13718  127C  3001               	movlw	1
 13719  127D                     u6045:	
 13720  127D  35A2               	lslf	___xxtofl@arg,f
 13721  127E  0DA3               	rlf	___xxtofl@arg+1,f
 13722  127F  0DA4               	rlf	___xxtofl@arg+2,f
 13723  1280  0DA5               	rlf	___xxtofl@arg+3,f
 13724  1281  0B89               	decfsz	9,f
 13725  1282  2A7D               	goto	u6045
 13726  1283                     l4581:	
 13727  1283  1BA4               	btfsc	___xxtofl@arg+2,7
 13728  1284  2A86               	goto	u6051
 13729  1285  2A87               	goto	u6050
 13730  1286                     u6051:	
 13731  1286  2A8D               	goto	l1056
 13732  1287                     u6050:	
 13733  1287                     l4583:	
 13734  1287  3002               	movlw	2
 13735  1288  0221               	subwf	___xxtofl@exp,w
 13736  1289  1803               	skipnc
 13737  128A  2A8C               	goto	u6061
 13738  128B  2A8D               	goto	u6060
 13739  128C                     u6061:	
 13740  128C  2A7A               	goto	l4579
 13741  128D                     u6060:	
 13742  128D                     l1056:	
 13743  128D  1821               	btfsc	___xxtofl@exp,0
 13744  128E  2A90               	goto	u6071
 13745  128F  2A91               	goto	u6070
 13746  1290                     u6071:	
 13747  1290  2A99               	goto	l1057
 13748  1291                     u6070:	
 13749  1291                     l4585:	
 13750  1291  30FF               	movlw	255
 13751  1292  05A2               	andwf	___xxtofl@arg,f
 13752  1293  30FF               	movlw	255
 13753  1294  05A3               	andwf	___xxtofl@arg+1,f
 13754  1295  307F               	movlw	127
 13755  1296  05A4               	andwf	___xxtofl@arg+2,f
 13756  1297  30FF               	movlw	255
 13757  1298  05A5               	andwf	___xxtofl@arg+3,f
 13758  1299                     l1057:	
 13759  1299  1003               	clrc
 13760  129A  0CA1               	rrf	___xxtofl@exp,f
 13761  129B                     l4587:	
 13762  129B  0821               	movf	___xxtofl@exp,w
 13763  129C  00FA               	movwf	??___xxtofl
 13764  129D  01FB               	clrf	??___xxtofl+1
 13765  129E  01FC               	clrf	??___xxtofl+2
 13766  129F  01FD               	clrf	??___xxtofl+3
 13767  12A0  3018               	movlw	24
 13768  12A1                     u6085:	
 13769  12A1  35FA               	lslf	??___xxtofl,f
 13770  12A2  0DFB               	rlf	??___xxtofl+1,f
 13771  12A3  0DFC               	rlf	??___xxtofl+2,f
 13772  12A4  0DFD               	rlf	??___xxtofl+3,f
 13773  12A5                     u6080:	
 13774  12A5  0B89               	decfsz	9,f
 13775  12A6  2AA1               	goto	u6085
 13776  12A7  087A               	movf	??___xxtofl,w
 13777  12A8  04A2               	iorwf	___xxtofl@arg,f
 13778  12A9  087B               	movf	??___xxtofl+1,w
 13779  12AA  04A3               	iorwf	___xxtofl@arg+1,f
 13780  12AB  087C               	movf	??___xxtofl+2,w
 13781  12AC  04A4               	iorwf	___xxtofl@arg+2,f
 13782  12AD  087D               	movf	??___xxtofl+3,w
 13783  12AE  04A5               	iorwf	___xxtofl@arg+3,f
 13784  12AF                     l4589:	
 13785  12AF  0820               	movf	___xxtofl@sign,w
 13786  12B0  1903               	btfsc	3,2
 13787  12B1  2AB3               	goto	u6091
 13788  12B2  2AB4               	goto	u6090
 13789  12B3                     u6091:	
 13790  12B3  2AB9               	goto	l4595
 13791  12B4                     u6090:	
 13792  12B4                     l4591:	
 13793  12B4  1FF9               	btfss	___xxtofl@val+3,7
 13794  12B5  2AB7               	goto	u6101
 13795  12B6  2AB8               	goto	u6100
 13796  12B7                     u6101:	
 13797  12B7  2AB9               	goto	l4595
 13798  12B8                     u6100:	
 13799  12B8                     l4593:	
 13800  12B8  17A5               	bsf	___xxtofl@arg+3,7
 13801  12B9                     l4595:	
 13802  12B9  0825               	movf	___xxtofl@arg+3,w
 13803  12BA  00F9               	movwf	?___xxtofl+3
 13804  12BB  0824               	movf	___xxtofl@arg+2,w
 13805  12BC  00F8               	movwf	?___xxtofl+2
 13806  12BD  0823               	movf	___xxtofl@arg+1,w
 13807  12BE  00F7               	movwf	?___xxtofl+1
 13808  12BF  0822               	movf	___xxtofl@arg,w
 13809  12C0  00F6               	movwf	?___xxtofl
 13810  12C1                     l1045:	
 13811  12C1  0008               	return
 13812  12C2                     __end_of___xxtofl:	
 13813  007E                     btemp	set	126	;btemp
 13814  007E                     wtemp0	set	126


Data Sizes:
    Strings     85
    Constant    0
    Data        0
    BSS         162
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     49      80
    BANK3            80      0      51
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_3(CODE[6]), STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 5
		 -> temp(BANK3[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 5
		 -> temp(BANK3[5]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    S1202_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 5
		 -> temp(BANK3[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 5
		 -> temp(BANK3[5]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_3(CODE[6]), STR_1(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_3(CODE[6]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_3(CODE[6]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[11]), STR_9(CODE[12]), STR_8(CODE[16]), STR_7(CODE[12]), 
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), temp(BANK3[5]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___xxtofl
    _vfpfcnvrt->_tolower
    _efgtoa->_tolower
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _atoi->___wmul
    _atoi->_isdigit
    _config->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Cursor_Off->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Lcd_Port->_I2C_Write_Display
    ___xxtofl->_read_I
    ___xxtofl->_read_Temp
    ___xxtofl->_read_U

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _efgtoa->___fladd
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _config->_I2C_Master_Init

Critical Paths under _main in BANK1

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub

Critical Paths under _main in BANK2

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   46409
                                             39 BANK2     10    10      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                         _adc_config
                             _config
                         _pwm_config
                             _read_I
                          _read_Temp
                             _read_U
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   29298
                                             23 BANK2     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   28764
                                             15 BANK2      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           47    45      2   28427
                                             78 BANK0      2     0      2
                                             74 BANK1      6     6      0
                                              0 BANK2     15    15      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              66    61      5   22875
                                              8 BANK1     66    61      5
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMMON     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2907
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2789
                                              0 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2440
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                          _read_Temp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3481
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
                             _read_I (ARG)
                          _read_Temp (ARG)
                             _read_U (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1246
                                             32 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2489
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _read_I (ARG)
                          _read_Temp (ARG)
                             _read_U (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1237
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_U                                               6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _read_Temp                                            6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _read_I                                               6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _pwm_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               2     2      0    4077
                                              8 BANK0      2     2      0
                         _Cursor_Off
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     5     3      2    1247
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       5     5      0     397
                                              5 COMMON     5     5      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1157
                                             11 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     551
                                             11 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _Cursor_Off                                           0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              6     6      0     355
                                              5 COMMON     6     6      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             3     3      0     196
                                              2 COMMON     3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                  _I2C_Write_Display
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Display                                    2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              6 COMMON     8     4      4
                                              0 BANK0      6     6      0
                             _read_I (ARG)
                          _read_Temp (ARG)
                             _read_U (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           _read_I (ARG)
           _read_Temp (ARG)
           _read_U (ARG)
         _read_I (ARG)
         _read_Temp (ARG)
         _read_U (ARG)
       ___xxtofl (ARG)
         _read_I (ARG)
         _read_Temp (ARG)
         _read_U (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
         _read_I (ARG)
         _read_Temp (ARG)
         _read_U (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     ___xxtofl (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     _read_Temp (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
         _read_I (ARG)
         _read_Temp (ARG)
         _read_U (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     ___xxtofl (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     _read_I (ARG)
     _read_Temp (ARG)
     _read_U (ARG)
   ___flge
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
         _read_I (ARG)
         _read_Temp (ARG)
         _read_U (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     _read_I (ARG)
     _read_Temp (ARG)
     _read_U (ARG)
   ___xxtofl
     _read_I (ARG)
     _read_Temp (ARG)
     _read_U (ARG)
   _adc_config
   _config
     _Cursor_Off
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
   _pwm_config
   _read_I
   _read_Temp
   _read_U
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
                   _read_I (ARG)
                   _read_Temp (ARG)
                   _read_U (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             ___xxtofl (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             _read_Temp (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             ___xxtofl (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             _read_I (ARG)
             _read_Temp (ARG)
             _read_U (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             _read_I (ARG)
             _read_Temp (ARG)
             _read_U (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                     _read_I (ARG)
                     _read_Temp (ARG)
                     _read_U (ARG)
                   _read_I (ARG)
                   _read_Temp (ARG)
                   _read_U (ARG)
                 ___xxtofl (ARG)
                   _read_I (ARG)
                   _read_Temp (ARG)
                   _read_U (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
                   _read_I (ARG)
                   _read_Temp (ARG)
                   _read_U (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_Temp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
                   _read_I (ARG)
                   _read_Temp (ARG)
                   _read_U (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     31      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      33      11       63.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     181      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     181      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jun 21 10:56:30 2020

              ___fldiv@aexp 0059                ___fldiv@bexp 0058                ___fldiv@sign 0051  
               __CFG_CP$OFF 0000                          l82 0C31                          l91 0CE0  
                        l94 1D70                          l78 0C1B                          l97 1DB0  
              ___awdiv@sign 0076         ___wmul@multiplicand 0072         __Umul8_16@word_mpld 0076  
               __CFG_LVP$ON 0000                         l100 1DBA                         l103 1DFA  
                       l106 1D26                         l109 1D66                         l214 1C51  
        I2C_Write_Display@d 0070                         l223 1D1C                         l209 1A92  
                       l217 1A1C                         l226 1CD3                         l235 1ACB  
                       l180 0014                         l229 1C90                         l262 1A33  
                       l174 1096                         l271 19FD                         l247 1A13  
                       l256 1C20                         l265 19F7                         l177 1A49  
                       l505 0368                         l610 1AEA                         l506 034A  
                       l259 1A28                         l516 03A1                         l604 1BF0  
                       l277 1A0A                         l470 1F30                         l534 0586  
                       l608 1AD6                         l472 1F4A                         l802 110A  
                       l490 07E4                         l467 1F0E                         l644 1FA4  
                       l812 110A                         l590 0FFF                         l761 0860  
                       l913 1470                         l809 10F5                         l930 1502  
                       l922 15A8                         l915 144C                         l940 1546  
                       l909 13CF                         l774 1E9B                         l934 1524  
                       l783 1E48                         l951 159F                         l943 157D  
                       l952 15A8                         l777 1E17                         l778 1E33  
                       l794 1214                         l786 11A7                         l955 103A  
                       l981 0996                         l965 08B8                         l789 11FB  
                       l798 1A27                         l967 0A14                         l986 09E2  
                       l987 09FC                         l989 0A0B                         _PR2 001B  
              __CFG_CPD$OFF 0000                         _pad 1EF2                ___awmod@sign 0076  
              __CFG_BORV$LO 0000                         wreg 0009                ___flmul@aexp 0038  
              ___flmul@bexp 0039                ___flmul@sign 0033                ___flmul@temp 003E  
              ___flmul@prod 003A                ___fltol@exp1 007A                        l1011 177B  
                      l1100 1370                        l1005 17FF                        l1110 00F7  
                      l1201 1B3F                        l1017 17F3                        l1105 0056  
                      l1106 00FF                        l1130 1A79                        l1043 1238  
                      l1203 1B4F                        l1116 1A61                        l1124 1B0B  
                      l1045 12C1                        l1056 128D                        l1160 1B73  
                      l1057 1299                        l1049 1273                        l3001 1EE8  
                      l1145 1EF1                        l1153 1BC1                        l1163 0006  
                      l3011 1B9E                        l1068 1189                        l3005 1A28  
                      l3101 1409                        l3013 1BAC                        l3021 1A9D  
                      l3007 1A2D                        l1087 12FF                        l3111 141A  
                      l3103 140D                        l3031 1371                        l3015 1BB1  
                      l1175 1AAC                        l3023 1AA6                        l3201 1558  
                      l3121 145C                        l3113 1431                        l3105 1411  
                      l3041 1385                        l3033 1377                        l3009 1B9B  
                      l3017 1A94                        l1169 1B2C                        l4001 060B  
                      l1194 1B98                        l3211 158F                        l3203 155C  
                      l3131 1479                        l3123 145D                        l3115 1450  
                      l3107 1415                        l3051 139D                        l3043 138A  
                      l3035 137B                        l3019 1A99                        l3027 1A62  
                      l4011 0625                        l4003 060F                        l1179 1FFF  
                      l3221 15A3                        l3213 1594                        l3205 1579  
                      l3141 1492                        l3125 1465                        l3117 1456  
                      l3109 1419                        l3061 13B1                        l3053 13A2  
                      l3045 1392                        l3037 137F                        l1189 1B98  
                      l3301 1B74                        l4101 07BB                        l4021 0641  
                      l4013 0629                        l4005 0613                        l4111 12C8  
                      l3231 1B3B                        l3223 15A7                        l3215 1595  
                      l3207 1582                        l3151 14A7                        l3143 1498  
                      l3135 1482                        l3119 1458                        l3127 1469  
                      l3071 13C5                        l3063 13B2                        l3055 13A8  
                      l3047 1393                        l3039 1380                        l3311 0015  
                      l4103 07BF                        l4007 0618                        l4015 062D  
                      l4023 0645                        l4031 06BF                        l3241 19F5  
                      l4201 1C53                        l4121 12ED                        l4113 12CC  
                      l3233 1B46                        l3225 1B2E                        l3217 1599  
                      l3209 1587                        l3161 14F1                        l3145 149A  
                      l3137 148A                        l3129 1474                        l3153 14AC  
                      l3081 13E1                        l3065 13B7                        l3073 13C7  
                      l3057 13A9                        l3049 1395                        l3321 0073  
                      l3313 002D                        l3305 1B8B                        l4105 07C9  
                      l4041 06F1                        l4033 06CD                        l4025 068B  
                      l4017 0633                        l4009 0621                        l3243 1A04  
                      l4211 1C70                        l4203 1C58                        l4131 1318  
                      l4115 12CE                        l3411 1E55                        l3403 1E49  
                      l3235 1B4B                        l3227 1B30                        l3219 159B  
                      l3171 1518                        l3155 14C2                        l3163 14FA  
                      l3147 149E                        l3139 148E                        l3091 13F5  
                      l3083 13E5                        l3075 13D5                        l3067 13BC  
                      l3059 13AD                        l3331 00B8                        l3315 0048  
                      l3251 1EF4                        l3307 1B91                        l4051 070C  
                      l4043 06F5                        l4035 06DB                        l4027 06B7  
                      l4019 063D                        l3245 1A07                        l4221 1C87  
                      l4213 1C75                        l4205 1C63                        l3341 1A4A  
                      l4141 135A                        l4125 12F4                        l4117 12D8  
                      l4109 12C2                        l3421 1E6C                        l3413 1E59  
                      l3405 1E4A                        l3229 1B37                        l3181 152D  
                      l3173 151F                        l3165 150A                        l3157 14E6  
                      l3149 149F                        l3093 13F9                        l3085 13E9  
                      l3077 13D9                        l3069 13C4                        l3333 00CF  
                      l3325 0088                        l3317 0055                        l3261 1F11  
                      l3253 1EF9                        l4061 0720                        l4053 070E  
                      l4045 06FC                        l4037 06E2                        l4029 06BB  
                      l4301 0EFC                        l3239 19F2                        l3247 19F8  
                      l4223 1C8B                        l4215 1C79                        l4207 1C68  
                      l3351 1ADB                        l4143 1360                        l4135 1338  
                      l4127 12FB                        l4119 12EC                        l3431 1E87  
                      l3423 1E70                        l3415 1E5E                        l3407 1E4E  
                      l3191 153D                        l3183 1532                        l3175 1523  
                      l3167 150F                        l3159 14EC                        l3095 13FD  
                      l3087 13ED                        l3079 13DD                        l3511 10EC  
                      l3503 10D5                        l3335 00D8                        l3327 009F  
                      l3319 005B                        l3263 1F1D                        l3255 1F02  
                      l4063 0725                        l4071 0753                        l4055 0712  
                      l4047 0702                        l4039 06E7                        l4311 0F6A  
                      l4231 0D07                        l3249 19FB                        l4401 1C1C  
                      l4217 1C7E                        l4209 1C6C                        l3353 1AE0  
                      l3345 1ACC                        l4145 136C                        l4129 1304  
                      l3361 0803                        l3425 1E74                        l3417 1E64  
                      l3433 1E8D                        l3409 1E53                        l3601 0943  
                      l3441 1DFB                        l3193 1543                        l3177 1528  
                      l3185 1534                        l3097 1401                        l3089 13F1  
                      l3513 10FA                        l3505 10E5                        l3281 1155  
                      l3273 110B                        l3337 00EF                        l3329 00A7  
                      l3265 1F22                        l3257 1F07                        l4081 0776  
                      l4073 0759                        l4065 073B                        l4057 0716  
                      l4049 0706                        l4321 0FB6                        l4313 0F74  
                      l4305 0F3B                        l4241 0D3C                        l4233 0D0B  
                      l4225 0CE4                        l4403 1C1D                        l4411 1C9C  
                      l4219 1C82                        l3355 1AE6                        l3347 1ACE  
                      l4139 1354                        l3371 0817                        l3363 0807  
                      l3435 1E92                        l3427 1E7E                        l3419 1E67  
                      l3611 095F                        l3603 094B                        l3531 0870  
                      l3523 0861                        l3443 1E0F                        l3179 152B  
                      l3187 1538                        l3099 1405                        l3515 10FF  
                      l3283 115A                        l3275 1123                        l3267 1F35  
                      l3259 1F0C                        l4083 077A                        l4075 0766  
                      l4067 074B                        l4059 071B                        l4171 1FD2  
                      l4163 1FBD                        l4155 1FA6                        l4323 0FC3  
                      l4307 0F41                        l4243 0D3D                        l4235 0D1F  
                      l4227 0CF8                        l4181 1C22                        l4341 1F4B  
                      l4405 1C1F                        l4413 1CA7                        l4501 1DAB  
                      l3349 1AD2                        l3381 082B                        l3373 081B  
                      l3365 080C                        l3437 1E97                        l3429 1E82  
                      l3613 0966                        l3621 0976                        l3605 094F  
                      l3533 0875                        l3541 0885                        l3525 0867  
                      l3445 1E2B                        l3461 11C7                        l3453 118A  
                      l3701 1603                        l3197 154B                        l3189 1539  
                      l3517 1005                        l3293 1185                        l3277 1138  
                      l3269 1F3E                        l4093 07A3                        l4085 0783  
                      l4077 076B                        l4069 074F                        l4173 1FDB  
                      l4165 1FC1                        l4157 1FAE                        l4309 0F56  
                      l4317 0F98                        l4261 0DAF                        l4253 0D88  
                      l4237 0D29                        l4245 0D43                        l4229 0D02  
                      l4333 0FD6                        l4421 1BC8                        l4191 1C35  
                      l4183 1C2D                        l4351 1F74                        l4343 1F5B  
                      l4415 1CAB                        l4407 1C91                        l4431 103B  
                      l4511 1D2A                        l4503 1DAF                        l3391 0847  
                      l3383 082F                        l3375 081D                        l3367 080E  
                      l3359 0802                        l3623 097A                        l3615 096A  
                      l3607 0955                        l3551 089B                        l3543 088D  
                      l3535 087A                        l3527 086B                        l3447 1E45  
                      l3463 11DF                        l3455 119F                        l3711 162B  
                      l3703 1608                        l3199 1550                        l3519 1008  
                      l3279 113E                        l3287 115F                        l4095 07A9  
                      l4087 0787                        l4079 0771                        l4175 1FE1  
                      l4167 1FC5                        l4159 1FBA                        l4335 0FF4  
                      l4319 0FAC                        l4327 0FC9                        l4271 0DF8  
                      l4263 0DC2                        l4247 0D55                        l4255 0D8E  
                      l4239 0D38                        l4423 1BCB                        l4193 1C3A  
                      l4185 1C2D                        l4417 1A0B                        l4353 1F86  
                      l4345 1F5E                        l4361 1F9C                        l4409 1C95  
                      l4441 1053                        l4433 1043                        l4521 1D65  
                      l4513 1D32                        l3393 084C                        l3385 0833  
                      l3377 0823                        l3369 0812                        l3641 09C4  
                      l3633 099B                        l3625 097B                        l3617 096B  
                      l3609 095D                        l3553 08A0                        l3561 08B0  
                      l3545 0892                        l3537 0882                        l3529 086F  
                      l3449 1E47                        l3465 11E3                        l3457 11BB  
                      l3721 1686                        l3713 1645                        l3473 1A1D  
                      l3481 1097                        l3289 1165                        l3297 1B0D  
                      l4097 07AE                        l4089 078B                        l4177 1FF1  
                      l4169 1FC9                        l4329 0FD3                        l4281 0E4A  
                      l4265 0DCC                        l4257 0DA2                        l4249 0D5F  
                      l4425 1BE3                        l4601 0A18                        l4195 1C3E  
                      l4187 1C2D                        l4355 1F8E                        l4347 1F69  
                      l4371 1CEA                        l4451 1058                        l4443 1054  
                      l4435 104F                        l4515 1D59                        l4507 1D1D  
                      l4531 1DC6                        l3811 1B04                        l3803 1AEB  
                      l3387 0842                        l3379 0826                        l3395 0852  
                      l3651 09FB                        l3635 09A0                        l3643 09C8  
                      l3627 097F                        l3619 0972                        l3563 08C0  
                      l3571 08D9                        l3555 08A5                        l3547 0896  
                      l3539 0883                        l3467 1211                        l3459 11C3  
                      l3731 16B5                        l3723 168D                        l3715 1652  
                      l3707 1611                        l3475 1A25                        l3491 10BF  
                      l3483 10A2                        l3299 1B15                        l4099 07B2  
                      l4291 0EAA                        l4283 0E6B                        l4275 0E21  
                      l4267 0DDC                        l4259 0DA5                        l4427 1BEC  
                      l4419 1BC4                        l4611 0A23                        l4603 0A1B  
                      l4197 1C46                        l4189 1C31                        l4357 1F8F  
                      l4349 1F6D                        l4365 1A14                        l4381 1D0E  
                      l4373 1CEF                        l4461 1076                        l4453 1059  
                      l4445 1055                        l4437 1051                        l4517 1D5D  
                      l4509 1D24                        l4533 1DED                        l4525 1DB1  
                      l3805 1AED                        l3397 0857                        l3389 0846  
                      l3653 0A01                        l3645 09D5                        l3637 09A8  
                      l3629 0993                        l3581 08FF                        l3573 08DE  
                      l3565 08CC                        l3557 08AD                        l3549 089A  
                      l3469 1213                        l3741 1705                        l3733 16C9  
                      l3725 169A                        l3717 166C                        l3709 161E  
                      l3477 1A27                        l3493 10C7                        l3901 02FE  
                      l3821 010C                        l4293 0EB4                        l4285 0E70  
                      l4269 0DEE                        l4277 0E27                        l4701 0CCD  
                      l4621 0A32                        l4613 0A26                        l4605 0A1E  
                      ?_pad 0024                        l3815 1A7B                        l4199 1C4D  
                      l4359 1F96                        l4383 1D13                        l4375 1CF3  
                      l4367 1CD6                        l4391 1ABB                        l4463 1079  
                      l4455 105A                        l4447 1056                        l4439 1052  
                      l4471 1A34                        l4519 1D61                        l4535 1DF1  
                      l4527 1DB8                        l3807 1AF4                        l3399 085C  
                      l3655 0A05                        l3647 09F0                        l3639 09AC  
                      l3591 0924                        l3583 0907                        l3567 08D0  
                      l3559 08AE                        l3751 174B                        l3743 171A  
                      l3735 16D0                        l3727 16A1                        l3719 1679  
                      l3671 15B8                        l3663 15A9                        l3495 10C9  
                      l3487 10AB                        l3911 0346                        l3903 0325  
                      l3831 014E                        l3823 012A                        l4295 0EC7  
                      l4287 0E91                        l4279 0E45                        l4551 1B6A  
                      l4543 1B52                        l4703 0CCF                        l4631 0B71  
                      l4623 0A37                        l4607 0A20                        l4561 1230  
                      l4385 1D17                        l4369 1CDB                        l4377 1CF9  
                      l4393 1AC0                        l4465 107C                        l4457 1066  
                      l4449 1057                        l4481 1A44                        l4473 1A3A  
                      l4537 1DF5                        l4529 1DBE                        l3809 1B03  
                      l3657 0A07                        l3649 09F3                        l3593 0928  
                      l3585 090F                        l3577 08E7                        l3761 175F  
                      l3753 174F                        l3745 1731                        l3737 16E4  
                      l3729 16AE                        l3681 15D4                        l3673 15BD  
                      l3665 15AF                        l3497 10CD                        l3489 10BE  
                      l3921 036E                        l3913 0359                        l3905 0335  
                      l3841 0169                        l3833 0154                        l3825 012F  
                      l3817 0102                        l4289 0E97                        l4545 1B5A  
                      l4705 0CD2                        l4641 0BB1                        l4633 0B82  
                      l4625 0A44                        l4609 0A22                        l4571 1259  
                      l4563 1240                        l4555 1217                        l4395 1BF1  
                      l4379 1CFF                        l4387 1AAD                        l4467 1082  
                      l4459 1073                        l4483 1A47                        l4475 1A3D  
                      l4491 1D6E                        l4539 1DF9                        l3595 0929  
                      l3587 0911                        l3579 08F7                        l3771 1780  
                      l3763 1760                        l3755 1750                        l3747 1738  
                      l3739 16F1                        l3691 15E7                        l3683 15D9  
                      l3675 15C2                        l3667 15B3                        l3931 03A5  
                      l3923 0374                        l3915 035F                        l3907 0339  
                      l3843 016E                        l3835 0159                        l3827 0143  
                      l3819 0104                        l4299 0EEA                        l4547 1B5C  
                      l4707 0CD8                        l4651 0BDD                        l4643 0BB8  
                      l4635 0B89                        l4627 0AF2                        l4619 0A29  
                      l4581 1283                        l4573 1260                        l4557 121C  
                      l4485 0007                        l4397 1BF4                        l4389 1AB1  
                      l4469 1089                        l4477 1A3E                        l4493 1D74  
                      l3589 0916                        l3597 0930                        l3773 1785  
                      l3781 17AD                        l3765 1764                        l3757 1757  
                      l3749 1744                        l3693 15EC                        l3685 15DD  
                      l3677 15CA                        l3669 15B7                        l3941 03BF  
                      l3933 03AB                        l3925 0381                        l3909 033F  
                      l3861 01C0                        l3853 01A2                        l3845 0173  
                      l3837 0160                        l3829 0146                        l4549 1B5E  
                      l4661 0C09                        l4653 0BEA                        l4645 0BBE  
                      l4637 0B90                        l4629 0B1E                        l4591 12B4  
                      l4583 1287                        l4575 1264                        l4567 1249  
                      l4559 1220                        l4487 000F                        l4399 1BF5  
                      l4479 1A42                        l4495 1D7C                        l3599 0942  
                      l3791 17DD                        l3783 17BA                        l3775 178D  
                      l3767 1778                        l3759 175B                        l3695 15F4  
                      l3687 15E1                        l3679 15CC                        l2991 1EA1  
                      l3943 03C3                        l3951 03D7                        l3935 03B1  
                      l3927 0396                        l3871 0206                        l3855 01A8  
                      l3839 0165                        l3847 0177                        l4663 0C0D  
                      l4655 0BEF                        l4647 0BCF                        l4639 0BAA  
                      l4593 12B8                        l4585 1291                        l4577 126C  
                      l4569 124E                        l4497 1DA3                        l4489 1D67  
                      l3793 17EA                        l3785 17C4                        l3777 1791  
                      l3697 15F6                        l3689 15E2                        l2993 1EA6  
                      l3961 04AF                        l3953 03D9                        l3945 03CB  
                      l3937 03B5                        l3929 039C                        l3873 020C  
                      l3857 01B2                        l3849 0189                        l3865 01DB  
                      l4681 0C5F                        l4665 0C1F                        l4657 0BF5  
                      l4649 0BD6                        l4595 12B9                        l4587 129B  
                      l4579 127A                        l4499 1DA7                        l3795 17EE  
                      l3787 17D2                        l3779 17A9                        l3699 15FE  
                      l2995 1EAB                        l3971 0536                        l3963 04BD  
                      l3955 03E1                        l3947 03CD                        l3939 03B9  
                      l3891 0262                        l3875 0216                        l3867 01ED  
                      l3883 023F                        l3859 01BB                        l4691 0C9C  
                      l4683 0C65                        l4667 0C23                        l4675 0C3A  
                      l4659 0BF8                        l4589 12AF                        l4773 1310  
                      l3797 17EF                        l3789 17DB                        l2997 1EB6  
                      l2989 1E9C                        l3981 0584                        l3973 053E  
                      l3965 050F                        l3957 03EA                        l3949 03D3  
                      l3893 028E                        l3885 0248                        l3877 021F  
                      l4693 0C9F                        l4685 0C6C                        l4677 0C5A  
                      l4669 0C35                        l3799 17F7                        l2999 1ED5  
                      l3991 05EE                        l3983 058D                        l3975 0571  
                      l3967 0519                        l3959 04AB                        l3895 0292  
                      l3887 024A                        l3879 0224                        l4695 0CA5  
                      l4679 0C5C                        l4687 0C7A                        l4599 0A15  
                      l3993 05F2                        l3985 05DC                        l3977 0579  
                      l3969 0531                        l3897 02CE                        l4689 0C9A  
                      l3987 05E1                        l3995 05F7                        l3979 057F  
                      l3899 02FA                        l4699 0CAD                        l3997 05FE  
                      l3989 05E8                        l3999 0602                        STR_1 1833  
                      STR_2 1852                        STR_3 1833                        STR_4 184C  
                      STR_5 1833                        STR_6 184F                        STR_7 1810  
                      STR_8 1800                        STR_9 181C                        _LATA 010C  
                      u3110 1EA1                        u3111 1EA0                        _LATC 010E  
                      u4000 0807                        u3120 1EA6                        u3200 1A73  
                      u4001 0806                        u3121 1EA5                        u4010 0812  
                      u3210 137F                        u3130 1EB6                        u4011 0811  
                      u3211 137E                        u3131 1EB5                        u4020 0823  
                      u4100 1E4E                        u3300 1431                        u3220 1385  
                      u3140 1ED5                        u4021 0822                        u4101 1E4D  
                      u3301 1430                        u3221 1384                        u3141 1ED4  
                      u3150 1A2D                        u4110 1E59                        u3310 143B  
                      u3230 138A                        u3151 1A2C                        u4111 1E58  
                      u3311 1439                        u3231 1389                        u3160 1A33  
                      u4040 0833                        u4120 1E64                        u4200 1E2B  
                      u3400 1492                        u3320 143C                        u3240 13A8  
                      u5000 019B                        u3161 1A32                        u4041 0832  
                      u4121 1E63                        u4201 1E2A                        u3401 1491  
                      u3305 142D                        u3241 13A7                        u3145 1ED1  
                      u5001 0199                        u4210 1E45                        u3410 149E  
                      u3330 1450                        u3250 13B1                        u3170 1BC1  
                      u5010 019C                        u4035 0827                        u4211 1E44  
                      u3411 149D                        u3331 144F                        u3251 13B0  
                      u3171 1BC0                        u4060 0842                        u4140 1E74  
                      u4220 119F                        u3500 1532                        u3340 145C  
                      u3260 13B7                        u4300 10CD                        u3180 1AA6  
                      u5100 033F                        u5020 01A8                        u4061 0841  
                      u4141 1E73                        u4221 119E                        u3501 1531  
                      u3341 145B                        u3261 13B6                        u4301 10CC  
                      u3181 1AA5                        u5101 033E                        u5021 01A7  
                      u4150 1E7E                        u4230 11BB                        u3510 1538  
                      u3430 14C2                        u3270 13BC                        u4310 10D4  
                      u3190 1A72                        u5110 0346                        u5030 01ED  
                      u4055 0834                        u4151 1E7D                        u4135 1E68  
                      u4215 1E41                        u4231 11BA                        u3511 1537  
                      u3431 14C1                        u3271 13BB                        u4311 10D3  
                      u3191 1A70                        u5111 0345                        u5031 01EC  
                      u4080 0852                        u4400 087A                        u4240 11C7  
                      u3600 1587                        u3520 153D                        u3440 14F1  
                      u3360 1470                        u3280 13D5                        u5200 03BF  
                      u5120 0359                        u5040 01FF                        u4081 0851  
                      u4065 083E                        u4401 0879                        u4241 11C6  
                      u3601 1586                        u3521 153C                        u3441 14F0  
                      u3433 14BE                        u3425 14A1                        u3361 146F  
                      u3281 13D4                        u5201 03BE                        u5121 0358  
                      u5041 01FD                        u6010 125F                        u4090 0857  
                      u4170 1E8D                        u4410 089A                        u4250 11E3  
                      u3610 1594                        u3530 1543                        u3450 150A  
                      u3370 1474                        u3290 13D9                        u4330 10E4  
                      u5210 03C3                        u5130 036D                        u5050 0200  
                      u6011 125E                        u4091 0856                        u4075 0848  
                      u4171 1E8C                        u4155 1E7A                        u4411 0899  
                      u4251 11E2                        u3611 1593                        u3531 1542  
                      u3451 1509                        u3371 1473                        u3355 145F  
                      u3291 13D8                        u4331 10E3                        u5211 03C2  
                      u5131 036C                        u6100 12B8                        u4180 1E92  
                      u4420 08A0                        u4260 1211                        u3620 1599  
                      u3540 154A                        u3460 150F                        u3380 1479  
                      u4340 10EB                        u3700 1F35                        u5300 05EE  
                      u5220 03D3                        u5140 0374                        u5060 020C  
                      u6101 12B7                        u6005 1253                        u4181 1E91  
                      u4165 1E83                        u4421 089F                        u4261 1210  
                      u3621 1598                        u3541 1549                        u3461 150E  
                      u3381 1478                        u4341 10EA                        u4325 10D6  
                      u3701 1F34                        u5301 05ED                        u5221 03D2  
                      u5141 0373                        u5125 0355                        u5061 020B  
                      u6030 1279                        u4510 0942                        u4430 08A5  
                      u4190 1E0F                        u4270 1A25                        u3630 15A7  
                      u3550 1550                        u3390 148E                        u3710 1130  
                      u5310 05F2                        u5230 04BD                        u5150 0381  
                      u5070 0261                        u6110 0A44                        u6031 1278  
                      u4511 0941                        u4431 08A4                        u4191 1E0E  
                      u4271 1A24                        u3631 15A6                        u3551 154F  
                      u3391 148D                        u5311 05F1                        u5231 04BC  
                      u5151 0380                        u5071 0260                        u6111 0A43  
                      u4600 099A                        u4520 0955                        u4440 08C0  
                      u3640 1B3B                        u3560 155C                        u3480 1523  
                      u4360 10FA                        u4280 10A2                        u3720 113E  
                      u3800 1B84                        u5400 0712                        u5320 05FE  
                      u5240 050F                        u5160 0396                        u5080 02CD  
                      u6120 0BEF                        u6025 126D                        u4601 0999  
                      u4521 0954                        u4505 092A                        u4441 08BF  
                      u4265 120D                        u3641 1B3A                        u3561 155B  
                      u3481 1522                        u4361 10F9                        u4281 10A1  
                      u3721 113D                        u3801 1B82                        u5401 0711  
                      u5321 05FD                        u5241 050E                        u5161 0395  
                      u5081 02CC                        u6121 0BEE                        u6050 1287  
                      u4610 09A0                        u4530 095D                        u4450 08DE  
                      u3570 156A                        u3490 1528                        u4370 10FF  
                      u4290 10B8                        u3730 114B                        u3810 1B85  
                      u5410 0759                        u5330 0602                        u5250 0531  
                      u5170 03AB                        u5090 0325                        u6130 0BF5  
                      u6051 1286                        u4611 099F                        u4531 095C  
                      u4515 093E                        u4451 08DD                        u3491 1527  
                      u3475 1519                        u4371 10FE                        u4355 10ED  
                      u3715 112C                        u5411 0758                        u5331 0601  
                      u5251 0530                        u5235 04B9                        u5171 03AA  
                      u5155 037D                        u5091 0324                        u6131 0BF4  
                      u6115 0A40                        u6060 128D                        u5500 134D  
                      u4620 09AC                        u4460 0916                        u4380 086F  
                      u3660 1B4B                        u4700 15E1                        u3580 1579  
                      u3740 1155                        u3900 00C5                        u3820 1B91  
                      u5420 0766                        u5340 0633                        u5260 0536  
                      u5180 03B1                        u6140 0C1F                        u6061 128C  
                      u6045 127D                        u5501 134B                        u4621 09AB  
                      u4461 0915                        u4381 086E                        u3661 1B4A  
                      u4701 15E0                        u3581 1578                        u3741 1154  
                      u3821 1B90                        u5421 0765                        u5341 0632  
                      u5261 0535                        u5181 03B0                        u5165 0392  
                      u6141 0C1E                        u6070 1291                        u5510 134E  
                      u4630 09BA                        u4550 096A                        u4390 0875  
                      u4710 15E7                        u3590 1582                        u3750 1165  
                      u3910 00CF                        u3830 003A                        u3670 1EF9  
                      u5430 0771                        u5350 06CD                        u5270 057F  
                      u5190 03B5                        u6150 0C35                        u6071 1290  
                      u4551 0969                        u4391 0874                        u3655 1B40  
                      u4711 15E6                        u3591 1581                        u3575 1566  
                      u4295 10B4                        u3751 1164                        u3735 1147  
                      u3911 00CE                        u3671 1EF8                        u5431 0770  
                      u5351 06CC                        u5271 057E                        u5191 03B4  
                      u6151 0C34                        u6080 12A5                        u5520 135A  
                      u4640 09D5                        u4720 15EC                        u3760 1172  
                      u3920 00E5                        u3840 0055                        u3680 1F07  
                      u5440 079C                        u5360 06DB                        u5280 05E1  
                      u6160 0C5A                        u5521 1359                        u4641 09D4  
                      u4545 0960                        u4721 15EB                        u3905 00C1  
                      u3841 0054                        u3681 1F06                        u5441 079A  
                      u5425 0762                        u5361 06DA                        u5281 05E0  
                      u6161 0C59                        u6217 0BE3                        u6090 12B4  
                      u5530 1360                        u4650 09F0                        u4570 097A  
                      u4490 0928                        u4810 174F                        u4730 1603  
                      u3770 117D                        u3930 00EF                        u3850 005B  
                      u3690 1F30                        u5450 079D                        u5370 06E2  
                      u5290 05E8                        u5610 0CF8                        u6170 0C9A  
                      u6091 12B3                        u6307 108F                        u5531 135F  
                      u4651 09EF                        u4635 09B6                        u4571 0979  
                      u4491 0927                        u4475 0917                        u4811 174E  
                      u4731 1602                        u3771 117B                        u3931 00EE  
                      u3851 005A                        u3835 0036                        u3691 1F2F  
                      u5371 06E1                        u5355 06C9                        u5291 05E7  
                      u5611 0CF7                        u6171 0C99                        u6227 0C01  
                      u3940 1A5A                        u4660 0A05                        u4580 097F  
                      u4900 17BA                        u4740 1608                        u3780 117E  
                      u3860 0069                        u5460 07A9                        u5380 06E7  
                      u5540 1FBA                        u5700 0E18                        u5620 0D1F  
                      u6180 0CCD                        u6085 12A1                        u6317 1C76  
                      u5605 1C5B                        u3941 1A58                        u4661 0A04  
                      u4645 09D1                        u4581 097E                        u4565 096C  
                      u4485 091E                        u4901 17B9                        u4805 1745  
                      u4741 1607                        u3765 116E                        u3925 00E1  
                      u3845 0051                        u5461 07A8                        u5381 06E6  
                      u5365 06D7                        u5541 1FB9                        u5621 0D1E  
                      u6181 0CCC                        u6237 0C13                        u3950 1A5B  
                      u5470 12D8                        u4590 0993                        u4910 17D2  
                      u4830 175F                        u4670 15B7                        u3870 0087  
                      u3790 1B2C                        u5390 0702                        u5550 1FD2  
                      u5710 0E27                        u5630 0D3C                        u6327 1C88  
                      u5471 12D7                        u4655 09EC                        u4591 0992  
                      u4911 17D1                        u4831 175E                        u4671 15B6  
                      u3871 0086                        u3695 1F2C                        u3791 1B2B  
                      u5391 0701                        u5551 1FD1                        u5711 0E26  
                      u5631 0D3B                        u6247 0C29                        u5800 1F5B  
                      u3960 1AD2                        u5480 12EC                        u4920 17EE  
                      u4840 1764                        u4680 15BD                        u3880 0095  
                      u5560 1FDB                        u5720 0E4A                        u5640 0D7E  
                      u5801 1F5A                        u6337 1C98                        u3961 1AD1  
                      u5481 12EB                        u4921 17ED                        u4905 17B6  
                      u4841 1763                        u4825 1751                        u4681 15BC  
                      u3865 0065                        u5561 1FDA                        u5721 0E49  
                      u5641 0D7C                        u6257 0C72                        u4930 1AF4  
                      u5490 12FA                        u4850 1778                        u4770 1710  
                      u4690 15C2                        u3890 009F                        u5570 1FE1  
                      u5730 0E70                        u5650 0D7F                        u6347 1CA3  
                      u6267 1DB5                        u4931 1AF3                        u5491 12F9  
                      u4915 17CE                        u4851 1777                        u4755 1687  
                      u4691 15C1                        u3891 009E                        u5571 1FE0  
                      u5731 0E6F                        u5820 1F6D                        u4940 1B03  
                      u4860 177F                        u4780 1727                        u5580 1FF1  
                      u5740 0E97                        u5660 0D8E                        u5821 1F6C  
                      u6357 1CAE                        u6277 1D6B                        u4941 1B02  
                      u4861 177E                        u4765 16B6                        u3885 0091  
                      u5581 1FF0                        u5741 0E96                        u5661 0D8D  
                      u5910 1ACB                        u3990 1AE6                        u4870 1785  
                      u4950 012A                        u5750 0EFC                        u5670 0DA2  
                      u6367 1C41                        u5815 1F5F                        u5911 1ACA  
                      u6287 1D21                        u3991 1AE5                        u3975 1AD7  
                      u4871 1784                        u4775 170C                        u4951 0129  
                      u5751 0EFB                        u5671 0DA1                        u5840 1F86  
                      u5920 1C03                        u4880 1791                        u4960 0154  
                      u5760 0F31                        u5680 0DC2                        u5841 1F85  
                      u5905 1D07                        u6297 106C                        u3985 1ADC  
                      u4881 1790                        u4785 1723                        u4961 0153  
                      u5761 0F2F                        u5681 0DC1                        u4890 179F  
                      u4970 0159                        u5770 0F32                        u5690 0E17  
                      u5930 1BEC                        u5595 1C25                        u5835 1F6E  
                      u4795 1732                        u4971 0158                        u5691 0E15  
                      u5931 1BEB                        u5860 1F9C                        u5940 1D74  
                      u4980 0160                        u5780 0F41                        u5861 1F9B  
                      u5845 1F82                        u5925 1BFF                        u5941 1D73  
                      u4981 015F                        u5781 0F40                        u5870 1CDB  
                      u5950 1D2A                        u4990 0189                        u5790 0FAC  
                      u5855 1F90                        u5871 1CDA                        u5951 1D29  
                      u4895 179B                        u4991 0188                        u5791 0FAB  
                      u5960 1DBE                        u5961 1DBD                        u5970 121C  
                      u5890 1CFF                        u5971 121B                        u5891 1CFE  
                      u5980 1220                        u5981 121F                        u5885 1CE3  
                      u5990 1240                        u5991 123F                __CFG_WRT$OFF 0000  
                      _data 01C4           ?_Lcd_Write_String 007A                        _dbuf 0220  
                      _atoi 12C2                        _main 0A15                        _prec 0161  
                      _temp 01CE                        _nout 015D                        pad@i 0027  
                      pad@p 0025                        fsr0h 0005                        fsr1h 0007  
                      indf0 0000                        fsr0l 0004                        indf1 0001  
                      fsr1l 0006                        pad@w 0029                        btemp 007E  
             ___fpclassifyf 110B                        start 0002          ??_Lcd_Write_String 007C  
             __CFG_IESO$OFF 0000             ___fldiv@new_exp 0052             __end_of_Lcd_Cmd 1C52  
              _tolower$1274 007C               __CFG_MCLRE$ON 0000                       ??_pad 007C  
          ?_I2C_Master_Init 0020            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
             ___fltol@sign1 0079                       ?_atoi 0076             __end_of___fladd 15A9  
                     ?_main 0070             __end_of___fldiv 0A15             __end_of___awdiv 0861  
           __end_of___flneg 1A28                       STR_10 1828                       STR_11 1839  
                     STR_12 1841                       STR_21 1849                       STR_15 183D  
                     STR_16 1845               __CFG_WDTE$OFF 0000                       STR_19 1849  
           __end_of___awmod 1E9C             __end_of___flmul 1800             __end_of___flsub 103B  
           __end_of___fltol 110B             __end_of___lldiv 1FA5             ___awdiv@divisor 0070  
                     _T2CON 001C             ___awdiv@counter 0075                vfpfcnvrt@fmt 006E  
                     _PORTA 000C                       _PORTC 000E     __size_of_Lcd_Set_Cursor 0049  
                     _TRISA 008C                       _TRISC 008E              __CFG_FCMEN$OFF 0000  
                     _flags 0163                       _fputc 1E9C                       _fputs 1B99  
           __end_of_isdigit 1A62                       _low_i 016B                       _low_t 01C6  
                     _low_u 01CA                       atoi@n 0027                       pad@fp 002B  
                     atoi@s 0076                       _width 015F                       _putch 0006  
                     main@i 014F             __end_of_isspace 1B0C              __CFG_BOREN$OFF 0000  
           __end_of_isupper 1A7A                       status 0003                       wtemp0 007E  
           __end_of_sprintf 1B74              ?___fpclassifyf 0070             __end_of_tolower 1B99  
           __end_of_strncmp 2000            __end_of_Lcd_Init 1CD4            __end_of_Lcd_Port 1A93  
           __initialization 07E5                __end_of_atoi 1371                __end_of_main 0CE2  
                _Cursor_Off 1A0B                      ??_atoi 0078                      ??_main 0147  
        __size_of_Lcd_Clear 0009              __CFG_PLLEN$OFF 0000           ?_I2C_Master_Start 0070  
        ??_I2C_Master_Start 0070                      _ADCON0 009D                      _ADCON1 009E  
                    _CCP2AS 029C                      ?_fputc 0070                      ?_fputs 0078  
                    _ADRESH 009C                      _CCPR2L 0298            ___awdiv@dividend 0072  
                    _ANSELA 018C                      ?_putch 0070                      _ANSELC 018E  
                 ??_Lcd_Cmd 0075     __size_of_Lcd_Write_Char 003F                      _SSPBUF 0211  
          __end_of___xxtofl 12C2              __CFG_PWRTE$OFF 0000                vfprintf@cfmt 0135  
                    ___flge 118A                      ___fleq 1DFB                   ??___fladd 0062  
                    ___wmul 1ACC                   ??___fldiv 0048                   ??___awdiv 0074  
                 ??___flneg 0074                   ??___awmod 0074                   ??___flmul 002E  
                 ??___flsub 007E                   ??___fltol 0074                   ??___lldiv 0078  
                    _efgtoa 0100                      _high_i 016D                      _config 103B  
                    _buffer 01C0                      _high_t 01C8                      _high_u 01CC  
                    _floorf 0015                      _read_I 1D1D                      _read_U 1DB1  
          ___awdiv@quotient 0077             ___awmod@divisor 0070             ___awmod@counter 0075  
                    pad@buf 0024                      _strcpy 1B0C                      _strlen 1A93  
                    fputc@c 0070                      fputs@c 0020                      fputs@i 0021  
                    fputs@s 0023                   ??_isdigit 0072          __size_of__Umul8_16 0023  
           ___fpclassifyf@e 0020             ___fpclassifyf@u 0022             ___fpclassifyf@x 0070  
                 ??_isspace 0072                   ??_isupper 0072                      putch@c 0070  
          __end_of_vfprintf 1BF1                   ??_sprintf 013D                   ??_tolower 0078  
                 ??_strncmp 0074             Lcd_Set_Cursor@a 0020             Lcd_Set_Cursor@b 007B  
           Lcd_Set_Cursor@y 0022             Lcd_Set_Cursor@z 0021                  ___flge@ff1 0040  
                ___flge@ff2 0044             ??___fpclassifyf 0074                ___xxtofl@arg 0022  
              ___xxtofl@exp 0021                ___xxtofl@val 0076                  ___fleq@ff1 0070  
                ___fleq@ff2 0074     __end_of__initialization 07FD                  ___flneg@f1 0070  
         __end_of_Lcd_Clear 1A1D                  ___fltol@f1 0070              __pcstackCOMMON 0070  
                _adc_config 0007               __end_of_fputc 1EF2               __end_of_fputs 1BC2  
               ?_Cursor_Off 0070               __end_of_putch 0007              _Lcd_Set_Cursor 1CD4  
                 ?_Lcd_Init 0070                   ?_Lcd_Port 0070                     ??_fputc 0073  
                   ??_fputs 0079                     ??_putch 0070                  __pbssBANK2 0151  
                __pbssBANK3 01A0                  __pbssBANK4 0220          __size_of_read_Temp 004A  
         __end_of__Umul8_16 1B50                  _efgtoa$830 00BF                  _efgtoa$824 00B9  
                _efgtoa$818 00B5                  _efgtoa$819 00B7                  _efgtoa$828 00BB  
                _efgtoa$829 00BD                  __pmaintext 0A15                     ?___flge 0040  
                   ?___fleq 0070                     ?___wmul 0070                     ?_efgtoa 00A8  
                   ?_config 0070           _I2C_Write_Display 1A04                     _CCP2CON 029A  
                   ?_floorf 005A                     ?_read_I 0070                     ?_read_U 0070  
 __size_of_Lcd_Write_String 001F      __end_of_Lcd_Set_Cursor 1D1D                     _CCPTMRS 029E  
        ?_I2C_Write_Display 0070                     ?_strcpy 0070                     ?_strlen 0070  
                 ?___xxtofl 0076          __size_of_vfpfcnvrt 031E         ??_I2C_Write_Display 0072  
                ??_Lcd_Init 007B                     _SSP1ADD 0212                     _SSP1BUF 0211  
                ??_Lcd_Port 0072              _Lcd_Write_Char 1C52                     _Lcd_Cmd 1C21  
       __size_of_Cursor_Off 0009   __end_of_I2C_Write_Display 1A0B                 ?_adc_config 0070  
           __size_of___flge 008B             __size_of___fleq 004E                     ___fladd 1371  
                   ___fldiv 0861                     ___awdiv 0802                     ___flneg 1A1D  
                   ___awmod 1E49                     ___flmul 15A9                     ___flsub 1005  
                   ___fltol 1097                     ___lldiv 1F4B             __size_of___wmul 001F  
                 ?_vfprintf 012F             __size_of_efgtoa 06E5             __size_of_config 005C  
           __CFG_STVREN$OFF 0000             __size_of_floorf 00EB             __size_of_read_I 004A  
           __size_of_read_U 004A             ?_Lcd_Set_Cursor 007B                     __ptext1 1B50  
                   __ptext2 1BC2                     __ptext3 0CE2                     __ptext4 1FA5  
                   __ptext5 0100                     __ptext6 1B74                     __ptext7 1A62  
                   __ptext8 1B0C                     __ptext9 1EF2             __size_of_strcpy 0021  
           __size_of_strlen 001A           __end_of_read_Temp 1DB1                     _current 0155  
              __size_of_pad 0059                     _isdigit 1A4A                  ??___xxtofl 007A  
          ___awmod@dividend 0072                     _isspace 1AEB                     _isupper 1A62  
  __size_of_I2C_Master_Init 0030                     efgtoa@c 00AC                     efgtoa@d 00C9  
                   efgtoa@e 00E2                     efgtoa@f 00A8                     efgtoa@g 00DE  
                   efgtoa@h 00D4                     efgtoa@i 00DC                     efgtoa@l 00D8  
                   efgtoa@m 00C5                     efgtoa@n 00E4                     efgtoa@p 00CE  
                   efgtoa@t 00C1                     efgtoa@u 00E6                     efgtoa@w 00D1  
  __size_of_I2C_Master_Wait 000C    __size_of_I2C_Master_Stop 0006                     atoi@neg 0020  
                   _sprintf 1B50                     _tolower 1B74                     clrloop0 19FF  
                   _voltage 0151      __end_of_Lcd_Write_Char 1C91                     _strncmp 1FA5  
      end_of_initialization 07FD                     floorf@e 0068                     floorf@m 0064  
                   floorf@u 006A                     floorf@x 005A                     fputc@fp 0072  
                   fputs@fp 0078   __size_of_I2C_Master_Start 0006             ___lldiv@divisor 0070  
           ___lldiv@counter 007D           __end_of_vfpfcnvrt 1000                  efgtoa@mode 00D3  
                efgtoa@sign 00CB            I2C_Master_Init@c 0020                  ??_vfprintf 0132  
                   strcpy@d 0076                     strlen@a 0073                     strcpy@s 0074  
                   strlen@s 0074                   _PORTAbits 000C                 ___fladd@grs 006D  
          __CFG_FOSC$INTOSC 0000               ___xxtofl@sign 0020                   _TRISAbits 008C  
                 _TRISCbits 008E                  _pwm_config 1A34                 ___fldiv@grs 0054  
               ___fldiv@rem 004D             ?_Lcd_Write_Char 0070         __size_of_adc_config 000E  
         Lcd_Write_String@a 007A           Lcd_Write_String@i 0020                 ___flmul@grs 0034  
                _sst_button 016F                   _Lcd_Clear 1A14  __size_of_I2C_Write_Display 0007  
            __end_of___flge 1215              __end_of___fleq 1E49                ??_Cursor_Off 007B  
               vfpfcnvrt@ap 006F                 vfpfcnvrt@ct 012A                 vfpfcnvrt@fp 012E  
            __end_of___wmul 1AEB            _Lcd_Write_String 1AAD              __end_of_efgtoa 07E5  
            __end_of_config 1097              __end_of_floorf 0100              __end_of_read_I 1D67  
            __end_of_read_U 1DFB                _esantioane_i 01A8                  floorf@F524 01B8  
              _esantioane_t 01A0                _esantioane_u 01B0              __end_of_strcpy 1B2D  
            __end_of_strlen 1AAD         start_initialization 07E5                 __end_of_pad 1F4B  
         __size_of_Lcd_Init 0043           __size_of_Lcd_Port 0019           ??_I2C_Master_Init 0024  
         ??_I2C_Master_Wait 0070           ??_I2C_Master_Stop 0070       __end_of___fpclassifyf 118A  
        __end_of_Cursor_Off 1A14                 _APFCON1bits 011E                 vfprintf@fmt 012F  
                ?_Lcd_Clear 0070                    ??___flge 0048                    ??___fleq 0078  
                  ??___wmul 0074                    ??_efgtoa 00AD                   __Umul8_16 1B2D  
                  ??_config 0028                    ??_floorf 005E                    ??_read_I 0070  
                  ??_read_U 0070             Lcd_Write_Char@a 0077             Lcd_Write_Char@y 0078  
                  ??_strcpy 0072                    ??_strlen 0072                   ___fladd@a 005E  
                 ___fladd@b 005A                   ___fldiv@a 0040                   ___fldiv@b 0044  
                 ___flmul@a 002A                   ___flmul@b 0026                   ___flsub@a 00A0  
                 ___flsub@b 00A4                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00A0               __pcstackBANK2 0120                 ?_pwm_config 0070  
         __size_of___xxtofl 00AD                    ?_Lcd_Cmd 0070                   _atoi$1160 0024  
                 _atoi$1158 0022                   _atoi$1159 0026            _I2C_Master_Start 19F2  
                 _main$1494 014B            ??_Lcd_Set_Cursor 007C                ??_adc_config 0070  
                  ?___fladd 005A                    ?___fldiv 0040                    ?___awdiv 0070  
                  ?___flneg 0070                    ?___awmod 0070                    ?___flmul 0026  
                  ?___flsub 00A0                    ?___fltol 0070                    ?___lldiv 0070  
                ?__Umul8_16 0070           __size_of_vfprintf 002F                    ?_isdigit 0070  
                  ?_isspace 0070                    ?_isupper 0070                   _read_Temp 1D67  
                  ?_sprintf 0137                    ?_tolower 0076              __size_of_fputc 0056  
            __size_of_fputs 0029                    ?_strncmp 0070              __size_of_putch 0001  
        __end_of_adc_config 0015              ___wmul@product 0074                    _LATCbits 010E  
                 clear_ram0 19FE                    Lcd_Cmd@a 007A                    _PIR1bits 0011  
               ??_Lcd_Clear 007B         __size_of_pwm_config 0016                    _SSP1CON1 0215  
                  _SSP1CON2 0216                    _SSP1STAT 0214                   _vfpfcnvrt 0CE2  
                _ADCON0bits 009D           ___wmul@multiplier 0070            ??_Lcd_Write_Char 0075  
              _isspace$1189 0074                    _Lcd_Init 1C91                    _Lcd_Port 1A7A  
                ?_read_Temp 0070                  vfpfcnvrt@c 012D                  vfpfcnvrt@f 0126  
  __end_of_Lcd_Write_String 1ACC            __size_of_Lcd_Cmd 0031           _esantion_curent_i 0167  
         _esantion_curent_t 0165           _esantion_curent_u 0169                Lcd_Port@data 0074  
                vfprintf@ap 0131                  vfprintf@fp 0134                 ??__Umul8_16 0072  
          __size_of___fladd 0238            __size_of___fldiv 01B4            __size_of___awdiv 005F  
          __size_of___flneg 000B            __size_of___awmod 0053            __size_of___flmul 0257  
          __size_of___flsub 0036            __size_of___fltol 0074            __size_of___lldiv 005A  
                ?_vfpfcnvrt 006E                  _ANSELAbits 018C                  _ANSELCbits 018E  
        ___fpclassifyf@F463 01BC                  sprintf@fmt 0137             _I2C_Master_Init 1BF1  
                  ___xxtofl 1215             _I2C_Master_Wait 1A28             _I2C_Master_Stop 19F8  
          __size_of_isdigit 0018            __size_of_isspace 0021                    __ptext10 1A93  
                  __ptext11 1B99                    __ptext20 15A9                    __ptext12 1E9C  
                  __ptext21 1B2D                    __ptext13 0006                    __ptext30 1ACC  
                  __ptext22 118A                    __ptext14 0015                    __ptext31 1DB1  
                  __ptext23 1DFB                    __ptext15 110B                    __ptext40 1A14  
                  __ptext32 1D67                    __ptext24 0861                    __ptext16 1097  
                  __ptext41 1BF1                    __ptext33 1D1D                    __ptext25 1E49  
                  __ptext17 1005                    __ptext50 0007                    __ptext42 1F4B  
                  __ptext34 1A34                    __ptext26 0802                    __ptext18 1371  
                  __ptext51 1215                    __ptext43 1A0B                    __ptext35 103B  
                  __ptext27 12C2                    __ptext19 1A1D                    __ptext44 1C21  
                  __ptext36 1AAD                    __ptext28 1AEB                    __ptext45 1A7A  
                  __ptext37 1C52                    __ptext29 1A4A                    __ptext46 1A04  
                  __ptext38 1CD4                    __ptext47 19F8                    __ptext39 1C91  
                  __ptext48 19F2                    __ptext49 1A28            __size_of_isupper 0018  
              _SSP1CON2bits 0216            __size_of_sprintf 0024            __size_of_tolower 0025  
                strcpy@dest 0077            __size_of_strncmp 005B                 Lcd_Cmd@buff 0078  
             __size_of_atoi 00AF               __size_of_main 02CD                    efgtoa@fp 00CD  
                  efgtoa@ne 00C7                    efgtoa@pp 00C3                    efgtoa@ou 00B1  
                  _vfprintf 1BC2    __end_of_I2C_Master_Start 19F8                  _INTCONbits 000B  
              ??_pwm_config 0070              __pstringtext10 1849              __pstringtext11 184C  
            __pstringtext12 184F              __pstringtext13 1852              __pstringtext14 0000  
                  isdigit@c 0070                 ??_read_Temp 0070          Lcd_Write_Char@temp 0079  
                 sprintf@ap 0141                    isspace@c 0070            ___lldiv@dividend 0074  
         __CFG_CLKOUTEN$OFF 0000                   strcpy@src 0070                    isupper@c 0070  
                 strncmp@_l 0075                   strncmp@_r 0070                  _OSCCONbits 0099  
               efgtoa@nmode 00D0          __end_of_pwm_config 1A4A     __end_of_I2C_Master_Init 1C21  
   __end_of_I2C_Master_Wait 1A34     __end_of_I2C_Master_Stop 19FE                 ??_vfpfcnvrt 00EA  
             _vfpfcnvrt$844 0120               _vfpfcnvrt$845 0122          Lcd_Set_Cursor@temp 0023  
             _vfpfcnvrt$849 0124               __pstringtext1 1800               __pstringtext2 1810  
             __pstringtext3 181C               __pstringtext4 1828               __pstringtext5 1833  
             __pstringtext6 1839               __pstringtext7 183D               __pstringtext8 1841  
             __pstringtext9 1845      __Umul8_16@multiplicand 0070                 _temperature 0159  
                  sprintf@f 0142                    tolower@c 0076                    sprintf@s 0140  
    __size_of___fpclassifyf 007F            ___lldiv@quotient 0079                    strncmp@l 0078  
                  strncmp@n 0072                    strncmp@r 0076               ___fladd@signs 006A  
              ___fladd@aexp 006B                ___fladd@bexp 006C        __Umul8_16@multiplier 0078  
         __Umul8_16@product 0074  

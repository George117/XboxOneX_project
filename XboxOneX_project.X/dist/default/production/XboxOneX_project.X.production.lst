

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jun 19 20:44:18 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text43,local,class=CODE,merge=1,delta=2
    70                           	psect	text44,local,class=CODE,merge=1,delta=2
    71                           	psect	text45,local,class=CODE,merge=1,delta=2
    72                           	psect	text46,local,class=CODE,merge=1,delta=2
    73                           	psect	text47,local,class=CODE,merge=1,delta=2
    74                           	psect	text48,local,class=CODE,merge=1,delta=2
    75                           	psect	text49,local,class=CODE,merge=1,delta=2
    76                           	psect	text50,local,class=CODE,merge=1,delta=2
    77                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F1825 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000E                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  008C                     	;# 
   143  008E                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  010C                     	;# 
   159  010E                     	;# 
   160  0111                     	;# 
   161  0112                     	;# 
   162  0113                     	;# 
   163  0114                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0117                     	;# 
   167  0118                     	;# 
   168  0119                     	;# 
   169  011A                     	;# 
   170  011B                     	;# 
   171  011D                     	;# 
   172  011E                     	;# 
   173  018C                     	;# 
   174  018E                     	;# 
   175  0191                     	;# 
   176  0191                     	;# 
   177  0192                     	;# 
   178  0193                     	;# 
   179  0193                     	;# 
   180  0193                     	;# 
   181  0194                     	;# 
   182  0195                     	;# 
   183  0196                     	;# 
   184  0199                     	;# 
   185  019A                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019C                     	;# 
   189  019D                     	;# 
   190  019E                     	;# 
   191  019F                     	;# 
   192  020C                     	;# 
   193  020E                     	;# 
   194  0211                     	;# 
   195  0211                     	;# 
   196  0212                     	;# 
   197  0212                     	;# 
   198  0213                     	;# 
   199  0213                     	;# 
   200  0214                     	;# 
   201  0214                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0216                     	;# 
   206  0216                     	;# 
   207  0217                     	;# 
   208  0217                     	;# 
   209  0291                     	;# 
   210  0291                     	;# 
   211  0292                     	;# 
   212  0293                     	;# 
   213  0294                     	;# 
   214  0295                     	;# 
   215  0295                     	;# 
   216  0296                     	;# 
   217  0298                     	;# 
   218  0298                     	;# 
   219  0299                     	;# 
   220  029A                     	;# 
   221  029B                     	;# 
   222  029C                     	;# 
   223  029D                     	;# 
   224  029E                     	;# 
   225  0311                     	;# 
   226  0311                     	;# 
   227  0312                     	;# 
   228  0313                     	;# 
   229  0318                     	;# 
   230  0318                     	;# 
   231  0319                     	;# 
   232  031A                     	;# 
   233  038C                     	;# 
   234  038E                     	;# 
   235  0391                     	;# 
   236  0392                     	;# 
   237  0393                     	;# 
   238  039A                     	;# 
   239  039C                     	;# 
   240  039D                     	;# 
   241  039E                     	;# 
   242  039F                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  041C                     	;# 
   247  041D                     	;# 
   248  041E                     	;# 
   249  0FE4                     	;# 
   250  0FE5                     	;# 
   251  0FE6                     	;# 
   252  0FE7                     	;# 
   253  0FE8                     	;# 
   254  0FE9                     	;# 
   255  0FEA                     	;# 
   256  0FEB                     	;# 
   257  0FED                     	;# 
   258  0FEE                     	;# 
   259  0FEF                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000E                     	;# 
   274  0011                     	;# 
   275  0012                     	;# 
   276  0013                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0016                     	;# 
   280  0017                     	;# 
   281  0018                     	;# 
   282  0019                     	;# 
   283  001A                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  008C                     	;# 
   289  008E                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  010C                     	;# 
   305  010E                     	;# 
   306  0111                     	;# 
   307  0112                     	;# 
   308  0113                     	;# 
   309  0114                     	;# 
   310  0115                     	;# 
   311  0116                     	;# 
   312  0117                     	;# 
   313  0118                     	;# 
   314  0119                     	;# 
   315  011A                     	;# 
   316  011B                     	;# 
   317  011D                     	;# 
   318  011E                     	;# 
   319  018C                     	;# 
   320  018E                     	;# 
   321  0191                     	;# 
   322  0191                     	;# 
   323  0192                     	;# 
   324  0193                     	;# 
   325  0193                     	;# 
   326  0193                     	;# 
   327  0194                     	;# 
   328  0195                     	;# 
   329  0196                     	;# 
   330  0199                     	;# 
   331  019A                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019C                     	;# 
   335  019D                     	;# 
   336  019E                     	;# 
   337  019F                     	;# 
   338  020C                     	;# 
   339  020E                     	;# 
   340  0211                     	;# 
   341  0211                     	;# 
   342  0212                     	;# 
   343  0212                     	;# 
   344  0213                     	;# 
   345  0213                     	;# 
   346  0214                     	;# 
   347  0214                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0216                     	;# 
   352  0216                     	;# 
   353  0217                     	;# 
   354  0217                     	;# 
   355  0291                     	;# 
   356  0291                     	;# 
   357  0292                     	;# 
   358  0293                     	;# 
   359  0294                     	;# 
   360  0295                     	;# 
   361  0295                     	;# 
   362  0296                     	;# 
   363  0298                     	;# 
   364  0298                     	;# 
   365  0299                     	;# 
   366  029A                     	;# 
   367  029B                     	;# 
   368  029C                     	;# 
   369  029D                     	;# 
   370  029E                     	;# 
   371  0311                     	;# 
   372  0311                     	;# 
   373  0312                     	;# 
   374  0313                     	;# 
   375  0318                     	;# 
   376  0318                     	;# 
   377  0319                     	;# 
   378  031A                     	;# 
   379  038C                     	;# 
   380  038E                     	;# 
   381  0391                     	;# 
   382  0392                     	;# 
   383  0393                     	;# 
   384  039A                     	;# 
   385  039C                     	;# 
   386  039D                     	;# 
   387  039E                     	;# 
   388  039F                     	;# 
   389  0415                     	;# 
   390  0416                     	;# 
   391  0417                     	;# 
   392  041C                     	;# 
   393  041D                     	;# 
   394  041E                     	;# 
   395  0FE4                     	;# 
   396  0FE5                     	;# 
   397  0FE6                     	;# 
   398  0FE7                     	;# 
   399  0FE8                     	;# 
   400  0FE9                     	;# 
   401  0FEA                     	;# 
   402  0FEB                     	;# 
   403  0FED                     	;# 
   404  0FEE                     	;# 
   405  0FEF                     	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0008                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000E                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0015                     	;# 
   424  0016                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001C                     	;# 
   432  001E                     	;# 
   433  001F                     	;# 
   434  008C                     	;# 
   435  008E                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0095                     	;# 
   440  0096                     	;# 
   441  0097                     	;# 
   442  0098                     	;# 
   443  0099                     	;# 
   444  009A                     	;# 
   445  009B                     	;# 
   446  009B                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  010C                     	;# 
   451  010E                     	;# 
   452  0111                     	;# 
   453  0112                     	;# 
   454  0113                     	;# 
   455  0114                     	;# 
   456  0115                     	;# 
   457  0116                     	;# 
   458  0117                     	;# 
   459  0118                     	;# 
   460  0119                     	;# 
   461  011A                     	;# 
   462  011B                     	;# 
   463  011D                     	;# 
   464  011E                     	;# 
   465  018C                     	;# 
   466  018E                     	;# 
   467  0191                     	;# 
   468  0191                     	;# 
   469  0192                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0194                     	;# 
   474  0195                     	;# 
   475  0196                     	;# 
   476  0199                     	;# 
   477  019A                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019C                     	;# 
   481  019D                     	;# 
   482  019E                     	;# 
   483  019F                     	;# 
   484  020C                     	;# 
   485  020E                     	;# 
   486  0211                     	;# 
   487  0211                     	;# 
   488  0212                     	;# 
   489  0212                     	;# 
   490  0213                     	;# 
   491  0213                     	;# 
   492  0214                     	;# 
   493  0214                     	;# 
   494  0215                     	;# 
   495  0215                     	;# 
   496  0215                     	;# 
   497  0216                     	;# 
   498  0216                     	;# 
   499  0217                     	;# 
   500  0217                     	;# 
   501  0291                     	;# 
   502  0291                     	;# 
   503  0292                     	;# 
   504  0293                     	;# 
   505  0294                     	;# 
   506  0295                     	;# 
   507  0295                     	;# 
   508  0296                     	;# 
   509  0298                     	;# 
   510  0298                     	;# 
   511  0299                     	;# 
   512  029A                     	;# 
   513  029B                     	;# 
   514  029C                     	;# 
   515  029D                     	;# 
   516  029E                     	;# 
   517  0311                     	;# 
   518  0311                     	;# 
   519  0312                     	;# 
   520  0313                     	;# 
   521  0318                     	;# 
   522  0318                     	;# 
   523  0319                     	;# 
   524  031A                     	;# 
   525  038C                     	;# 
   526  038E                     	;# 
   527  0391                     	;# 
   528  0392                     	;# 
   529  0393                     	;# 
   530  039A                     	;# 
   531  039C                     	;# 
   532  039D                     	;# 
   533  039E                     	;# 
   534  039F                     	;# 
   535  0415                     	;# 
   536  0416                     	;# 
   537  0417                     	;# 
   538  041C                     	;# 
   539  041D                     	;# 
   540  041E                     	;# 
   541  0FE4                     	;# 
   542  0FE5                     	;# 
   543  0FE6                     	;# 
   544  0FE7                     	;# 
   545  0FE8                     	;# 
   546  0FE9                     	;# 
   547  0FEA                     	;# 
   548  0FEB                     	;# 
   549  0FED                     	;# 
   550  0FEE                     	;# 
   551  0FEF                     	;# 
   552  0000                     	;# 
   553  0001                     	;# 
   554  0002                     	;# 
   555  0003                     	;# 
   556  0004                     	;# 
   557  0005                     	;# 
   558  0006                     	;# 
   559  0007                     	;# 
   560  0008                     	;# 
   561  0009                     	;# 
   562  000A                     	;# 
   563  000B                     	;# 
   564  000C                     	;# 
   565  000E                     	;# 
   566  0011                     	;# 
   567  0012                     	;# 
   568  0013                     	;# 
   569  0015                     	;# 
   570  0016                     	;# 
   571  0016                     	;# 
   572  0017                     	;# 
   573  0018                     	;# 
   574  0019                     	;# 
   575  001A                     	;# 
   576  001B                     	;# 
   577  001C                     	;# 
   578  001E                     	;# 
   579  001F                     	;# 
   580  008C                     	;# 
   581  008E                     	;# 
   582  0091                     	;# 
   583  0092                     	;# 
   584  0093                     	;# 
   585  0095                     	;# 
   586  0096                     	;# 
   587  0097                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009A                     	;# 
   591  009B                     	;# 
   592  009B                     	;# 
   593  009C                     	;# 
   594  009D                     	;# 
   595  009E                     	;# 
   596  010C                     	;# 
   597  010E                     	;# 
   598  0111                     	;# 
   599  0112                     	;# 
   600  0113                     	;# 
   601  0114                     	;# 
   602  0115                     	;# 
   603  0116                     	;# 
   604  0117                     	;# 
   605  0118                     	;# 
   606  0119                     	;# 
   607  011A                     	;# 
   608  011B                     	;# 
   609  011D                     	;# 
   610  011E                     	;# 
   611  018C                     	;# 
   612  018E                     	;# 
   613  0191                     	;# 
   614  0191                     	;# 
   615  0192                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0193                     	;# 
   619  0194                     	;# 
   620  0195                     	;# 
   621  0196                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019C                     	;# 
   627  019D                     	;# 
   628  019E                     	;# 
   629  019F                     	;# 
   630  020C                     	;# 
   631  020E                     	;# 
   632  0211                     	;# 
   633  0211                     	;# 
   634  0212                     	;# 
   635  0212                     	;# 
   636  0213                     	;# 
   637  0213                     	;# 
   638  0214                     	;# 
   639  0214                     	;# 
   640  0215                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0216                     	;# 
   644  0216                     	;# 
   645  0217                     	;# 
   646  0217                     	;# 
   647  0291                     	;# 
   648  0291                     	;# 
   649  0292                     	;# 
   650  0293                     	;# 
   651  0294                     	;# 
   652  0295                     	;# 
   653  0295                     	;# 
   654  0296                     	;# 
   655  0298                     	;# 
   656  0298                     	;# 
   657  0299                     	;# 
   658  029A                     	;# 
   659  029B                     	;# 
   660  029C                     	;# 
   661  029D                     	;# 
   662  029E                     	;# 
   663  0311                     	;# 
   664  0311                     	;# 
   665  0312                     	;# 
   666  0313                     	;# 
   667  0318                     	;# 
   668  0318                     	;# 
   669  0319                     	;# 
   670  031A                     	;# 
   671  038C                     	;# 
   672  038E                     	;# 
   673  0391                     	;# 
   674  0392                     	;# 
   675  0393                     	;# 
   676  039A                     	;# 
   677  039C                     	;# 
   678  039D                     	;# 
   679  039E                     	;# 
   680  039F                     	;# 
   681  0415                     	;# 
   682  0416                     	;# 
   683  0417                     	;# 
   684  041C                     	;# 
   685  041D                     	;# 
   686  041E                     	;# 
   687  0FE4                     	;# 
   688  0FE5                     	;# 
   689  0FE6                     	;# 
   690  0FE7                     	;# 
   691  0FE8                     	;# 
   692  0FE9                     	;# 
   693  0FEA                     	;# 
   694  0FEB                     	;# 
   695  0FED                     	;# 
   696  0FEE                     	;# 
   697  0FEF                     	;# 
   698                           
   699                           	psect	idataBANK2
   700  1AB0                     __pidataBANK2:	
   701                           
   702                           ;initializer for _counter
   703  1AB0  3401               	retlw	1
   704  001C                     _T2CON	set	28
   705  001B                     _PR2	set	27
   706  0011                     _PIR1bits	set	17
   707  000E                     _PORTC	set	14
   708  000C                     _PORTA	set	12
   709  000B                     _INTCONbits	set	11
   710  000C                     _PORTAbits	set	12
   711  009E                     _ADCON1	set	158
   712  008E                     _TRISCbits	set	142
   713  008C                     _TRISAbits	set	140
   714  008E                     _TRISC	set	142
   715  008C                     _TRISA	set	140
   716  0099                     _OSCCONbits	set	153
   717  009C                     _ADRESH	set	156
   718  009D                     _ADCON0bits	set	157
   719  009D                     _ADCON0	set	157
   720  011E                     _APFCON1bits	set	286
   721  010E                     _LATC	set	270
   722  010C                     _LATA	set	268
   723  010E                     _LATCbits	set	270
   724  018E                     _ANSELCbits	set	398
   725  018C                     _ANSELAbits	set	396
   726  018E                     _ANSELC	set	398
   727  018C                     _ANSELA	set	396
   728  0211                     _SSPBUF	set	529
   729  0211                     _SSP1BUF	set	529
   730  0216                     _SSP1CON2bits	set	534
   731  0214                     _SSP1STAT	set	532
   732  0212                     _SSP1ADD	set	530
   733  0216                     _SSP1CON2	set	534
   734  0215                     _SSP1CON1	set	533
   735  029C                     _CCP2AS	set	668
   736  029E                     _CCPTMRS	set	670
   737  029A                     _CCP2CON	set	666
   738  0298                     _CCPR2L	set	664
   739                           
   740                           	psect	stringtext1
   741  1800                     __pstringtext1:	
   742  1800                     STR_7:	
   743  1800  3450               	retlw	80	;'P'
   744  1801  3461               	retlw	97	;'a'
   745  1802  3475               	retlw	117	;'u'
   746  1803  346C               	retlw	108	;'l'
   747  1804  3420               	retlw	32	;' '
   748  1805  3449               	retlw	73	;'I'
   749  1806  346F               	retlw	111	;'o'
   750  1807  3472               	retlw	114	;'r'
   751  1808  3467               	retlw	103	;'g'
   752  1809  3461               	retlw	97	;'a'
   753  180A  3400               	retlw	0
   754                           
   755                           	psect	stringtext2
   756  180B                     __pstringtext2:	
   757  180B                     STR_1:	
   758  180B  3425               	retlw	37	;'%'
   759  180C  3432               	retlw	50	;'2'
   760  180D  342E               	retlw	46	;'.'
   761  180E  3431               	retlw	49	;'1'
   762  180F  3466               	retlw	102	;'f'
   763  1810  3400               	retlw	0
   764                           
   765                           	psect	stringtext3
   766  1811                     __pstringtext3:	
   767  1811                     STR_8:	
   768  1811  3449               	retlw	73	;'I'
   769  1812  344E               	retlw	78	;'N'
   770  1813  3446               	retlw	70	;'F'
   771  1814  3400               	retlw	0
   772                           
   773                           	psect	stringtext4
   774  1815                     __pstringtext4:	
   775  1815                     STR_12:	
   776  1815  344E               	retlw	78	;'N'
   777  1816  3441               	retlw	65	;'A'
   778  1817  344E               	retlw	78	;'N'
   779  1818  3400               	retlw	0
   780                           
   781                           	psect	stringtext5
   782  1819                     __pstringtext5:	
   783  1819                     STR_9:	
   784  1819  3469               	retlw	105	;'i'
   785  181A  346E               	retlw	110	;'n'
   786  181B  3466               	retlw	102	;'f'
   787  181C  3400               	retlw	0
   788                           
   789                           	psect	stringtext6
   790  181D                     __pstringtext6:	
   791  181D                     STR_13:	
   792  181D  346E               	retlw	110	;'n'
   793  181E  3461               	retlw	97	;'a'
   794  181F  346E               	retlw	110	;'n'
   795  1820  3400               	retlw	0
   796                           
   797                           	psect	stringtext7
   798  1821                     __pstringtext7:	
   799  1821                     STR_16:	
   800  1821  346C               	retlw	108	;'l'
   801  1822  3466               	retlw	102	;'f'
   802  1823  3400               	retlw	0
   803                           
   804                           	psect	stringtext8
   805  1824                     __pstringtext8:	
   806  1824                     STR_4:	
   807  1824  3420               	retlw	32	;' '
   808  1825  3441               	retlw	65	;'A'
   809  1826  3400               	retlw	0
   810                           
   811                           	psect	stringtext9
   812  1827                     __pstringtext9:	
   813  1827                     STR_6:	
   814  1827  3420               	retlw	32	;' '
   815  1828  3443               	retlw	67	;'C'
   816  1829  3400               	retlw	0
   817                           
   818                           	psect	stringtext10
   819  182A                     __pstringtext10:	
   820  182A                     STR_2:	
   821  182A  3420               	retlw	32	;' '
   822  182B  3456               	retlw	86	;'V'
   823  182C  3400               	retlw	0
   824                           
   825                           	psect	stringtext11
   826  0000                     __pstringtext11:	
   827  180B                     
   828                           ; #config settings
   829  0000                     
   830                           	psect	cinit
   831  07E0                     start_initialization:	
   832  07E0                     __initialization:	
   833                           
   834                           ; Initialize objects allocated to BANK2
   835  07E0  0022               	movlb	2	; select bank2
   836  07E1  319A  22B0  3187   	fcall	__pidataBANK2	;fetch initializer
   837  07E4  00EF               	movwf	__pdataBANK2& (0+127)
   838                           
   839                           ; Clear objects allocated to BANK2
   840  07E5  3051               	movlw	low __pbssBANK2
   841  07E6  0084               	movwf	4
   842  07E7  3001               	movlw	high __pbssBANK2
   843  07E8  0085               	movwf	5
   844  07E9  301E               	movlw	30
   845  07EA  319A  22BD  3187   	fcall	clear_ram0
   846                           
   847                           ; Clear objects allocated to BANK3
   848  07ED  30A0               	movlw	low __pbssBANK3
   849  07EE  0084               	movwf	4
   850  07EF  3001               	movlw	high __pbssBANK3
   851  07F0  0085               	movwf	5
   852  07F1  3033               	movlw	51
   853  07F2  319A  22BD  3187   	fcall	clear_ram0
   854                           
   855                           ; Clear objects allocated to BANK4
   856  07F5  3020               	movlw	low __pbssBANK4
   857  07F6  0084               	movwf	4
   858  07F7  3002               	movlw	high __pbssBANK4
   859  07F8  0085               	movwf	5
   860  07F9  3050               	movlw	80
   861  07FA  319A  22BD  3187   	fcall	clear_ram0
   862  07FD                     end_of_initialization:	
   863                           ;End of C runtime variable initialization code
   864                           
   865  07FD                     __end_of__initialization:	
   866  07FD  0020               	movlb	0
   867  07FE  3195  2DE7         	ljmp	_main	;jump to C main() function
   868                           
   869                           	psect	bssBANK2
   870  0151                     __pbssBANK2:	
   871  0151                     _esantioane_i:	
   872  0151                     	ds	8
   873  0159                     _esantioane_u:	
   874  0159                     	ds	8
   875  0161                     _nout:	
   876  0161                     	ds	2
   877  0163                     _width:	
   878  0163                     	ds	2
   879  0165                     _prec:	
   880  0165                     	ds	2
   881  0167                     _flags:	
   882  0167                     	ds	2
   883  0169                     _esantion_curent_t:	
   884  0169                     	ds	2
   885  016B                     _esantion_curent_i:	
   886  016B                     	ds	2
   887  016D                     _esantion_curent_u:	
   888  016D                     	ds	2
   889                           
   890                           	psect	dataBANK2
   891  016F                     __pdataBANK2:	
   892  016F                     _counter:	
   893  016F                     	ds	1
   894                           
   895                           	psect	bssBANK3
   896  01A0                     __pbssBANK3:	
   897  01A0                     _esantioane_t:	
   898  01A0                     	ds	8
   899  01A8                     floorf@F524:	
   900  01A8                     	ds	4
   901  01AC                     ___fpclassifyf@F463:	
   902  01AC                     	ds	4
   903  01B0                     _buffer:	
   904  01B0                     	ds	4
   905  01B4                     _voltage:	
   906  01B4                     	ds	4
   907  01B8                     _current:	
   908  01B8                     	ds	4
   909  01BC                     _temperature:	
   910  01BC                     	ds	4
   911  01C0                     _data:	
   912  01C0                     	ds	2
   913  01C2                     _low_t:	
   914  01C2                     	ds	2
   915  01C4                     _high_t:	
   916  01C4                     	ds	2
   917  01C6                     _low_u:	
   918  01C6                     	ds	2
   919  01C8                     _high_u:	
   920  01C8                     	ds	2
   921  01CA                     _low_i:	
   922  01CA                     	ds	2
   923  01CC                     _high_i:	
   924  01CC                     	ds	2
   925  01CE                     _temp:	
   926  01CE                     	ds	5
   927                           
   928                           	psect	bssBANK4
   929  0220                     __pbssBANK4:	
   930  0220                     _dbuf:	
   931  0220                     	ds	80
   932                           
   933                           	psect	clrtext
   934  1ABD                     clear_ram0:	
   935                           ;	Called with FSR0 containing the base address, and
   936                           ;	WREG with the size to clear
   937                           
   938  1ABD  0064               	clrwdt	;clear the watchdog before getting into this loop
   939  1ABE                     clrloop0:	
   940  1ABE  0180               	clrf	0	;clear RAM location pointed to by FSR
   941  1ABF  3101               	addfsr 0,1
   942  1AC0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   943  1AC1  2ABE               	goto	clrloop0	;have we reached the end yet?
   944  1AC2  3400               	retlw	0	;all done for this memory range, return
   945                           
   946                           	psect	cstackBANK2
   947  0120                     __pcstackBANK2:	
   948  0120                     _vfpfcnvrt$841:	
   949                           
   950                           ; 2 bytes @ 0x0
   951  0120                     	ds	2
   952  0122                     _vfpfcnvrt$842:	
   953                           
   954                           ; 2 bytes @ 0x2
   955  0122                     	ds	2
   956  0124                     _vfpfcnvrt$846:	
   957                           
   958                           ; 2 bytes @ 0x4
   959  0124                     	ds	2
   960  0126                     vfpfcnvrt@f:	
   961                           
   962                           ; 4 bytes @ 0x6
   963  0126                     	ds	4
   964  012A                     vfpfcnvrt@ct:	
   965                           
   966                           ; 3 bytes @ 0xA
   967  012A                     	ds	3
   968  012D                     vfpfcnvrt@c:	
   969                           
   970                           ; 1 bytes @ 0xD
   971  012D                     	ds	1
   972  012E                     vfpfcnvrt@fp:	
   973                           
   974                           ; 1 bytes @ 0xE
   975  012E                     	ds	1
   976  012F                     ?_vfprintf:	
   977  012F                     vfprintf@fmt:	
   978                           ; 2 bytes @ 0xF
   979                           
   980                           
   981                           ; 2 bytes @ 0xF
   982  012F                     	ds	2
   983  0131                     vfprintf@ap:	
   984                           
   985                           ; 1 bytes @ 0x11
   986  0131                     	ds	1
   987  0132                     ??_vfprintf:	
   988                           
   989                           ; 1 bytes @ 0x12
   990  0132                     	ds	2
   991  0134                     vfprintf@fp:	
   992                           
   993                           ; 1 bytes @ 0x14
   994  0134                     	ds	1
   995  0135                     vfprintf@cfmt:	
   996                           
   997                           ; 2 bytes @ 0x15
   998  0135                     	ds	2
   999  0137                     ?_sprintf:	
  1000  0137                     sprintf@fmt:	
  1001                           ; 2 bytes @ 0x17
  1002                           
  1003                           
  1004                           ; 2 bytes @ 0x17
  1005  0137                     	ds	6
  1006  013D                     ??_sprintf:	
  1007                           
  1008                           ; 1 bytes @ 0x1D
  1009  013D                     	ds	3
  1010  0140                     sprintf@s:	
  1011                           
  1012                           ; 1 bytes @ 0x20
  1013  0140                     	ds	1
  1014  0141                     sprintf@ap:	
  1015                           
  1016                           ; 1 bytes @ 0x21
  1017  0141                     	ds	1
  1018  0142                     sprintf@f:	
  1019                           
  1020                           ; 5 bytes @ 0x22
  1021  0142                     	ds	5
  1022  0147                     ??_main:	
  1023                           
  1024                           ; 1 bytes @ 0x27
  1025  0147                     	ds	4
  1026  014B                     _main$1491:	
  1027                           
  1028                           ; 4 bytes @ 0x2B
  1029  014B                     	ds	4
  1030  014F                     main@i:	
  1031                           
  1032                           ; 2 bytes @ 0x2F
  1033  014F                     	ds	2
  1034                           
  1035                           	psect	cstackBANK1
  1036  00A0                     __pcstackBANK1:	
  1037  00A0                     ?___flsub:	
  1038  00A0                     ___flsub@a:	
  1039                           ; 4 bytes @ 0x0
  1040                           
  1041                           
  1042                           ; 4 bytes @ 0x0
  1043  00A0                     	ds	4
  1044  00A4                     ___flsub@b:	
  1045                           
  1046                           ; 4 bytes @ 0x4
  1047  00A4                     	ds	4
  1048  00A8                     ?_efgtoa:	
  1049  00A8                     efgtoa@f:	
  1050                           ; 2 bytes @ 0x8
  1051                           
  1052                           
  1053                           ; 4 bytes @ 0x8
  1054  00A8                     	ds	4
  1055  00AC                     efgtoa@c:	
  1056                           
  1057                           ; 1 bytes @ 0xC
  1058  00AC                     	ds	1
  1059  00AD                     ??_efgtoa:	
  1060                           
  1061                           ; 1 bytes @ 0xD
  1062  00AD                     	ds	4
  1063  00B1                     efgtoa@ou:	
  1064                           
  1065                           ; 4 bytes @ 0x11
  1066  00B1                     	ds	4
  1067  00B5                     _efgtoa$815:	
  1068                           
  1069                           ; 2 bytes @ 0x15
  1070  00B5                     	ds	2
  1071  00B7                     _efgtoa$816:	
  1072                           
  1073                           ; 2 bytes @ 0x17
  1074  00B7                     	ds	2
  1075  00B9                     _efgtoa$821:	
  1076                           
  1077                           ; 2 bytes @ 0x19
  1078  00B9                     	ds	2
  1079  00BB                     _efgtoa$825:	
  1080                           
  1081                           ; 2 bytes @ 0x1B
  1082  00BB                     	ds	2
  1083  00BD                     _efgtoa$826:	
  1084                           
  1085                           ; 2 bytes @ 0x1D
  1086  00BD                     	ds	2
  1087  00BF                     _efgtoa$827:	
  1088                           
  1089                           ; 2 bytes @ 0x1F
  1090  00BF                     	ds	2
  1091  00C1                     efgtoa@t:	
  1092                           
  1093                           ; 2 bytes @ 0x21
  1094  00C1                     	ds	2
  1095  00C3                     efgtoa@pp:	
  1096                           
  1097                           ; 2 bytes @ 0x23
  1098  00C3                     	ds	2
  1099  00C5                     efgtoa@m:	
  1100                           
  1101                           ; 2 bytes @ 0x25
  1102  00C5                     	ds	2
  1103  00C7                     efgtoa@ne:	
  1104                           
  1105                           ; 2 bytes @ 0x27
  1106  00C7                     	ds	2
  1107  00C9                     efgtoa@d:	
  1108                           
  1109                           ; 2 bytes @ 0x29
  1110  00C9                     	ds	2
  1111  00CB                     efgtoa@sign:	
  1112                           
  1113                           ; 2 bytes @ 0x2B
  1114  00CB                     	ds	2
  1115  00CD                     efgtoa@fp:	
  1116                           
  1117                           ; 1 bytes @ 0x2D
  1118  00CD                     	ds	1
  1119  00CE                     efgtoa@p:	
  1120                           
  1121                           ; 2 bytes @ 0x2E
  1122  00CE                     	ds	2
  1123  00D0                     efgtoa@nmode:	
  1124                           
  1125                           ; 1 bytes @ 0x30
  1126  00D0                     	ds	1
  1127  00D1                     efgtoa@w:	
  1128                           
  1129                           ; 2 bytes @ 0x31
  1130  00D1                     	ds	2
  1131  00D3                     efgtoa@mode:	
  1132                           
  1133                           ; 1 bytes @ 0x33
  1134  00D3                     	ds	1
  1135  00D4                     efgtoa@h:	
  1136                           
  1137                           ; 4 bytes @ 0x34
  1138  00D4                     	ds	4
  1139  00D8                     efgtoa@l:	
  1140                           
  1141                           ; 4 bytes @ 0x38
  1142  00D8                     	ds	4
  1143  00DC                     efgtoa@i:	
  1144                           
  1145                           ; 2 bytes @ 0x3C
  1146  00DC                     	ds	2
  1147  00DE                     efgtoa@g:	
  1148                           
  1149                           ; 4 bytes @ 0x3E
  1150  00DE                     	ds	4
  1151  00E2                     efgtoa@e:	
  1152                           
  1153                           ; 2 bytes @ 0x42
  1154  00E2                     	ds	2
  1155  00E4                     efgtoa@n:	
  1156                           
  1157                           ; 2 bytes @ 0x44
  1158  00E4                     	ds	2
  1159  00E6                     efgtoa@u:	
  1160                           
  1161                           ; 4 bytes @ 0x46
  1162  00E6                     	ds	4
  1163  00EA                     ??_vfpfcnvrt:	
  1164                           
  1165                           ; 1 bytes @ 0x4A
  1166  00EA                     	ds	6
  1167                           
  1168                           	psect	cstackCOMMON
  1169  0070                     __pcstackCOMMON:	
  1170  0070                     ?___fleq:	
  1171  0070                     ?_config:	
  1172                           ; 1 bit 
  1173                           
  1174  0070                     ?_pwm_config:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ??_pwm_config:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?_adc_config:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ??_adc_config:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ?_Lcd_Clear:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ?_read_Temp:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0070                     ??_read_Temp:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0070                     ?_read_I:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ??_read_I:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?_read_U:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ??_read_U:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ?_Lcd_Init:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     ?_Cursor_Off:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ?_I2C_Master_Start:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ??_I2C_Master_Start:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ?_I2C_Write_Display:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     ?_I2C_Master_Stop:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     ??_I2C_Master_Stop:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     ?_strcpy:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ?_putch:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     ??_putch:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0070                     ?_main:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0070                     ?_Lcd_Port:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ?_Lcd_Cmd:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?_Lcd_Write_Char:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?_I2C_Master_Wait:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ??_I2C_Master_Wait:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?_fputc:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_strlen:	
  1259                           ; 2 bytes @ 0x0
  1260                           
  1261  0070                     ?___fpclassifyf:	
  1262                           ; 2 bytes @ 0x0
  1263                           
  1264  0070                     ?_isupper:	
  1265                           ; 2 bytes @ 0x0
  1266                           
  1267  0070                     ?_isdigit:	
  1268                           ; 2 bytes @ 0x0
  1269                           
  1270  0070                     ?_strncmp:	
  1271                           ; 2 bytes @ 0x0
  1272                           
  1273  0070                     ?__Umul8_16:	
  1274                           ; 2 bytes @ 0x0
  1275                           
  1276  0070                     ?_isspace:	
  1277                           ; 2 bytes @ 0x0
  1278                           
  1279  0070                     ?___wmul:	
  1280                           ; 2 bytes @ 0x0
  1281                           
  1282  0070                     ?___awdiv:	
  1283                           ; 2 bytes @ 0x0
  1284                           
  1285  0070                     ?___awmod:	
  1286                           ; 2 bytes @ 0x0
  1287                           
  1288  0070                     ?___lldiv:	
  1289                           ; 2 bytes @ 0x0
  1290                           
  1291  0070                     ?___flneg:	
  1292                           ; 4 bytes @ 0x0
  1293                           
  1294  0070                     ?___fltol:	
  1295                           ; 4 bytes @ 0x0
  1296                           
  1297  0070                     putch@c:	
  1298                           ; 4 bytes @ 0x0
  1299                           
  1300  0070                     __Umul8_16@multiplicand:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0070                     I2C_Write_Display@d:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0070                     ___wmul@multiplier:	
  1307                           ; 2 bytes @ 0x0
  1308                           
  1309  0070                     ___awdiv@divisor:	
  1310                           ; 2 bytes @ 0x0
  1311                           
  1312  0070                     ___awmod@divisor:	
  1313                           ; 2 bytes @ 0x0
  1314                           
  1315  0070                     isdigit@c:	
  1316                           ; 2 bytes @ 0x0
  1317                           
  1318  0070                     isspace@c:	
  1319                           ; 2 bytes @ 0x0
  1320                           
  1321  0070                     isupper@c:	
  1322                           ; 2 bytes @ 0x0
  1323                           
  1324  0070                     fputc@c:	
  1325                           ; 2 bytes @ 0x0
  1326                           
  1327  0070                     strcpy@src:	
  1328                           ; 2 bytes @ 0x0
  1329                           
  1330  0070                     strncmp@_r:	
  1331                           ; 2 bytes @ 0x0
  1332                           
  1333  0070                     ___lldiv@divisor:	
  1334                           ; 2 bytes @ 0x0
  1335                           
  1336  0070                     ___fleq@ff1:	
  1337                           ; 4 bytes @ 0x0
  1338                           
  1339  0070                     ___flneg@f1:	
  1340                           ; 4 bytes @ 0x0
  1341                           
  1342  0070                     ___fltol@f1:	
  1343                           ; 4 bytes @ 0x0
  1344                           
  1345  0070                     ___fpclassifyf@x:	
  1346                           ; 4 bytes @ 0x0
  1347                           
  1348                           
  1349                           ; 4 bytes @ 0x0
  1350  0070                     	ds	2
  1351  0072                     ??_I2C_Write_Display:	
  1352  0072                     ??_strlen:	
  1353                           ; 1 bytes @ 0x2
  1354                           
  1355  0072                     ??_isupper:	
  1356                           ; 1 bytes @ 0x2
  1357                           
  1358  0072                     ??_strcpy:	
  1359                           ; 1 bytes @ 0x2
  1360                           
  1361  0072                     ??_isdigit:	
  1362                           ; 1 bytes @ 0x2
  1363                           
  1364  0072                     ??__Umul8_16:	
  1365                           ; 1 bytes @ 0x2
  1366                           
  1367  0072                     ??_isspace:	
  1368                           ; 1 bytes @ 0x2
  1369                           
  1370  0072                     ??_Lcd_Port:	
  1371                           ; 1 bytes @ 0x2
  1372                           
  1373  0072                     fputc@fp:	
  1374                           ; 1 bytes @ 0x2
  1375                           
  1376  0072                     ___wmul@multiplicand:	
  1377                           ; 1 bytes @ 0x2
  1378                           
  1379  0072                     ___awdiv@dividend:	
  1380                           ; 2 bytes @ 0x2
  1381                           
  1382  0072                     ___awmod@dividend:	
  1383                           ; 2 bytes @ 0x2
  1384                           
  1385  0072                     strncmp@n:	
  1386                           ; 2 bytes @ 0x2
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x2
  1390  0072                     	ds	1
  1391  0073                     ??_fputc:	
  1392  0073                     strlen@a:	
  1393                           ; 1 bytes @ 0x3
  1394                           
  1395                           
  1396                           ; 1 bytes @ 0x3
  1397  0073                     	ds	1
  1398  0074                     ??___fpclassifyf:	
  1399  0074                     ??_strncmp:	
  1400                           ; 1 bytes @ 0x4
  1401                           
  1402  0074                     ??___wmul:	
  1403                           ; 1 bytes @ 0x4
  1404                           
  1405  0074                     ??___awdiv:	
  1406                           ; 1 bytes @ 0x4
  1407                           
  1408  0074                     ??___awmod:	
  1409                           ; 1 bytes @ 0x4
  1410                           
  1411  0074                     ??___flneg:	
  1412                           ; 1 bytes @ 0x4
  1413                           
  1414  0074                     ??___fltol:	
  1415                           ; 1 bytes @ 0x4
  1416                           
  1417  0074                     Lcd_Port@data:	
  1418                           ; 1 bytes @ 0x4
  1419                           
  1420  0074                     _isspace$1186:	
  1421                           ; 1 bytes @ 0x4
  1422                           
  1423  0074                     strlen@s:	
  1424                           ; 1 bytes @ 0x4
  1425                           
  1426  0074                     ___wmul@product:	
  1427                           ; 1 bytes @ 0x4
  1428                           
  1429  0074                     strcpy@s:	
  1430                           ; 2 bytes @ 0x4
  1431                           
  1432  0074                     __Umul8_16@product:	
  1433                           ; 2 bytes @ 0x4
  1434                           
  1435  0074                     ___lldiv@dividend:	
  1436                           ; 2 bytes @ 0x4
  1437                           
  1438  0074                     ___fleq@ff2:	
  1439                           ; 4 bytes @ 0x4
  1440                           
  1441                           
  1442                           ; 4 bytes @ 0x4
  1443  0074                     	ds	1
  1444  0075                     ??_Lcd_Cmd:	
  1445  0075                     ??_Lcd_Write_Char:	
  1446                           ; 1 bytes @ 0x5
  1447                           
  1448  0075                     ___awdiv@counter:	
  1449                           ; 1 bytes @ 0x5
  1450                           
  1451  0075                     ___awmod@counter:	
  1452                           ; 1 bytes @ 0x5
  1453                           
  1454  0075                     strncmp@_l:	
  1455                           ; 1 bytes @ 0x5
  1456                           
  1457                           
  1458                           ; 1 bytes @ 0x5
  1459  0075                     	ds	1
  1460  0076                     ?_tolower:	
  1461  0076                     ?_atoi:	
  1462                           ; 2 bytes @ 0x6
  1463                           
  1464  0076                     ?___xxtofl:	
  1465                           ; 2 bytes @ 0x6
  1466                           
  1467  0076                     ___awdiv@sign:	
  1468                           ; 4 bytes @ 0x6
  1469                           
  1470  0076                     ___awmod@sign:	
  1471                           ; 1 bytes @ 0x6
  1472                           
  1473  0076                     strcpy@d:	
  1474                           ; 1 bytes @ 0x6
  1475                           
  1476  0076                     atoi@s:	
  1477                           ; 1 bytes @ 0x6
  1478                           
  1479  0076                     strncmp@r:	
  1480                           ; 2 bytes @ 0x6
  1481                           
  1482  0076                     tolower@c:	
  1483                           ; 2 bytes @ 0x6
  1484                           
  1485  0076                     __Umul8_16@word_mpld:	
  1486                           ; 2 bytes @ 0x6
  1487                           
  1488  0076                     ___xxtofl@val:	
  1489                           ; 2 bytes @ 0x6
  1490                           
  1491                           
  1492                           ; 4 bytes @ 0x6
  1493  0076                     	ds	1
  1494  0077                     Lcd_Write_Char@a:	
  1495  0077                     strcpy@dest:	
  1496                           ; 1 bytes @ 0x7
  1497                           
  1498  0077                     ___awdiv@quotient:	
  1499                           ; 1 bytes @ 0x7
  1500                           
  1501                           
  1502                           ; 2 bytes @ 0x7
  1503  0077                     	ds	1
  1504  0078                     ??_tolower:	
  1505  0078                     ??_atoi:	
  1506                           ; 1 bytes @ 0x8
  1507                           
  1508  0078                     ??___lldiv:	
  1509                           ; 1 bytes @ 0x8
  1510                           
  1511  0078                     ??___fleq:	
  1512                           ; 1 bytes @ 0x8
  1513                           
  1514  0078                     ?_fputs:	
  1515                           ; 1 bytes @ 0x8
  1516                           
  1517  0078                     Lcd_Write_Char@y:	
  1518                           ; 2 bytes @ 0x8
  1519                           
  1520  0078                     fputs@fp:	
  1521                           ; 1 bytes @ 0x8
  1522                           
  1523  0078                     strncmp@l:	
  1524                           ; 1 bytes @ 0x8
  1525                           
  1526  0078                     __Umul8_16@multiplier:	
  1527                           ; 1 bytes @ 0x8
  1528                           
  1529  0078                     Lcd_Cmd@buff:	
  1530                           ; 1 bytes @ 0x8
  1531                           
  1532                           
  1533                           ; 2 bytes @ 0x8
  1534  0078                     	ds	1
  1535  0079                     ??_fputs:	
  1536  0079                     Lcd_Write_Char@temp:	
  1537                           ; 1 bytes @ 0x9
  1538                           
  1539  0079                     ___fltol@sign1:	
  1540                           ; 1 bytes @ 0x9
  1541                           
  1542  0079                     ___lldiv@quotient:	
  1543                           ; 1 bytes @ 0x9
  1544                           
  1545                           
  1546                           ; 4 bytes @ 0x9
  1547  0079                     	ds	1
  1548  007A                     ?_Lcd_Write_String:	
  1549  007A                     ??___xxtofl:	
  1550                           ; 1 bytes @ 0xA
  1551                           
  1552  007A                     Lcd_Cmd@a:	
  1553                           ; 1 bytes @ 0xA
  1554                           
  1555  007A                     ___fltol@exp1:	
  1556                           ; 1 bytes @ 0xA
  1557                           
  1558  007A                     Lcd_Write_String@a:	
  1559                           ; 1 bytes @ 0xA
  1560                           
  1561                           
  1562                           ; 2 bytes @ 0xA
  1563  007A                     	ds	1
  1564  007B                     ??_Lcd_Clear:	
  1565  007B                     ?_Lcd_Set_Cursor:	
  1566                           ; 1 bytes @ 0xB
  1567                           
  1568  007B                     ??_Lcd_Init:	
  1569                           ; 1 bytes @ 0xB
  1570                           
  1571  007B                     ??_Cursor_Off:	
  1572                           ; 1 bytes @ 0xB
  1573                           
  1574  007B                     Lcd_Set_Cursor@b:	
  1575                           ; 1 bytes @ 0xB
  1576                           
  1577                           
  1578                           ; 1 bytes @ 0xB
  1579  007B                     	ds	1
  1580  007C                     ??_Lcd_Set_Cursor:	
  1581  007C                     ??_Lcd_Write_String:	
  1582                           ; 1 bytes @ 0xC
  1583                           
  1584  007C                     ??_pad:	
  1585                           ; 1 bytes @ 0xC
  1586                           
  1587  007C                     _tolower$1271:	
  1588                           ; 1 bytes @ 0xC
  1589                           
  1590                           
  1591                           ; 2 bytes @ 0xC
  1592  007C                     	ds	1
  1593  007D                     ___lldiv@counter:	
  1594                           
  1595                           ; 1 bytes @ 0xD
  1596  007D                     	ds	1
  1597  007E                     ??___flsub:	
  1598                           
  1599                           	psect	cstackBANK0
  1600  0020                     __pcstackBANK0:	
  1601                           ; 1 bytes @ 0xE
  1602                           
  1603  0020                     ?_I2C_Master_Init:	
  1604  0020                     Lcd_Set_Cursor@a:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0020                     ___xxtofl@sign:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0020                     fputs@c:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0020                     Lcd_Write_String@i:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0020                     ___fpclassifyf@e:	
  1617                           ; 2 bytes @ 0x0
  1618                           
  1619  0020                     atoi@neg:	
  1620                           ; 2 bytes @ 0x0
  1621                           
  1622  0020                     I2C_Master_Init@c:	
  1623                           ; 2 bytes @ 0x0
  1624                           
  1625                           
  1626                           ; 4 bytes @ 0x0
  1627  0020                     	ds	1
  1628  0021                     Lcd_Set_Cursor@z:	
  1629  0021                     ___xxtofl@exp:	
  1630                           ; 1 bytes @ 0x1
  1631                           
  1632  0021                     fputs@i:	
  1633                           ; 1 bytes @ 0x1
  1634                           
  1635                           
  1636                           ; 2 bytes @ 0x1
  1637  0021                     	ds	1
  1638  0022                     Lcd_Set_Cursor@y:	
  1639  0022                     _atoi$1155:	
  1640                           ; 1 bytes @ 0x2
  1641                           
  1642  0022                     ___xxtofl@arg:	
  1643                           ; 2 bytes @ 0x2
  1644                           
  1645  0022                     ___fpclassifyf@u:	
  1646                           ; 4 bytes @ 0x2
  1647                           
  1648                           
  1649                           ; 4 bytes @ 0x2
  1650  0022                     	ds	1
  1651  0023                     Lcd_Set_Cursor@temp:	
  1652  0023                     fputs@s:	
  1653                           ; 1 bytes @ 0x3
  1654                           
  1655                           
  1656                           ; 1 bytes @ 0x3
  1657  0023                     	ds	1
  1658  0024                     ??_I2C_Master_Init:	
  1659  0024                     ?_pad:	
  1660                           ; 1 bytes @ 0x4
  1661                           
  1662  0024                     pad@buf:	
  1663                           ; 2 bytes @ 0x4
  1664                           
  1665  0024                     _atoi$1157:	
  1666                           ; 1 bytes @ 0x4
  1667                           
  1668                           
  1669                           ; 2 bytes @ 0x4
  1670  0024                     	ds	1
  1671  0025                     pad@p:	
  1672                           
  1673                           ; 2 bytes @ 0x5
  1674  0025                     	ds	1
  1675  0026                     ?___flmul:	
  1676  0026                     _atoi$1156:	
  1677                           ; 4 bytes @ 0x6
  1678                           
  1679  0026                     ___flmul@b:	
  1680                           ; 1 bytes @ 0x6
  1681                           
  1682                           
  1683                           ; 4 bytes @ 0x6
  1684  0026                     	ds	1
  1685  0027                     pad@i:	
  1686  0027                     atoi@n:	
  1687                           ; 2 bytes @ 0x7
  1688                           
  1689                           
  1690                           ; 2 bytes @ 0x7
  1691  0027                     	ds	1
  1692  0028                     ??_config:	
  1693                           
  1694                           ; 1 bytes @ 0x8
  1695  0028                     	ds	1
  1696  0029                     pad@w:	
  1697                           
  1698                           ; 2 bytes @ 0x9
  1699  0029                     	ds	1
  1700  002A                     ___flmul@a:	
  1701                           
  1702                           ; 4 bytes @ 0xA
  1703  002A                     	ds	1
  1704  002B                     pad@fp:	
  1705                           
  1706                           ; 1 bytes @ 0xB
  1707  002B                     	ds	3
  1708  002E                     ??___flmul:	
  1709                           
  1710                           ; 1 bytes @ 0xE
  1711  002E                     	ds	5
  1712  0033                     ___flmul@sign:	
  1713                           
  1714                           ; 1 bytes @ 0x13
  1715  0033                     	ds	1
  1716  0034                     ___flmul@grs:	
  1717                           
  1718                           ; 4 bytes @ 0x14
  1719  0034                     	ds	4
  1720  0038                     ___flmul@aexp:	
  1721                           
  1722                           ; 1 bytes @ 0x18
  1723  0038                     	ds	1
  1724  0039                     ___flmul@bexp:	
  1725                           
  1726                           ; 1 bytes @ 0x19
  1727  0039                     	ds	1
  1728  003A                     ___flmul@prod:	
  1729                           
  1730                           ; 4 bytes @ 0x1A
  1731  003A                     	ds	4
  1732  003E                     ___flmul@temp:	
  1733                           
  1734                           ; 2 bytes @ 0x1E
  1735  003E                     	ds	2
  1736  0040                     ?___flge:	
  1737  0040                     ?___fldiv:	
  1738                           ; 1 bit 
  1739                           
  1740  0040                     ___flge@ff1:	
  1741                           ; 4 bytes @ 0x20
  1742                           
  1743  0040                     ___fldiv@a:	
  1744                           ; 4 bytes @ 0x20
  1745                           
  1746                           
  1747                           ; 4 bytes @ 0x20
  1748  0040                     	ds	4
  1749  0044                     ___flge@ff2:	
  1750  0044                     ___fldiv@b:	
  1751                           ; 4 bytes @ 0x24
  1752                           
  1753                           
  1754                           ; 4 bytes @ 0x24
  1755  0044                     	ds	4
  1756  0048                     ??___flge:	
  1757  0048                     ??___fldiv:	
  1758                           ; 1 bytes @ 0x28
  1759                           
  1760                           
  1761                           ; 1 bytes @ 0x28
  1762  0048                     	ds	5
  1763  004D                     ___fldiv@rem:	
  1764                           
  1765                           ; 4 bytes @ 0x2D
  1766  004D                     	ds	4
  1767  0051                     ___fldiv@sign:	
  1768                           
  1769                           ; 1 bytes @ 0x31
  1770  0051                     	ds	1
  1771  0052                     ___fldiv@new_exp:	
  1772                           
  1773                           ; 2 bytes @ 0x32
  1774  0052                     	ds	2
  1775  0054                     ___fldiv@grs:	
  1776                           
  1777                           ; 4 bytes @ 0x34
  1778  0054                     	ds	4
  1779  0058                     ___fldiv@bexp:	
  1780                           
  1781                           ; 1 bytes @ 0x38
  1782  0058                     	ds	1
  1783  0059                     ___fldiv@aexp:	
  1784                           
  1785                           ; 1 bytes @ 0x39
  1786  0059                     	ds	1
  1787  005A                     ?_floorf:	
  1788  005A                     ?___fladd:	
  1789                           ; 4 bytes @ 0x3A
  1790                           
  1791  005A                     ___fladd@b:	
  1792                           ; 4 bytes @ 0x3A
  1793                           
  1794  005A                     floorf@x:	
  1795                           ; 4 bytes @ 0x3A
  1796                           
  1797                           
  1798                           ; 4 bytes @ 0x3A
  1799  005A                     	ds	4
  1800  005E                     ??_floorf:	
  1801  005E                     ___fladd@a:	
  1802                           ; 1 bytes @ 0x3E
  1803                           
  1804                           
  1805                           ; 4 bytes @ 0x3E
  1806  005E                     	ds	4
  1807  0062                     ??___fladd:	
  1808                           
  1809                           ; 1 bytes @ 0x42
  1810  0062                     	ds	2
  1811  0064                     floorf@m:	
  1812                           
  1813                           ; 4 bytes @ 0x44
  1814  0064                     	ds	4
  1815  0068                     floorf@e:	
  1816                           
  1817                           ; 2 bytes @ 0x48
  1818  0068                     	ds	2
  1819  006A                     ___fladd@signs:	
  1820  006A                     floorf@u:	
  1821                           ; 1 bytes @ 0x4A
  1822                           
  1823                           
  1824                           ; 4 bytes @ 0x4A
  1825  006A                     	ds	1
  1826  006B                     ___fladd@aexp:	
  1827                           
  1828                           ; 1 bytes @ 0x4B
  1829  006B                     	ds	1
  1830  006C                     ___fladd@bexp:	
  1831                           
  1832                           ; 1 bytes @ 0x4C
  1833  006C                     	ds	1
  1834  006D                     ___fladd@grs:	
  1835                           
  1836                           ; 1 bytes @ 0x4D
  1837  006D                     	ds	1
  1838  006E                     ?_vfpfcnvrt:	
  1839  006E                     vfpfcnvrt@fmt:	
  1840                           ; 2 bytes @ 0x4E
  1841                           
  1842                           
  1843                           ; 1 bytes @ 0x4E
  1844  006E                     	ds	1
  1845  006F                     vfpfcnvrt@ap:	
  1846                           
  1847                           ; 1 bytes @ 0x4F
  1848  006F                     	ds	1
  1849                           
  1850                           	psect	maintext
  1851  15E7                     __pmaintext:	
  1852 ;;
  1853 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1854 ;;
  1855 ;; *************** function _main *****************
  1856 ;; Defined at:
  1857 ;;		line 41 in file "main.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  i               2   47[BANK2 ] int 
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : B1F/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1872 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  1874 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;Total ram usage:       10 bytes
  1876 ;; Hardware stack levels required when called:    8
  1877 ;; This function calls:
  1878 ;;		_Lcd_Clear
  1879 ;;		_Lcd_Set_Cursor
  1880 ;;		_Lcd_Write_String
  1881 ;;		___fladd
  1882 ;;		___fldiv
  1883 ;;		___flmul
  1884 ;;		___xxtofl
  1885 ;;		_adc_config
  1886 ;;		_config
  1887 ;;		_pwm_config
  1888 ;;		_read_I
  1889 ;;		_read_Temp
  1890 ;;		_read_U
  1891 ;;		_sprintf
  1892 ;; This function is called by:
  1893 ;;		Startup code after reset
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           
  1898                           ;psect for function _main
  1899  15E7                     _main:	
  1900  15E7                     l4550:	
  1901                           ;incstack = 0
  1902                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1903                           
  1904                           
  1905                           ;main.c: 42:     config();
  1906  15E7  3190  209E  3195   	fcall	_config
  1907  15EA                     l4552:	
  1908                           
  1909                           ;main.c: 43:     pwm_config();
  1910  15EA  319A  22F5  3195   	fcall	_pwm_config
  1911  15ED                     l4554:	
  1912                           
  1913                           ;main.c: 44:     adc_config();
  1914  15ED  319A  22E7  3195   	fcall	_adc_config
  1915  15F0                     l4556:	
  1916                           
  1917                           ;main.c: 46:     CCPR2L = 110;
  1918  15F0  306E               	movlw	110
  1919  15F1  0025               	movlb	5	; select bank5
  1920  15F2  0098               	movwf	24	;volatile
  1921  15F3                     l4558:	
  1922                           
  1923                           ;main.c: 47:     LATCbits.LATC4 = 0;
  1924  15F3  0022               	movlb	2	; select bank2
  1925  15F4  120E               	bcf	14,4	;volatile
  1926  15F5                     l4560:	
  1927                           
  1928                           ;main.c: 48:     LATCbits.LATC5 = 1;
  1929  15F5  168E               	bsf	14,5	;volatile
  1930  15F6                     l4562:	
  1931                           
  1932                           ;main.c: 50:     Lcd_Clear();
  1933  15F6  319A  22D3  3195   	fcall	_Lcd_Clear
  1934  15F9                     l4564:	
  1935                           
  1936                           ;main.c: 53:     for(int i=0;i<30;i++){
  1937  15F9  0022               	movlb	2	; select bank2
  1938  15FA  01CF               	clrf	main@i^(0+256)
  1939  15FB  01D0               	clrf	(main@i+1)^(0+256)
  1940  15FC                     l4570:	
  1941                           
  1942                           ;main.c: 54:         read_Temp();
  1943  15FC  319E  265F  3195   	fcall	_read_Temp
  1944                           
  1945                           ;main.c: 55:         read_I();
  1946  15FF  319D  2588  3195   	fcall	_read_I
  1947                           
  1948                           ;main.c: 56:         read_U();
  1949  1602  319D  25CF  3195   	fcall	_read_U
  1950  1605                     l4572:	
  1951                           
  1952                           ;main.c: 57:     }
  1953  1605  3001               	movlw	1
  1954  1606  0022               	movlb	2	; select bank2
  1955  1607  07CF               	addwf	main@i^(0+256),f
  1956  1608  3000               	movlw	0
  1957  1609  3DD0               	addwfc	(main@i+1)^(0+256),f
  1958  160A                     l4574:	
  1959  160A  0850               	movf	(main@i+1)^(0+256),w
  1960  160B  3A80               	xorlw	128
  1961  160C  00C7               	movwf	??_main^(0+256)
  1962  160D  3080               	movlw	128
  1963  160E  0247               	subwf	??_main^(0+256),w
  1964  160F  1D03               	skipz
  1965  1610  2E13               	goto	u6075
  1966  1611  301E               	movlw	30
  1967  1612  024F               	subwf	main@i^(0+256),w
  1968  1613                     u6075:	
  1969  1613  1C03               	skipc
  1970  1614  2E16               	goto	u6071
  1971  1615  2E17               	goto	u6070
  1972  1616                     u6071:	
  1973  1616  2DFC               	goto	l4570
  1974  1617                     u6070:	
  1975  1617                     l4576:	
  1976                           
  1977                           ;main.c: 62:         temperature = (float)((read_Temp() * 0.01953)/0.01) - 273.5;
  1978  1617  30C3               	movlw	195
  1979  1618  0020               	movlb	0	; select bank0
  1980  1619  00DD               	movwf	___fladd@b+3
  1981  161A  3088               	movlw	136
  1982  161B  00DC               	movwf	___fladd@b+2
  1983  161C  30C0               	movlw	192
  1984  161D  00DB               	movwf	___fladd@b+1
  1985  161E  3000               	movlw	0
  1986  161F  00DA               	movwf	___fladd@b
  1987  1620  303C               	movlw	60
  1988  1621  00C3               	movwf	___fldiv@a+3
  1989  1622  3023               	movlw	35
  1990  1623  00C2               	movwf	___fldiv@a+2
  1991  1624  30D7               	movlw	215
  1992  1625  00C1               	movwf	___fldiv@a+1
  1993  1626  300A               	movlw	10
  1994  1627  00C0               	movwf	___fldiv@a
  1995  1628  303C               	movlw	60
  1996  1629  00A9               	movwf	___flmul@b+3
  1997  162A  309F               	movlw	159
  1998  162B  00A8               	movwf	___flmul@b+2
  1999  162C  30FD               	movlw	253
  2000  162D  00A7               	movwf	___flmul@b+1
  2001  162E  3061               	movlw	97
  2002  162F  00A6               	movwf	___flmul@b
  2003  1630  319E  265F  3195   	fcall	_read_Temp
  2004  1633  0022               	movlb	2	; select bank2
  2005  1634  00C7               	movwf	??_main^(0+256)
  2006  1635  01C8               	clrf	(??_main^(0+256)+1)
  2007  1636  01C9               	clrf	(??_main^(0+256)+2)
  2008  1637  01CA               	clrf	(??_main^(0+256)+3)
  2009  1638  084A               	movf	(??_main+3)^(0+256),w
  2010  1639  00F9               	movwf	___xxtofl@val+3
  2011  163A  0849               	movf	(??_main+2)^(0+256),w
  2012  163B  00F8               	movwf	___xxtofl@val+2
  2013  163C  0848               	movf	(??_main+1)^(0+256),w
  2014  163D  00F7               	movwf	___xxtofl@val+1
  2015  163E  0847               	movf	??_main^(0+256),w
  2016  163F  00F6               	movwf	___xxtofl@val
  2017  1640  3001               	movlw	1
  2018  1641  3192  22D7  3195   	fcall	___xxtofl
  2019  1644  0879               	movf	?___xxtofl+3,w
  2020  1645  0020               	movlb	0	; select bank0
  2021  1646  00AD               	movwf	___flmul@a+3
  2022  1647  0878               	movf	?___xxtofl+2,w
  2023  1648  00AC               	movwf	___flmul@a+2
  2024  1649  0877               	movf	?___xxtofl+1,w
  2025  164A  00AB               	movwf	___flmul@a+1
  2026  164B  0876               	movf	?___xxtofl,w
  2027  164C  00AA               	movwf	___flmul@a
  2028  164D  318A  228B  3195   	fcall	___flmul
  2029  1650  0020               	movlb	0	; select bank0
  2030  1651  0829               	movf	?___flmul+3,w
  2031  1652  00C7               	movwf	___fldiv@b+3
  2032  1653  0828               	movf	?___flmul+2,w
  2033  1654  00C6               	movwf	___fldiv@b+2
  2034  1655  0827               	movf	?___flmul+1,w
  2035  1656  00C5               	movwf	___fldiv@b+1
  2036  1657  0826               	movf	?___flmul,w
  2037  1658  00C4               	movwf	___fldiv@b
  2038  1659  3194  2433  3195   	fcall	___fldiv
  2039  165C  0020               	movlb	0	; select bank0
  2040  165D  0843               	movf	?___fldiv+3,w
  2041  165E  00E1               	movwf	___fladd@a+3
  2042  165F  0842               	movf	?___fldiv+2,w
  2043  1660  00E0               	movwf	___fladd@a+2
  2044  1661  0841               	movf	?___fldiv+1,w
  2045  1662  00DF               	movwf	___fladd@a+1
  2046  1663  0840               	movf	?___fldiv,w
  2047  1664  00DE               	movwf	___fladd@a
  2048  1665  3188  2053  3195   	fcall	___fladd
  2049  1668  0020               	movlb	0	; select bank0
  2050  1669  085D               	movf	?___fladd+3,w
  2051  166A  0023               	movlb	3	; select bank3
  2052  166B  00BF               	movwf	(_temperature+3)^(0+384)
  2053  166C  0020               	movlb	0	; select bank0
  2054  166D  085C               	movf	?___fladd+2,w
  2055  166E  0023               	movlb	3	; select bank3
  2056  166F  00BE               	movwf	(_temperature+2)^(0+384)
  2057  1670  0020               	movlb	0	; select bank0
  2058  1671  085B               	movf	?___fladd+1,w
  2059  1672  0023               	movlb	3	; select bank3
  2060  1673  00BD               	movwf	(_temperature+1)^(0+384)
  2061  1674  0020               	movlb	0	; select bank0
  2062  1675  085A               	movf	?___fladd,w
  2063  1676  0023               	movlb	3	; select bank3
  2064  1677  00BC               	movwf	_temperature^(0+384)
  2065                           
  2066                           ;main.c: 64:         current = ((read_I() * 0.01953)/11)/0.11;
  2067  1678  3041               	movlw	65
  2068  1679  0020               	movlb	0	; select bank0
  2069  167A  00C3               	movwf	___fldiv@a+3
  2070  167B  3030               	movlw	48
  2071  167C  00C2               	movwf	___fldiv@a+2
  2072  167D  3000               	movlw	0
  2073  167E  00C1               	movwf	___fldiv@a+1
  2074  167F  3000               	movlw	0
  2075  1680  00C0               	movwf	___fldiv@a
  2076  1681  303C               	movlw	60
  2077  1682  00A9               	movwf	___flmul@b+3
  2078  1683  309F               	movlw	159
  2079  1684  00A8               	movwf	___flmul@b+2
  2080  1685  30FD               	movlw	253
  2081  1686  00A7               	movwf	___flmul@b+1
  2082  1687  3061               	movlw	97
  2083  1688  00A6               	movwf	___flmul@b
  2084  1689  319D  2588  3195   	fcall	_read_I
  2085  168C  0022               	movlb	2	; select bank2
  2086  168D  00C7               	movwf	??_main^(0+256)
  2087  168E  01C8               	clrf	(??_main^(0+256)+1)
  2088  168F  01C9               	clrf	(??_main^(0+256)+2)
  2089  1690  01CA               	clrf	(??_main^(0+256)+3)
  2090  1691  084A               	movf	(??_main+3)^(0+256),w
  2091  1692  00F9               	movwf	___xxtofl@val+3
  2092  1693  0849               	movf	(??_main+2)^(0+256),w
  2093  1694  00F8               	movwf	___xxtofl@val+2
  2094  1695  0848               	movf	(??_main+1)^(0+256),w
  2095  1696  00F7               	movwf	___xxtofl@val+1
  2096  1697  0847               	movf	??_main^(0+256),w
  2097  1698  00F6               	movwf	___xxtofl@val
  2098  1699  3001               	movlw	1
  2099  169A  3192  22D7  3195   	fcall	___xxtofl
  2100  169D  0879               	movf	?___xxtofl+3,w
  2101  169E  0020               	movlb	0	; select bank0
  2102  169F  00AD               	movwf	___flmul@a+3
  2103  16A0  0878               	movf	?___xxtofl+2,w
  2104  16A1  00AC               	movwf	___flmul@a+2
  2105  16A2  0877               	movf	?___xxtofl+1,w
  2106  16A3  00AB               	movwf	___flmul@a+1
  2107  16A4  0876               	movf	?___xxtofl,w
  2108  16A5  00AA               	movwf	___flmul@a
  2109  16A6  318A  228B  3195   	fcall	___flmul
  2110  16A9  0020               	movlb	0	; select bank0
  2111  16AA  0829               	movf	?___flmul+3,w
  2112  16AB  00C7               	movwf	___fldiv@b+3
  2113  16AC  0828               	movf	?___flmul+2,w
  2114  16AD  00C6               	movwf	___fldiv@b+2
  2115  16AE  0827               	movf	?___flmul+1,w
  2116  16AF  00C5               	movwf	___fldiv@b+1
  2117  16B0  0826               	movf	?___flmul,w
  2118  16B1  00C4               	movwf	___fldiv@b
  2119  16B2  3194  2433  3195   	fcall	___fldiv
  2120  16B5  0020               	movlb	0	; select bank0
  2121  16B6  0843               	movf	?___fldiv+3,w
  2122  16B7  0022               	movlb	2	; select bank2
  2123  16B8  00CE               	movwf	(_main$1491+3)^(0+256)
  2124  16B9  0020               	movlb	0	; select bank0
  2125  16BA  0842               	movf	?___fldiv+2,w
  2126  16BB  0022               	movlb	2	; select bank2
  2127  16BC  00CD               	movwf	(_main$1491+2)^(0+256)
  2128  16BD  0020               	movlb	0	; select bank0
  2129  16BE  0841               	movf	?___fldiv+1,w
  2130  16BF  0022               	movlb	2	; select bank2
  2131  16C0  00CC               	movwf	(_main$1491+1)^(0+256)
  2132  16C1  0020               	movlb	0	; select bank0
  2133  16C2  0840               	movf	?___fldiv,w
  2134  16C3  0022               	movlb	2	; select bank2
  2135  16C4  00CB               	movwf	_main$1491^(0+256)
  2136  16C5                     l4578:	
  2137                           
  2138                           ;main.c: 64:         current = ((read_I() * 0.01953)/11)/0.11;
  2139  16C5  303D               	movlw	61
  2140  16C6  0020               	movlb	0	; select bank0
  2141  16C7  00C3               	movwf	___fldiv@a+3
  2142  16C8  30E1               	movlw	225
  2143  16C9  00C2               	movwf	___fldiv@a+2
  2144  16CA  3047               	movlw	71
  2145  16CB  00C1               	movwf	___fldiv@a+1
  2146  16CC  30AE               	movlw	174
  2147  16CD  00C0               	movwf	___fldiv@a
  2148  16CE  0022               	movlb	2	; select bank2
  2149  16CF  084E               	movf	(_main$1491+3)^(0+256),w
  2150  16D0  0020               	movlb	0	; select bank0
  2151  16D1  00C7               	movwf	___fldiv@b+3
  2152  16D2  0022               	movlb	2	; select bank2
  2153  16D3  084D               	movf	(_main$1491+2)^(0+256),w
  2154  16D4  0020               	movlb	0	; select bank0
  2155  16D5  00C6               	movwf	___fldiv@b+2
  2156  16D6  0022               	movlb	2	; select bank2
  2157  16D7  084C               	movf	(_main$1491+1)^(0+256),w
  2158  16D8  0020               	movlb	0	; select bank0
  2159  16D9  00C5               	movwf	___fldiv@b+1
  2160  16DA  0022               	movlb	2	; select bank2
  2161  16DB  084B               	movf	_main$1491^(0+256),w
  2162  16DC  0020               	movlb	0	; select bank0
  2163  16DD  00C4               	movwf	___fldiv@b
  2164  16DE  3194  2433  3195   	fcall	___fldiv
  2165  16E1  0020               	movlb	0	; select bank0
  2166  16E2  0843               	movf	?___fldiv+3,w
  2167  16E3  0023               	movlb	3	; select bank3
  2168  16E4  00BB               	movwf	(_current+3)^(0+384)
  2169  16E5  0020               	movlb	0	; select bank0
  2170  16E6  0842               	movf	?___fldiv+2,w
  2171  16E7  0023               	movlb	3	; select bank3
  2172  16E8  00BA               	movwf	(_current+2)^(0+384)
  2173  16E9  0020               	movlb	0	; select bank0
  2174  16EA  0841               	movf	?___fldiv+1,w
  2175  16EB  0023               	movlb	3	; select bank3
  2176  16EC  00B9               	movwf	(_current+1)^(0+384)
  2177  16ED  0020               	movlb	0	; select bank0
  2178  16EE  0840               	movf	?___fldiv,w
  2179  16EF  0023               	movlb	3	; select bank3
  2180  16F0  00B8               	movwf	_current^(0+384)
  2181  16F1                     l4580:	
  2182                           
  2183                           ;main.c: 66:         voltage = (read_U() *0.01953)/0.25;
  2184  16F1  303E               	movlw	62
  2185  16F2  0020               	movlb	0	; select bank0
  2186  16F3  00C3               	movwf	___fldiv@a+3
  2187  16F4  3080               	movlw	128
  2188  16F5  00C2               	movwf	___fldiv@a+2
  2189  16F6  3000               	movlw	0
  2190  16F7  00C1               	movwf	___fldiv@a+1
  2191  16F8  3000               	movlw	0
  2192  16F9  00C0               	movwf	___fldiv@a
  2193  16FA  303C               	movlw	60
  2194  16FB  00A9               	movwf	___flmul@b+3
  2195  16FC  309F               	movlw	159
  2196  16FD  00A8               	movwf	___flmul@b+2
  2197  16FE  30FD               	movlw	253
  2198  16FF  00A7               	movwf	___flmul@b+1
  2199  1700  3061               	movlw	97
  2200  1701  00A6               	movwf	___flmul@b
  2201  1702  319D  25CF  3195   	fcall	_read_U
  2202  1705  0022               	movlb	2	; select bank2
  2203  1706  00C7               	movwf	??_main^(0+256)
  2204  1707  01C8               	clrf	(??_main^(0+256)+1)
  2205  1708  01C9               	clrf	(??_main^(0+256)+2)
  2206  1709  01CA               	clrf	(??_main^(0+256)+3)
  2207  170A  084A               	movf	(??_main+3)^(0+256),w
  2208  170B  00F9               	movwf	___xxtofl@val+3
  2209  170C  0849               	movf	(??_main+2)^(0+256),w
  2210  170D  00F8               	movwf	___xxtofl@val+2
  2211  170E  0848               	movf	(??_main+1)^(0+256),w
  2212  170F  00F7               	movwf	___xxtofl@val+1
  2213  1710  0847               	movf	??_main^(0+256),w
  2214  1711  00F6               	movwf	___xxtofl@val
  2215  1712  3001               	movlw	1
  2216  1713  3192  22D7  3195   	fcall	___xxtofl
  2217  1716  0879               	movf	?___xxtofl+3,w
  2218  1717  0020               	movlb	0	; select bank0
  2219  1718  00AD               	movwf	___flmul@a+3
  2220  1719  0878               	movf	?___xxtofl+2,w
  2221  171A  00AC               	movwf	___flmul@a+2
  2222  171B  0877               	movf	?___xxtofl+1,w
  2223  171C  00AB               	movwf	___flmul@a+1
  2224  171D  0876               	movf	?___xxtofl,w
  2225  171E  00AA               	movwf	___flmul@a
  2226  171F  318A  228B  3195   	fcall	___flmul
  2227  1722  0020               	movlb	0	; select bank0
  2228  1723  0829               	movf	?___flmul+3,w
  2229  1724  00C7               	movwf	___fldiv@b+3
  2230  1725  0828               	movf	?___flmul+2,w
  2231  1726  00C6               	movwf	___fldiv@b+2
  2232  1727  0827               	movf	?___flmul+1,w
  2233  1728  00C5               	movwf	___fldiv@b+1
  2234  1729  0826               	movf	?___flmul,w
  2235  172A  00C4               	movwf	___fldiv@b
  2236  172B  3194  2433  3195   	fcall	___fldiv
  2237  172E  0020               	movlb	0	; select bank0
  2238  172F  0843               	movf	?___fldiv+3,w
  2239  1730  0023               	movlb	3	; select bank3
  2240  1731  00B7               	movwf	(_voltage+3)^(0+384)
  2241  1732  0020               	movlb	0	; select bank0
  2242  1733  0842               	movf	?___fldiv+2,w
  2243  1734  0023               	movlb	3	; select bank3
  2244  1735  00B6               	movwf	(_voltage+2)^(0+384)
  2245  1736  0020               	movlb	0	; select bank0
  2246  1737  0841               	movf	?___fldiv+1,w
  2247  1738  0023               	movlb	3	; select bank3
  2248  1739  00B5               	movwf	(_voltage+1)^(0+384)
  2249  173A  0020               	movlb	0	; select bank0
  2250  173B  0840               	movf	?___fldiv,w
  2251  173C  0023               	movlb	3	; select bank3
  2252  173D  00B4               	movwf	_voltage^(0+384)
  2253                           
  2254                           ;main.c: 68:         Lcd_Set_Cursor(1,1);
  2255  173E  01FB               	clrf	Lcd_Set_Cursor@b
  2256  173F  0AFB               	incf	Lcd_Set_Cursor@b,f
  2257  1740  3001               	movlw	1
  2258  1741  319E  2616  3195   	fcall	_Lcd_Set_Cursor
  2259  1744                     l4582:	
  2260                           
  2261                           ;main.c: 69:         sprintf(temp, "%2.1f",voltage);
  2262  1744  300B               	movlw	low (STR_1| (0+32768))
  2263  1745  0022               	movlb	2	; select bank2
  2264  1746  00B7               	movwf	sprintf@fmt^(0+256)
  2265  1747  3098               	movlw	high (STR_1| (0+32768))
  2266  1748  00B8               	movwf	(sprintf@fmt^(0+256)+1)
  2267  1749  0023               	movlb	3	; select bank3
  2268  174A  0837               	movf	(_voltage+3)^(0+384),w
  2269  174B  0022               	movlb	2	; select bank2
  2270  174C  00BC               	movwf	((?_sprintf+3)^(0+256)+2)
  2271  174D  0023               	movlb	3	; select bank3
  2272  174E  0836               	movf	(_voltage+2)^(0+384),w
  2273  174F  0022               	movlb	2	; select bank2
  2274  1750  00BB               	movwf	((?_sprintf+2)^(0+256)+2)
  2275  1751  0023               	movlb	3	; select bank3
  2276  1752  0835               	movf	(_voltage+1)^(0+384),w
  2277  1753  0022               	movlb	2	; select bank2
  2278  1754  00BA               	movwf	((?_sprintf+1)^(0+256)+2)
  2279  1755  0023               	movlb	3	; select bank3
  2280  1756  0834               	movf	_voltage^(0+384),w
  2281  1757  0022               	movlb	2	; select bank2
  2282  1758  00B9               	movwf	(?_sprintf^(0+256)+2)
  2283  1759  30CE               	movlw	(low (_temp| (0+256)))& (0+255)
  2284  175A  319C  2411  3195   	fcall	_sprintf
  2285  175D                     l4584:	
  2286                           
  2287                           ;main.c: 70:         Lcd_Write_String(temp);
  2288  175D  30CE               	movlw	low _temp
  2289  175E  00FA               	movwf	Lcd_Write_String@a
  2290  175F  3001               	movlw	high _temp
  2291  1760  00FB               	movwf	Lcd_Write_String@a+1
  2292  1761  319B  236E  3195   	fcall	_Lcd_Write_String
  2293  1764                     l4586:	
  2294                           
  2295                           ;main.c: 72:         Lcd_Write_String(" V");
  2296  1764  302A               	movlw	low (STR_2| (0+32768))
  2297  1765  00FA               	movwf	Lcd_Write_String@a
  2298  1766  3098               	movlw	high (STR_2| (0+32768))
  2299  1767  00FB               	movwf	Lcd_Write_String@a+1
  2300  1768  319B  236E  3195   	fcall	_Lcd_Write_String
  2301  176B                     l4588:	
  2302                           
  2303                           ;main.c: 74:         Lcd_Set_Cursor(1,12);
  2304  176B  300C               	movlw	12
  2305  176C  0022               	movlb	2	; select bank2
  2306  176D  00C7               	movwf	??_main^(0+256)
  2307  176E  0847               	movf	??_main^(0+256),w
  2308  176F  00FB               	movwf	Lcd_Set_Cursor@b
  2309  1770  3001               	movlw	1
  2310  1771  319E  2616  3195   	fcall	_Lcd_Set_Cursor
  2311                           
  2312                           ;main.c: 75:         sprintf(temp, "%2.1f",current);
  2313  1774  300B               	movlw	low (STR_1| (0+32768))
  2314  1775  0022               	movlb	2	; select bank2
  2315  1776  00B7               	movwf	sprintf@fmt^(0+256)
  2316  1777  3098               	movlw	high (STR_1| (0+32768))
  2317  1778  00B8               	movwf	(sprintf@fmt^(0+256)+1)
  2318  1779  0023               	movlb	3	; select bank3
  2319  177A  083B               	movf	(_current+3)^(0+384),w
  2320  177B  0022               	movlb	2	; select bank2
  2321  177C  00BC               	movwf	((?_sprintf+3)^(0+256)+2)
  2322  177D  0023               	movlb	3	; select bank3
  2323  177E  083A               	movf	(_current+2)^(0+384),w
  2324  177F  0022               	movlb	2	; select bank2
  2325  1780  00BB               	movwf	((?_sprintf+2)^(0+256)+2)
  2326  1781  0023               	movlb	3	; select bank3
  2327  1782  0839               	movf	(_current+1)^(0+384),w
  2328  1783  0022               	movlb	2	; select bank2
  2329  1784  00BA               	movwf	((?_sprintf+1)^(0+256)+2)
  2330  1785  0023               	movlb	3	; select bank3
  2331  1786  0838               	movf	_current^(0+384),w
  2332  1787  0022               	movlb	2	; select bank2
  2333  1788  00B9               	movwf	(?_sprintf^(0+256)+2)
  2334  1789  30CE               	movlw	(low (_temp| (0+256)))& (0+255)
  2335  178A  319C  2411  3195   	fcall	_sprintf
  2336  178D                     l4590:	
  2337                           
  2338                           ;main.c: 76:         Lcd_Write_String(temp);
  2339  178D  30CE               	movlw	low _temp
  2340  178E  00FA               	movwf	Lcd_Write_String@a
  2341  178F  3001               	movlw	high _temp
  2342  1790  00FB               	movwf	Lcd_Write_String@a+1
  2343  1791  319B  236E  3195   	fcall	_Lcd_Write_String
  2344  1794                     l4592:	
  2345                           
  2346                           ;main.c: 78:         Lcd_Write_String(" A");
  2347  1794  3024               	movlw	low (STR_4| (0+32768))
  2348  1795  00FA               	movwf	Lcd_Write_String@a
  2349  1796  3098               	movlw	high (STR_4| (0+32768))
  2350  1797  00FB               	movwf	Lcd_Write_String@a+1
  2351  1798  319B  236E  3195   	fcall	_Lcd_Write_String
  2352  179B                     l4594:	
  2353                           
  2354                           ;main.c: 80:         Lcd_Set_Cursor(2,1);
  2355  179B  01FB               	clrf	Lcd_Set_Cursor@b
  2356  179C  0AFB               	incf	Lcd_Set_Cursor@b,f
  2357  179D  3002               	movlw	2
  2358  179E  319E  2616  3195   	fcall	_Lcd_Set_Cursor
  2359  17A1                     l4596:	
  2360                           
  2361                           ;main.c: 81:         sprintf(temp, "%2.1f",temperature);
  2362  17A1  300B               	movlw	low (STR_1| (0+32768))
  2363  17A2  0022               	movlb	2	; select bank2
  2364  17A3  00B7               	movwf	sprintf@fmt^(0+256)
  2365  17A4  3098               	movlw	high (STR_1| (0+32768))
  2366  17A5  00B8               	movwf	(sprintf@fmt^(0+256)+1)
  2367  17A6  0023               	movlb	3	; select bank3
  2368  17A7  083F               	movf	(_temperature+3)^(0+384),w
  2369  17A8  0022               	movlb	2	; select bank2
  2370  17A9  00BC               	movwf	((?_sprintf+3)^(0+256)+2)
  2371  17AA  0023               	movlb	3	; select bank3
  2372  17AB  083E               	movf	(_temperature+2)^(0+384),w
  2373  17AC  0022               	movlb	2	; select bank2
  2374  17AD  00BB               	movwf	((?_sprintf+2)^(0+256)+2)
  2375  17AE  0023               	movlb	3	; select bank3
  2376  17AF  083D               	movf	(_temperature+1)^(0+384),w
  2377  17B0  0022               	movlb	2	; select bank2
  2378  17B1  00BA               	movwf	((?_sprintf+1)^(0+256)+2)
  2379  17B2  0023               	movlb	3	; select bank3
  2380  17B3  083C               	movf	_temperature^(0+384),w
  2381  17B4  0022               	movlb	2	; select bank2
  2382  17B5  00B9               	movwf	(?_sprintf^(0+256)+2)
  2383  17B6  30CE               	movlw	(low (_temp| (0+256)))& (0+255)
  2384  17B7  319C  2411  3195   	fcall	_sprintf
  2385  17BA                     l4598:	
  2386                           
  2387                           ;main.c: 82:         Lcd_Write_String(temp);
  2388  17BA  30CE               	movlw	low _temp
  2389  17BB  00FA               	movwf	Lcd_Write_String@a
  2390  17BC  3001               	movlw	high _temp
  2391  17BD  00FB               	movwf	Lcd_Write_String@a+1
  2392  17BE  319B  236E  3195   	fcall	_Lcd_Write_String
  2393  17C1                     l4600:	
  2394                           
  2395                           ;main.c: 84:         Lcd_Write_String(" C");
  2396  17C1  3027               	movlw	low (STR_6| (0+32768))
  2397  17C2  00FA               	movwf	Lcd_Write_String@a
  2398  17C3  3098               	movlw	high (STR_6| (0+32768))
  2399  17C4  00FB               	movwf	Lcd_Write_String@a+1
  2400  17C5  319B  236E  3195   	fcall	_Lcd_Write_String
  2401  17C8                     l4602:	
  2402                           
  2403                           ;main.c: 89:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2404  17C8  3002               	movlw	2
  2405  17C9  0022               	movlb	2	; select bank2
  2406  17CA  00C8               	movwf	(??_main^(0+256)+1)
  2407  17CB  3004               	movlw	4
  2408  17CC  00C7               	movwf	??_main^(0+256)
  2409  17CD  30BA               	movlw	186
  2410  17CE                     u6137:	
  2411  17CE  0B89               	decfsz	9,f
  2412  17CF  2FCE               	goto	u6137
  2413  17D0  0BC7               	decfsz	??_main^(0+256),f
  2414  17D1  2FCE               	goto	u6137
  2415  17D2  0BC8               	decfsz	(??_main^(0+256)+1),f
  2416  17D3  2FCE               	goto	u6137
  2417  17D4  0000               	nop
  2418  17D5                     l4604:	
  2419                           
  2420                           ;main.c: 90:         if(PORTAbits.RA0 == 1){
  2421  17D5  0020               	movlb	0	; select bank0
  2422  17D6  1C0C               	btfss	12,0	;volatile
  2423  17D7  2FD9               	goto	u6081
  2424  17D8  2FDA               	goto	u6080
  2425  17D9                     u6081:	
  2426  17D9  2FDE               	goto	l78
  2427  17DA                     u6080:	
  2428  17DA                     l4606:	
  2429                           
  2430                           ;main.c: 91:             CCPR2L = 55;
  2431  17DA  3037               	movlw	55
  2432  17DB  0025               	movlb	5	; select bank5
  2433  17DC  0098               	movwf	24	;volatile
  2434                           
  2435                           ;main.c: 92:         }
  2436  17DD  2E17               	goto	l4576
  2437  17DE                     l78:	
  2438                           ;main.c: 93:         else if(PORTAbits.RA1 == 1){
  2439                           
  2440  17DE  1C8C               	btfss	12,1	;volatile
  2441  17DF  2FE1               	goto	u6091
  2442  17E0  2FE2               	goto	u6090
  2443  17E1                     u6091:	
  2444  17E1  2FF3               	goto	l80
  2445  17E2                     u6090:	
  2446  17E2                     l4608:	
  2447                           
  2448                           ;main.c: 94:               CCPR2L--;
  2449  17E2  3001               	movlw	1
  2450  17E3  0025               	movlb	5	; select bank5
  2451  17E4  0298               	subwf	24,f	;volatile
  2452  17E5                     l4610:	
  2453                           
  2454                           ;main.c: 95:             _delay((unsigned long)((100)*(8000000/4000.0)));
  2455  17E5  3002               	movlw	2
  2456  17E6  0022               	movlb	2	; select bank2
  2457  17E7  00C8               	movwf	(??_main^(0+256)+1)
  2458  17E8  3004               	movlw	4
  2459  17E9  00C7               	movwf	??_main^(0+256)
  2460  17EA  30BA               	movlw	186
  2461  17EB                     u6147:	
  2462  17EB  0B89               	decfsz	9,f
  2463  17EC  2FEB               	goto	u6147
  2464  17ED  0BC7               	decfsz	??_main^(0+256),f
  2465  17EE  2FEB               	goto	u6147
  2466  17EF  0BC8               	decfsz	(??_main^(0+256)+1),f
  2467  17F0  2FEB               	goto	u6147
  2468  17F1  0000               	nop
  2469                           
  2470                           ;main.c: 96:         }
  2471  17F2  2E17               	goto	l4576
  2472  17F3                     l80:	
  2473                           ;main.c: 97:         else if(PORTAbits.RA2 == 1){
  2474                           
  2475  17F3  1D0C               	btfss	12,2	;volatile
  2476  17F4  2FF6               	goto	u6101
  2477  17F5  2FF7               	goto	u6100
  2478  17F6                     u6101:	
  2479  17F6  2FE5               	goto	l4610
  2480  17F7                     u6100:	
  2481  17F7                     l4612:	
  2482                           
  2483                           ;main.c: 98:             CCPR2L++;
  2484  17F7  3001               	movlw	1
  2485  17F8  0022               	movlb	2	; select bank2
  2486  17F9  00C7               	movwf	??_main^(0+256)
  2487  17FA  0847               	movf	??_main^(0+256),w
  2488  17FB  0025               	movlb	5	; select bank5
  2489  17FC  0798               	addwf	24,f	;volatile
  2490  17FD  2FE5               	goto	l4610
  2491  17FE  3180  2802         	ljmp	start
  2492  1800                     __end_of_main:	
  2493                           
  2494                           	psect	text1
  2495  1C11                     __ptext1:	
  2496 ;; *************** function _sprintf *****************
  2497 ;; Defined at:
  2498 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  s               1    wreg     PTR unsigned char 
  2501 ;;		 -> temp(5), 
  2502 ;;  fmt             2   23[BANK2 ] PTR const unsigned char 
  2503 ;;		 -> STR_5(6), STR_3(6), STR_1(6), 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  s               1   32[BANK2 ] PTR unsigned char 
  2506 ;;		 -> temp(5), 
  2507 ;;  f               5   34[BANK2 ] struct _IO_FILE
  2508 ;;  ret             2    0        int 
  2509 ;;  ap              1   33[BANK2 ] PTR void [1]
  2510 ;;		 -> ?_sprintf(2), 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  2   23[BANK2 ] int 
  2513 ;; Registers used:
  2514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2520 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  2521 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  2522 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2523 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0
  2524 ;;Total ram usage:       16 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; Hardware stack levels required when called:    7
  2527 ;; This function calls:
  2528 ;;		_vfprintf
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _sprintf
  2536  1C11                     _sprintf:	
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2540                           ;sprintf@s stored from wreg
  2541  1C11  0022               	movlb	2	; select bank2
  2542  1C12  00C0               	movwf	sprintf@s^(0+256)
  2543  1C13                     l4494:	
  2544  1C13  3039               	movlw	(low ((?_sprintf| (0+256)+2)))& (0+255)
  2545  1C14  00BD               	movwf	??_sprintf^(0+256)
  2546  1C15  083D               	movf	??_sprintf^(0+256),w
  2547  1C16  00C1               	movwf	sprintf@ap^(0+256)
  2548  1C17  0840               	movf	sprintf@s^(0+256),w
  2549  1C18  00BD               	movwf	??_sprintf^(0+256)
  2550  1C19  083D               	movf	??_sprintf^(0+256),w
  2551  1C1A  00C2               	movwf	sprintf@f^(0+256)
  2552  1C1B                     l4496:	
  2553  1C1B  01C3               	clrf	(sprintf@f^(0+256)+1)
  2554  1C1C  01C4               	clrf	((sprintf@f+1)^(0+256)+1)
  2555  1C1D                     l4498:	
  2556  1C1D  01C5               	clrf	(sprintf@f^(0+256)+3)
  2557  1C1E  01C6               	clrf	((sprintf@f+1)^(0+256)+3)
  2558  1C1F                     l4500:	
  2559  1C1F  0838               	movf	(sprintf@fmt+1)^(0+256),w
  2560  1C20  00B0               	movwf	(vfprintf@fmt+1)^(0+256)
  2561  1C21  0837               	movf	sprintf@fmt^(0+256),w
  2562  1C22  00AF               	movwf	vfprintf@fmt^(0+256)
  2563  1C23  3041               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  2564  1C24  00BD               	movwf	??_sprintf^(0+256)
  2565  1C25  083D               	movf	??_sprintf^(0+256),w
  2566  1C26  00B1               	movwf	vfprintf@ap^(0+256)
  2567  1C27  3042               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  2568  1C28  319C  2483  319C   	fcall	_vfprintf
  2569  1C2B                     l4502:	
  2570  1C2B  0022               	movlb	2	; select bank2
  2571  1C2C  0843               	movf	(sprintf@f^(0+256)+1),w
  2572  1C2D  0740               	addwf	sprintf@s^(0+256),w
  2573  1C2E  00BD               	movwf	??_sprintf^(0+256)
  2574  1C2F  083D               	movf	??_sprintf^(0+256),w
  2575  1C30  0086               	movwf	6
  2576  1C31  3001               	movlw	1	; select bank2/3
  2577  1C32  0087               	movwf	7
  2578  1C33  0181               	clrf	1
  2579  1C34                     l1155:	
  2580  1C34  0008               	return
  2581  1C35                     __end_of_sprintf:	
  2582                           
  2583                           	psect	text2
  2584  1C83                     __ptext2:	
  2585 ;; *************** function _vfprintf *****************
  2586 ;; Defined at:
  2587 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  fp              1    wreg     PTR struct _IO_FILE
  2590 ;;		 -> sprintf@f(5), 
  2591 ;;  fmt             2   15[BANK2 ] PTR const unsigned char 
  2592 ;;		 -> STR_5(6), STR_3(6), STR_1(6), 
  2593 ;;  ap              1   17[BANK2 ] PTR PTR void 
  2594 ;;		 -> sprintf@ap(1), 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  fp              1   20[BANK2 ] PTR struct _IO_FILE
  2597 ;;		 -> sprintf@f(5), 
  2598 ;;  cfmt            2   21[BANK2 ] PTR unsigned char 
  2599 ;;		 -> STR_5(6), STR_3(6), STR_1(6), 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  2   15[BANK2 ] int 
  2602 ;; Registers used:
  2603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2609 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;Total ram usage:        8 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    6
  2616 ;; This function calls:
  2617 ;;		_vfpfcnvrt
  2618 ;; This function is called by:
  2619 ;;		_sprintf
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _vfprintf
  2625  1C83                     _vfprintf:	
  2626                           
  2627                           ;incstack = 0
  2628                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2629                           ;vfprintf@fp stored from wreg
  2630  1C83  0022               	movlb	2	; select bank2
  2631  1C84  00B4               	movwf	vfprintf@fp^(0+256)
  2632  1C85                     l4370:	
  2633                           
  2634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2635  1C85  0830               	movf	(vfprintf@fmt+1)^(0+256),w
  2636  1C86  00B6               	movwf	(vfprintf@cfmt+1)^(0+256)
  2637  1C87  082F               	movf	vfprintf@fmt^(0+256),w
  2638  1C88  00B5               	movwf	vfprintf@cfmt^(0+256)
  2639  1C89                     l4372:	
  2640                           
  2641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2642  1C89  01E1               	clrf	_nout^(0+256)
  2643  1C8A  01E2               	clrf	(_nout+1)^(0+256)
  2644                           
  2645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2646  1C8B  2CA4               	goto	l4376
  2647  1C8C                     l4374:	
  2648                           
  2649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2650  1C8C  3035               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  2651  1C8D  00B2               	movwf	??_vfprintf^(0+256)
  2652  1C8E  0832               	movf	??_vfprintf^(0+256),w
  2653  1C8F  0020               	movlb	0	; select bank0
  2654  1C90  00EE               	movwf	vfpfcnvrt@fmt
  2655  1C91  0022               	movlb	2	; select bank2
  2656  1C92  0831               	movf	vfprintf@ap^(0+256),w
  2657  1C93  00B3               	movwf	(??_vfprintf+1)^(0+256)
  2658  1C94  0833               	movf	(??_vfprintf+1)^(0+256),w
  2659  1C95  0020               	movlb	0	; select bank0
  2660  1C96  00EF               	movwf	vfpfcnvrt@ap
  2661  1C97  0022               	movlb	2	; select bank2
  2662  1C98  0834               	movf	vfprintf@fp^(0+256),w
  2663  1C99  318C  24E2  319C   	fcall	_vfpfcnvrt
  2664  1C9C  0020               	movlb	0	; select bank0
  2665  1C9D  086E               	movf	?_vfpfcnvrt,w
  2666  1C9E  0022               	movlb	2	; select bank2
  2667  1C9F  07E1               	addwf	_nout^(0+256),f
  2668  1CA0  0020               	movlb	0	; select bank0
  2669  1CA1  086F               	movf	?_vfpfcnvrt+1,w
  2670  1CA2  0022               	movlb	2	; select bank2
  2671  1CA3  3DE2               	addwfc	(_nout+1)^(0+256),f
  2672  1CA4                     l4376:	
  2673                           
  2674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2675  1CA4  0835               	movf	vfprintf@cfmt^(0+256),w
  2676  1CA5  0084               	movwf	4
  2677  1CA6  0836               	movf	(vfprintf@cfmt+1)^(0+256),w
  2678  1CA7  0085               	movwf	5
  2679  1CA8  0012               	moviw fsr0++
  2680  1CA9  1D03               	btfss	3,2
  2681  1CAA  2CAC               	goto	u5891
  2682  1CAB  2CAD               	goto	u5890
  2683  1CAC                     u5891:	
  2684  1CAC  2C8C               	goto	l4374
  2685  1CAD                     u5890:	
  2686  1CAD                     l4378:	
  2687                           
  2688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2689  1CAD  0862               	movf	(_nout+1)^(0+256),w
  2690  1CAE  00B0               	movwf	(?_vfprintf+1)^(0+256)
  2691  1CAF  0861               	movf	_nout^(0+256),w
  2692  1CB0  00AF               	movwf	?_vfprintf^(0+256)
  2693  1CB1                     l599:	
  2694  1CB1  0008               	return
  2695  1CB2                     __end_of_vfprintf:	
  2696                           
  2697                           	psect	text3
  2698  0CE2                     __ptext3:	
  2699 ;; *************** function _vfpfcnvrt *****************
  2700 ;; Defined at:
  2701 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  fp              1    wreg     PTR struct _IO_FILE
  2704 ;;		 -> sprintf@f(5), 
  2705 ;;  fmt             1   78[BANK0 ] PTR PTR unsigned char 
  2706 ;;		 -> vfprintf@cfmt(2), 
  2707 ;;  ap              1   79[BANK0 ] PTR PTR void 
  2708 ;;		 -> sprintf@ap(1), 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  fp              1   14[BANK2 ] PTR struct _IO_FILE
  2711 ;;		 -> sprintf@f(5), 
  2712 ;;  llu             8    0        unsigned long long 
  2713 ;;  ll              8    0        long long 
  2714 ;;  f               4    6[BANK2 ] long long 
  2715 ;;  ct              3   10[BANK2 ] unsigned char [3]
  2716 ;;  vp              2    0        PTR void 
  2717 ;;  i               2    0        int 
  2718 ;;  done            2    0        int 
  2719 ;;  cp              2    0        PTR unsigned char 
  2720 ;;  c               1   13[BANK2 ] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  2   78[BANK0 ] int 
  2723 ;; Registers used:
  2724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2730 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2731 ;;      Locals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0
  2732 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2733 ;;      Totals:         0       2       6      15       0       0       0       0       0       0       0       0       
      +0       0
  2734 ;;Total ram usage:       23 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    5
  2737 ;; This function calls:
  2738 ;;		_atoi
  2739 ;;		_efgtoa
  2740 ;;		_fputc
  2741 ;;		_isdigit
  2742 ;;		_isupper
  2743 ;;		_strncmp
  2744 ;;		_tolower
  2745 ;; This function is called by:
  2746 ;;		_vfprintf
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function _vfpfcnvrt
  2752  0CE2                     _vfpfcnvrt:	
  2753                           
  2754                           ;incstack = 0
  2755                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2756                           ;vfpfcnvrt@fp stored from wreg
  2757  0CE2  0022               	movlb	2	; select bank2
  2758  0CE3  00AE               	movwf	vfpfcnvrt@fp^(0+256)
  2759  0CE4                     l4176:	
  2760                           
  2761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2762  0CE4  0020               	movlb	0	; select bank0
  2763  0CE5  086E               	movf	vfpfcnvrt@fmt,w
  2764  0CE6  0086               	movwf	6
  2765  0CE7  3001               	movlw	1	; select bank2/3
  2766  0CE8  0087               	movwf	7
  2767  0CE9  3F40               	moviw [0]fsr1
  2768  0CEA  0021               	movlb	1	; select bank1
  2769  0CEB  00EA               	movwf	??_vfpfcnvrt^(0+128)
  2770  0CEC  3F41               	moviw [1]fsr1
  2771  0CED  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2772  0CEE  086A               	movf	??_vfpfcnvrt^(0+128),w
  2773  0CEF  0084               	movwf	4
  2774  0CF0  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2775  0CF1  0085               	movwf	5
  2776  0CF2  0012               	moviw fsr0++
  2777  0CF3  3A25               	xorlw	37
  2778  0CF4  1D03               	btfss	3,2
  2779  0CF5  2CF7               	goto	u5571
  2780  0CF6  2CF8               	goto	u5570
  2781  0CF7                     u5571:	
  2782  0CF7  2FD6               	goto	l4284
  2783  0CF8                     u5570:	
  2784  0CF8                     l4178:	
  2785                           
  2786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2787  0CF8  0020               	movlb	0	; select bank0
  2788  0CF9  086E               	movf	vfpfcnvrt@fmt,w
  2789  0CFA  0086               	movwf	6
  2790  0CFB  3001               	movlw	1	; select bank2/3
  2791  0CFC  0087               	movwf	7
  2792  0CFD  3001               	movlw	1
  2793  0CFE  0781               	addwf	1,f
  2794  0CFF  3141               	addfsr 1,1
  2795  0D00  1803               	skipnc
  2796  0D01  0A81               	incf	1,f
  2797  0D02                     l4180:	
  2798                           
  2799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2800  0D02  0022               	movlb	2	; select bank2
  2801  0D03  01E3               	clrf	_width^(0+256)
  2802  0D04  01E4               	clrf	(_width+1)^(0+256)
  2803  0D05  01E7               	clrf	_flags^(0+256)
  2804  0D06  01E8               	clrf	(_flags+1)^(0+256)
  2805  0D07                     l4182:	
  2806                           
  2807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2808  0D07  30FF               	movlw	255
  2809  0D08  00E5               	movwf	_prec^(0+256)
  2810  0D09  30FF               	movlw	255
  2811  0D0A  00E6               	movwf	(_prec^(0+256)+1)
  2812  0D0B                     l4184:	
  2813                           
  2814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2815  0D0B  0020               	movlb	0	; select bank0
  2816  0D0C  086E               	movf	vfpfcnvrt@fmt,w
  2817  0D0D  0086               	movwf	6
  2818  0D0E  3001               	movlw	1	; select bank2/3
  2819  0D0F  0087               	movwf	7
  2820  0D10  3F40               	moviw [0]fsr1
  2821  0D11  0021               	movlb	1	; select bank1
  2822  0D12  00EA               	movwf	??_vfpfcnvrt^(0+128)
  2823  0D13  3F41               	moviw [1]fsr1
  2824  0D14  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2825  0D15  086A               	movf	??_vfpfcnvrt^(0+128),w
  2826  0D16  0084               	movwf	4
  2827  0D17  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2828  0D18  0085               	movwf	5
  2829  0D19  0012               	moviw fsr0++
  2830  0D1A  3A2A               	xorlw	42
  2831  0D1B  1D03               	btfss	3,2
  2832  0D1C  2D1E               	goto	u5581
  2833  0D1D  2D1F               	goto	u5580
  2834  0D1E                     u5581:	
  2835  0D1E  2D43               	goto	l4196
  2836  0D1F                     u5580:	
  2837  0D1F                     l4186:	
  2838                           
  2839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2840  0D1F  0020               	movlb	0	; select bank0
  2841  0D20  086E               	movf	vfpfcnvrt@fmt,w
  2842  0D21  0086               	movwf	6
  2843  0D22  3001               	movlw	1	; select bank2/3
  2844  0D23  0087               	movwf	7
  2845  0D24  3001               	movlw	1
  2846  0D25  0781               	addwf	1,f
  2847  0D26  3141               	addfsr 1,1
  2848  0D27  1803               	skipnc
  2849  0D28  0A81               	incf	1,f
  2850  0D29                     l4188:	
  2851                           
  2852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2853  0D29  086F               	movf	vfpfcnvrt@ap,w
  2854  0D2A  0086               	movwf	6
  2855  0D2B  3001               	movlw	1	; select bank2/3
  2856  0D2C  0087               	movwf	7
  2857  0D2D  0801               	movf	1,w
  2858  0D2E  0084               	movwf	4
  2859  0D2F  3001               	movlw	1	; select bank2/3
  2860  0D30  0085               	movwf	5
  2861  0D31  3002               	movlw	2
  2862  0D32  0781               	addwf	1,f
  2863  0D33  3F00               	moviw [0]fsr0
  2864  0D34  0022               	movlb	2	; select bank2
  2865  0D35  00E3               	movwf	_width^(0+256)
  2866  0D36  3F01               	moviw [1]fsr0
  2867  0D37  00E4               	movwf	(_width+1)^(0+256)
  2868  0D38                     l4190:	
  2869                           
  2870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2871  0D38  1FE4               	btfss	(_width+1)^(0+256),7
  2872  0D39  2D3B               	goto	u5591
  2873  0D3A  2D3C               	goto	u5590
  2874  0D3B                     u5591:	
  2875  0D3B  2D8E               	goto	l4206
  2876  0D3C                     u5590:	
  2877  0D3C                     l4192:	
  2878                           
  2879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2880  0D3C  1467               	bsf	_flags^(0+256),0
  2881  0D3D                     l4194:	
  2882                           
  2883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2884  0D3D  09E3               	comf	_width^(0+256),f
  2885  0D3E  09E4               	comf	(_width+1)^(0+256),f
  2886  0D3F  0AE3               	incf	_width^(0+256),f
  2887  0D40  1903               	skipnz
  2888  0D41  0AE4               	incf	(_width+1)^(0+256),f
  2889  0D42  2D8E               	goto	l4206
  2890  0D43                     l4196:	
  2891                           
  2892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2893  0D43  0020               	movlb	0	; select bank0
  2894  0D44  086E               	movf	vfpfcnvrt@fmt,w
  2895  0D45  0086               	movwf	6
  2896  0D46  3001               	movlw	1	; select bank2/3
  2897  0D47  0087               	movwf	7
  2898  0D48  3F40               	moviw [0]fsr1
  2899  0D49  00F6               	movwf	atoi@s
  2900  0D4A  3F41               	moviw [1]fsr1
  2901  0D4B  00F7               	movwf	atoi@s+1
  2902  0D4C  3193  2384  318C   	fcall	_atoi
  2903  0D4F  0877               	movf	?_atoi+1,w
  2904  0D50  0022               	movlb	2	; select bank2
  2905  0D51  00E4               	movwf	(_width+1)^(0+256)
  2906  0D52  0876               	movf	?_atoi,w
  2907  0D53  00E3               	movwf	_width^(0+256)
  2908                           
  2909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2910  0D54  2D5F               	goto	l4200
  2911  0D55                     l4198:	
  2912                           
  2913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2914  0D55  0020               	movlb	0	; select bank0
  2915  0D56  086E               	movf	vfpfcnvrt@fmt,w
  2916  0D57  0086               	movwf	6
  2917  0D58  3001               	movlw	1	; select bank2/3
  2918  0D59  0087               	movwf	7
  2919  0D5A  3001               	movlw	1
  2920  0D5B  0781               	addwf	1,f
  2921  0D5C  3141               	addfsr 1,1
  2922  0D5D  1803               	skipnc
  2923  0D5E  0A81               	incf	1,f
  2924  0D5F                     l4200:	
  2925  0D5F  0020               	movlb	0	; select bank0
  2926  0D60  086E               	movf	vfpfcnvrt@fmt,w
  2927  0D61  0086               	movwf	6
  2928  0D62  3001               	movlw	1	; select bank2/3
  2929  0D63  0087               	movwf	7
  2930  0D64  3F40               	moviw [0]fsr1
  2931  0D65  0021               	movlb	1	; select bank1
  2932  0D66  00EA               	movwf	??_vfpfcnvrt^(0+128)
  2933  0D67  3F41               	moviw [1]fsr1
  2934  0D68  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2935  0D69  086A               	movf	??_vfpfcnvrt^(0+128),w
  2936  0D6A  0084               	movwf	4
  2937  0D6B  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2938  0D6C  0085               	movwf	5
  2939  0D6D  0800               	movf	0,w	;code access
  2940  0D6E  3ED0               	addlw	208
  2941  0D6F  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  2942  0D70  30FF               	movlw	255
  2943  0D71  1803               	skipnc
  2944  0D72  3000               	movlw	0
  2945  0D73  00ED               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  2946  0D74  3000               	movlw	0
  2947  0D75  026D               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  2948  0D76  300A               	movlw	10
  2949  0D77  1903               	skipnz
  2950  0D78  026C               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  2951  0D79  1C03               	skipc
  2952  0D7A  2D7C               	goto	u5601
  2953  0D7B  2D7E               	goto	u5600
  2954  0D7C                     u5601:	
  2955  0D7C  3001               	movlw	1
  2956  0D7D  2D7F               	goto	u5610
  2957  0D7E                     u5600:	
  2958  0D7E  3000               	movlw	0
  2959  0D7F                     u5610:	
  2960  0D7F  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  2961  0D80  01EF               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  2962  0D81  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  2963  0D82  0022               	movlb	2	; select bank2
  2964  0D83  00A0               	movwf	_vfpfcnvrt$841^(0+256)
  2965  0D84  0021               	movlb	1	; select bank1
  2966  0D85  086F               	movf	(??_vfpfcnvrt+5)^(0+128),w
  2967  0D86  0022               	movlb	2	; select bank2
  2968  0D87  00A1               	movwf	(_vfpfcnvrt$841+1)^(0+256)
  2969  0D88                     l4204:	
  2970  0D88  0820               	movf	_vfpfcnvrt$841^(0+256),w
  2971  0D89  0421               	iorwf	(_vfpfcnvrt$841+1)^(0+256),w
  2972  0D8A  1D03               	btfss	3,2
  2973  0D8B  2D8D               	goto	u5621
  2974  0D8C  2D8E               	goto	u5620
  2975  0D8D                     u5621:	
  2976  0D8D  2D55               	goto	l4198
  2977  0D8E                     u5620:	
  2978  0D8E                     l4206:	
  2979                           
  2980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2981  0D8E  0020               	movlb	0	; select bank0
  2982  0D8F  086E               	movf	vfpfcnvrt@fmt,w
  2983  0D90  0086               	movwf	6
  2984  0D91  3001               	movlw	1	; select bank2/3
  2985  0D92  0087               	movwf	7
  2986  0D93  3F40               	moviw [0]fsr1
  2987  0D94  0021               	movlb	1	; select bank1
  2988  0D95  00EA               	movwf	??_vfpfcnvrt^(0+128)
  2989  0D96  3F41               	moviw [1]fsr1
  2990  0D97  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  2991  0D98  086A               	movf	??_vfpfcnvrt^(0+128),w
  2992  0D99  0084               	movwf	4
  2993  0D9A  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2994  0D9B  0085               	movwf	5
  2995  0D9C  0012               	moviw fsr0++
  2996  0D9D  3A2E               	xorlw	46
  2997  0D9E  1D03               	btfss	3,2
  2998  0D9F  2DA1               	goto	u5631
  2999  0DA0  2DA2               	goto	u5630
  3000  0DA1                     u5631:	
  3001  0DA1  2E27               	goto	l4228
  3002  0DA2                     u5630:	
  3003  0DA2                     l4208:	
  3004                           
  3005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3006  0DA2  0022               	movlb	2	; select bank2
  3007  0DA3  01E5               	clrf	_prec^(0+256)
  3008  0DA4  01E6               	clrf	(_prec+1)^(0+256)
  3009  0DA5                     l4210:	
  3010                           
  3011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3012  0DA5  0020               	movlb	0	; select bank0
  3013  0DA6  086E               	movf	vfpfcnvrt@fmt,w
  3014  0DA7  0086               	movwf	6
  3015  0DA8  3001               	movlw	1	; select bank2/3
  3016  0DA9  0087               	movwf	7
  3017  0DAA  3001               	movlw	1
  3018  0DAB  0781               	addwf	1,f
  3019  0DAC  3141               	addfsr 1,1
  3020  0DAD  1803               	skipnc
  3021  0DAE  0A81               	incf	1,f
  3022  0DAF                     l4212:	
  3023                           
  3024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3025  0DAF  086E               	movf	vfpfcnvrt@fmt,w
  3026  0DB0  0086               	movwf	6
  3027  0DB1  3001               	movlw	1	; select bank2/3
  3028  0DB2  0087               	movwf	7
  3029  0DB3  3F40               	moviw [0]fsr1
  3030  0DB4  0021               	movlb	1	; select bank1
  3031  0DB5  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3032  0DB6  3F41               	moviw [1]fsr1
  3033  0DB7  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3034  0DB8  086A               	movf	??_vfpfcnvrt^(0+128),w
  3035  0DB9  0084               	movwf	4
  3036  0DBA  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3037  0DBB  0085               	movwf	5
  3038  0DBC  0012               	moviw fsr0++
  3039  0DBD  3A2A               	xorlw	42
  3040  0DBE  1D03               	btfss	3,2
  3041  0DBF  2DC1               	goto	u5641
  3042  0DC0  2DC2               	goto	u5640
  3043  0DC1                     u5641:	
  3044  0DC1  2DDC               	goto	l4218
  3045  0DC2                     u5640:	
  3046  0DC2                     l4214:	
  3047                           
  3048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3049  0DC2  0020               	movlb	0	; select bank0
  3050  0DC3  086E               	movf	vfpfcnvrt@fmt,w
  3051  0DC4  0086               	movwf	6
  3052  0DC5  3001               	movlw	1	; select bank2/3
  3053  0DC6  0087               	movwf	7
  3054  0DC7  3001               	movlw	1
  3055  0DC8  0781               	addwf	1,f
  3056  0DC9  3141               	addfsr 1,1
  3057  0DCA  1803               	skipnc
  3058  0DCB  0A81               	incf	1,f
  3059  0DCC                     l4216:	
  3060                           
  3061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3062  0DCC  086F               	movf	vfpfcnvrt@ap,w
  3063  0DCD  0086               	movwf	6
  3064  0DCE  3001               	movlw	1	; select bank2/3
  3065  0DCF  0087               	movwf	7
  3066  0DD0  0801               	movf	1,w
  3067  0DD1  0084               	movwf	4
  3068  0DD2  3001               	movlw	1	; select bank2/3
  3069  0DD3  0085               	movwf	5
  3070  0DD4  3002               	movlw	2
  3071  0DD5  0781               	addwf	1,f
  3072  0DD6  3F00               	moviw [0]fsr0
  3073  0DD7  0022               	movlb	2	; select bank2
  3074  0DD8  00E5               	movwf	_prec^(0+256)
  3075  0DD9  3F01               	moviw [1]fsr0
  3076  0DDA  00E6               	movwf	(_prec+1)^(0+256)
  3077                           
  3078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3079  0DDB  2E27               	goto	l4228
  3080  0DDC                     l4218:	
  3081                           
  3082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3083  0DDC  0020               	movlb	0	; select bank0
  3084  0DDD  086E               	movf	vfpfcnvrt@fmt,w
  3085  0DDE  0086               	movwf	6
  3086  0DDF  3001               	movlw	1	; select bank2/3
  3087  0DE0  0087               	movwf	7
  3088  0DE1  3F40               	moviw [0]fsr1
  3089  0DE2  00F6               	movwf	atoi@s
  3090  0DE3  3F41               	moviw [1]fsr1
  3091  0DE4  00F7               	movwf	atoi@s+1
  3092  0DE5  3193  2384  318C   	fcall	_atoi
  3093  0DE8  0877               	movf	?_atoi+1,w
  3094  0DE9  0022               	movlb	2	; select bank2
  3095  0DEA  00E6               	movwf	(_prec+1)^(0+256)
  3096  0DEB  0876               	movf	?_atoi,w
  3097  0DEC  00E5               	movwf	_prec^(0+256)
  3098                           
  3099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3100  0DED  2DF8               	goto	l4222
  3101  0DEE                     l4220:	
  3102                           
  3103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3104  0DEE  0020               	movlb	0	; select bank0
  3105  0DEF  086E               	movf	vfpfcnvrt@fmt,w
  3106  0DF0  0086               	movwf	6
  3107  0DF1  3001               	movlw	1	; select bank2/3
  3108  0DF2  0087               	movwf	7
  3109  0DF3  3001               	movlw	1
  3110  0DF4  0781               	addwf	1,f
  3111  0DF5  3141               	addfsr 1,1
  3112  0DF6  1803               	skipnc
  3113  0DF7  0A81               	incf	1,f
  3114  0DF8                     l4222:	
  3115  0DF8  0020               	movlb	0	; select bank0
  3116  0DF9  086E               	movf	vfpfcnvrt@fmt,w
  3117  0DFA  0086               	movwf	6
  3118  0DFB  3001               	movlw	1	; select bank2/3
  3119  0DFC  0087               	movwf	7
  3120  0DFD  3F40               	moviw [0]fsr1
  3121  0DFE  0021               	movlb	1	; select bank1
  3122  0DFF  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3123  0E00  3F41               	moviw [1]fsr1
  3124  0E01  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3125  0E02  086A               	movf	??_vfpfcnvrt^(0+128),w
  3126  0E03  0084               	movwf	4
  3127  0E04  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3128  0E05  0085               	movwf	5
  3129  0E06  0800               	movf	0,w	;code access
  3130  0E07  3ED0               	addlw	208
  3131  0E08  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3132  0E09  30FF               	movlw	255
  3133  0E0A  1803               	skipnc
  3134  0E0B  3000               	movlw	0
  3135  0E0C  00ED               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  3136  0E0D  3000               	movlw	0
  3137  0E0E  026D               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  3138  0E0F  300A               	movlw	10
  3139  0E10  1903               	skipnz
  3140  0E11  026C               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  3141  0E12  1C03               	skipc
  3142  0E13  2E15               	goto	u5651
  3143  0E14  2E17               	goto	u5650
  3144  0E15                     u5651:	
  3145  0E15  3001               	movlw	1
  3146  0E16  2E18               	goto	u5660
  3147  0E17                     u5650:	
  3148  0E17  3000               	movlw	0
  3149  0E18                     u5660:	
  3150  0E18  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3151  0E19  01EF               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  3152  0E1A  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3153  0E1B  0022               	movlb	2	; select bank2
  3154  0E1C  00A2               	movwf	_vfpfcnvrt$842^(0+256)
  3155  0E1D  0021               	movlb	1	; select bank1
  3156  0E1E  086F               	movf	(??_vfpfcnvrt+5)^(0+128),w
  3157  0E1F  0022               	movlb	2	; select bank2
  3158  0E20  00A3               	movwf	(_vfpfcnvrt$842+1)^(0+256)
  3159  0E21                     l4226:	
  3160  0E21  0822               	movf	_vfpfcnvrt$842^(0+256),w
  3161  0E22  0423               	iorwf	(_vfpfcnvrt$842+1)^(0+256),w
  3162  0E23  1D03               	btfss	3,2
  3163  0E24  2E26               	goto	u5671
  3164  0E25  2E27               	goto	u5670
  3165  0E26                     u5671:	
  3166  0E26  2DEE               	goto	l4220
  3167  0E27                     u5670:	
  3168  0E27                     l4228:	
  3169                           
  3170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3171  0E27  0020               	movlb	0	; select bank0
  3172  0E28  086E               	movf	vfpfcnvrt@fmt,w
  3173  0E29  0086               	movwf	6
  3174  0E2A  3001               	movlw	1	; select bank2/3
  3175  0E2B  0087               	movwf	7
  3176  0E2C  3F40               	moviw [0]fsr1
  3177  0E2D  0021               	movlb	1	; select bank1
  3178  0E2E  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3179  0E2F  3F41               	moviw [1]fsr1
  3180  0E30  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3181  0E31  086A               	movf	??_vfpfcnvrt^(0+128),w
  3182  0E32  0084               	movwf	4
  3183  0E33  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3184  0E34  0085               	movwf	5
  3185  0E35  0800               	movf	0,w	;code access
  3186  0E36  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3187  0E37  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3188  0E38  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3189  0E39  00F6               	movwf	tolower@c
  3190  0E3A  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3191  0E3B  00F7               	movwf	tolower@c+1
  3192  0E3C  319C  2435  318C   	fcall	_tolower
  3193  0E3F  0876               	movf	?_tolower,w
  3194  0E40  0021               	movlb	1	; select bank1
  3195  0E41  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3196  0E42  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3197  0E43  0022               	movlb	2	; select bank2
  3198  0E44  00AA               	movwf	vfpfcnvrt@ct^(0+256)
  3199  0E45                     l4230:	
  3200                           
  3201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3202  0E45  082A               	movf	vfpfcnvrt@ct^(0+256),w
  3203  0E46  1903               	btfsc	3,2
  3204  0E47  2E49               	goto	u5681
  3205  0E48  2E4A               	goto	u5680
  3206  0E49                     u5681:	
  3207  0E49  2E91               	goto	l4238
  3208  0E4A                     u5680:	
  3209  0E4A                     l4232:	
  3210                           
  3211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3212  0E4A  0020               	movlb	0	; select bank0
  3213  0E4B  086E               	movf	vfpfcnvrt@fmt,w
  3214  0E4C  0086               	movwf	6
  3215  0E4D  3001               	movlw	1	; select bank2/3
  3216  0E4E  0087               	movwf	7
  3217  0E4F  3F40               	moviw [0]fsr1
  3218  0E50  0021               	movlb	1	; select bank1
  3219  0E51  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3220  0E52  3F41               	moviw [1]fsr1
  3221  0E53  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3222  0E54  3001               	movlw	1
  3223  0E55  076A               	addwf	??_vfpfcnvrt^(0+128),w
  3224  0E56  0084               	movwf	4
  3225  0E57  086B               	movf	(??_vfpfcnvrt^(0+128)+1),w
  3226  0E58  1803               	skipnc
  3227  0E59  0A6B               	incf	(??_vfpfcnvrt^(0+128)+1),w
  3228  0E5A  0085               	movwf	5
  3229  0E5B  0800               	movf	0,w	;code access
  3230  0E5C  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3231  0E5D  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3232  0E5E  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3233  0E5F  00F6               	movwf	tolower@c
  3234  0E60  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3235  0E61  00F7               	movwf	tolower@c+1
  3236  0E62  319C  2435  318C   	fcall	_tolower
  3237  0E65  0876               	movf	?_tolower,w
  3238  0E66  0021               	movlb	1	; select bank1
  3239  0E67  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3240  0E68  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3241  0E69  0022               	movlb	2	; select bank2
  3242  0E6A  00AB               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  3243  0E6B                     l4234:	
  3244                           
  3245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3246  0E6B  082B               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  3247  0E6C  1903               	btfsc	3,2
  3248  0E6D  2E6F               	goto	u5691
  3249  0E6E  2E70               	goto	u5690
  3250  0E6F                     u5691:	
  3251  0E6F  2E91               	goto	l4238
  3252  0E70                     u5690:	
  3253  0E70                     l4236:	
  3254                           
  3255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3256  0E70  0020               	movlb	0	; select bank0
  3257  0E71  086E               	movf	vfpfcnvrt@fmt,w
  3258  0E72  0086               	movwf	6
  3259  0E73  3001               	movlw	1	; select bank2/3
  3260  0E74  0087               	movwf	7
  3261  0E75  3F40               	moviw [0]fsr1
  3262  0E76  0021               	movlb	1	; select bank1
  3263  0E77  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3264  0E78  3F41               	moviw [1]fsr1
  3265  0E79  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3266  0E7A  3002               	movlw	2
  3267  0E7B  076A               	addwf	??_vfpfcnvrt^(0+128),w
  3268  0E7C  0084               	movwf	4
  3269  0E7D  086B               	movf	(??_vfpfcnvrt^(0+128)+1),w
  3270  0E7E  1803               	skipnc
  3271  0E7F  0A6B               	incf	(??_vfpfcnvrt^(0+128)+1),w
  3272  0E80  0085               	movwf	5
  3273  0E81  0800               	movf	0,w	;code access
  3274  0E82  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3275  0E83  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3276  0E84  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3277  0E85  00F6               	movwf	tolower@c
  3278  0E86  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3279  0E87  00F7               	movwf	tolower@c+1
  3280  0E88  319C  2435  318C   	fcall	_tolower
  3281  0E8B  0876               	movf	?_tolower,w
  3282  0E8C  0021               	movlb	1	; select bank1
  3283  0E8D  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3284  0E8E  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3285  0E8F  0022               	movlb	2	; select bank2
  3286  0E90  00AC               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  3287  0E91                     l4238:	
  3288                           
  3289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  3290  0E91  3066               	movlw	102
  3291  0E92  062A               	xorwf	vfpfcnvrt@ct^(0+256),w
  3292  0E93  1D03               	btfss	3,2
  3293  0E94  2E96               	goto	u5701
  3294  0E95  2E97               	goto	u5700
  3295  0E96                     u5701:	
  3296  0E96  2EEA               	goto	l4250
  3297  0E97                     u5700:	
  3298  0E97                     l4240:	
  3299                           
  3300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  3301  0E97  0020               	movlb	0	; select bank0
  3302  0E98  086E               	movf	vfpfcnvrt@fmt,w
  3303  0E99  0086               	movwf	6
  3304  0E9A  3001               	movlw	1	; select bank2/3
  3305  0E9B  0087               	movwf	7
  3306  0E9C  3F40               	moviw [0]fsr1
  3307  0E9D  0021               	movlb	1	; select bank1
  3308  0E9E  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3309  0E9F  3F41               	moviw [1]fsr1
  3310  0EA0  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3311  0EA1  086A               	movf	??_vfpfcnvrt^(0+128),w
  3312  0EA2  0084               	movwf	4
  3313  0EA3  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3314  0EA4  0085               	movwf	5
  3315  0EA5  0800               	movf	0,w	;code access
  3316  0EA6  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3317  0EA7  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3318  0EA8  0022               	movlb	2	; select bank2
  3319  0EA9  00AD               	movwf	vfpfcnvrt@c^(0+256)
  3320  0EAA                     l4242:	
  3321                           
  3322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  3323  0EAA  0020               	movlb	0	; select bank0
  3324  0EAB  086E               	movf	vfpfcnvrt@fmt,w
  3325  0EAC  0086               	movwf	6
  3326  0EAD  3001               	movlw	1	; select bank2/3
  3327  0EAE  0087               	movwf	7
  3328  0EAF  3001               	movlw	1
  3329  0EB0  0781               	addwf	1,f
  3330  0EB1  3141               	addfsr 1,1
  3331  0EB2  1803               	skipnc
  3332  0EB3  0A81               	incf	1,f
  3333  0EB4                     l4244:	
  3334                           
  3335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3336  0EB4  086F               	movf	vfpfcnvrt@ap,w
  3337  0EB5  0086               	movwf	6
  3338  0EB6  3001               	movlw	1	; select bank2/3
  3339  0EB7  0087               	movwf	7
  3340  0EB8  0801               	movf	1,w
  3341  0EB9  0084               	movwf	4
  3342  0EBA  3001               	movlw	1	; select bank2/3
  3343  0EBB  0085               	movwf	5
  3344  0EBC  3004               	movlw	4
  3345  0EBD  0781               	addwf	1,f
  3346  0EBE  3F00               	moviw [0]fsr0
  3347  0EBF  0022               	movlb	2	; select bank2
  3348  0EC0  00A6               	movwf	vfpfcnvrt@f^(0+256)
  3349  0EC1  3F01               	moviw [1]fsr0
  3350  0EC2  00A7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  3351  0EC3  3F02               	moviw [2]fsr0
  3352  0EC4  00A8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  3353  0EC5  3F03               	moviw [3]fsr0
  3354  0EC6  00A9               	movwf	(vfpfcnvrt@f+3)^(0+256)
  3355  0EC7                     l4246:	
  3356                           
  3357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  3358  0EC7  0829               	movf	(vfpfcnvrt@f+3)^(0+256),w
  3359  0EC8  0021               	movlb	1	; select bank1
  3360  0EC9  00AB               	movwf	(efgtoa@f+3)^(0+128)
  3361  0ECA  0022               	movlb	2	; select bank2
  3362  0ECB  0828               	movf	(vfpfcnvrt@f+2)^(0+256),w
  3363  0ECC  0021               	movlb	1	; select bank1
  3364  0ECD  00AA               	movwf	(efgtoa@f+2)^(0+128)
  3365  0ECE  0022               	movlb	2	; select bank2
  3366  0ECF  0827               	movf	(vfpfcnvrt@f+1)^(0+256),w
  3367  0ED0  0021               	movlb	1	; select bank1
  3368  0ED1  00A9               	movwf	(efgtoa@f+1)^(0+128)
  3369  0ED2  0022               	movlb	2	; select bank2
  3370  0ED3  0826               	movf	vfpfcnvrt@f^(0+256),w
  3371  0ED4  0021               	movlb	1	; select bank1
  3372  0ED5  00A8               	movwf	efgtoa@f^(0+128)
  3373  0ED6  0022               	movlb	2	; select bank2
  3374  0ED7  082D               	movf	vfpfcnvrt@c^(0+256),w
  3375  0ED8  0021               	movlb	1	; select bank1
  3376  0ED9  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3377  0EDA  086A               	movf	??_vfpfcnvrt^(0+128),w
  3378  0EDB  00AC               	movwf	efgtoa@c^(0+128)
  3379  0EDC  0022               	movlb	2	; select bank2
  3380  0EDD  082E               	movf	vfpfcnvrt@fp^(0+256),w
  3381  0EDE  3180  20FB  318C   	fcall	_efgtoa
  3382  0EE1  0021               	movlb	1	; select bank1
  3383  0EE2  0829               	movf	(?_efgtoa+1)^(0+128),w
  3384  0EE3  0020               	movlb	0	; select bank0
  3385  0EE4  00EF               	movwf	?_vfpfcnvrt+1
  3386  0EE5  0021               	movlb	1	; select bank1
  3387  0EE6  0828               	movf	?_efgtoa^(0+128),w
  3388  0EE7  0020               	movlb	0	; select bank0
  3389  0EE8  00EE               	movwf	?_vfpfcnvrt
  3390  0EE9  2FFF               	goto	l585
  3391  0EEA                     l4250:	
  3392                           
  3393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3394  0EEA  3021               	movlw	low (STR_16| (0+32768))
  3395  0EEB  00F0               	movwf	strncmp@_r
  3396  0EEC  3098               	movlw	high (STR_16| (0+32768))
  3397  0EED  00F1               	movwf	strncmp@_r+1
  3398  0EEE  3002               	movlw	2
  3399  0EEF  00F2               	movwf	strncmp@n
  3400  0EF0  3000               	movlw	0
  3401  0EF1  00F3               	movwf	strncmp@n+1
  3402  0EF2  302A               	movlw	(low (vfpfcnvrt@ct| (0+256)))& (0+255)
  3403  0EF3  3190  2043  318C   	fcall	_strncmp
  3404  0EF6  0870               	movf	?_strncmp,w
  3405  0EF7  0471               	iorwf	?_strncmp+1,w
  3406  0EF8  1D03               	btfss	3,2
  3407  0EF9  2EFB               	goto	u5711
  3408  0EFA  2EFC               	goto	u5710
  3409  0EFB                     u5711:	
  3410  0EFB  2F98               	goto	l4268
  3411  0EFC                     u5710:	
  3412  0EFC                     l4252:	
  3413                           
  3414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3415  0EFC  0020               	movlb	0	; select bank0
  3416  0EFD  086E               	movf	vfpfcnvrt@fmt,w
  3417  0EFE  0086               	movwf	6
  3418  0EFF  3001               	movlw	1	; select bank2/3
  3419  0F00  0087               	movwf	7
  3420  0F01  3F40               	moviw [0]fsr1
  3421  0F02  0021               	movlb	1	; select bank1
  3422  0F03  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3423  0F04  3F41               	moviw [1]fsr1
  3424  0F05  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3425  0F06  3001               	movlw	1
  3426  0F07  076A               	addwf	??_vfpfcnvrt^(0+128),w
  3427  0F08  0084               	movwf	4
  3428  0F09  086B               	movf	(??_vfpfcnvrt^(0+128)+1),w
  3429  0F0A  1803               	skipnc
  3430  0F0B  0A6B               	incf	(??_vfpfcnvrt^(0+128)+1),w
  3431  0F0C  0085               	movwf	5
  3432  0F0D  0800               	movf	0,w	;code access
  3433  0F0E  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3434  0F0F  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3435  0F10  0022               	movlb	2	; select bank2
  3436  0F11  00AD               	movwf	vfpfcnvrt@c^(0+256)
  3437  0F12  0020               	movlb	0	; select bank0
  3438  0F13  086E               	movf	vfpfcnvrt@fmt,w
  3439  0F14  0086               	movwf	6
  3440  0F15  3001               	movlw	1	; select bank2/3
  3441  0F16  0087               	movwf	7
  3442  0F17  3F40               	moviw [0]fsr1
  3443  0F18  0021               	movlb	1	; select bank1
  3444  0F19  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3445  0F1A  3F41               	moviw [1]fsr1
  3446  0F1B  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3447  0F1C  086A               	movf	??_vfpfcnvrt^(0+128),w
  3448  0F1D  0084               	movwf	4
  3449  0F1E  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3450  0F1F  0085               	movwf	5
  3451  0F20  0800               	movf	0,w	;code access
  3452  0F21  3EBF               	addlw	191
  3453  0F22  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3454  0F23  30FF               	movlw	255
  3455  0F24  1803               	skipnc
  3456  0F25  3000               	movlw	0
  3457  0F26  00ED               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  3458  0F27  3000               	movlw	0
  3459  0F28  026D               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  3460  0F29  301A               	movlw	26
  3461  0F2A  1903               	skipnz
  3462  0F2B  026C               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  3463  0F2C  1C03               	skipc
  3464  0F2D  2F2F               	goto	u5721
  3465  0F2E  2F31               	goto	u5720
  3466  0F2F                     u5721:	
  3467  0F2F  3001               	movlw	1
  3468  0F30  2F32               	goto	u5730
  3469  0F31                     u5720:	
  3470  0F31  3000               	movlw	0
  3471  0F32                     u5730:	
  3472  0F32  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3473  0F33  01EF               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  3474  0F34  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3475  0F35  0022               	movlb	2	; select bank2
  3476  0F36  00A4               	movwf	_vfpfcnvrt$846^(0+256)
  3477  0F37  0021               	movlb	1	; select bank1
  3478  0F38  086F               	movf	(??_vfpfcnvrt+5)^(0+128),w
  3479  0F39  0022               	movlb	2	; select bank2
  3480  0F3A  00A5               	movwf	(_vfpfcnvrt$846+1)^(0+256)
  3481  0F3B                     l4256:	
  3482  0F3B  0824               	movf	_vfpfcnvrt$846^(0+256),w
  3483  0F3C  0425               	iorwf	(_vfpfcnvrt$846+1)^(0+256),w
  3484  0F3D  1903               	btfsc	3,2
  3485  0F3E  2F40               	goto	u5741
  3486  0F3F  2F41               	goto	u5740
  3487  0F40                     u5741:	
  3488  0F40  2F56               	goto	l4260
  3489  0F41                     u5740:	
  3490  0F41                     l4258:	
  3491                           
  3492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3493  0F41  0020               	movlb	0	; select bank0
  3494  0F42  086F               	movf	vfpfcnvrt@ap,w
  3495  0F43  0086               	movwf	6
  3496  0F44  3001               	movlw	1	; select bank2/3
  3497  0F45  0087               	movwf	7
  3498  0F46  0801               	movf	1,w
  3499  0F47  0084               	movwf	4
  3500  0F48  3001               	movlw	1	; select bank2/3
  3501  0F49  0085               	movwf	5
  3502  0F4A  3004               	movlw	4
  3503  0F4B  0781               	addwf	1,f
  3504  0F4C  3F00               	moviw [0]fsr0
  3505  0F4D  0022               	movlb	2	; select bank2
  3506  0F4E  00A6               	movwf	vfpfcnvrt@f^(0+256)
  3507  0F4F  3F01               	moviw [1]fsr0
  3508  0F50  00A7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  3509  0F51  3F02               	moviw [2]fsr0
  3510  0F52  00A8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  3511  0F53  3F03               	moviw [3]fsr0
  3512  0F54  00A9               	movwf	(vfpfcnvrt@f+3)^(0+256)
  3513                           
  3514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  3515  0F55  2F6A               	goto	l4262
  3516  0F56                     l4260:	
  3517                           
  3518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3519  0F56  0020               	movlb	0	; select bank0
  3520  0F57  086F               	movf	vfpfcnvrt@ap,w
  3521  0F58  0086               	movwf	6
  3522  0F59  3001               	movlw	1	; select bank2/3
  3523  0F5A  0087               	movwf	7
  3524  0F5B  0801               	movf	1,w
  3525  0F5C  0084               	movwf	4
  3526  0F5D  3001               	movlw	1	; select bank2/3
  3527  0F5E  0085               	movwf	5
  3528  0F5F  3004               	movlw	4
  3529  0F60  0781               	addwf	1,f
  3530  0F61  3F00               	moviw [0]fsr0
  3531  0F62  0022               	movlb	2	; select bank2
  3532  0F63  00A6               	movwf	vfpfcnvrt@f^(0+256)
  3533  0F64  3F01               	moviw [1]fsr0
  3534  0F65  00A7               	movwf	(vfpfcnvrt@f+1)^(0+256)
  3535  0F66  3F02               	moviw [2]fsr0
  3536  0F67  00A8               	movwf	(vfpfcnvrt@f+2)^(0+256)
  3537  0F68  3F03               	moviw [3]fsr0
  3538  0F69  00A9               	movwf	(vfpfcnvrt@f+3)^(0+256)
  3539  0F6A                     l4262:	
  3540                           
  3541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3542  0F6A  0020               	movlb	0	; select bank0
  3543  0F6B  086E               	movf	vfpfcnvrt@fmt,w
  3544  0F6C  0086               	movwf	6
  3545  0F6D  3001               	movlw	1	; select bank2/3
  3546  0F6E  0087               	movwf	7
  3547  0F6F  3002               	movlw	2
  3548  0F70  0781               	addwf	1,f
  3549  0F71  3141               	addfsr 1,1
  3550  0F72  1803               	skipnc
  3551  0F73  0A81               	incf	1,f
  3552  0F74                     l4264:	
  3553                           
  3554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  3555  0F74  0022               	movlb	2	; select bank2
  3556  0F75  0829               	movf	(vfpfcnvrt@f+3)^(0+256),w
  3557  0F76  0021               	movlb	1	; select bank1
  3558  0F77  00AB               	movwf	(efgtoa@f+3)^(0+128)
  3559  0F78  0022               	movlb	2	; select bank2
  3560  0F79  0828               	movf	(vfpfcnvrt@f+2)^(0+256),w
  3561  0F7A  0021               	movlb	1	; select bank1
  3562  0F7B  00AA               	movwf	(efgtoa@f+2)^(0+128)
  3563  0F7C  0022               	movlb	2	; select bank2
  3564  0F7D  0827               	movf	(vfpfcnvrt@f+1)^(0+256),w
  3565  0F7E  0021               	movlb	1	; select bank1
  3566  0F7F  00A9               	movwf	(efgtoa@f+1)^(0+128)
  3567  0F80  0022               	movlb	2	; select bank2
  3568  0F81  0826               	movf	vfpfcnvrt@f^(0+256),w
  3569  0F82  0021               	movlb	1	; select bank1
  3570  0F83  00A8               	movwf	efgtoa@f^(0+128)
  3571  0F84  0022               	movlb	2	; select bank2
  3572  0F85  082D               	movf	vfpfcnvrt@c^(0+256),w
  3573  0F86  0021               	movlb	1	; select bank1
  3574  0F87  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3575  0F88  086A               	movf	??_vfpfcnvrt^(0+128),w
  3576  0F89  00AC               	movwf	efgtoa@c^(0+128)
  3577  0F8A  0022               	movlb	2	; select bank2
  3578  0F8B  082E               	movf	vfpfcnvrt@fp^(0+256),w
  3579  0F8C  3180  20FB  318C   	fcall	_efgtoa
  3580  0F8F  0021               	movlb	1	; select bank1
  3581  0F90  0829               	movf	(?_efgtoa+1)^(0+128),w
  3582  0F91  0020               	movlb	0	; select bank0
  3583  0F92  00EF               	movwf	?_vfpfcnvrt+1
  3584  0F93  0021               	movlb	1	; select bank1
  3585  0F94  0828               	movf	?_efgtoa^(0+128),w
  3586  0F95  0020               	movlb	0	; select bank0
  3587  0F96  00EE               	movwf	?_vfpfcnvrt
  3588  0F97  2FFF               	goto	l585
  3589  0F98                     l4268:	
  3590                           
  3591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3592  0F98  0020               	movlb	0	; select bank0
  3593  0F99  086E               	movf	vfpfcnvrt@fmt,w
  3594  0F9A  0086               	movwf	6
  3595  0F9B  3001               	movlw	1	; select bank2/3
  3596  0F9C  0087               	movwf	7
  3597  0F9D  3F40               	moviw [0]fsr1
  3598  0F9E  0021               	movlb	1	; select bank1
  3599  0F9F  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3600  0FA0  3F41               	moviw [1]fsr1
  3601  0FA1  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3602  0FA2  086A               	movf	??_vfpfcnvrt^(0+128),w
  3603  0FA3  0084               	movwf	4
  3604  0FA4  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3605  0FA5  0085               	movwf	5
  3606  0FA6  0012               	moviw fsr0++
  3607  0FA7  3A25               	xorlw	37
  3608  0FA8  1D03               	btfss	3,2
  3609  0FA9  2FAB               	goto	u5751
  3610  0FAA  2FAC               	goto	u5750
  3611  0FAB                     u5751:	
  3612  0FAB  2FC9               	goto	l4278
  3613  0FAC                     u5750:	
  3614  0FAC                     l4270:	
  3615                           
  3616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3617  0FAC  0020               	movlb	0	; select bank0
  3618  0FAD  086E               	movf	vfpfcnvrt@fmt,w
  3619  0FAE  0086               	movwf	6
  3620  0FAF  3001               	movlw	1	; select bank2/3
  3621  0FB0  0087               	movwf	7
  3622  0FB1  3001               	movlw	1
  3623  0FB2  0781               	addwf	1,f
  3624  0FB3  3141               	addfsr 1,1
  3625  0FB4  1803               	skipnc
  3626  0FB5  0A81               	incf	1,f
  3627  0FB6                     l4272:	
  3628                           
  3629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3630  0FB6  3025               	movlw	37
  3631  0FB7  00F0               	movwf	fputc@c
  3632  0FB8  3000               	movlw	0
  3633  0FB9  00F1               	movwf	fputc@c+1
  3634  0FBA  0022               	movlb	2	; select bank2
  3635  0FBB  082E               	movf	vfpfcnvrt@fp^(0+256),w
  3636  0FBC  0021               	movlb	1	; select bank1
  3637  0FBD  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3638  0FBE  086A               	movf	??_vfpfcnvrt^(0+128),w
  3639  0FBF  00F2               	movwf	fputc@fp
  3640  0FC0  319E  26F7  318C   	fcall	_fputc
  3641  0FC3                     l4274:	
  3642                           
  3643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3644  0FC3  3001               	movlw	1
  3645  0FC4  0020               	movlb	0	; select bank0
  3646  0FC5  00EE               	movwf	?_vfpfcnvrt
  3647  0FC6  3000               	movlw	0
  3648  0FC7  00EF               	movwf	?_vfpfcnvrt+1
  3649  0FC8  2FFF               	goto	l585
  3650  0FC9                     l4278:	
  3651                           
  3652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3653  0FC9  0020               	movlb	0	; select bank0
  3654  0FCA  086E               	movf	vfpfcnvrt@fmt,w
  3655  0FCB  0086               	movwf	6
  3656  0FCC  3001               	movlw	1	; select bank2/3
  3657  0FCD  0087               	movwf	7
  3658  0FCE  3001               	movlw	1
  3659  0FCF  0781               	addwf	1,f
  3660  0FD0  3141               	addfsr 1,1
  3661  0FD1  1803               	skipnc
  3662  0FD2  0A81               	incf	1,f
  3663  0FD3                     l4280:	
  3664                           
  3665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3666  0FD3  01EE               	clrf	?_vfpfcnvrt
  3667  0FD4  01EF               	clrf	?_vfpfcnvrt+1
  3668  0FD5  2FFF               	goto	l585
  3669  0FD6                     l4284:	
  3670                           
  3671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3672  0FD6  0020               	movlb	0	; select bank0
  3673  0FD7  086E               	movf	vfpfcnvrt@fmt,w
  3674  0FD8  0086               	movwf	6
  3675  0FD9  3001               	movlw	1	; select bank2/3
  3676  0FDA  0087               	movwf	7
  3677  0FDB  3F40               	moviw [0]fsr1
  3678  0FDC  0021               	movlb	1	; select bank1
  3679  0FDD  00EA               	movwf	??_vfpfcnvrt^(0+128)
  3680  0FDE  3F41               	moviw [1]fsr1
  3681  0FDF  00EB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3682  0FE0  086A               	movf	??_vfpfcnvrt^(0+128),w
  3683  0FE1  0084               	movwf	4
  3684  0FE2  086B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3685  0FE3  0085               	movwf	5
  3686  0FE4  0800               	movf	0,w	;code access
  3687  0FE5  00EC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3688  0FE6  01ED               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3689  0FE7  086C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3690  0FE8  00F0               	movwf	fputc@c
  3691  0FE9  086D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3692  0FEA  00F1               	movwf	fputc@c+1
  3693  0FEB  0022               	movlb	2	; select bank2
  3694  0FEC  082E               	movf	vfpfcnvrt@fp^(0+256),w
  3695  0FED  0021               	movlb	1	; select bank1
  3696  0FEE  00EE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  3697  0FEF  086E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  3698  0FF0  00F2               	movwf	fputc@fp
  3699  0FF1  319E  26F7  318C   	fcall	_fputc
  3700  0FF4                     l4286:	
  3701                           
  3702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3703  0FF4  0020               	movlb	0	; select bank0
  3704  0FF5  086E               	movf	vfpfcnvrt@fmt,w
  3705  0FF6  0086               	movwf	6
  3706  0FF7  3001               	movlw	1	; select bank2/3
  3707  0FF8  0087               	movwf	7
  3708  0FF9  3001               	movlw	1
  3709  0FFA  0781               	addwf	1,f
  3710  0FFB  3141               	addfsr 1,1
  3711  0FFC  1803               	skipnc
  3712  0FFD  0A81               	incf	1,f
  3713  0FFE  2FC3               	goto	l4274
  3714  0FFF                     l585:	
  3715  0FFF  0008               	return
  3716  1000                     __end_of_vfpfcnvrt:	
  3717                           
  3718                           	psect	text4
  3719  1043                     __ptext4:	
  3720 ;; *************** function _strncmp *****************
  3721 ;; Defined at:
  3722 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  _l              1    wreg     PTR const unsigned char 
  3725 ;;		 -> vfpfcnvrt@ct(3), 
  3726 ;;  _r              2    0[COMMON] PTR const unsigned char 
  3727 ;;		 -> STR_18(3), 
  3728 ;;  n               2    2[COMMON] unsigned int 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  _l              1    5[COMMON] PTR const unsigned char 
  3731 ;;		 -> vfpfcnvrt@ct(3), 
  3732 ;;  r               2    6[COMMON] PTR const unsigned char 
  3733 ;;		 -> STR_18(3), 
  3734 ;;  l               1    8[COMMON] PTR const unsigned char 
  3735 ;;		 -> vfpfcnvrt@ct(3), 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  2    0[COMMON] int 
  3738 ;; Registers used:
  3739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3745 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;Total ram usage:        9 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_vfpfcnvrt
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           
  3759                           ;psect for function _strncmp
  3760  1043                     _strncmp:	
  3761                           
  3762                           ;incstack = 0
  3763                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  3764                           ;strncmp@_l stored from wreg
  3765  1043  00F5               	movwf	strncmp@_l
  3766  1044                     l4106:	
  3767  1044  0875               	movf	strncmp@_l,w
  3768  1045  00F4               	movwf	??_strncmp
  3769  1046  0874               	movf	??_strncmp,w
  3770  1047  00F8               	movwf	strncmp@l
  3771  1048  0871               	movf	strncmp@_r+1,w
  3772  1049  00F7               	movwf	strncmp@r+1
  3773  104A  0870               	movf	strncmp@_r,w
  3774  104B  00F6               	movwf	strncmp@r
  3775  104C                     l4108:	
  3776  104C  3001               	movlw	1
  3777  104D  02F2               	subwf	strncmp@n,f
  3778  104E  3000               	movlw	0
  3779  104F  3BF3               	subwfb	strncmp@n+1,f
  3780  1050  0A72               	incf	strncmp@n,w
  3781  1051  1D03               	skipz
  3782  1052  2857               	goto	u5501
  3783  1053  0A73               	incf	strncmp@n+1,w
  3784  1054  1D03               	btfss	3,2
  3785  1055  2857               	goto	u5501
  3786  1056  2858               	goto	u5500
  3787  1057                     u5501:	
  3788  1057  2867               	goto	l4120
  3789  1058                     u5500:	
  3790  1058                     l4110:	
  3791  1058  01F0               	clrf	?_strncmp
  3792  1059  01F1               	clrf	?_strncmp+1
  3793  105A  289D               	goto	l1174
  3794  105B                     l4114:	
  3795  105B  3001               	movlw	1
  3796  105C  00F4               	movwf	??_strncmp
  3797  105D  0874               	movf	??_strncmp,w
  3798  105E  07F8               	addwf	strncmp@l,f
  3799  105F                     l4116:	
  3800  105F  3001               	movlw	1
  3801  1060  07F6               	addwf	strncmp@r,f
  3802  1061  3000               	movlw	0
  3803  1062  3DF7               	addwfc	strncmp@r+1,f
  3804  1063                     l4118:	
  3805  1063  3001               	movlw	1
  3806  1064  02F2               	subwf	strncmp@n,f
  3807  1065  3000               	movlw	0
  3808  1066  3BF3               	subwfb	strncmp@n+1,f
  3809  1067                     l4120:	
  3810  1067  0878               	movf	strncmp@l,w
  3811  1068  0086               	movwf	6
  3812  1069  3001               	movlw	1	; select bank2/3
  3813  106A  0087               	movwf	7
  3814  106B  0801               	movf	1,w
  3815  106C  1903               	btfsc	3,2
  3816  106D  286F               	goto	u5511
  3817  106E  2870               	goto	u5510
  3818  106F                     u5511:	
  3819  106F  288F               	goto	l4128
  3820  1070                     u5510:	
  3821  1070                     l4122:	
  3822  1070  0876               	movf	strncmp@r,w
  3823  1071  0084               	movwf	4
  3824  1072  0877               	movf	strncmp@r+1,w
  3825  1073  0085               	movwf	5
  3826  1074  0012               	moviw fsr0++
  3827  1075  1903               	btfsc	3,2
  3828  1076  2878               	goto	u5521
  3829  1077  2879               	goto	u5520
  3830  1078                     u5521:	
  3831  1078  288F               	goto	l4128
  3832  1079                     u5520:	
  3833  1079                     l4124:	
  3834  1079  0872               	movf	strncmp@n,w
  3835  107A  0473               	iorwf	strncmp@n+1,w
  3836  107B  1903               	btfsc	3,2
  3837  107C  287E               	goto	u5531
  3838  107D  287F               	goto	u5530
  3839  107E                     u5531:	
  3840  107E  288F               	goto	l4128
  3841  107F                     u5530:	
  3842  107F                     l4126:	
  3843  107F  0876               	movf	strncmp@r,w
  3844  1080  0084               	movwf	4
  3845  1081  0877               	movf	strncmp@r+1,w
  3846  1082  0085               	movwf	5
  3847  1083  0800               	movf	0,w	;code access
  3848  1084  00F4               	movwf	??_strncmp
  3849  1085  0878               	movf	strncmp@l,w
  3850  1086  0086               	movwf	6
  3851  1087  3001               	movlw	1	; select bank2/3
  3852  1088  0087               	movwf	7
  3853  1089  0801               	movf	1,w
  3854  108A  0674               	xorwf	??_strncmp,w
  3855  108B  1903               	skipnz
  3856  108C  288E               	goto	u5541
  3857  108D  288F               	goto	u5540
  3858  108E                     u5541:	
  3859  108E  285B               	goto	l4114
  3860  108F                     u5540:	
  3861  108F                     l4128:	
  3862  108F  0878               	movf	strncmp@l,w
  3863  1090  0086               	movwf	6
  3864  1091  3001               	movlw	1	; select bank2/3
  3865  1092  0087               	movwf	7
  3866  1093  0876               	movf	strncmp@r,w
  3867  1094  0084               	movwf	4
  3868  1095  0877               	movf	strncmp@r+1,w
  3869  1096  0085               	movwf	5
  3870  1097  0800               	movf	0,w	;code access
  3871  1098  0201               	subwf	1,w
  3872  1099  00F0               	movwf	?_strncmp
  3873  109A  01F1               	clrf	?_strncmp+1
  3874  109B  1C03               	skipc
  3875  109C  03F1               	decf	?_strncmp+1,f
  3876  109D                     l1174:	
  3877  109D  0008               	return
  3878  109E                     __end_of_strncmp:	
  3879                           
  3880                           	psect	text5
  3881  00FB                     __ptext5:	
  3882 ;; *************** function _efgtoa *****************
  3883 ;; Defined at:
  3884 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  fp              1    wreg     PTR struct _IO_FILE
  3887 ;;		 -> sprintf@f(5), 
  3888 ;;  f               4    8[BANK1 ] PTR struct _IO_FILE
  3889 ;;  c               1   12[BANK1 ] unsigned char 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  fp              1   45[BANK1 ] PTR struct _IO_FILE
  3892 ;;		 -> sprintf@f(5), 
  3893 ;;  u               4   70[BANK1 ] PTR struct _IO_FILE
  3894 ;;  g               4   62[BANK1 ] PTR struct _IO_FILE
  3895 ;;  l               4   56[BANK1 ] PTR struct _IO_FILE
  3896 ;;  h               4   52[BANK1 ] PTR struct _IO_FILE
  3897 ;;  ou              4   17[BANK1 ] PTR struct _IO_FILE
  3898 ;;  n               2   68[BANK1 ] int 
  3899 ;;  e               2   66[BANK1 ] int 
  3900 ;;  i               2   60[BANK1 ] int 
  3901 ;;  w               2   49[BANK1 ] int 
  3902 ;;  p               2   46[BANK1 ] int 
  3903 ;;  sign            2   43[BANK1 ] int 
  3904 ;;  d               2   41[BANK1 ] int 
  3905 ;;  ne              2   39[BANK1 ] int 
  3906 ;;  m               2   37[BANK1 ] int 
  3907 ;;  pp              2   35[BANK1 ] int 
  3908 ;;  t               2   33[BANK1 ] int 
  3909 ;;  mode            1   51[BANK1 ] unsigned char 
  3910 ;;  nmode           1   48[BANK1 ] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  2    8[BANK1 ] int 
  3913 ;; Registers used:
  3914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3920 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3921 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3923 ;;      Totals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0
  3924 ;;Total ram usage:       66 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    4
  3927 ;; This function calls:
  3928 ;;		___awdiv
  3929 ;;		___awmod
  3930 ;;		___fladd
  3931 ;;		___fldiv
  3932 ;;		___fleq
  3933 ;;		___flge
  3934 ;;		___flmul
  3935 ;;		___flneg
  3936 ;;		___flsub
  3937 ;;		___fltol
  3938 ;;		___fpclassifyf
  3939 ;;		_floorf
  3940 ;;		_isupper
  3941 ;;		_pad
  3942 ;;		_strcpy
  3943 ;;		_tolower
  3944 ;; This function is called by:
  3945 ;;		_vfpfcnvrt
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           
  3950                           ;psect for function _efgtoa
  3951  00FB                     _efgtoa:	
  3952                           
  3953                           ;incstack = 0
  3954                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3955                           ;efgtoa@fp stored from wreg
  3956  00FB  0021               	movlb	1	; select bank1
  3957  00FC  00CD               	movwf	efgtoa@fp^(0+128)
  3958  00FD                     l3768:	
  3959                           
  3960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3961  00FD  01CB               	clrf	efgtoa@sign^(0+128)
  3962  00FE  01CC               	clrf	(efgtoa@sign+1)^(0+128)
  3963  00FF                     l3770:	
  3964                           
  3965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3966  00FF  082B               	movf	(efgtoa@f+3)^(0+128),w
  3967  0100  00E1               	movwf	(efgtoa@g+3)^(0+128)
  3968  0101  082A               	movf	(efgtoa@f+2)^(0+128),w
  3969  0102  00E0               	movwf	(efgtoa@g+2)^(0+128)
  3970  0103  0829               	movf	(efgtoa@f+1)^(0+128),w
  3971  0104  00DF               	movwf	(efgtoa@g+1)^(0+128)
  3972  0105  0828               	movf	efgtoa@f^(0+128),w
  3973  0106  00DE               	movwf	efgtoa@g^(0+128)
  3974  0107                     l3772:	
  3975                           
  3976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3977  0107  0861               	movf	(efgtoa@g+3)^(0+128),w
  3978  0108  0020               	movlb	0	; select bank0
  3979  0109  00C3               	movwf	___flge@ff1+3
  3980  010A  0021               	movlb	1	; select bank1
  3981  010B  0860               	movf	(efgtoa@g+2)^(0+128),w
  3982  010C  0020               	movlb	0	; select bank0
  3983  010D  00C2               	movwf	___flge@ff1+2
  3984  010E  0021               	movlb	1	; select bank1
  3985  010F  085F               	movf	(efgtoa@g+1)^(0+128),w
  3986  0110  0020               	movlb	0	; select bank0
  3987  0111  00C1               	movwf	___flge@ff1+1
  3988  0112  0021               	movlb	1	; select bank1
  3989  0113  085E               	movf	efgtoa@g^(0+128),w
  3990  0114  0020               	movlb	0	; select bank0
  3991  0115  00C0               	movwf	___flge@ff1
  3992  0116  3000               	movlw	0
  3993  0117  00C7               	movwf	___flge@ff2+3
  3994  0118  3000               	movlw	0
  3995  0119  00C6               	movwf	___flge@ff2+2
  3996  011A  3000               	movlw	0
  3997  011B  00C5               	movwf	___flge@ff2+1
  3998  011C  3000               	movlw	0
  3999  011D  00C4               	movwf	___flge@ff2
  4000  011E  3192  224C  3180   	fcall	___flge
  4001  0121  1803               	btfsc	3,0
  4002  0122  2924               	goto	u4911
  4003  0123  2925               	goto	u4910
  4004  0124                     u4911:	
  4005  0124  293E               	goto	l3778
  4006  0125                     u4910:	
  4007  0125                     l3774:	
  4008                           
  4009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  4010  0125  3001               	movlw	1
  4011  0126  0021               	movlb	1	; select bank1
  4012  0127  00CB               	movwf	efgtoa@sign^(0+128)
  4013  0128  3000               	movlw	0
  4014  0129  00CC               	movwf	(efgtoa@sign^(0+128)+1)
  4015  012A                     l3776:	
  4016                           
  4017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  4018  012A  0861               	movf	(efgtoa@g+3)^(0+128),w
  4019  012B  00F3               	movwf	___flneg@f1+3
  4020  012C  0860               	movf	(efgtoa@g+2)^(0+128),w
  4021  012D  00F2               	movwf	___flneg@f1+2
  4022  012E  085F               	movf	(efgtoa@g+1)^(0+128),w
  4023  012F  00F1               	movwf	___flneg@f1+1
  4024  0130  085E               	movf	efgtoa@g^(0+128),w
  4025  0131  00F0               	movwf	___flneg@f1
  4026  0132  319A  22DC  3180   	fcall	___flneg
  4027  0135  0873               	movf	?___flneg+3,w
  4028  0136  0021               	movlb	1	; select bank1
  4029  0137  00E1               	movwf	(efgtoa@g+3)^(0+128)
  4030  0138  0872               	movf	?___flneg+2,w
  4031  0139  00E0               	movwf	(efgtoa@g+2)^(0+128)
  4032  013A  0871               	movf	?___flneg+1,w
  4033  013B  00DF               	movwf	(efgtoa@g+1)^(0+128)
  4034  013C  0870               	movf	?___flneg,w
  4035  013D  00DE               	movwf	efgtoa@g^(0+128)
  4036  013E                     l3778:	
  4037                           
  4038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  4039  013E  0021               	movlb	1	; select bank1
  4040  013F  01E4               	clrf	efgtoa@n^(0+128)
  4041  0140  01E5               	clrf	(efgtoa@n+1)^(0+128)
  4042  0141                     l3780:	
  4043                           
  4044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  4045  0141  0022               	movlb	2	; select bank2
  4046  0142  0864               	movf	(_width+1)^(0+256),w
  4047  0143  0021               	movlb	1	; select bank1
  4048  0144  00D2               	movwf	(efgtoa@w+1)^(0+128)
  4049  0145  0022               	movlb	2	; select bank2
  4050  0146  0863               	movf	_width^(0+256),w
  4051  0147  0021               	movlb	1	; select bank1
  4052  0148  00D1               	movwf	efgtoa@w^(0+128)
  4053  0149                     l3782:	
  4054                           
  4055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  4056  0149  084B               	movf	efgtoa@sign^(0+128),w
  4057  014A  044C               	iorwf	(efgtoa@sign+1)^(0+128),w
  4058  014B  1D03               	btfss	3,2
  4059  014C  294E               	goto	u4921
  4060  014D  294F               	goto	u4920
  4061  014E                     u4921:	
  4062  014E  2954               	goto	l3786
  4063  014F                     u4920:	
  4064  014F                     l3784:	
  4065  014F  0022               	movlb	2	; select bank2
  4066  0150  1D67               	btfss	_flags^(0+256),2
  4067  0151  2953               	goto	u4931
  4068  0152  2954               	goto	u4930
  4069  0153                     u4931:	
  4070  0153  2972               	goto	l3798
  4071  0154                     u4930:	
  4072  0154                     l3786:	
  4073                           
  4074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  4075  0154  0021               	movlb	1	; select bank1
  4076  0155  084B               	movf	efgtoa@sign^(0+128),w
  4077  0156  044C               	iorwf	(efgtoa@sign+1)^(0+128),w
  4078  0157  1D03               	btfss	3,2
  4079  0158  295A               	goto	u4941
  4080  0159  295B               	goto	u4940
  4081  015A                     u4941:	
  4082  015A  2960               	goto	l3790
  4083  015B                     u4940:	
  4084  015B                     l3788:	
  4085  015B  302B               	movlw	43
  4086  015C  00B5               	movwf	_efgtoa$815^(0+128)
  4087  015D  3000               	movlw	0
  4088  015E  00B6               	movwf	(_efgtoa$815^(0+128)+1)
  4089  015F  2964               	goto	l3792
  4090  0160                     l3790:	
  4091  0160  302D               	movlw	45
  4092  0161  00B5               	movwf	_efgtoa$815^(0+128)
  4093  0162  3000               	movlw	0
  4094  0163  00B6               	movwf	(_efgtoa$815^(0+128)+1)
  4095  0164                     l3792:	
  4096  0164  0835               	movf	_efgtoa$815^(0+128),w
  4097  0165  00AD               	movwf	??_efgtoa^(0+128)
  4098  0166  082D               	movf	??_efgtoa^(0+128),w
  4099  0167  0024               	movlb	4	; select bank4
  4100  0168  00A0               	movwf	_dbuf^(0+512)
  4101  0169                     l3794:	
  4102                           
  4103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  4104  0169  3001               	movlw	1
  4105  016A  0021               	movlb	1	; select bank1
  4106  016B  07E4               	addwf	efgtoa@n^(0+128),f
  4107  016C  3000               	movlw	0
  4108  016D  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  4109  016E                     l3796:	
  4110                           
  4111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  4112  016E  30FF               	movlw	255
  4113  016F  07D1               	addwf	efgtoa@w^(0+128),f
  4114  0170  30FF               	movlw	255
  4115  0171  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  4116  0172                     l3798:	
  4117                           
  4118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4119  0172  0021               	movlb	1	; select bank1
  4120  0173  0861               	movf	(efgtoa@g+3)^(0+128),w
  4121  0174  00F3               	movwf	___fpclassifyf@x+3
  4122  0175  0860               	movf	(efgtoa@g+2)^(0+128),w
  4123  0176  00F2               	movwf	___fpclassifyf@x+2
  4124  0177  085F               	movf	(efgtoa@g+1)^(0+128),w
  4125  0178  00F1               	movwf	___fpclassifyf@x+1
  4126  0179  085E               	movf	efgtoa@g^(0+128),w
  4127  017A  00F0               	movwf	___fpclassifyf@x
  4128  017B  3191  21CD  3180   	fcall	___fpclassifyf
  4129  017E  0370               	decf	?___fpclassifyf,w
  4130  017F  0471               	iorwf	?___fpclassifyf+1,w
  4131  0180  1D03               	btfss	3,2
  4132  0181  2983               	goto	u4951
  4133  0182  2984               	goto	u4950
  4134  0183                     u4951:	
  4135  0183  29D6               	goto	l3816
  4136  0184                     u4950:	
  4137  0184                     l3800:	
  4138  0184  0021               	movlb	1	; select bank1
  4139  0185  082C               	movf	efgtoa@c^(0+128),w
  4140  0186  3EBF               	addlw	191
  4141  0187  00AD               	movwf	??_efgtoa^(0+128)
  4142  0188  30FF               	movlw	255
  4143  0189  1803               	skipnc
  4144  018A  3000               	movlw	0
  4145  018B  00AE               	movwf	(??_efgtoa^(0+128)+1)
  4146  018C  3000               	movlw	0
  4147  018D  022E               	subwf	(??_efgtoa+1)^(0+128),w
  4148  018E  301A               	movlw	26
  4149  018F  1903               	skipnz
  4150  0190  022D               	subwf	??_efgtoa^(0+128),w
  4151  0191  1C03               	skipc
  4152  0192  2994               	goto	u4961
  4153  0193  2996               	goto	u4960
  4154  0194                     u4961:	
  4155  0194  3001               	movlw	1
  4156  0195  2997               	goto	u4970
  4157  0196                     u4960:	
  4158  0196  3000               	movlw	0
  4159  0197                     u4970:	
  4160  0197  00AF               	movwf	(??_efgtoa+2)^(0+128)
  4161  0198  01B0               	clrf	((??_efgtoa+2)^(0+128)+1)
  4162  0199  082F               	movf	(??_efgtoa+2)^(0+128),w
  4163  019A  00B7               	movwf	_efgtoa$816^(0+128)
  4164  019B  0830               	movf	(??_efgtoa+3)^(0+128),w
  4165  019C  00B8               	movwf	(_efgtoa$816+1)^(0+128)
  4166  019D                     l3804:	
  4167  019D  0837               	movf	_efgtoa$816^(0+128),w
  4168  019E  0438               	iorwf	(_efgtoa$816+1)^(0+128),w
  4169  019F  1903               	btfsc	3,2
  4170  01A0  29A2               	goto	u4981
  4171  01A1  29A3               	goto	u4980
  4172  01A2                     u4981:	
  4173  01A2  29AD               	goto	l3808
  4174  01A3                     u4980:	
  4175  01A3                     l3806:	
  4176                           
  4177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  4178  01A3  3011               	movlw	low (STR_8| (0+32768))
  4179  01A4  00F0               	movwf	strcpy@src
  4180  01A5  3098               	movlw	high (STR_8| (0+32768))
  4181  01A6  00F1               	movwf	strcpy@src+1
  4182  01A7  0864               	movf	efgtoa@n^(0+128),w
  4183  01A8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4184  01A9  319B  23CD  3180   	fcall	_strcpy
  4185                           
  4186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  4187  01AC  29B6               	goto	l3810
  4188  01AD                     l3808:	
  4189                           
  4190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  4191  01AD  3019               	movlw	low (STR_9| (0+32768))
  4192  01AE  00F0               	movwf	strcpy@src
  4193  01AF  3098               	movlw	high (STR_9| (0+32768))
  4194  01B0  00F1               	movwf	strcpy@src+1
  4195  01B1  0864               	movf	efgtoa@n^(0+128),w
  4196  01B2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4197  01B3  319B  23CD  3180   	fcall	_strcpy
  4198  01B6                     l3810:	
  4199                           
  4200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4201  01B6  30FD               	movlw	253
  4202  01B7  0021               	movlb	1	; select bank1
  4203  01B8  07D1               	addwf	efgtoa@w^(0+128),f
  4204  01B9  30FF               	movlw	255
  4205  01BA  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  4206  01BB                     l3812:	
  4207                           
  4208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  4209  01BB  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  4210  01BC  00AD               	movwf	??_efgtoa^(0+128)
  4211  01BD  082D               	movf	??_efgtoa^(0+128),w
  4212  01BE  0020               	movlb	0	; select bank0
  4213  01BF  00A4               	movwf	pad@buf
  4214  01C0  0021               	movlb	1	; select bank1
  4215  01C1  0852               	movf	(efgtoa@w+1)^(0+128),w
  4216  01C2  0020               	movlb	0	; select bank0
  4217  01C3  00A6               	movwf	pad@p+1
  4218  01C4  0021               	movlb	1	; select bank1
  4219  01C5  0851               	movf	efgtoa@w^(0+128),w
  4220  01C6  0020               	movlb	0	; select bank0
  4221  01C7  00A5               	movwf	pad@p
  4222  01C8  0021               	movlb	1	; select bank1
  4223  01C9  084D               	movf	efgtoa@fp^(0+128),w
  4224  01CA  319F  274D  3180   	fcall	_pad
  4225  01CD  0020               	movlb	0	; select bank0
  4226  01CE  0825               	movf	?_pad+1,w
  4227  01CF  0021               	movlb	1	; select bank1
  4228  01D0  00A9               	movwf	(?_efgtoa+1)^(0+128)
  4229  01D1  0020               	movlb	0	; select bank0
  4230  01D2  0824               	movf	?_pad,w
  4231  01D3  0021               	movlb	1	; select bank1
  4232  01D4  00A8               	movwf	?_efgtoa^(0+128)
  4233  01D5  2FDF               	goto	l485
  4234  01D6                     l3816:	
  4235                           
  4236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4237  01D6  0021               	movlb	1	; select bank1
  4238  01D7  0861               	movf	(efgtoa@g+3)^(0+128),w
  4239  01D8  00F3               	movwf	___fpclassifyf@x+3
  4240  01D9  0860               	movf	(efgtoa@g+2)^(0+128),w
  4241  01DA  00F2               	movwf	___fpclassifyf@x+2
  4242  01DB  085F               	movf	(efgtoa@g+1)^(0+128),w
  4243  01DC  00F1               	movwf	___fpclassifyf@x+1
  4244  01DD  085E               	movf	efgtoa@g^(0+128),w
  4245  01DE  00F0               	movwf	___fpclassifyf@x
  4246  01DF  3191  21CD  3180   	fcall	___fpclassifyf
  4247  01E2  0870               	movf	?___fpclassifyf,w
  4248  01E3  0471               	iorwf	?___fpclassifyf+1,w
  4249  01E4  1D03               	btfss	3,2
  4250  01E5  29E7               	goto	u4991
  4251  01E6  29E8               	goto	u4990
  4252  01E7                     u4991:	
  4253  01E7  2A3A               	goto	l3834
  4254  01E8                     u4990:	
  4255  01E8                     l3818:	
  4256  01E8  0021               	movlb	1	; select bank1
  4257  01E9  082C               	movf	efgtoa@c^(0+128),w
  4258  01EA  3EBF               	addlw	191
  4259  01EB  00AD               	movwf	??_efgtoa^(0+128)
  4260  01EC  30FF               	movlw	255
  4261  01ED  1803               	skipnc
  4262  01EE  3000               	movlw	0
  4263  01EF  00AE               	movwf	(??_efgtoa^(0+128)+1)
  4264  01F0  3000               	movlw	0
  4265  01F1  022E               	subwf	(??_efgtoa+1)^(0+128),w
  4266  01F2  301A               	movlw	26
  4267  01F3  1903               	skipnz
  4268  01F4  022D               	subwf	??_efgtoa^(0+128),w
  4269  01F5  1C03               	skipc
  4270  01F6  29F8               	goto	u5001
  4271  01F7  29FA               	goto	u5000
  4272  01F8                     u5001:	
  4273  01F8  3001               	movlw	1
  4274  01F9  29FB               	goto	u5010
  4275  01FA                     u5000:	
  4276  01FA  3000               	movlw	0
  4277  01FB                     u5010:	
  4278  01FB  00AF               	movwf	(??_efgtoa+2)^(0+128)
  4279  01FC  01B0               	clrf	((??_efgtoa+2)^(0+128)+1)
  4280  01FD  082F               	movf	(??_efgtoa+2)^(0+128),w
  4281  01FE  00B9               	movwf	_efgtoa$821^(0+128)
  4282  01FF  0830               	movf	(??_efgtoa+3)^(0+128),w
  4283  0200  00BA               	movwf	(_efgtoa$821+1)^(0+128)
  4284  0201                     l3822:	
  4285  0201  0839               	movf	_efgtoa$821^(0+128),w
  4286  0202  043A               	iorwf	(_efgtoa$821+1)^(0+128),w
  4287  0203  1903               	btfsc	3,2
  4288  0204  2A06               	goto	u5021
  4289  0205  2A07               	goto	u5020
  4290  0206                     u5021:	
  4291  0206  2A11               	goto	l3826
  4292  0207                     u5020:	
  4293  0207                     l3824:	
  4294                           
  4295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4296  0207  3015               	movlw	low (STR_12| (0+32768))
  4297  0208  00F0               	movwf	strcpy@src
  4298  0209  3098               	movlw	high (STR_12| (0+32768))
  4299  020A  00F1               	movwf	strcpy@src+1
  4300  020B  0864               	movf	efgtoa@n^(0+128),w
  4301  020C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4302  020D  319B  23CD  3180   	fcall	_strcpy
  4303                           
  4304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4305  0210  2A1A               	goto	l3828
  4306  0211                     l3826:	
  4307                           
  4308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4309  0211  301D               	movlw	low (STR_13| (0+32768))
  4310  0212  00F0               	movwf	strcpy@src
  4311  0213  3098               	movlw	high (STR_13| (0+32768))
  4312  0214  00F1               	movwf	strcpy@src+1
  4313  0215  0864               	movf	efgtoa@n^(0+128),w
  4314  0216  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4315  0217  319B  23CD  3180   	fcall	_strcpy
  4316  021A                     l3828:	
  4317                           
  4318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4319  021A  30FD               	movlw	253
  4320  021B  0021               	movlb	1	; select bank1
  4321  021C  07D1               	addwf	efgtoa@w^(0+128),f
  4322  021D  30FF               	movlw	255
  4323  021E  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  4324  021F                     l3830:	
  4325                           
  4326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  4327  021F  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  4328  0220  00AD               	movwf	??_efgtoa^(0+128)
  4329  0221  082D               	movf	??_efgtoa^(0+128),w
  4330  0222  0020               	movlb	0	; select bank0
  4331  0223  00A4               	movwf	pad@buf
  4332  0224  0021               	movlb	1	; select bank1
  4333  0225  0852               	movf	(efgtoa@w+1)^(0+128),w
  4334  0226  0020               	movlb	0	; select bank0
  4335  0227  00A6               	movwf	pad@p+1
  4336  0228  0021               	movlb	1	; select bank1
  4337  0229  0851               	movf	efgtoa@w^(0+128),w
  4338  022A  0020               	movlb	0	; select bank0
  4339  022B  00A5               	movwf	pad@p
  4340  022C  0021               	movlb	1	; select bank1
  4341  022D  084D               	movf	efgtoa@fp^(0+128),w
  4342  022E  319F  274D  3180   	fcall	_pad
  4343  0231  0020               	movlb	0	; select bank0
  4344  0232  0825               	movf	?_pad+1,w
  4345  0233  0021               	movlb	1	; select bank1
  4346  0234  00A9               	movwf	(?_efgtoa+1)^(0+128)
  4347  0235  0020               	movlb	0	; select bank0
  4348  0236  0824               	movf	?_pad,w
  4349  0237  0021               	movlb	1	; select bank1
  4350  0238  00A8               	movwf	?_efgtoa^(0+128)
  4351  0239  2FDF               	goto	l485
  4352  023A                     l3834:	
  4353                           
  4354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4355  023A  303F               	movlw	63
  4356  023B  0021               	movlb	1	; select bank1
  4357  023C  00E9               	movwf	(efgtoa@u+3)^(0+128)
  4358  023D  3080               	movlw	128
  4359  023E  00E8               	movwf	(efgtoa@u+2)^(0+128)
  4360  023F  3000               	movlw	0
  4361  0240  00E7               	movwf	(efgtoa@u+1)^(0+128)
  4362  0241  3000               	movlw	0
  4363  0242  00E6               	movwf	efgtoa@u^(0+128)
  4364  0243                     l3836:	
  4365                           
  4366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4367  0243  01E2               	clrf	efgtoa@e^(0+128)
  4368  0244  01E3               	clrf	(efgtoa@e+1)^(0+128)
  4369  0245                     l3838:	
  4370                           
  4371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4372  0245  0861               	movf	(efgtoa@g+3)^(0+128),w
  4373  0246  00F3               	movwf	___fleq@ff1+3
  4374  0247  0860               	movf	(efgtoa@g+2)^(0+128),w
  4375  0248  00F2               	movwf	___fleq@ff1+2
  4376  0249  085F               	movf	(efgtoa@g+1)^(0+128),w
  4377  024A  00F1               	movwf	___fleq@ff1+1
  4378  024B  085E               	movf	efgtoa@g^(0+128),w
  4379  024C  00F0               	movwf	___fleq@ff1
  4380  024D  3000               	movlw	0
  4381  024E  00F7               	movwf	___fleq@ff2+3
  4382  024F  3000               	movlw	0
  4383  0250  00F6               	movwf	___fleq@ff2+2
  4384  0251  3000               	movlw	0
  4385  0252  00F5               	movwf	___fleq@ff2+1
  4386  0253  3000               	movlw	0
  4387  0254  00F4               	movwf	___fleq@ff2
  4388  0255  319E  26A9  3180   	fcall	___fleq
  4389  0258  1803               	btfsc	3,0
  4390  0259  2A5B               	goto	u5031
  4391  025A  2A5C               	goto	u5030
  4392  025B                     u5031:	
  4393  025B  2B20               	goto	l3854
  4394  025C                     u5030:	
  4395  025C  2A8D               	goto	l3846
  4396  025D                     l3842:	
  4397                           
  4398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4399  025D  3041               	movlw	65
  4400  025E  0020               	movlb	0	; select bank0
  4401  025F  00A9               	movwf	___flmul@b+3
  4402  0260  3020               	movlw	32
  4403  0261  00A8               	movwf	___flmul@b+2
  4404  0262  3000               	movlw	0
  4405  0263  00A7               	movwf	___flmul@b+1
  4406  0264  3000               	movlw	0
  4407  0265  00A6               	movwf	___flmul@b
  4408  0266  0021               	movlb	1	; select bank1
  4409  0267  0869               	movf	(efgtoa@u+3)^(0+128),w
  4410  0268  0020               	movlb	0	; select bank0
  4411  0269  00AD               	movwf	___flmul@a+3
  4412  026A  0021               	movlb	1	; select bank1
  4413  026B  0868               	movf	(efgtoa@u+2)^(0+128),w
  4414  026C  0020               	movlb	0	; select bank0
  4415  026D  00AC               	movwf	___flmul@a+2
  4416  026E  0021               	movlb	1	; select bank1
  4417  026F  0867               	movf	(efgtoa@u+1)^(0+128),w
  4418  0270  0020               	movlb	0	; select bank0
  4419  0271  00AB               	movwf	___flmul@a+1
  4420  0272  0021               	movlb	1	; select bank1
  4421  0273  0866               	movf	efgtoa@u^(0+128),w
  4422  0274  0020               	movlb	0	; select bank0
  4423  0275  00AA               	movwf	___flmul@a
  4424  0276  318A  228B  3180   	fcall	___flmul
  4425  0279  0020               	movlb	0	; select bank0
  4426  027A  0829               	movf	?___flmul+3,w
  4427  027B  0021               	movlb	1	; select bank1
  4428  027C  00E9               	movwf	(efgtoa@u+3)^(0+128)
  4429  027D  0020               	movlb	0	; select bank0
  4430  027E  0828               	movf	?___flmul+2,w
  4431  027F  0021               	movlb	1	; select bank1
  4432  0280  00E8               	movwf	(efgtoa@u+2)^(0+128)
  4433  0281  0020               	movlb	0	; select bank0
  4434  0282  0827               	movf	?___flmul+1,w
  4435  0283  0021               	movlb	1	; select bank1
  4436  0284  00E7               	movwf	(efgtoa@u+1)^(0+128)
  4437  0285  0020               	movlb	0	; select bank0
  4438  0286  0826               	movf	?___flmul,w
  4439  0287  0021               	movlb	1	; select bank1
  4440  0288  00E6               	movwf	efgtoa@u^(0+128)
  4441  0289                     l3844:	
  4442                           
  4443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4444  0289  3001               	movlw	1
  4445  028A  07E2               	addwf	efgtoa@e^(0+128),f
  4446  028B  3000               	movlw	0
  4447  028C  3DE3               	addwfc	(efgtoa@e+1)^(0+128),f
  4448  028D                     l3846:	
  4449                           
  4450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4451  028D  0021               	movlb	1	; select bank1
  4452  028E  0861               	movf	(efgtoa@g+3)^(0+128),w
  4453  028F  0020               	movlb	0	; select bank0
  4454  0290  00C3               	movwf	___flge@ff1+3
  4455  0291  0021               	movlb	1	; select bank1
  4456  0292  0860               	movf	(efgtoa@g+2)^(0+128),w
  4457  0293  0020               	movlb	0	; select bank0
  4458  0294  00C2               	movwf	___flge@ff1+2
  4459  0295  0021               	movlb	1	; select bank1
  4460  0296  085F               	movf	(efgtoa@g+1)^(0+128),w
  4461  0297  0020               	movlb	0	; select bank0
  4462  0298  00C1               	movwf	___flge@ff1+1
  4463  0299  0021               	movlb	1	; select bank1
  4464  029A  085E               	movf	efgtoa@g^(0+128),w
  4465  029B  0020               	movlb	0	; select bank0
  4466  029C  00C0               	movwf	___flge@ff1
  4467  029D  3041               	movlw	65
  4468  029E  00A9               	movwf	___flmul@b+3
  4469  029F  3020               	movlw	32
  4470  02A0  00A8               	movwf	___flmul@b+2
  4471  02A1  3000               	movlw	0
  4472  02A2  00A7               	movwf	___flmul@b+1
  4473  02A3  3000               	movlw	0
  4474  02A4  00A6               	movwf	___flmul@b
  4475  02A5  0021               	movlb	1	; select bank1
  4476  02A6  0869               	movf	(efgtoa@u+3)^(0+128),w
  4477  02A7  0020               	movlb	0	; select bank0
  4478  02A8  00AD               	movwf	___flmul@a+3
  4479  02A9  0021               	movlb	1	; select bank1
  4480  02AA  0868               	movf	(efgtoa@u+2)^(0+128),w
  4481  02AB  0020               	movlb	0	; select bank0
  4482  02AC  00AC               	movwf	___flmul@a+2
  4483  02AD  0021               	movlb	1	; select bank1
  4484  02AE  0867               	movf	(efgtoa@u+1)^(0+128),w
  4485  02AF  0020               	movlb	0	; select bank0
  4486  02B0  00AB               	movwf	___flmul@a+1
  4487  02B1  0021               	movlb	1	; select bank1
  4488  02B2  0866               	movf	efgtoa@u^(0+128),w
  4489  02B3  0020               	movlb	0	; select bank0
  4490  02B4  00AA               	movwf	___flmul@a
  4491  02B5  318A  228B  3180   	fcall	___flmul
  4492  02B8  0020               	movlb	0	; select bank0
  4493  02B9  0829               	movf	?___flmul+3,w
  4494  02BA  00C7               	movwf	___flge@ff2+3
  4495  02BB  0828               	movf	?___flmul+2,w
  4496  02BC  00C6               	movwf	___flge@ff2+2
  4497  02BD  0827               	movf	?___flmul+1,w
  4498  02BE  00C5               	movwf	___flge@ff2+1
  4499  02BF  0826               	movf	?___flmul,w
  4500  02C0  00C4               	movwf	___flge@ff2
  4501  02C1  3192  224C  3180   	fcall	___flge
  4502  02C4  1803               	btfsc	3,0
  4503  02C5  2AC7               	goto	u5041
  4504  02C6  2AC8               	goto	u5040
  4505  02C7                     u5041:	
  4506  02C7  2A5D               	goto	l3842
  4507  02C8                     u5040:	
  4508  02C8  2AF9               	goto	l3852
  4509  02C9                     l3848:	
  4510                           
  4511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4512  02C9  3041               	movlw	65
  4513  02CA  0020               	movlb	0	; select bank0
  4514  02CB  00C3               	movwf	___fldiv@a+3
  4515  02CC  3020               	movlw	32
  4516  02CD  00C2               	movwf	___fldiv@a+2
  4517  02CE  3000               	movlw	0
  4518  02CF  00C1               	movwf	___fldiv@a+1
  4519  02D0  3000               	movlw	0
  4520  02D1  00C0               	movwf	___fldiv@a
  4521  02D2  0021               	movlb	1	; select bank1
  4522  02D3  0869               	movf	(efgtoa@u+3)^(0+128),w
  4523  02D4  0020               	movlb	0	; select bank0
  4524  02D5  00C7               	movwf	___fldiv@b+3
  4525  02D6  0021               	movlb	1	; select bank1
  4526  02D7  0868               	movf	(efgtoa@u+2)^(0+128),w
  4527  02D8  0020               	movlb	0	; select bank0
  4528  02D9  00C6               	movwf	___fldiv@b+2
  4529  02DA  0021               	movlb	1	; select bank1
  4530  02DB  0867               	movf	(efgtoa@u+1)^(0+128),w
  4531  02DC  0020               	movlb	0	; select bank0
  4532  02DD  00C5               	movwf	___fldiv@b+1
  4533  02DE  0021               	movlb	1	; select bank1
  4534  02DF  0866               	movf	efgtoa@u^(0+128),w
  4535  02E0  0020               	movlb	0	; select bank0
  4536  02E1  00C4               	movwf	___fldiv@b
  4537  02E2  3194  2433  3180   	fcall	___fldiv
  4538  02E5  0020               	movlb	0	; select bank0
  4539  02E6  0843               	movf	?___fldiv+3,w
  4540  02E7  0021               	movlb	1	; select bank1
  4541  02E8  00E9               	movwf	(efgtoa@u+3)^(0+128)
  4542  02E9  0020               	movlb	0	; select bank0
  4543  02EA  0842               	movf	?___fldiv+2,w
  4544  02EB  0021               	movlb	1	; select bank1
  4545  02EC  00E8               	movwf	(efgtoa@u+2)^(0+128)
  4546  02ED  0020               	movlb	0	; select bank0
  4547  02EE  0841               	movf	?___fldiv+1,w
  4548  02EF  0021               	movlb	1	; select bank1
  4549  02F0  00E7               	movwf	(efgtoa@u+1)^(0+128)
  4550  02F1  0020               	movlb	0	; select bank0
  4551  02F2  0840               	movf	?___fldiv,w
  4552  02F3  0021               	movlb	1	; select bank1
  4553  02F4  00E6               	movwf	efgtoa@u^(0+128)
  4554  02F5                     l3850:	
  4555                           
  4556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4557  02F5  30FF               	movlw	255
  4558  02F6  07E2               	addwf	efgtoa@e^(0+128),f
  4559  02F7  30FF               	movlw	255
  4560  02F8  3DE3               	addwfc	(efgtoa@e+1)^(0+128),f
  4561  02F9                     l3852:	
  4562                           
  4563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4564  02F9  0021               	movlb	1	; select bank1
  4565  02FA  0861               	movf	(efgtoa@g+3)^(0+128),w
  4566  02FB  0020               	movlb	0	; select bank0
  4567  02FC  00C3               	movwf	___flge@ff1+3
  4568  02FD  0021               	movlb	1	; select bank1
  4569  02FE  0860               	movf	(efgtoa@g+2)^(0+128),w
  4570  02FF  0020               	movlb	0	; select bank0
  4571  0300  00C2               	movwf	___flge@ff1+2
  4572  0301  0021               	movlb	1	; select bank1
  4573  0302  085F               	movf	(efgtoa@g+1)^(0+128),w
  4574  0303  0020               	movlb	0	; select bank0
  4575  0304  00C1               	movwf	___flge@ff1+1
  4576  0305  0021               	movlb	1	; select bank1
  4577  0306  085E               	movf	efgtoa@g^(0+128),w
  4578  0307  0020               	movlb	0	; select bank0
  4579  0308  00C0               	movwf	___flge@ff1
  4580  0309  0021               	movlb	1	; select bank1
  4581  030A  0869               	movf	(efgtoa@u+3)^(0+128),w
  4582  030B  0020               	movlb	0	; select bank0
  4583  030C  00C7               	movwf	___flge@ff2+3
  4584  030D  0021               	movlb	1	; select bank1
  4585  030E  0868               	movf	(efgtoa@u+2)^(0+128),w
  4586  030F  0020               	movlb	0	; select bank0
  4587  0310  00C6               	movwf	___flge@ff2+2
  4588  0311  0021               	movlb	1	; select bank1
  4589  0312  0867               	movf	(efgtoa@u+1)^(0+128),w
  4590  0313  0020               	movlb	0	; select bank0
  4591  0314  00C5               	movwf	___flge@ff2+1
  4592  0315  0021               	movlb	1	; select bank1
  4593  0316  0866               	movf	efgtoa@u^(0+128),w
  4594  0317  0020               	movlb	0	; select bank0
  4595  0318  00C4               	movwf	___flge@ff2
  4596  0319  3192  224C  3180   	fcall	___flge
  4597  031C  1C03               	btfss	3,0
  4598  031D  2B1F               	goto	u5051
  4599  031E  2B20               	goto	u5050
  4600  031F                     u5051:	
  4601  031F  2AC9               	goto	l3848
  4602  0320                     u5050:	
  4603  0320                     l3854:	
  4604                           
  4605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4606  0320  0021               	movlb	1	; select bank1
  4607  0321  082C               	movf	efgtoa@c^(0+128),w
  4608  0322  00AD               	movwf	??_efgtoa^(0+128)
  4609  0323  01AE               	clrf	(??_efgtoa^(0+128)+1)
  4610  0324  082D               	movf	??_efgtoa^(0+128),w
  4611  0325  00F6               	movwf	tolower@c
  4612  0326  082E               	movf	(??_efgtoa+1)^(0+128),w
  4613  0327  00F7               	movwf	tolower@c+1
  4614  0328  319C  2435  3180   	fcall	_tolower
  4615  032B  0876               	movf	?_tolower,w
  4616  032C  0021               	movlb	1	; select bank1
  4617  032D  00AF               	movwf	(??_efgtoa+2)^(0+128)
  4618  032E  082F               	movf	(??_efgtoa+2)^(0+128),w
  4619  032F  00D3               	movwf	efgtoa@mode^(0+128)
  4620  0330                     l3856:	
  4621                           
  4622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4623  0330  0853               	movf	efgtoa@mode^(0+128),w
  4624  0331  00AD               	movwf	??_efgtoa^(0+128)
  4625  0332  082D               	movf	??_efgtoa^(0+128),w
  4626  0333  00D0               	movwf	efgtoa@nmode^(0+128)
  4627  0334                     l3858:	
  4628                           
  4629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4630  0334  3067               	movlw	103
  4631  0335  0653               	xorwf	efgtoa@mode^(0+128),w
  4632  0336  1D03               	btfss	3,2
  4633  0337  2B39               	goto	u5061
  4634  0338  2B3A               	goto	u5060
  4635  0339                     u5061:	
  4636  0339  2B63               	goto	l500
  4637  033A                     u5060:	
  4638  033A                     l3860:	
  4639                           
  4640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4641  033A  0022               	movlb	2	; select bank2
  4642  033B  0865               	movf	_prec^(0+256),w
  4643  033C  0466               	iorwf	(_prec+1)^(0+256),w
  4644  033D  1D03               	btfss	3,2
  4645  033E  2B40               	goto	u5071
  4646  033F  2B41               	goto	u5070
  4647  0340                     u5071:	
  4648  0340  2B45               	goto	l501
  4649  0341                     u5070:	
  4650  0341                     l3862:	
  4651                           
  4652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4653  0341  3001               	movlw	1
  4654  0342  00E5               	movwf	_prec^(0+256)
  4655  0343  3000               	movlw	0
  4656  0344  00E6               	movwf	(_prec^(0+256)+1)
  4657  0345                     l501:	
  4658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 382:   }
  4659                           
  4660                           
  4661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4662  0345  0866               	movf	(_prec+1)^(0+256),w
  4663  0346  3A80               	xorlw	128
  4664  0347  0021               	movlb	1	; select bank1
  4665  0348  00AD               	movwf	??_efgtoa^(0+128)
  4666  0349  3080               	movlw	128
  4667  034A  022D               	subwf	??_efgtoa^(0+128),w
  4668  034B  1D03               	skipz
  4669  034C  2B50               	goto	u5085
  4670  034D  3001               	movlw	1
  4671  034E  0022               	movlb	2	; select bank2
  4672  034F  0265               	subwf	_prec^(0+256),w
  4673  0350                     u5085:	
  4674  0350  1803               	skipnc
  4675  0351  2B53               	goto	u5081
  4676  0352  2B54               	goto	u5080
  4677  0353                     u5081:	
  4678  0353  2B5A               	goto	l3866
  4679  0354                     u5080:	
  4680  0354                     l3864:	
  4681  0354  3006               	movlw	6
  4682  0355  0021               	movlb	1	; select bank1
  4683  0356  00CE               	movwf	efgtoa@p^(0+128)
  4684  0357  3000               	movlw	0
  4685  0358  00CF               	movwf	(efgtoa@p^(0+128)+1)
  4686  0359  2B69               	goto	l3872
  4687  035A                     l3866:	
  4688  035A  0022               	movlb	2	; select bank2
  4689  035B  0866               	movf	(_prec+1)^(0+256),w
  4690  035C  0021               	movlb	1	; select bank1
  4691  035D  00CF               	movwf	(efgtoa@p+1)^(0+128)
  4692  035E  0022               	movlb	2	; select bank2
  4693  035F  0865               	movf	_prec^(0+256),w
  4694  0360  0021               	movlb	1	; select bank1
  4695  0361  00CE               	movwf	efgtoa@p^(0+128)
  4696  0362  2B69               	goto	l3872
  4697  0363                     l500:	
  4698                           
  4699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4700  0363  0022               	movlb	2	; select bank2
  4701  0364  1BE6               	btfsc	(_prec+1)^(0+256),7
  4702  0365  2B67               	goto	u5091
  4703  0366  2B68               	goto	u5090
  4704  0367                     u5091:	
  4705  0367  2B54               	goto	l3864
  4706  0368                     u5090:	
  4707  0368  2B5A               	goto	l3866
  4708  0369                     l3872:	
  4709                           
  4710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4711  0369  3067               	movlw	103
  4712  036A  0653               	xorwf	efgtoa@mode^(0+128),w
  4713  036B  1D03               	btfss	3,2
  4714  036C  2B6E               	goto	u5101
  4715  036D  2B6F               	goto	u5100
  4716  036E                     u5101:	
  4717  036E  2B9C               	goto	l511
  4718  036F                     u5100:	
  4719  036F                     l3874:	
  4720                           
  4721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4722  036F  0863               	movf	(efgtoa@e+1)^(0+128),w
  4723  0370  3A80               	xorlw	128
  4724  0371  00AD               	movwf	??_efgtoa^(0+128)
  4725  0372  307F               	movlw	127
  4726  0373  022D               	subwf	??_efgtoa^(0+128),w
  4727  0374  1D03               	skipz
  4728  0375  2B78               	goto	u5115
  4729  0376  30FC               	movlw	252
  4730  0377  0262               	subwf	efgtoa@e^(0+128),w
  4731  0378                     u5115:	
  4732  0378  1C03               	skipc
  4733  0379  2B7B               	goto	u5111
  4734  037A  2B7C               	goto	u5110
  4735  037B                     u5111:	
  4736  037B  2B97               	goto	l3880
  4737  037C                     u5110:	
  4738  037C                     l3876:	
  4739  037C  0021               	movlb	1	; select bank1
  4740  037D  084E               	movf	efgtoa@p^(0+128),w
  4741  037E  3EFF               	addlw	255
  4742  037F  00AD               	movwf	??_efgtoa^(0+128)
  4743  0380  30FF               	movlw	255
  4744  0381  3D4F               	addwfc	(efgtoa@p+1)^(0+128),w
  4745  0382  00AE               	movwf	(??_efgtoa+1)^(0+128)
  4746  0383  082E               	movf	(??_efgtoa+1)^(0+128),w
  4747  0384  3A80               	xorlw	128
  4748  0385  00AF               	movwf	(??_efgtoa+2)^(0+128)
  4749  0386  0863               	movf	(efgtoa@e+1)^(0+128),w
  4750  0387  3A80               	xorlw	128
  4751  0388  022F               	subwf	(??_efgtoa+2)^(0+128),w
  4752  0389  1D03               	skipz
  4753  038A  2B8D               	goto	u5125
  4754  038B  0862               	movf	efgtoa@e^(0+128),w
  4755  038C  022D               	subwf	??_efgtoa^(0+128),w
  4756  038D                     u5125:	
  4757  038D  1C03               	skipc
  4758  038E  2B90               	goto	u5121
  4759  038F  2B91               	goto	u5120
  4760  0390                     u5121:	
  4761  0390  2B97               	goto	l3880
  4762  0391                     u5120:	
  4763  0391                     l3878:	
  4764                           
  4765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4766  0391  3066               	movlw	102
  4767  0392  0021               	movlb	1	; select bank1
  4768  0393  00AD               	movwf	??_efgtoa^(0+128)
  4769  0394  082D               	movf	??_efgtoa^(0+128),w
  4770  0395  00D0               	movwf	efgtoa@nmode^(0+128)
  4771                           
  4772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  4773  0396  2B9C               	goto	l511
  4774  0397                     l3880:	
  4775                           
  4776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4777  0397  3065               	movlw	101
  4778  0398  0021               	movlb	1	; select bank1
  4779  0399  00AD               	movwf	??_efgtoa^(0+128)
  4780  039A  082D               	movf	??_efgtoa^(0+128),w
  4781  039B  00D0               	movwf	efgtoa@nmode^(0+128)
  4782  039C                     l511:	
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 395:     }
  4784                           
  4785                           
  4786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4787  039C  084F               	movf	(efgtoa@p+1)^(0+128),w
  4788  039D  00C6               	movwf	(efgtoa@m+1)^(0+128)
  4789  039E  084E               	movf	efgtoa@p^(0+128),w
  4790  039F  00C5               	movwf	efgtoa@m^(0+128)
  4791  03A0                     l3882:	
  4792                           
  4793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4794  03A0  3067               	movlw	103
  4795  03A1  0653               	xorwf	efgtoa@mode^(0+128),w
  4796  03A2  1D03               	btfss	3,2
  4797  03A3  2BA5               	goto	u5131
  4798  03A4  2BA6               	goto	u5130
  4799  03A5                     u5131:	
  4800  03A5  2BB0               	goto	l3888
  4801  03A6                     u5130:	
  4802  03A6                     l3884:	
  4803  03A6  3066               	movlw	102
  4804  03A7  0650               	xorwf	efgtoa@nmode^(0+128),w
  4805  03A8  1D03               	btfss	3,2
  4806  03A9  2BAB               	goto	u5141
  4807  03AA  2BAC               	goto	u5140
  4808  03AB                     u5141:	
  4809  03AB  2BB4               	goto	l3890
  4810  03AC                     u5140:	
  4811  03AC                     l3886:	
  4812  03AC  1FE3               	btfss	(efgtoa@e+1)^(0+128),7
  4813  03AD  2BAF               	goto	u5151
  4814  03AE  2BB0               	goto	u5150
  4815  03AF                     u5151:	
  4816  03AF  2BB4               	goto	l3890
  4817  03B0                     u5150:	
  4818  03B0                     l3888:	
  4819                           
  4820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4821  03B0  3001               	movlw	1
  4822  03B1  07C5               	addwf	efgtoa@m^(0+128),f
  4823  03B2  3000               	movlw	0
  4824  03B3  3DC6               	addwfc	(efgtoa@m+1)^(0+128),f
  4825  03B4                     l3890:	
  4826                           
  4827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4828  03B4  3066               	movlw	102
  4829  03B5  0650               	xorwf	efgtoa@nmode^(0+128),w
  4830  03B6  1D03               	btfss	3,2
  4831  03B7  2BB9               	goto	u5161
  4832  03B8  2BBA               	goto	u5160
  4833  03B9                     u5161:	
  4834  03B9  2BD2               	goto	l3902
  4835  03BA                     u5160:	
  4836  03BA                     l3892:	
  4837                           
  4838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4839  03BA  1FE3               	btfss	(efgtoa@e+1)^(0+128),7
  4840  03BB  2BBD               	goto	u5171
  4841  03BC  2BBE               	goto	u5170
  4842  03BD                     u5171:	
  4843  03BD  2BC8               	goto	l3898
  4844  03BE                     u5170:	
  4845  03BE                     l3894:	
  4846                           
  4847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4848  03BE  303F               	movlw	63
  4849  03BF  00E9               	movwf	(efgtoa@u+3)^(0+128)
  4850  03C0  3080               	movlw	128
  4851  03C1  00E8               	movwf	(efgtoa@u+2)^(0+128)
  4852  03C2  3000               	movlw	0
  4853  03C3  00E7               	movwf	(efgtoa@u+1)^(0+128)
  4854  03C4  3000               	movlw	0
  4855  03C5  00E6               	movwf	efgtoa@u^(0+128)
  4856  03C6                     l3896:	
  4857                           
  4858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4859  03C6  01E2               	clrf	efgtoa@e^(0+128)
  4860  03C7  01E3               	clrf	(efgtoa@e+1)^(0+128)
  4861  03C8                     l3898:	
  4862                           
  4863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4864  03C8  3067               	movlw	103
  4865  03C9  0653               	xorwf	efgtoa@mode^(0+128),w
  4866  03CA  1903               	btfsc	3,2
  4867  03CB  2BCD               	goto	u5181
  4868  03CC  2BCE               	goto	u5180
  4869  03CD                     u5181:	
  4870  03CD  2BD2               	goto	l3902
  4871  03CE                     u5180:	
  4872  03CE                     l3900:	
  4873                           
  4874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4875  03CE  0862               	movf	efgtoa@e^(0+128),w
  4876  03CF  07C5               	addwf	efgtoa@m^(0+128),f
  4877  03D0  0863               	movf	(efgtoa@e+1)^(0+128),w
  4878  03D1  3DC6               	addwfc	(efgtoa@m+1)^(0+128),f
  4879  03D2                     l3902:	
  4880                           
  4881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4882  03D2  01DC               	clrf	efgtoa@i^(0+128)
  4883  03D3  01DD               	clrf	(efgtoa@i+1)^(0+128)
  4884  03D4                     l3904:	
  4885                           
  4886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4887  03D4  0861               	movf	(efgtoa@g+3)^(0+128),w
  4888  03D5  00D7               	movwf	(efgtoa@h+3)^(0+128)
  4889  03D6  0860               	movf	(efgtoa@g+2)^(0+128),w
  4890  03D7  00D6               	movwf	(efgtoa@h+2)^(0+128)
  4891  03D8  085F               	movf	(efgtoa@g+1)^(0+128),w
  4892  03D9  00D5               	movwf	(efgtoa@h+1)^(0+128)
  4893  03DA  085E               	movf	efgtoa@g^(0+128),w
  4894  03DB  00D4               	movwf	efgtoa@h^(0+128)
  4895  03DC                     l3906:	
  4896                           
  4897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4898  03DC  0869               	movf	(efgtoa@u+3)^(0+128),w
  4899  03DD  00B4               	movwf	(efgtoa@ou+3)^(0+128)
  4900  03DE  0868               	movf	(efgtoa@u+2)^(0+128),w
  4901  03DF  00B3               	movwf	(efgtoa@ou+2)^(0+128)
  4902  03E0  0867               	movf	(efgtoa@u+1)^(0+128),w
  4903  03E1  00B2               	movwf	(efgtoa@ou+1)^(0+128)
  4904  03E2  0866               	movf	efgtoa@u^(0+128),w
  4905  03E3  00B1               	movwf	efgtoa@ou^(0+128)
  4906                           
  4907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4908  03E4  2CAA               	goto	l3912
  4909  03E5                     l3908:	
  4910                           
  4911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4912  03E5  0021               	movlb	1	; select bank1
  4913  03E6  0869               	movf	(efgtoa@u+3)^(0+128),w
  4914  03E7  0020               	movlb	0	; select bank0
  4915  03E8  00C3               	movwf	___fldiv@a+3
  4916  03E9  0021               	movlb	1	; select bank1
  4917  03EA  0868               	movf	(efgtoa@u+2)^(0+128),w
  4918  03EB  0020               	movlb	0	; select bank0
  4919  03EC  00C2               	movwf	___fldiv@a+2
  4920  03ED  0021               	movlb	1	; select bank1
  4921  03EE  0867               	movf	(efgtoa@u+1)^(0+128),w
  4922  03EF  0020               	movlb	0	; select bank0
  4923  03F0  00C1               	movwf	___fldiv@a+1
  4924  03F1  0021               	movlb	1	; select bank1
  4925  03F2  0866               	movf	efgtoa@u^(0+128),w
  4926  03F3  0020               	movlb	0	; select bank0
  4927  03F4  00C0               	movwf	___fldiv@a
  4928  03F5  0021               	movlb	1	; select bank1
  4929  03F6  0857               	movf	(efgtoa@h+3)^(0+128),w
  4930  03F7  0020               	movlb	0	; select bank0
  4931  03F8  00C7               	movwf	___fldiv@b+3
  4932  03F9  0021               	movlb	1	; select bank1
  4933  03FA  0856               	movf	(efgtoa@h+2)^(0+128),w
  4934  03FB  0020               	movlb	0	; select bank0
  4935  03FC  00C6               	movwf	___fldiv@b+2
  4936  03FD  0021               	movlb	1	; select bank1
  4937  03FE  0855               	movf	(efgtoa@h+1)^(0+128),w
  4938  03FF  0020               	movlb	0	; select bank0
  4939  0400  00C5               	movwf	___fldiv@b+1
  4940  0401  0021               	movlb	1	; select bank1
  4941  0402  0854               	movf	efgtoa@h^(0+128),w
  4942  0403  0020               	movlb	0	; select bank0
  4943  0404  00C4               	movwf	___fldiv@b
  4944  0405  3194  2433  3180   	fcall	___fldiv
  4945  0408  0020               	movlb	0	; select bank0
  4946  0409  0843               	movf	?___fldiv+3,w
  4947  040A  00DD               	movwf	floorf@x+3
  4948  040B  0842               	movf	?___fldiv+2,w
  4949  040C  00DC               	movwf	floorf@x+2
  4950  040D  0841               	movf	?___fldiv+1,w
  4951  040E  00DB               	movwf	floorf@x+1
  4952  040F  0840               	movf	?___fldiv,w
  4953  0410  00DA               	movwf	floorf@x
  4954  0411  3180  2010  3180   	fcall	_floorf
  4955  0414  0020               	movlb	0	; select bank0
  4956  0415  085D               	movf	?_floorf+3,w
  4957  0416  0021               	movlb	1	; select bank1
  4958  0417  00DB               	movwf	(efgtoa@l+3)^(0+128)
  4959  0418  0020               	movlb	0	; select bank0
  4960  0419  085C               	movf	?_floorf+2,w
  4961  041A  0021               	movlb	1	; select bank1
  4962  041B  00DA               	movwf	(efgtoa@l+2)^(0+128)
  4963  041C  0020               	movlb	0	; select bank0
  4964  041D  085B               	movf	?_floorf+1,w
  4965  041E  0021               	movlb	1	; select bank1
  4966  041F  00D9               	movwf	(efgtoa@l+1)^(0+128)
  4967  0420  0020               	movlb	0	; select bank0
  4968  0421  085A               	movf	?_floorf,w
  4969  0422  0021               	movlb	1	; select bank1
  4970  0423  00D8               	movwf	efgtoa@l^(0+128)
  4971                           
  4972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4973  0424  085B               	movf	(efgtoa@l+3)^(0+128),w
  4974  0425  00F3               	movwf	___fltol@f1+3
  4975  0426  085A               	movf	(efgtoa@l+2)^(0+128),w
  4976  0427  00F2               	movwf	___fltol@f1+2
  4977  0428  0859               	movf	(efgtoa@l+1)^(0+128),w
  4978  0429  00F1               	movwf	___fltol@f1+1
  4979  042A  0858               	movf	efgtoa@l^(0+128),w
  4980  042B  00F0               	movwf	___fltol@f1
  4981  042C  3191  2159  3180   	fcall	___fltol
  4982  042F  0871               	movf	?___fltol+1,w
  4983  0430  0021               	movlb	1	; select bank1
  4984  0431  00CA               	movwf	(efgtoa@d+1)^(0+128)
  4985  0432  0870               	movf	?___fltol,w
  4986  0433  00C9               	movwf	efgtoa@d^(0+128)
  4987                           
  4988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4989  0434  085B               	movf	(efgtoa@l+3)^(0+128),w
  4990  0435  0020               	movlb	0	; select bank0
  4991  0436  00AD               	movwf	___flmul@a+3
  4992  0437  0021               	movlb	1	; select bank1
  4993  0438  085A               	movf	(efgtoa@l+2)^(0+128),w
  4994  0439  0020               	movlb	0	; select bank0
  4995  043A  00AC               	movwf	___flmul@a+2
  4996  043B  0021               	movlb	1	; select bank1
  4997  043C  0859               	movf	(efgtoa@l+1)^(0+128),w
  4998  043D  0020               	movlb	0	; select bank0
  4999  043E  00AB               	movwf	___flmul@a+1
  5000  043F  0021               	movlb	1	; select bank1
  5001  0440  0858               	movf	efgtoa@l^(0+128),w
  5002  0441  0020               	movlb	0	; select bank0
  5003  0442  00AA               	movwf	___flmul@a
  5004  0443  0021               	movlb	1	; select bank1
  5005  0444  0869               	movf	(efgtoa@u+3)^(0+128),w
  5006  0445  0020               	movlb	0	; select bank0
  5007  0446  00A9               	movwf	___flmul@b+3
  5008  0447  0021               	movlb	1	; select bank1
  5009  0448  0868               	movf	(efgtoa@u+2)^(0+128),w
  5010  0449  0020               	movlb	0	; select bank0
  5011  044A  00A8               	movwf	___flmul@b+2
  5012  044B  0021               	movlb	1	; select bank1
  5013  044C  0867               	movf	(efgtoa@u+1)^(0+128),w
  5014  044D  0020               	movlb	0	; select bank0
  5015  044E  00A7               	movwf	___flmul@b+1
  5016  044F  0021               	movlb	1	; select bank1
  5017  0450  0866               	movf	efgtoa@u^(0+128),w
  5018  0451  0020               	movlb	0	; select bank0
  5019  0452  00A6               	movwf	___flmul@b
  5020  0453  318A  228B  3180   	fcall	___flmul
  5021  0456  0020               	movlb	0	; select bank0
  5022  0457  0829               	movf	?___flmul+3,w
  5023  0458  0021               	movlb	1	; select bank1
  5024  0459  00A3               	movwf	(___flsub@a+3)^(0+128)
  5025  045A  0020               	movlb	0	; select bank0
  5026  045B  0828               	movf	?___flmul+2,w
  5027  045C  0021               	movlb	1	; select bank1
  5028  045D  00A2               	movwf	(___flsub@a+2)^(0+128)
  5029  045E  0020               	movlb	0	; select bank0
  5030  045F  0827               	movf	?___flmul+1,w
  5031  0460  0021               	movlb	1	; select bank1
  5032  0461  00A1               	movwf	(___flsub@a+1)^(0+128)
  5033  0462  0020               	movlb	0	; select bank0
  5034  0463  0826               	movf	?___flmul,w
  5035  0464  0021               	movlb	1	; select bank1
  5036  0465  00A0               	movwf	___flsub@a^(0+128)
  5037  0466  0857               	movf	(efgtoa@h+3)^(0+128),w
  5038  0467  00A7               	movwf	(___flsub@b+3)^(0+128)
  5039  0468  0856               	movf	(efgtoa@h+2)^(0+128),w
  5040  0469  00A6               	movwf	(___flsub@b+2)^(0+128)
  5041  046A  0855               	movf	(efgtoa@h+1)^(0+128),w
  5042  046B  00A5               	movwf	(___flsub@b+1)^(0+128)
  5043  046C  0854               	movf	efgtoa@h^(0+128),w
  5044  046D  00A4               	movwf	___flsub@b^(0+128)
  5045  046E  319D  2513  3180   	fcall	___flsub
  5046  0471  0021               	movlb	1	; select bank1
  5047  0472  0823               	movf	(?___flsub+3)^(0+128),w
  5048  0473  00D7               	movwf	(efgtoa@h+3)^(0+128)
  5049  0474  0822               	movf	(?___flsub+2)^(0+128),w
  5050  0475  00D6               	movwf	(efgtoa@h+2)^(0+128)
  5051  0476  0821               	movf	(?___flsub+1)^(0+128),w
  5052  0477  00D5               	movwf	(efgtoa@h+1)^(0+128)
  5053  0478  0820               	movf	?___flsub^(0+128),w
  5054  0479  00D4               	movwf	efgtoa@h^(0+128)
  5055                           
  5056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  5057  047A  3041               	movlw	65
  5058  047B  0020               	movlb	0	; select bank0
  5059  047C  00C3               	movwf	___fldiv@a+3
  5060  047D  3020               	movlw	32
  5061  047E  00C2               	movwf	___fldiv@a+2
  5062  047F  3000               	movlw	0
  5063  0480  00C1               	movwf	___fldiv@a+1
  5064  0481  3000               	movlw	0
  5065  0482  00C0               	movwf	___fldiv@a
  5066  0483  0021               	movlb	1	; select bank1
  5067  0484  0869               	movf	(efgtoa@u+3)^(0+128),w
  5068  0485  0020               	movlb	0	; select bank0
  5069  0486  00C7               	movwf	___fldiv@b+3
  5070  0487  0021               	movlb	1	; select bank1
  5071  0488  0868               	movf	(efgtoa@u+2)^(0+128),w
  5072  0489  0020               	movlb	0	; select bank0
  5073  048A  00C6               	movwf	___fldiv@b+2
  5074  048B  0021               	movlb	1	; select bank1
  5075  048C  0867               	movf	(efgtoa@u+1)^(0+128),w
  5076  048D  0020               	movlb	0	; select bank0
  5077  048E  00C5               	movwf	___fldiv@b+1
  5078  048F  0021               	movlb	1	; select bank1
  5079  0490  0866               	movf	efgtoa@u^(0+128),w
  5080  0491  0020               	movlb	0	; select bank0
  5081  0492  00C4               	movwf	___fldiv@b
  5082  0493  3194  2433  3180   	fcall	___fldiv
  5083  0496  0020               	movlb	0	; select bank0
  5084  0497  0843               	movf	?___fldiv+3,w
  5085  0498  0021               	movlb	1	; select bank1
  5086  0499  00E9               	movwf	(efgtoa@u+3)^(0+128)
  5087  049A  0020               	movlb	0	; select bank0
  5088  049B  0842               	movf	?___fldiv+2,w
  5089  049C  0021               	movlb	1	; select bank1
  5090  049D  00E8               	movwf	(efgtoa@u+2)^(0+128)
  5091  049E  0020               	movlb	0	; select bank0
  5092  049F  0841               	movf	?___fldiv+1,w
  5093  04A0  0021               	movlb	1	; select bank1
  5094  04A1  00E7               	movwf	(efgtoa@u+1)^(0+128)
  5095  04A2  0020               	movlb	0	; select bank0
  5096  04A3  0840               	movf	?___fldiv,w
  5097  04A4  0021               	movlb	1	; select bank1
  5098  04A5  00E6               	movwf	efgtoa@u^(0+128)
  5099  04A6                     l3910:	
  5100                           
  5101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  5102  04A6  3001               	movlw	1
  5103  04A7  07DC               	addwf	efgtoa@i^(0+128),f
  5104  04A8  3000               	movlw	0
  5105  04A9  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  5106  04AA                     l3912:	
  5107                           
  5108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5109  04AA  085D               	movf	(efgtoa@i+1)^(0+128),w
  5110  04AB  3A80               	xorlw	128
  5111  04AC  00AD               	movwf	??_efgtoa^(0+128)
  5112  04AD  0846               	movf	(efgtoa@m+1)^(0+128),w
  5113  04AE  3A80               	xorlw	128
  5114  04AF  022D               	subwf	??_efgtoa^(0+128),w
  5115  04B0  1D03               	skipz
  5116  04B1  2CB4               	goto	u5195
  5117  04B2  0845               	movf	efgtoa@m^(0+128),w
  5118  04B3  025C               	subwf	efgtoa@i^(0+128),w
  5119  04B4                     u5195:	
  5120  04B4  1C03               	skipc
  5121  04B5  2CB7               	goto	u5191
  5122  04B6  2CB8               	goto	u5190
  5123  04B7                     u5191:	
  5124  04B7  2BE5               	goto	l3908
  5125  04B8                     u5190:	
  5126  04B8                     l3914:	
  5127                           
  5128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  5129  04B8  3040               	movlw	64
  5130  04B9  0020               	movlb	0	; select bank0
  5131  04BA  00A9               	movwf	___flmul@b+3
  5132  04BB  30A0               	movlw	160
  5133  04BC  00A8               	movwf	___flmul@b+2
  5134  04BD  3000               	movlw	0
  5135  04BE  00A7               	movwf	___flmul@b+1
  5136  04BF  3000               	movlw	0
  5137  04C0  00A6               	movwf	___flmul@b
  5138  04C1  0021               	movlb	1	; select bank1
  5139  04C2  0869               	movf	(efgtoa@u+3)^(0+128),w
  5140  04C3  0020               	movlb	0	; select bank0
  5141  04C4  00AD               	movwf	___flmul@a+3
  5142  04C5  0021               	movlb	1	; select bank1
  5143  04C6  0868               	movf	(efgtoa@u+2)^(0+128),w
  5144  04C7  0020               	movlb	0	; select bank0
  5145  04C8  00AC               	movwf	___flmul@a+2
  5146  04C9  0021               	movlb	1	; select bank1
  5147  04CA  0867               	movf	(efgtoa@u+1)^(0+128),w
  5148  04CB  0020               	movlb	0	; select bank0
  5149  04CC  00AB               	movwf	___flmul@a+1
  5150  04CD  0021               	movlb	1	; select bank1
  5151  04CE  0866               	movf	efgtoa@u^(0+128),w
  5152  04CF  0020               	movlb	0	; select bank0
  5153  04D0  00AA               	movwf	___flmul@a
  5154  04D1  318A  228B  3180   	fcall	___flmul
  5155  04D4  0020               	movlb	0	; select bank0
  5156  04D5  0829               	movf	?___flmul+3,w
  5157  04D6  0021               	movlb	1	; select bank1
  5158  04D7  00DB               	movwf	(efgtoa@l+3)^(0+128)
  5159  04D8  0020               	movlb	0	; select bank0
  5160  04D9  0828               	movf	?___flmul+2,w
  5161  04DA  0021               	movlb	1	; select bank1
  5162  04DB  00DA               	movwf	(efgtoa@l+2)^(0+128)
  5163  04DC  0020               	movlb	0	; select bank0
  5164  04DD  0827               	movf	?___flmul+1,w
  5165  04DE  0021               	movlb	1	; select bank1
  5166  04DF  00D9               	movwf	(efgtoa@l+1)^(0+128)
  5167  04E0  0020               	movlb	0	; select bank0
  5168  04E1  0826               	movf	?___flmul,w
  5169  04E2  0021               	movlb	1	; select bank1
  5170  04E3  00D8               	movwf	efgtoa@l^(0+128)
  5171                           
  5172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  5173  04E4  0857               	movf	(efgtoa@h+3)^(0+128),w
  5174  04E5  0020               	movlb	0	; select bank0
  5175  04E6  00C3               	movwf	___flge@ff1+3
  5176  04E7  0021               	movlb	1	; select bank1
  5177  04E8  0856               	movf	(efgtoa@h+2)^(0+128),w
  5178  04E9  0020               	movlb	0	; select bank0
  5179  04EA  00C2               	movwf	___flge@ff1+2
  5180  04EB  0021               	movlb	1	; select bank1
  5181  04EC  0855               	movf	(efgtoa@h+1)^(0+128),w
  5182  04ED  0020               	movlb	0	; select bank0
  5183  04EE  00C1               	movwf	___flge@ff1+1
  5184  04EF  0021               	movlb	1	; select bank1
  5185  04F0  0854               	movf	efgtoa@h^(0+128),w
  5186  04F1  0020               	movlb	0	; select bank0
  5187  04F2  00C0               	movwf	___flge@ff1
  5188  04F3  0021               	movlb	1	; select bank1
  5189  04F4  085B               	movf	(efgtoa@l+3)^(0+128),w
  5190  04F5  0020               	movlb	0	; select bank0
  5191  04F6  00C7               	movwf	___flge@ff2+3
  5192  04F7  0021               	movlb	1	; select bank1
  5193  04F8  085A               	movf	(efgtoa@l+2)^(0+128),w
  5194  04F9  0020               	movlb	0	; select bank0
  5195  04FA  00C6               	movwf	___flge@ff2+2
  5196  04FB  0021               	movlb	1	; select bank1
  5197  04FC  0859               	movf	(efgtoa@l+1)^(0+128),w
  5198  04FD  0020               	movlb	0	; select bank0
  5199  04FE  00C5               	movwf	___flge@ff2+1
  5200  04FF  0021               	movlb	1	; select bank1
  5201  0500  0858               	movf	efgtoa@l^(0+128),w
  5202  0501  0020               	movlb	0	; select bank0
  5203  0502  00C4               	movwf	___flge@ff2
  5204  0503  3192  224C  3180   	fcall	___flge
  5205  0506  1803               	btfsc	3,0
  5206  0507  2D09               	goto	u5201
  5207  0508  2D0A               	goto	u5200
  5208  0509                     u5201:	
  5209  0509  2D14               	goto	l3918
  5210  050A                     u5200:	
  5211  050A                     l3916:	
  5212                           
  5213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  5214  050A  3000               	movlw	0
  5215  050B  0021               	movlb	1	; select bank1
  5216  050C  00DB               	movwf	(efgtoa@l+3)^(0+128)
  5217  050D  3000               	movlw	0
  5218  050E  00DA               	movwf	(efgtoa@l+2)^(0+128)
  5219  050F  3000               	movlw	0
  5220  0510  00D9               	movwf	(efgtoa@l+1)^(0+128)
  5221  0511  3000               	movlw	0
  5222  0512  00D8               	movwf	efgtoa@l^(0+128)
  5223                           
  5224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  5225  0513  2D39               	goto	l3924
  5226  0514                     l3918:	
  5227                           
  5228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  5229  0514  0021               	movlb	1	; select bank1
  5230  0515  0857               	movf	(efgtoa@h+3)^(0+128),w
  5231  0516  00F3               	movwf	___fleq@ff1+3
  5232  0517  0856               	movf	(efgtoa@h+2)^(0+128),w
  5233  0518  00F2               	movwf	___fleq@ff1+2
  5234  0519  0855               	movf	(efgtoa@h+1)^(0+128),w
  5235  051A  00F1               	movwf	___fleq@ff1+1
  5236  051B  0854               	movf	efgtoa@h^(0+128),w
  5237  051C  00F0               	movwf	___fleq@ff1
  5238  051D  085B               	movf	(efgtoa@l+3)^(0+128),w
  5239  051E  00F7               	movwf	___fleq@ff2+3
  5240  051F  085A               	movf	(efgtoa@l+2)^(0+128),w
  5241  0520  00F6               	movwf	___fleq@ff2+2
  5242  0521  0859               	movf	(efgtoa@l+1)^(0+128),w
  5243  0522  00F5               	movwf	___fleq@ff2+1
  5244  0523  0858               	movf	efgtoa@l^(0+128),w
  5245  0524  00F4               	movwf	___fleq@ff2
  5246  0525  319E  26A9  3180   	fcall	___fleq
  5247  0528  1C03               	btfss	3,0
  5248  0529  2D2B               	goto	u5211
  5249  052A  2D2C               	goto	u5210
  5250  052B                     u5211:	
  5251  052B  2D39               	goto	l3924
  5252  052C                     u5210:	
  5253  052C                     l3920:	
  5254  052C  0021               	movlb	1	; select bank1
  5255  052D  1849               	btfsc	efgtoa@d^(0+128),0
  5256  052E  2D30               	goto	u5221
  5257  052F  2D31               	goto	u5220
  5258  0530                     u5221:	
  5259  0530  2D39               	goto	l3924
  5260  0531                     u5220:	
  5261  0531                     l3922:	
  5262                           
  5263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  5264  0531  3000               	movlw	0
  5265  0532  00DB               	movwf	(efgtoa@l+3)^(0+128)
  5266  0533  3000               	movlw	0
  5267  0534  00DA               	movwf	(efgtoa@l+2)^(0+128)
  5268  0535  3000               	movlw	0
  5269  0536  00D9               	movwf	(efgtoa@l+1)^(0+128)
  5270  0537  3000               	movlw	0
  5271  0538  00D8               	movwf	efgtoa@l^(0+128)
  5272  0539                     l3924:	
  5273                           
  5274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  5275  0539  0021               	movlb	1	; select bank1
  5276  053A  085B               	movf	(efgtoa@l+3)^(0+128),w
  5277  053B  0020               	movlb	0	; select bank0
  5278  053C  00DD               	movwf	___fladd@b+3
  5279  053D  0021               	movlb	1	; select bank1
  5280  053E  085A               	movf	(efgtoa@l+2)^(0+128),w
  5281  053F  0020               	movlb	0	; select bank0
  5282  0540  00DC               	movwf	___fladd@b+2
  5283  0541  0021               	movlb	1	; select bank1
  5284  0542  0859               	movf	(efgtoa@l+1)^(0+128),w
  5285  0543  0020               	movlb	0	; select bank0
  5286  0544  00DB               	movwf	___fladd@b+1
  5287  0545  0021               	movlb	1	; select bank1
  5288  0546  0858               	movf	efgtoa@l^(0+128),w
  5289  0547  0020               	movlb	0	; select bank0
  5290  0548  00DA               	movwf	___fladd@b
  5291  0549  0021               	movlb	1	; select bank1
  5292  054A  0861               	movf	(efgtoa@g+3)^(0+128),w
  5293  054B  0020               	movlb	0	; select bank0
  5294  054C  00E1               	movwf	___fladd@a+3
  5295  054D  0021               	movlb	1	; select bank1
  5296  054E  0860               	movf	(efgtoa@g+2)^(0+128),w
  5297  054F  0020               	movlb	0	; select bank0
  5298  0550  00E0               	movwf	___fladd@a+2
  5299  0551  0021               	movlb	1	; select bank1
  5300  0552  085F               	movf	(efgtoa@g+1)^(0+128),w
  5301  0553  0020               	movlb	0	; select bank0
  5302  0554  00DF               	movwf	___fladd@a+1
  5303  0555  0021               	movlb	1	; select bank1
  5304  0556  085E               	movf	efgtoa@g^(0+128),w
  5305  0557  0020               	movlb	0	; select bank0
  5306  0558  00DE               	movwf	___fladd@a
  5307  0559  3188  2053  3180   	fcall	___fladd
  5308  055C  0020               	movlb	0	; select bank0
  5309  055D  085D               	movf	?___fladd+3,w
  5310  055E  0021               	movlb	1	; select bank1
  5311  055F  00D7               	movwf	(efgtoa@h+3)^(0+128)
  5312  0560  0020               	movlb	0	; select bank0
  5313  0561  085C               	movf	?___fladd+2,w
  5314  0562  0021               	movlb	1	; select bank1
  5315  0563  00D6               	movwf	(efgtoa@h+2)^(0+128)
  5316  0564  0020               	movlb	0	; select bank0
  5317  0565  085B               	movf	?___fladd+1,w
  5318  0566  0021               	movlb	1	; select bank1
  5319  0567  00D5               	movwf	(efgtoa@h+1)^(0+128)
  5320  0568  0020               	movlb	0	; select bank0
  5321  0569  085A               	movf	?___fladd,w
  5322  056A  0021               	movlb	1	; select bank1
  5323  056B  00D4               	movwf	efgtoa@h^(0+128)
  5324  056C                     l3926:	
  5325                           
  5326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  5327  056C  0834               	movf	(efgtoa@ou+3)^(0+128),w
  5328  056D  00E9               	movwf	(efgtoa@u+3)^(0+128)
  5329  056E  0833               	movf	(efgtoa@ou+2)^(0+128),w
  5330  056F  00E8               	movwf	(efgtoa@u+2)^(0+128)
  5331  0570  0832               	movf	(efgtoa@ou+1)^(0+128),w
  5332  0571  00E7               	movwf	(efgtoa@u+1)^(0+128)
  5333  0572  0831               	movf	efgtoa@ou^(0+128),w
  5334  0573  00E6               	movwf	efgtoa@u^(0+128)
  5335  0574                     l3928:	
  5336                           
  5337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  5338  0574  3065               	movlw	101
  5339  0575  0650               	xorwf	efgtoa@nmode^(0+128),w
  5340  0576  1903               	btfsc	3,2
  5341  0577  2D79               	goto	u5231
  5342  0578  2D7A               	goto	u5230
  5343  0579                     u5231:	
  5344  0579  2D7F               	goto	l3932
  5345  057A                     u5230:	
  5346  057A                     l3930:	
  5347  057A  0863               	movf	(efgtoa@e+1)^(0+128),w
  5348  057B  00C8               	movwf	(efgtoa@ne+1)^(0+128)
  5349  057C  0862               	movf	efgtoa@e^(0+128),w
  5350  057D  00C7               	movwf	efgtoa@ne^(0+128)
  5351  057E  2D81               	goto	l529
  5352  057F                     l3932:	
  5353  057F  01C7               	clrf	efgtoa@ne^(0+128)
  5354  0580  01C8               	clrf	(efgtoa@ne+1)^(0+128)
  5355  0581                     l529:	
  5356                           
  5357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  5358  0581  01C3               	clrf	efgtoa@pp^(0+128)
  5359  0582  01C4               	clrf	(efgtoa@pp+1)^(0+128)
  5360                           
  5361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  5362  0583  01C1               	clrf	efgtoa@t^(0+128)
  5363  0584  01C2               	clrf	(efgtoa@t+1)^(0+128)
  5364                           
  5365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  5366  0585  01DC               	clrf	efgtoa@i^(0+128)
  5367  0586  01DD               	clrf	(efgtoa@i+1)^(0+128)
  5368                           
  5369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5370  0587  2EBA               	goto	l3982
  5371  0588                     l3934:	
  5372                           
  5373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  5374  0588  0021               	movlb	1	; select bank1
  5375  0589  0869               	movf	(efgtoa@u+3)^(0+128),w
  5376  058A  0020               	movlb	0	; select bank0
  5377  058B  00C3               	movwf	___fldiv@a+3
  5378  058C  0021               	movlb	1	; select bank1
  5379  058D  0868               	movf	(efgtoa@u+2)^(0+128),w
  5380  058E  0020               	movlb	0	; select bank0
  5381  058F  00C2               	movwf	___fldiv@a+2
  5382  0590  0021               	movlb	1	; select bank1
  5383  0591  0867               	movf	(efgtoa@u+1)^(0+128),w
  5384  0592  0020               	movlb	0	; select bank0
  5385  0593  00C1               	movwf	___fldiv@a+1
  5386  0594  0021               	movlb	1	; select bank1
  5387  0595  0866               	movf	efgtoa@u^(0+128),w
  5388  0596  0020               	movlb	0	; select bank0
  5389  0597  00C0               	movwf	___fldiv@a
  5390  0598  0021               	movlb	1	; select bank1
  5391  0599  0857               	movf	(efgtoa@h+3)^(0+128),w
  5392  059A  0020               	movlb	0	; select bank0
  5393  059B  00C7               	movwf	___fldiv@b+3
  5394  059C  0021               	movlb	1	; select bank1
  5395  059D  0856               	movf	(efgtoa@h+2)^(0+128),w
  5396  059E  0020               	movlb	0	; select bank0
  5397  059F  00C6               	movwf	___fldiv@b+2
  5398  05A0  0021               	movlb	1	; select bank1
  5399  05A1  0855               	movf	(efgtoa@h+1)^(0+128),w
  5400  05A2  0020               	movlb	0	; select bank0
  5401  05A3  00C5               	movwf	___fldiv@b+1
  5402  05A4  0021               	movlb	1	; select bank1
  5403  05A5  0854               	movf	efgtoa@h^(0+128),w
  5404  05A6  0020               	movlb	0	; select bank0
  5405  05A7  00C4               	movwf	___fldiv@b
  5406  05A8  3194  2433  3180   	fcall	___fldiv
  5407  05AB  0020               	movlb	0	; select bank0
  5408  05AC  0843               	movf	?___fldiv+3,w
  5409  05AD  00DD               	movwf	floorf@x+3
  5410  05AE  0842               	movf	?___fldiv+2,w
  5411  05AF  00DC               	movwf	floorf@x+2
  5412  05B0  0841               	movf	?___fldiv+1,w
  5413  05B1  00DB               	movwf	floorf@x+1
  5414  05B2  0840               	movf	?___fldiv,w
  5415  05B3  00DA               	movwf	floorf@x
  5416  05B4  3180  2010  3180   	fcall	_floorf
  5417  05B7  0020               	movlb	0	; select bank0
  5418  05B8  085D               	movf	?_floorf+3,w
  5419  05B9  0021               	movlb	1	; select bank1
  5420  05BA  00DB               	movwf	(efgtoa@l+3)^(0+128)
  5421  05BB  0020               	movlb	0	; select bank0
  5422  05BC  085C               	movf	?_floorf+2,w
  5423  05BD  0021               	movlb	1	; select bank1
  5424  05BE  00DA               	movwf	(efgtoa@l+2)^(0+128)
  5425  05BF  0020               	movlb	0	; select bank0
  5426  05C0  085B               	movf	?_floorf+1,w
  5427  05C1  0021               	movlb	1	; select bank1
  5428  05C2  00D9               	movwf	(efgtoa@l+1)^(0+128)
  5429  05C3  0020               	movlb	0	; select bank0
  5430  05C4  085A               	movf	?_floorf,w
  5431  05C5  0021               	movlb	1	; select bank1
  5432  05C6  00D8               	movwf	efgtoa@l^(0+128)
  5433                           
  5434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  5435  05C7  085B               	movf	(efgtoa@l+3)^(0+128),w
  5436  05C8  00F3               	movwf	___fltol@f1+3
  5437  05C9  085A               	movf	(efgtoa@l+2)^(0+128),w
  5438  05CA  00F2               	movwf	___fltol@f1+2
  5439  05CB  0859               	movf	(efgtoa@l+1)^(0+128),w
  5440  05CC  00F1               	movwf	___fltol@f1+1
  5441  05CD  0858               	movf	efgtoa@l^(0+128),w
  5442  05CE  00F0               	movwf	___fltol@f1
  5443  05CF  3191  2159  3180   	fcall	___fltol
  5444  05D2  0871               	movf	?___fltol+1,w
  5445  05D3  0021               	movlb	1	; select bank1
  5446  05D4  00CA               	movwf	(efgtoa@d+1)^(0+128)
  5447  05D5  0870               	movf	?___fltol,w
  5448  05D6  00C9               	movwf	efgtoa@d^(0+128)
  5449  05D7                     l3936:	
  5450                           
  5451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5452  05D7  0022               	movlb	2	; select bank2
  5453  05D8  1A67               	btfsc	_flags^(0+256),4
  5454  05D9  2DDB               	goto	u5241
  5455  05DA  2DDC               	goto	u5240
  5456  05DB                     u5241:	
  5457  05DB  2DF2               	goto	l3946
  5458  05DC                     u5240:	
  5459  05DC                     l3938:	
  5460  05DC  0021               	movlb	1	; select bank1
  5461  05DD  0849               	movf	efgtoa@d^(0+128),w
  5462  05DE  044A               	iorwf	(efgtoa@d+1)^(0+128),w
  5463  05DF  1D03               	btfss	3,2
  5464  05E0  2DE2               	goto	u5251
  5465  05E1  2DE3               	goto	u5250
  5466  05E2                     u5251:	
  5467  05E2  2DF2               	goto	l3946
  5468  05E3                     u5250:	
  5469  05E3                     l3940:	
  5470  05E3  3067               	movlw	103
  5471  05E4  0653               	xorwf	efgtoa@mode^(0+128),w
  5472  05E5  1D03               	btfss	3,2
  5473  05E6  2DE8               	goto	u5261
  5474  05E7  2DE9               	goto	u5260
  5475  05E8                     u5261:	
  5476  05E8  2DF2               	goto	l3946
  5477  05E9                     u5260:	
  5478  05E9                     l3942:	
  5479  05E9  1FC8               	btfss	(efgtoa@ne+1)^(0+128),7
  5480  05EA  2DEC               	goto	u5271
  5481  05EB  2DED               	goto	u5270
  5482  05EC                     u5271:	
  5483  05EC  2DF2               	goto	l3946
  5484  05ED                     u5270:	
  5485  05ED                     l3944:	
  5486                           
  5487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  5488  05ED  3001               	movlw	1
  5489  05EE  07C1               	addwf	efgtoa@t^(0+128),f
  5490  05EF  3000               	movlw	0
  5491  05F0  3DC2               	addwfc	(efgtoa@t+1)^(0+128),f
  5492                           
  5493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  5494  05F1  2E40               	goto	l3974
  5495  05F2                     l3946:	
  5496                           
  5497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  5498  05F2  0021               	movlb	1	; select bank1
  5499  05F3  0843               	movf	efgtoa@pp^(0+128),w
  5500  05F4  0444               	iorwf	(efgtoa@pp+1)^(0+128),w
  5501  05F5  1D03               	btfss	3,2
  5502  05F6  2DF8               	goto	u5281
  5503  05F7  2DF9               	goto	u5280
  5504  05F8                     u5281:	
  5505  05F8  2E28               	goto	l3966
  5506  05F9                     u5280:	
  5507  05F9                     l3948:	
  5508  05F9  1FC8               	btfss	(efgtoa@ne+1)^(0+128),7
  5509  05FA  2DFC               	goto	u5291
  5510  05FB  2DFD               	goto	u5290
  5511  05FC                     u5291:	
  5512  05FC  2E28               	goto	l3966
  5513  05FD                     u5290:	
  5514  05FD                     l3950:	
  5515                           
  5516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  5517  05FD  302E               	movlw	46
  5518  05FE  00AD               	movwf	??_efgtoa^(0+128)
  5519  05FF  0864               	movf	efgtoa@n^(0+128),w
  5520  0600  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5521  0601  0086               	movwf	6
  5522  0602  3002               	movlw	2	; select bank4/5
  5523  0603  0087               	movwf	7
  5524  0604  082D               	movf	??_efgtoa^(0+128),w
  5525  0605  0081               	movwf	1
  5526  0606                     l3952:	
  5527  0606  3001               	movlw	1
  5528  0607  07E4               	addwf	efgtoa@n^(0+128),f
  5529  0608  3000               	movlw	0
  5530  0609  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  5531  060A                     l3954:	
  5532                           
  5533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  5534  060A  30FF               	movlw	255
  5535  060B  07D1               	addwf	efgtoa@w^(0+128),f
  5536  060C  30FF               	movlw	255
  5537  060D  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  5538  060E                     l3956:	
  5539                           
  5540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  5541  060E  3001               	movlw	1
  5542  060F  00C3               	movwf	efgtoa@pp^(0+128)
  5543  0610  3000               	movlw	0
  5544  0611  00C4               	movwf	(efgtoa@pp^(0+128)+1)
  5545  0612  2E28               	goto	l3966
  5546  0613                     l3958:	
  5547                           
  5548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  5549  0613  3030               	movlw	48
  5550  0614  00AD               	movwf	??_efgtoa^(0+128)
  5551  0615  0864               	movf	efgtoa@n^(0+128),w
  5552  0616  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5553  0617  0086               	movwf	6
  5554  0618  3002               	movlw	2	; select bank4/5
  5555  0619  0087               	movwf	7
  5556  061A  082D               	movf	??_efgtoa^(0+128),w
  5557  061B  0081               	movwf	1
  5558  061C                     l3960:	
  5559  061C  3001               	movlw	1
  5560  061D  07E4               	addwf	efgtoa@n^(0+128),f
  5561  061E  3000               	movlw	0
  5562  061F  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  5563  0620                     l3962:	
  5564                           
  5565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  5566  0620  30FF               	movlw	255
  5567  0621  07D1               	addwf	efgtoa@w^(0+128),f
  5568  0622  30FF               	movlw	255
  5569  0623  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  5570  0624                     l3964:	
  5571                           
  5572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  5573  0624  30FF               	movlw	255
  5574  0625  07C1               	addwf	efgtoa@t^(0+128),f
  5575  0626  30FF               	movlw	255
  5576  0627  3DC2               	addwfc	(efgtoa@t+1)^(0+128),f
  5577  0628                     l3966:	
  5578                           
  5579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  5580  0628  0841               	movf	efgtoa@t^(0+128),w
  5581  0629  0442               	iorwf	(efgtoa@t+1)^(0+128),w
  5582  062A  1D03               	btfss	3,2
  5583  062B  2E2D               	goto	u5301
  5584  062C  2E2E               	goto	u5300
  5585  062D                     u5301:	
  5586  062D  2E13               	goto	l3958
  5587  062E                     u5300:	
  5588  062E                     l3968:	
  5589                           
  5590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  5591  062E  0849               	movf	efgtoa@d^(0+128),w
  5592  062F  3E30               	addlw	48
  5593  0630  00AD               	movwf	??_efgtoa^(0+128)
  5594  0631  0864               	movf	efgtoa@n^(0+128),w
  5595  0632  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5596  0633  0086               	movwf	6
  5597  0634  3002               	movlw	2	; select bank4/5
  5598  0635  0087               	movwf	7
  5599  0636  082D               	movf	??_efgtoa^(0+128),w
  5600  0637  0081               	movwf	1
  5601  0638                     l3970:	
  5602  0638  3001               	movlw	1
  5603  0639  07E4               	addwf	efgtoa@n^(0+128),f
  5604  063A  3000               	movlw	0
  5605  063B  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  5606  063C                     l3972:	
  5607                           
  5608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  5609  063C  30FF               	movlw	255
  5610  063D  07D1               	addwf	efgtoa@w^(0+128),f
  5611  063E  30FF               	movlw	255
  5612  063F  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  5613  0640                     l3974:	
  5614                           
  5615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  5616  0640  085B               	movf	(efgtoa@l+3)^(0+128),w
  5617  0641  0020               	movlb	0	; select bank0
  5618  0642  00AD               	movwf	___flmul@a+3
  5619  0643  0021               	movlb	1	; select bank1
  5620  0644  085A               	movf	(efgtoa@l+2)^(0+128),w
  5621  0645  0020               	movlb	0	; select bank0
  5622  0646  00AC               	movwf	___flmul@a+2
  5623  0647  0021               	movlb	1	; select bank1
  5624  0648  0859               	movf	(efgtoa@l+1)^(0+128),w
  5625  0649  0020               	movlb	0	; select bank0
  5626  064A  00AB               	movwf	___flmul@a+1
  5627  064B  0021               	movlb	1	; select bank1
  5628  064C  0858               	movf	efgtoa@l^(0+128),w
  5629  064D  0020               	movlb	0	; select bank0
  5630  064E  00AA               	movwf	___flmul@a
  5631  064F  0021               	movlb	1	; select bank1
  5632  0650  0869               	movf	(efgtoa@u+3)^(0+128),w
  5633  0651  0020               	movlb	0	; select bank0
  5634  0652  00A9               	movwf	___flmul@b+3
  5635  0653  0021               	movlb	1	; select bank1
  5636  0654  0868               	movf	(efgtoa@u+2)^(0+128),w
  5637  0655  0020               	movlb	0	; select bank0
  5638  0656  00A8               	movwf	___flmul@b+2
  5639  0657  0021               	movlb	1	; select bank1
  5640  0658  0867               	movf	(efgtoa@u+1)^(0+128),w
  5641  0659  0020               	movlb	0	; select bank0
  5642  065A  00A7               	movwf	___flmul@b+1
  5643  065B  0021               	movlb	1	; select bank1
  5644  065C  0866               	movf	efgtoa@u^(0+128),w
  5645  065D  0020               	movlb	0	; select bank0
  5646  065E  00A6               	movwf	___flmul@b
  5647  065F  318A  228B  3180   	fcall	___flmul
  5648  0662  0020               	movlb	0	; select bank0
  5649  0663  0829               	movf	?___flmul+3,w
  5650  0664  0021               	movlb	1	; select bank1
  5651  0665  00A3               	movwf	(___flsub@a+3)^(0+128)
  5652  0666  0020               	movlb	0	; select bank0
  5653  0667  0828               	movf	?___flmul+2,w
  5654  0668  0021               	movlb	1	; select bank1
  5655  0669  00A2               	movwf	(___flsub@a+2)^(0+128)
  5656  066A  0020               	movlb	0	; select bank0
  5657  066B  0827               	movf	?___flmul+1,w
  5658  066C  0021               	movlb	1	; select bank1
  5659  066D  00A1               	movwf	(___flsub@a+1)^(0+128)
  5660  066E  0020               	movlb	0	; select bank0
  5661  066F  0826               	movf	?___flmul,w
  5662  0670  0021               	movlb	1	; select bank1
  5663  0671  00A0               	movwf	___flsub@a^(0+128)
  5664  0672  0857               	movf	(efgtoa@h+3)^(0+128),w
  5665  0673  00A7               	movwf	(___flsub@b+3)^(0+128)
  5666  0674  0856               	movf	(efgtoa@h+2)^(0+128),w
  5667  0675  00A6               	movwf	(___flsub@b+2)^(0+128)
  5668  0676  0855               	movf	(efgtoa@h+1)^(0+128),w
  5669  0677  00A5               	movwf	(___flsub@b+1)^(0+128)
  5670  0678  0854               	movf	efgtoa@h^(0+128),w
  5671  0679  00A4               	movwf	___flsub@b^(0+128)
  5672  067A  319D  2513  3180   	fcall	___flsub
  5673  067D  0021               	movlb	1	; select bank1
  5674  067E  0823               	movf	(?___flsub+3)^(0+128),w
  5675  067F  00D7               	movwf	(efgtoa@h+3)^(0+128)
  5676  0680  0822               	movf	(?___flsub+2)^(0+128),w
  5677  0681  00D6               	movwf	(efgtoa@h+2)^(0+128)
  5678  0682  0821               	movf	(?___flsub+1)^(0+128),w
  5679  0683  00D5               	movwf	(efgtoa@h+1)^(0+128)
  5680  0684  0820               	movf	?___flsub^(0+128),w
  5681  0685  00D4               	movwf	efgtoa@h^(0+128)
  5682  0686                     l3976:	
  5683                           
  5684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  5685  0686  3041               	movlw	65
  5686  0687  0020               	movlb	0	; select bank0
  5687  0688  00C3               	movwf	___fldiv@a+3
  5688  0689  3020               	movlw	32
  5689  068A  00C2               	movwf	___fldiv@a+2
  5690  068B  3000               	movlw	0
  5691  068C  00C1               	movwf	___fldiv@a+1
  5692  068D  3000               	movlw	0
  5693  068E  00C0               	movwf	___fldiv@a
  5694  068F  0021               	movlb	1	; select bank1
  5695  0690  0869               	movf	(efgtoa@u+3)^(0+128),w
  5696  0691  0020               	movlb	0	; select bank0
  5697  0692  00C7               	movwf	___fldiv@b+3
  5698  0693  0021               	movlb	1	; select bank1
  5699  0694  0868               	movf	(efgtoa@u+2)^(0+128),w
  5700  0695  0020               	movlb	0	; select bank0
  5701  0696  00C6               	movwf	___fldiv@b+2
  5702  0697  0021               	movlb	1	; select bank1
  5703  0698  0867               	movf	(efgtoa@u+1)^(0+128),w
  5704  0699  0020               	movlb	0	; select bank0
  5705  069A  00C5               	movwf	___fldiv@b+1
  5706  069B  0021               	movlb	1	; select bank1
  5707  069C  0866               	movf	efgtoa@u^(0+128),w
  5708  069D  0020               	movlb	0	; select bank0
  5709  069E  00C4               	movwf	___fldiv@b
  5710  069F  3194  2433  3180   	fcall	___fldiv
  5711  06A2  0020               	movlb	0	; select bank0
  5712  06A3  0843               	movf	?___fldiv+3,w
  5713  06A4  0021               	movlb	1	; select bank1
  5714  06A5  00E9               	movwf	(efgtoa@u+3)^(0+128)
  5715  06A6  0020               	movlb	0	; select bank0
  5716  06A7  0842               	movf	?___fldiv+2,w
  5717  06A8  0021               	movlb	1	; select bank1
  5718  06A9  00E8               	movwf	(efgtoa@u+2)^(0+128)
  5719  06AA  0020               	movlb	0	; select bank0
  5720  06AB  0841               	movf	?___fldiv+1,w
  5721  06AC  0021               	movlb	1	; select bank1
  5722  06AD  00E7               	movwf	(efgtoa@u+1)^(0+128)
  5723  06AE  0020               	movlb	0	; select bank0
  5724  06AF  0840               	movf	?___fldiv,w
  5725  06B0  0021               	movlb	1	; select bank1
  5726  06B1  00E6               	movwf	efgtoa@u^(0+128)
  5727  06B2                     l3978:	
  5728                           
  5729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  5730  06B2  30FF               	movlw	255
  5731  06B3  07C7               	addwf	efgtoa@ne^(0+128),f
  5732  06B4  30FF               	movlw	255
  5733  06B5  3DC8               	addwfc	(efgtoa@ne+1)^(0+128),f
  5734  06B6                     l3980:	
  5735                           
  5736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  5737  06B6  3001               	movlw	1
  5738  06B7  07DC               	addwf	efgtoa@i^(0+128),f
  5739  06B8  3000               	movlw	0
  5740  06B9  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  5741  06BA                     l3982:	
  5742                           
  5743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5744  06BA  085D               	movf	(efgtoa@i+1)^(0+128),w
  5745  06BB  3A80               	xorlw	128
  5746  06BC  00AD               	movwf	??_efgtoa^(0+128)
  5747  06BD  0846               	movf	(efgtoa@m+1)^(0+128),w
  5748  06BE  3A80               	xorlw	128
  5749  06BF  022D               	subwf	??_efgtoa^(0+128),w
  5750  06C0  1D03               	skipz
  5751  06C1  2EC4               	goto	u5315
  5752  06C2  0845               	movf	efgtoa@m^(0+128),w
  5753  06C3  025C               	subwf	efgtoa@i^(0+128),w
  5754  06C4                     u5315:	
  5755  06C4  1803               	skipnc
  5756  06C5  2EC7               	goto	u5311
  5757  06C6  2EC8               	goto	u5310
  5758  06C7                     u5311:	
  5759  06C7  2ED6               	goto	l3986
  5760  06C8                     u5310:	
  5761  06C8                     l3984:	
  5762  06C8  0021               	movlb	1	; select bank1
  5763  06C9  0865               	movf	(efgtoa@n+1)^(0+128),w
  5764  06CA  3A80               	xorlw	128
  5765  06CB  00AD               	movwf	??_efgtoa^(0+128)
  5766  06CC  3080               	movlw	128
  5767  06CD  022D               	subwf	??_efgtoa^(0+128),w
  5768  06CE  1D03               	skipz
  5769  06CF  2ED2               	goto	u5325
  5770  06D0  304B               	movlw	75
  5771  06D1  0264               	subwf	efgtoa@n^(0+128),w
  5772  06D2                     u5325:	
  5773  06D2  1C03               	skipc
  5774  06D3  2ED5               	goto	u5321
  5775  06D4  2ED6               	goto	u5320
  5776  06D5                     u5321:	
  5777  06D5  2D88               	goto	l3934
  5778  06D6                     u5320:	
  5779  06D6                     l3986:	
  5780                           
  5781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  5782  06D6  0021               	movlb	1	; select bank1
  5783  06D7  0843               	movf	efgtoa@pp^(0+128),w
  5784  06D8  0444               	iorwf	(efgtoa@pp+1)^(0+128),w
  5785  06D9  1D03               	btfss	3,2
  5786  06DA  2EDC               	goto	u5331
  5787  06DB  2EDD               	goto	u5330
  5788  06DC                     u5331:	
  5789  06DC  2EF0               	goto	l3994
  5790  06DD                     u5330:	
  5791  06DD                     l3988:	
  5792  06DD  0022               	movlb	2	; select bank2
  5793  06DE  1E67               	btfss	_flags^(0+256),4
  5794  06DF  2EE1               	goto	u5341
  5795  06E0  2EE2               	goto	u5340
  5796  06E1                     u5341:	
  5797  06E1  2EF0               	goto	l3994
  5798  06E2                     u5340:	
  5799  06E2                     l3990:	
  5800                           
  5801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  5802  06E2  302E               	movlw	46
  5803  06E3  0021               	movlb	1	; select bank1
  5804  06E4  00AD               	movwf	??_efgtoa^(0+128)
  5805  06E5  0864               	movf	efgtoa@n^(0+128),w
  5806  06E6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5807  06E7  0086               	movwf	6
  5808  06E8  3002               	movlw	2	; select bank4/5
  5809  06E9  0087               	movwf	7
  5810  06EA  082D               	movf	??_efgtoa^(0+128),w
  5811  06EB  0081               	movwf	1
  5812  06EC                     l3992:	
  5813  06EC  3001               	movlw	1
  5814  06ED  07E4               	addwf	efgtoa@n^(0+128),f
  5815  06EE  3000               	movlw	0
  5816  06EF  3DE5               	addwfc	(efgtoa@n+1)^(0+128),f
  5817  06F0                     l3994:	
  5818                           
  5819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  5820  06F0  0021               	movlb	1	; select bank1
  5821  06F1  0864               	movf	efgtoa@n^(0+128),w
  5822  06F2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5823  06F3  0086               	movwf	6
  5824  06F4  3002               	movlw	2	; select bank4/5
  5825  06F5  0087               	movwf	7
  5826  06F6  0181               	clrf	1
  5827  06F7                     l3996:	
  5828                           
  5829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  5830  06F7  3065               	movlw	101
  5831  06F8  0650               	xorwf	efgtoa@nmode^(0+128),w
  5832  06F9  1D03               	btfss	3,2
  5833  06FA  2EFC               	goto	u5351
  5834  06FB  2EFD               	goto	u5350
  5835  06FC                     u5351:	
  5836  06FC  2FC4               	goto	l4056
  5837  06FD                     u5350:	
  5838  06FD                     l3998:	
  5839                           
  5840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  5841  06FD  304F               	movlw	79
  5842  06FE  00DC               	movwf	efgtoa@i^(0+128)
  5843  06FF  3000               	movlw	0
  5844  0700  00DD               	movwf	(efgtoa@i^(0+128)+1)
  5845  0701                     l4000:	
  5846                           
  5847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  5848  0701  085C               	movf	efgtoa@i^(0+128),w
  5849  0702  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5850  0703  0086               	movwf	6
  5851  0704  3002               	movlw	2	; select bank4/5
  5852  0705  0087               	movwf	7
  5853  0706  0181               	clrf	1
  5854  0707                     l4002:	
  5855                           
  5856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  5857  0707  01CB               	clrf	efgtoa@sign^(0+128)
  5858  0708  01CC               	clrf	(efgtoa@sign+1)^(0+128)
  5859  0709                     l4004:	
  5860                           
  5861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  5862  0709  1FE3               	btfss	(efgtoa@e+1)^(0+128),7
  5863  070A  2F0C               	goto	u5361
  5864  070B  2F0D               	goto	u5360
  5865  070C                     u5361:	
  5866  070C  2F16               	goto	l4010
  5867  070D                     u5360:	
  5868  070D                     l4006:	
  5869                           
  5870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  5871  070D  3001               	movlw	1
  5872  070E  00CB               	movwf	efgtoa@sign^(0+128)
  5873  070F  3000               	movlw	0
  5874  0710  00CC               	movwf	(efgtoa@sign^(0+128)+1)
  5875  0711                     l4008:	
  5876                           
  5877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  5878  0711  09E2               	comf	efgtoa@e^(0+128),f
  5879  0712  09E3               	comf	(efgtoa@e+1)^(0+128),f
  5880  0713  0AE2               	incf	efgtoa@e^(0+128),f
  5881  0714  1903               	skipnz
  5882  0715  0AE3               	incf	(efgtoa@e+1)^(0+128),f
  5883  0716                     l4010:	
  5884                           
  5885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  5886  0716  3002               	movlw	2
  5887  0717  00CE               	movwf	efgtoa@p^(0+128)
  5888  0718  3000               	movlw	0
  5889  0719  00CF               	movwf	(efgtoa@p^(0+128)+1)
  5890                           
  5891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5892  071A  2F4E               	goto	l4022
  5893  071B                     l4012:	
  5894                           
  5895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  5896  071B  30FF               	movlw	255
  5897  071C  0021               	movlb	1	; select bank1
  5898  071D  07DC               	addwf	efgtoa@i^(0+128),f
  5899  071E  30FF               	movlw	255
  5900  071F  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  5901  0720                     l4014:	
  5902                           
  5903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5904  0720  300A               	movlw	10
  5905  0721  00F0               	movwf	___awmod@divisor
  5906  0722  3000               	movlw	0
  5907  0723  00F1               	movwf	___awmod@divisor+1
  5908  0724  0863               	movf	(efgtoa@e+1)^(0+128),w
  5909  0725  00F3               	movwf	___awmod@dividend+1
  5910  0726  0862               	movf	efgtoa@e^(0+128),w
  5911  0727  00F2               	movwf	___awmod@dividend
  5912  0728  3188  2000  3180   	fcall	___awmod
  5913  072B  0870               	movf	?___awmod,w
  5914  072C  3E30               	addlw	48
  5915  072D  0021               	movlb	1	; select bank1
  5916  072E  00AD               	movwf	??_efgtoa^(0+128)
  5917  072F  085C               	movf	efgtoa@i^(0+128),w
  5918  0730  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5919  0731  0086               	movwf	6
  5920  0732  3002               	movlw	2	; select bank4/5
  5921  0733  0087               	movwf	7
  5922  0734  082D               	movf	??_efgtoa^(0+128),w
  5923  0735  0081               	movwf	1
  5924  0736                     l4016:	
  5925                           
  5926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5927  0736  300A               	movlw	10
  5928  0737  00F0               	movwf	___awdiv@divisor
  5929  0738  3000               	movlw	0
  5930  0739  00F1               	movwf	___awdiv@divisor+1
  5931  073A  0863               	movf	(efgtoa@e+1)^(0+128),w
  5932  073B  00F3               	movwf	___awdiv@dividend+1
  5933  073C  0862               	movf	efgtoa@e^(0+128),w
  5934  073D  00F2               	movwf	___awdiv@dividend
  5935  073E  3190  20FA  3180   	fcall	___awdiv
  5936  0741  0871               	movf	?___awdiv+1,w
  5937  0742  0021               	movlb	1	; select bank1
  5938  0743  00E3               	movwf	(efgtoa@e+1)^(0+128)
  5939  0744  0870               	movf	?___awdiv,w
  5940  0745  00E2               	movwf	efgtoa@e^(0+128)
  5941  0746                     l4018:	
  5942                           
  5943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5944  0746  30FF               	movlw	255
  5945  0747  07CE               	addwf	efgtoa@p^(0+128),f
  5946  0748  30FF               	movlw	255
  5947  0749  3DCF               	addwfc	(efgtoa@p+1)^(0+128),f
  5948  074A                     l4020:	
  5949                           
  5950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5951  074A  30FF               	movlw	255
  5952  074B  07D1               	addwf	efgtoa@w^(0+128),f
  5953  074C  30FF               	movlw	255
  5954  074D  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  5955  074E                     l4022:	
  5956                           
  5957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5958  074E  0862               	movf	efgtoa@e^(0+128),w
  5959  074F  0463               	iorwf	(efgtoa@e+1)^(0+128),w
  5960  0750  1D03               	btfss	3,2
  5961  0751  2F53               	goto	u5371
  5962  0752  2F54               	goto	u5370
  5963  0753                     u5371:	
  5964  0753  2F1B               	goto	l4012
  5965  0754                     u5370:	
  5966  0754                     l4024:	
  5967  0754  084F               	movf	(efgtoa@p+1)^(0+128),w
  5968  0755  3A80               	xorlw	128
  5969  0756  00AD               	movwf	??_efgtoa^(0+128)
  5970  0757  3080               	movlw	128
  5971  0758  022D               	subwf	??_efgtoa^(0+128),w
  5972  0759  1D03               	skipz
  5973  075A  2F5D               	goto	u5385
  5974  075B  3001               	movlw	1
  5975  075C  024E               	subwf	efgtoa@p^(0+128),w
  5976  075D                     u5385:	
  5977  075D  1803               	skipnc
  5978  075E  2F60               	goto	u5381
  5979  075F  2F61               	goto	u5380
  5980  0760                     u5381:	
  5981  0760  2F1B               	goto	l4012
  5982  0761                     u5380:	
  5983  0761                     l4026:	
  5984                           
  5985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5986  0761  30FF               	movlw	255
  5987  0762  0021               	movlb	1	; select bank1
  5988  0763  07DC               	addwf	efgtoa@i^(0+128),f
  5989  0764  30FF               	movlw	255
  5990  0765  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  5991  0766                     l4028:	
  5992                           
  5993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5994  0766  084B               	movf	efgtoa@sign^(0+128),w
  5995  0767  044C               	iorwf	(efgtoa@sign+1)^(0+128),w
  5996  0768  1D03               	btfss	3,2
  5997  0769  2F6B               	goto	u5391
  5998  076A  2F6C               	goto	u5390
  5999  076B                     u5391:	
  6000  076B  2F71               	goto	l4032
  6001  076C                     u5390:	
  6002  076C                     l4030:	
  6003  076C  302B               	movlw	43
  6004  076D  00BB               	movwf	_efgtoa$825^(0+128)
  6005  076E  3000               	movlw	0
  6006  076F  00BC               	movwf	(_efgtoa$825^(0+128)+1)
  6007  0770  2F75               	goto	l4034
  6008  0771                     l4032:	
  6009  0771  302D               	movlw	45
  6010  0772  00BB               	movwf	_efgtoa$825^(0+128)
  6011  0773  3000               	movlw	0
  6012  0774  00BC               	movwf	(_efgtoa$825^(0+128)+1)
  6013  0775                     l4034:	
  6014  0775  083B               	movf	_efgtoa$825^(0+128),w
  6015  0776  00AD               	movwf	??_efgtoa^(0+128)
  6016  0777  085C               	movf	efgtoa@i^(0+128),w
  6017  0778  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6018  0779  0086               	movwf	6
  6019  077A  3002               	movlw	2	; select bank4/5
  6020  077B  0087               	movwf	7
  6021  077C  082D               	movf	??_efgtoa^(0+128),w
  6022  077D  0081               	movwf	1
  6023  077E                     l4036:	
  6024                           
  6025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  6026  077E  30FF               	movlw	255
  6027  077F  07D1               	addwf	efgtoa@w^(0+128),f
  6028  0780  30FF               	movlw	255
  6029  0781  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  6030  0782                     l4038:	
  6031                           
  6032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6033  0782  30FF               	movlw	255
  6034  0783  07DC               	addwf	efgtoa@i^(0+128),f
  6035  0784  30FF               	movlw	255
  6036  0785  3DDD               	addwfc	(efgtoa@i+1)^(0+128),f
  6037  0786                     l4040:	
  6038  0786  082C               	movf	efgtoa@c^(0+128),w
  6039  0787  3EBF               	addlw	191
  6040  0788  00AD               	movwf	??_efgtoa^(0+128)
  6041  0789  30FF               	movlw	255
  6042  078A  1803               	skipnc
  6043  078B  3000               	movlw	0
  6044  078C  00AE               	movwf	(??_efgtoa^(0+128)+1)
  6045  078D  3000               	movlw	0
  6046  078E  022E               	subwf	(??_efgtoa+1)^(0+128),w
  6047  078F  301A               	movlw	26
  6048  0790  1903               	skipnz
  6049  0791  022D               	subwf	??_efgtoa^(0+128),w
  6050  0792  1C03               	skipc
  6051  0793  2F95               	goto	u5401
  6052  0794  2F97               	goto	u5400
  6053  0795                     u5401:	
  6054  0795  3001               	movlw	1
  6055  0796  2F98               	goto	u5410
  6056  0797                     u5400:	
  6057  0797  3000               	movlw	0
  6058  0798                     u5410:	
  6059  0798  00AF               	movwf	(??_efgtoa+2)^(0+128)
  6060  0799  01B0               	clrf	((??_efgtoa+2)^(0+128)+1)
  6061  079A  082F               	movf	(??_efgtoa+2)^(0+128),w
  6062  079B  00BF               	movwf	_efgtoa$827^(0+128)
  6063  079C  0830               	movf	(??_efgtoa+3)^(0+128),w
  6064  079D  00C0               	movwf	(_efgtoa$827+1)^(0+128)
  6065  079E                     l4044:	
  6066  079E  083F               	movf	_efgtoa$827^(0+128),w
  6067  079F  0440               	iorwf	(_efgtoa$827+1)^(0+128),w
  6068  07A0  1D03               	btfss	3,2
  6069  07A1  2FA3               	goto	u5421
  6070  07A2  2FA4               	goto	u5420
  6071  07A3                     u5421:	
  6072  07A3  2FA9               	goto	l4048
  6073  07A4                     u5420:	
  6074  07A4                     l4046:	
  6075  07A4  3065               	movlw	101
  6076  07A5  00BD               	movwf	_efgtoa$826^(0+128)
  6077  07A6  3000               	movlw	0
  6078  07A7  00BE               	movwf	(_efgtoa$826^(0+128)+1)
  6079  07A8  2FAD               	goto	l4050
  6080  07A9                     l4048:	
  6081  07A9  3045               	movlw	69
  6082  07AA  00BD               	movwf	_efgtoa$826^(0+128)
  6083  07AB  3000               	movlw	0
  6084  07AC  00BE               	movwf	(_efgtoa$826^(0+128)+1)
  6085  07AD                     l4050:	
  6086  07AD  083D               	movf	_efgtoa$826^(0+128),w
  6087  07AE  00AD               	movwf	??_efgtoa^(0+128)
  6088  07AF  085C               	movf	efgtoa@i^(0+128),w
  6089  07B0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6090  07B1  0086               	movwf	6
  6091  07B2  3002               	movlw	2	; select bank4/5
  6092  07B3  0087               	movwf	7
  6093  07B4  082D               	movf	??_efgtoa^(0+128),w
  6094  07B5  0081               	movwf	1
  6095  07B6                     l4052:	
  6096                           
  6097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  6098  07B6  30FF               	movlw	255
  6099  07B7  07D1               	addwf	efgtoa@w^(0+128),f
  6100  07B8  30FF               	movlw	255
  6101  07B9  3DD2               	addwfc	(efgtoa@w+1)^(0+128),f
  6102  07BA                     l4054:	
  6103                           
  6104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  6105  07BA  085C               	movf	efgtoa@i^(0+128),w
  6106  07BB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6107  07BC  00F0               	movwf	strcpy@src
  6108  07BD  3002               	movlw	2
  6109  07BE  00F1               	movwf	strcpy@src+1
  6110  07BF  0864               	movf	efgtoa@n^(0+128),w
  6111  07C0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6112  07C1  319B  23CD  3180   	fcall	_strcpy
  6113  07C4                     l4056:	
  6114                           
  6115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  6116  07C4  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6117  07C5  0021               	movlb	1	; select bank1
  6118  07C6  00AD               	movwf	??_efgtoa^(0+128)
  6119  07C7  082D               	movf	??_efgtoa^(0+128),w
  6120  07C8  0020               	movlb	0	; select bank0
  6121  07C9  00A4               	movwf	pad@buf
  6122  07CA  0021               	movlb	1	; select bank1
  6123  07CB  0852               	movf	(efgtoa@w+1)^(0+128),w
  6124  07CC  0020               	movlb	0	; select bank0
  6125  07CD  00A6               	movwf	pad@p+1
  6126  07CE  0021               	movlb	1	; select bank1
  6127  07CF  0851               	movf	efgtoa@w^(0+128),w
  6128  07D0  0020               	movlb	0	; select bank0
  6129  07D1  00A5               	movwf	pad@p
  6130  07D2  0021               	movlb	1	; select bank1
  6131  07D3  084D               	movf	efgtoa@fp^(0+128),w
  6132  07D4  319F  274D  3180   	fcall	_pad
  6133  07D7  0020               	movlb	0	; select bank0
  6134  07D8  0825               	movf	?_pad+1,w
  6135  07D9  0021               	movlb	1	; select bank1
  6136  07DA  00A9               	movwf	(?_efgtoa+1)^(0+128)
  6137  07DB  0020               	movlb	0	; select bank0
  6138  07DC  0824               	movf	?_pad,w
  6139  07DD  0021               	movlb	1	; select bank1
  6140  07DE  00A8               	movwf	?_efgtoa^(0+128)
  6141  07DF                     l485:	
  6142  07DF  0008               	return
  6143  07E0                     __end_of_efgtoa:	
  6144                           
  6145                           	psect	text6
  6146  1C35                     __ptext6:	
  6147 ;; *************** function _tolower *****************
  6148 ;; Defined at:
  6149 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  c               2    6[COMMON] int 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  2    6[COMMON] int 
  6156 ;; Registers used:
  6157 ;;		wreg, status,2, status,0
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;Total ram usage:        8 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    1
  6170 ;; This function calls:
  6171 ;;		_isupper
  6172 ;; This function is called by:
  6173 ;;		_efgtoa
  6174 ;;		_vfpfcnvrt
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           
  6179                           ;psect for function _tolower
  6180  1C35                     _tolower:	
  6181  1C35                     l3252:	
  6182                           ;incstack = 0
  6183                           ; Regs used in _tolower: [wreg+status,2+status,0]
  6184                           
  6185  1C35  0876               	movf	tolower@c,w
  6186  1C36  3EBF               	addlw	191
  6187  1C37  00F8               	movwf	??_tolower
  6188  1C38  30FF               	movlw	255
  6189  1C39  3D77               	addwfc	tolower@c+1,w
  6190  1C3A  00F9               	movwf	??_tolower+1
  6191  1C3B  3000               	movlw	0
  6192  1C3C  0279               	subwf	??_tolower+1,w
  6193  1C3D  301A               	movlw	26
  6194  1C3E  1903               	skipnz
  6195  1C3F  0278               	subwf	??_tolower,w
  6196  1C40  1C03               	skipc
  6197  1C41  2C43               	goto	u3761
  6198  1C42  2C45               	goto	u3760
  6199  1C43                     u3761:	
  6200  1C43  3001               	movlw	1
  6201  1C44  2C46               	goto	u3770
  6202  1C45                     u3760:	
  6203  1C45  3000               	movlw	0
  6204  1C46                     u3770:	
  6205  1C46  00FA               	movwf	??_tolower+2
  6206  1C47  01FB               	clrf	??_tolower+3
  6207  1C48  087A               	movf	??_tolower+2,w
  6208  1C49  00FC               	movwf	_tolower$1271
  6209  1C4A  087B               	movf	??_tolower+3,w
  6210  1C4B  00FD               	movwf	_tolower$1271+1
  6211  1C4C                     l3256:	
  6212  1C4C  087C               	movf	_tolower$1271,w
  6213  1C4D  047D               	iorwf	_tolower$1271+1,w
  6214  1C4E  1903               	btfsc	3,2
  6215  1C4F  2C51               	goto	u3781
  6216  1C50  2C52               	goto	u3780
  6217  1C51                     u3781:	
  6218  1C51  2C59               	goto	l1184
  6219  1C52                     u3780:	
  6220  1C52                     l3258:	
  6221  1C52  3020               	movlw	32
  6222  1C53  0476               	iorwf	tolower@c,w
  6223  1C54  00F6               	movwf	?_tolower
  6224  1C55  3000               	movlw	0
  6225  1C56  0477               	iorwf	tolower@c+1,w
  6226  1C57  00F7               	movwf	?_tolower+1
  6227  1C58  2C59               	goto	l1189
  6228  1C59                     l1184:	
  6229  1C59                     l1189:	
  6230  1C59  0008               	return
  6231  1C5A                     __end_of_tolower:	
  6232                           
  6233                           	psect	text7
  6234  1B23                     __ptext7:	
  6235 ;; *************** function _isupper *****************
  6236 ;; Defined at:
  6237 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  c               2    0[COMMON] int 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;		None
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  2    0[COMMON] int 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6253 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6254 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6255 ;;Total ram usage:        6 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		_efgtoa
  6261 ;;		_vfpfcnvrt
  6262 ;;		_tolower
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           
  6267                           ;psect for function _isupper
  6268  1B23                     _isupper:	
  6269  1B23                     l2978:	
  6270                           ;incstack = 0
  6271                           ; Regs used in _isupper: [wreg+status,2+status,0]
  6272                           
  6273  1B23  0870               	movf	isupper@c,w
  6274  1B24  3EBF               	addlw	191
  6275  1B25  00F2               	movwf	??_isupper
  6276  1B26  30FF               	movlw	255
  6277  1B27  3D71               	addwfc	isupper@c+1,w
  6278  1B28  00F3               	movwf	??_isupper+1
  6279  1B29  3000               	movlw	0
  6280  1B2A  0273               	subwf	??_isupper+1,w
  6281  1B2B  301A               	movlw	26
  6282  1B2C  1903               	skipnz
  6283  1B2D  0272               	subwf	??_isupper,w
  6284  1B2E  1C03               	skipc
  6285  1B2F  2B31               	goto	u3151
  6286  1B30  2B33               	goto	u3150
  6287  1B31                     u3151:	
  6288  1B31  3001               	movlw	1
  6289  1B32  2B34               	goto	u3160
  6290  1B33                     u3150:	
  6291  1B33  3000               	movlw	0
  6292  1B34                     u3160:	
  6293  1B34  00F4               	movwf	??_isupper+2
  6294  1B35  01F5               	clrf	??_isupper+3
  6295  1B36  0874               	movf	??_isupper+2,w
  6296  1B37  00F0               	movwf	?_isupper
  6297  1B38  0875               	movf	??_isupper+3,w
  6298  1B39  00F1               	movwf	?_isupper+1
  6299  1B3A                     l1125:	
  6300  1B3A  0008               	return
  6301  1B3B                     __end_of_isupper:	
  6302                           
  6303                           	psect	text8
  6304  1BCD                     __ptext8:	
  6305 ;; *************** function _strcpy *****************
  6306 ;; Defined at:
  6307 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  dest            1    wreg     PTR unsigned char 
  6310 ;;		 -> dbuf(80), 
  6311 ;;  src             2    0[COMMON] PTR const unsigned char 
  6312 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  6313 ;;		 -> dbuf(80), 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  dest            1    7[COMMON] PTR unsigned char 
  6316 ;;		 -> dbuf(80), 
  6317 ;;  s               2    4[COMMON] PTR const unsigned char 
  6318 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  6319 ;;		 -> dbuf(80), 
  6320 ;;  d               1    6[COMMON] PTR unsigned char 
  6321 ;;		 -> dbuf(80), 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1    wreg      PTR unsigned char 
  6324 ;; Registers used:
  6325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6334 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;Total ram usage:        8 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; This function calls:
  6338 ;;		Nothing
  6339 ;; This function is called by:
  6340 ;;		_efgtoa
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           
  6345                           ;psect for function _strcpy
  6346  1BCD                     _strcpy:	
  6347                           
  6348                           ;incstack = 0
  6349                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6350                           ;strcpy@dest stored from wreg
  6351  1BCD  00F7               	movwf	strcpy@dest
  6352  1BCE                     l3248:	
  6353  1BCE  0871               	movf	strcpy@src+1,w
  6354  1BCF  00F5               	movwf	strcpy@s+1
  6355  1BD0  0870               	movf	strcpy@src,w
  6356  1BD1  00F4               	movwf	strcpy@s
  6357  1BD2  0877               	movf	strcpy@dest,w
  6358  1BD3  00F2               	movwf	??_strcpy
  6359  1BD4  0872               	movf	??_strcpy,w
  6360  1BD5  00F6               	movwf	strcpy@d
  6361  1BD6                     l3250:	
  6362  1BD6  0876               	movf	strcpy@d,w
  6363  1BD7  0086               	movwf	6
  6364  1BD8  3002               	movlw	2	; select bank4/5
  6365  1BD9  0087               	movwf	7
  6366  1BDA  0AF6               	incf	strcpy@d,f
  6367  1BDB  0875               	movf	strcpy@s+1,w
  6368  1BDC  00F3               	movwf	??_strcpy+1
  6369  1BDD  0874               	movf	strcpy@s,w
  6370  1BDE  00F2               	movwf	??_strcpy
  6371  1BDF  0AF4               	incf	strcpy@s,f
  6372  1BE0  1903               	skipnz
  6373  1BE1  0AF5               	incf	strcpy@s+1,f
  6374  1BE2  0872               	movf	??_strcpy,w
  6375  1BE3  0084               	movwf	4
  6376  1BE4  0873               	movf	??_strcpy+1,w
  6377  1BE5  0085               	movwf	5
  6378  1BE6  0800               	movf	0,w	;code access
  6379  1BE7  3FC0               	movwi [0]fsr1
  6380  1BE8  0889               	movf	9,f
  6381  1BE9  1D03               	btfss	3,2
  6382  1BEA  2BEC               	goto	u3751
  6383  1BEB  2BED               	goto	u3750
  6384  1BEC                     u3751:	
  6385  1BEC  2BD6               	goto	l3250
  6386  1BED                     u3750:	
  6387  1BED                     l1164:	
  6388  1BED  0008               	return
  6389  1BEE                     __end_of_strcpy:	
  6390                           
  6391                           	psect	text9
  6392  1F4D                     __ptext9:	
  6393 ;; *************** function _pad *****************
  6394 ;; Defined at:
  6395 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;  fp              1    wreg     PTR struct _IO_FILE
  6398 ;;		 -> sprintf@f(5), 
  6399 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  6400 ;;		 -> dbuf(80), 
  6401 ;;  p               2    5[BANK0 ] int 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  6404 ;;		 -> sprintf@f(5), 
  6405 ;;  w               2    9[BANK0 ] int 
  6406 ;;  i               2    7[BANK0 ] int 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  2    4[BANK0 ] int 
  6409 ;; Registers used:
  6410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6416 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;Total ram usage:        9 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    3
  6423 ;; This function calls:
  6424 ;;		_fputc
  6425 ;;		_fputs
  6426 ;;		_strlen
  6427 ;; This function is called by:
  6428 ;;		_efgtoa
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function _pad
  6434  1F4D                     _pad:	
  6435                           
  6436                           ;incstack = 0
  6437                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6438                           ;pad@fp stored from wreg
  6439  1F4D  0020               	movlb	0	; select bank0
  6440  1F4E  00AB               	movwf	pad@fp
  6441  1F4F                     l3202:	
  6442                           
  6443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6444  1F4F  0022               	movlb	2	; select bank2
  6445  1F50  1C67               	btfss	_flags^(0+256),0
  6446  1F51  2F53               	goto	u3631
  6447  1F52  2F54               	goto	u3630
  6448  1F53                     u3631:	
  6449  1F53  2F5D               	goto	l3206
  6450  1F54                     u3630:	
  6451  1F54                     l3204:	
  6452                           
  6453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6454  1F54  0020               	movlb	0	; select bank0
  6455  1F55  082B               	movf	pad@fp,w
  6456  1F56  00FC               	movwf	??_pad
  6457  1F57  087C               	movf	??_pad,w
  6458  1F58  00F8               	movwf	fputs@fp
  6459  1F59  0824               	movf	pad@buf,w
  6460  1F5A  319C  245A  319F   	fcall	_fputs
  6461  1F5D                     l3206:	
  6462                           
  6463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6464  1F5D  0020               	movlb	0	; select bank0
  6465  1F5E  1BA6               	btfsc	pad@p+1,7
  6466  1F5F  2F61               	goto	u3641
  6467  1F60  2F62               	goto	u3640
  6468  1F61                     u3641:	
  6469  1F61  2F67               	goto	l3210
  6470  1F62                     u3640:	
  6471  1F62                     l3208:	
  6472  1F62  0826               	movf	pad@p+1,w
  6473  1F63  00AA               	movwf	pad@w+1
  6474  1F64  0825               	movf	pad@p,w
  6475  1F65  00A9               	movwf	pad@w
  6476  1F66  2F69               	goto	l462
  6477  1F67                     l3210:	
  6478  1F67  01A9               	clrf	pad@w
  6479  1F68  01AA               	clrf	pad@w+1
  6480  1F69                     l462:	
  6481                           
  6482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6483  1F69  01A7               	clrf	pad@i
  6484  1F6A  01A8               	clrf	pad@i+1
  6485                           
  6486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6487  1F6B  2F7D               	goto	l3216
  6488  1F6C                     l3212:	
  6489                           
  6490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6491  1F6C  3020               	movlw	32
  6492  1F6D  00F0               	movwf	fputc@c
  6493  1F6E  3000               	movlw	0
  6494  1F6F  00F1               	movwf	fputc@c+1
  6495  1F70  0020               	movlb	0	; select bank0
  6496  1F71  082B               	movf	pad@fp,w
  6497  1F72  00FC               	movwf	??_pad
  6498  1F73  087C               	movf	??_pad,w
  6499  1F74  00F2               	movwf	fputc@fp
  6500  1F75  319E  26F7  319F   	fcall	_fputc
  6501  1F78                     l3214:	
  6502                           
  6503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6504  1F78  3001               	movlw	1
  6505  1F79  0020               	movlb	0	; select bank0
  6506  1F7A  07A7               	addwf	pad@i,f
  6507  1F7B  3000               	movlw	0
  6508  1F7C  3DA8               	addwfc	pad@i+1,f
  6509  1F7D                     l3216:	
  6510                           
  6511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6512  1F7D  0828               	movf	pad@i+1,w
  6513  1F7E  3A80               	xorlw	128
  6514  1F7F  00FC               	movwf	??_pad
  6515  1F80  082A               	movf	pad@w+1,w
  6516  1F81  3A80               	xorlw	128
  6517  1F82  027C               	subwf	??_pad,w
  6518  1F83  1D03               	skipz
  6519  1F84  2F87               	goto	u3655
  6520  1F85  0829               	movf	pad@w,w
  6521  1F86  0227               	subwf	pad@i,w
  6522  1F87                     u3655:	
  6523  1F87  1C03               	skipc
  6524  1F88  2F8A               	goto	u3651
  6525  1F89  2F8B               	goto	u3650
  6526  1F8A                     u3651:	
  6527  1F8A  2F6C               	goto	l3212
  6528  1F8B                     u3650:	
  6529  1F8B                     l465:	
  6530                           
  6531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6532  1F8B  0022               	movlb	2	; select bank2
  6533  1F8C  1867               	btfsc	_flags^(0+256),0
  6534  1F8D  2F8F               	goto	u3661
  6535  1F8E  2F90               	goto	u3660
  6536  1F8F                     u3661:	
  6537  1F8F  2F99               	goto	l3220
  6538  1F90                     u3660:	
  6539  1F90                     l3218:	
  6540                           
  6541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6542  1F90  0020               	movlb	0	; select bank0
  6543  1F91  082B               	movf	pad@fp,w
  6544  1F92  00FC               	movwf	??_pad
  6545  1F93  087C               	movf	??_pad,w
  6546  1F94  00F8               	movwf	fputs@fp
  6547  1F95  0824               	movf	pad@buf,w
  6548  1F96  319C  245A  319F   	fcall	_fputs
  6549  1F99                     l3220:	
  6550                           
  6551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6552  1F99  0020               	movlb	0	; select bank0
  6553  1F9A  0824               	movf	pad@buf,w
  6554  1F9B  319B  2354  319F   	fcall	_strlen
  6555  1F9E  0020               	movlb	0	; select bank0
  6556  1F9F  0829               	movf	pad@w,w
  6557  1FA0  0770               	addwf	?_strlen,w
  6558  1FA1  00A4               	movwf	?_pad
  6559  1FA2  082A               	movf	pad@w+1,w
  6560  1FA3  3D71               	addwfc	?_strlen+1,w
  6561  1FA4  00A5               	movwf	?_pad+1
  6562  1FA5                     l467:	
  6563  1FA5  0008               	return
  6564  1FA6                     __end_of_pad:	
  6565                           
  6566                           	psect	text10
  6567  1B54                     __ptext10:	
  6568 ;; *************** function _strlen *****************
  6569 ;; Defined at:
  6570 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  s               1    wreg     PTR const unsigned char 
  6573 ;;		 -> dbuf(80), 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  s               1    4[COMMON] PTR const unsigned char 
  6576 ;;		 -> dbuf(80), 
  6577 ;;  a               1    3[COMMON] PTR const unsigned char 
  6578 ;;		 -> dbuf(80), 
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  2    0[COMMON] unsigned int 
  6581 ;; Registers used:
  6582 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;Total ram usage:        5 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_pad
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           
  6602                           ;psect for function _strlen
  6603  1B54                     _strlen:	
  6604                           
  6605                           ;incstack = 0
  6606                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6607                           ;strlen@s stored from wreg
  6608  1B54  00F4               	movwf	strlen@s
  6609  1B55                     l2968:	
  6610  1B55  0874               	movf	strlen@s,w
  6611  1B56  00F2               	movwf	??_strlen
  6612  1B57  0872               	movf	??_strlen,w
  6613  1B58  00F3               	movwf	strlen@a
  6614  1B59  2B5E               	goto	l2972
  6615  1B5A                     l2970:	
  6616  1B5A  3001               	movlw	1
  6617  1B5B  00F2               	movwf	??_strlen
  6618  1B5C  0872               	movf	??_strlen,w
  6619  1B5D  07F4               	addwf	strlen@s,f
  6620  1B5E                     l2972:	
  6621  1B5E  0874               	movf	strlen@s,w
  6622  1B5F  0086               	movwf	6
  6623  1B60  3002               	movlw	2	; select bank4/5
  6624  1B61  0087               	movwf	7
  6625  1B62  0801               	movf	1,w
  6626  1B63  1D03               	btfss	3,2
  6627  1B64  2B66               	goto	u3141
  6628  1B65  2B67               	goto	u3140
  6629  1B66                     u3141:	
  6630  1B66  2B5A               	goto	l2970
  6631  1B67                     u3140:	
  6632  1B67                     l2974:	
  6633  1B67  0873               	movf	strlen@a,w
  6634  1B68  0274               	subwf	strlen@s,w
  6635  1B69  00F0               	movwf	?_strlen
  6636  1B6A  01F1               	clrf	?_strlen+1
  6637  1B6B  1BF0               	btfsc	?_strlen,7
  6638  1B6C  03F1               	decf	?_strlen+1,f
  6639  1B6D                     l1170:	
  6640  1B6D  0008               	return
  6641  1B6E                     __end_of_strlen:	
  6642                           
  6643                           	psect	text11
  6644  1C5A                     __ptext11:	
  6645 ;; *************** function _fputs *****************
  6646 ;; Defined at:
  6647 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  s               1    wreg     PTR const unsigned char 
  6650 ;;		 -> dbuf(80), 
  6651 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6652 ;;		 -> sprintf@f(5), 
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6655 ;;		 -> dbuf(80), 
  6656 ;;  i               2    1[BANK0 ] int 
  6657 ;;  c               1    0[BANK0 ] unsigned char 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  2    8[COMMON] int 
  6660 ;; Registers used:
  6661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6667 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6668 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6670 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6671 ;;Total ram usage:        8 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:    2
  6674 ;; This function calls:
  6675 ;;		_fputc
  6676 ;; This function is called by:
  6677 ;;		_pad
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           
  6682                           ;psect for function _fputs
  6683  1C5A                     _fputs:	
  6684                           
  6685                           ;incstack = 0
  6686                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6687                           ;fputs@s stored from wreg
  6688  1C5A  0020               	movlb	0	; select bank0
  6689  1C5B  00A3               	movwf	fputs@s
  6690  1C5C                     l2960:	
  6691  1C5C  01A1               	clrf	fputs@i
  6692  1C5D  01A2               	clrf	fputs@i+1
  6693  1C5E  2C72               	goto	l2966
  6694  1C5F                     l2962:	
  6695  1C5F  0820               	movf	fputs@c,w
  6696  1C60  00F9               	movwf	??_fputs
  6697  1C61  01FA               	clrf	??_fputs+1
  6698  1C62  0879               	movf	??_fputs,w
  6699  1C63  00F0               	movwf	fputc@c
  6700  1C64  087A               	movf	??_fputs+1,w
  6701  1C65  00F1               	movwf	fputc@c+1
  6702  1C66  0878               	movf	fputs@fp,w
  6703  1C67  00FB               	movwf	??_fputs+2
  6704  1C68  087B               	movf	??_fputs+2,w
  6705  1C69  00F2               	movwf	fputc@fp
  6706  1C6A  319E  26F7  319C   	fcall	_fputc
  6707  1C6D                     l2964:	
  6708  1C6D  3001               	movlw	1
  6709  1C6E  0020               	movlb	0	; select bank0
  6710  1C6F  07A1               	addwf	fputs@i,f
  6711  1C70  3000               	movlw	0
  6712  1C71  3DA2               	addwfc	fputs@i+1,f
  6713  1C72                     l2966:	
  6714  1C72  0821               	movf	fputs@i,w
  6715  1C73  0723               	addwf	fputs@s,w
  6716  1C74  00F9               	movwf	??_fputs
  6717  1C75  0879               	movf	??_fputs,w
  6718  1C76  0086               	movwf	6
  6719  1C77  3002               	movlw	2	; select bank4/5
  6720  1C78  0087               	movwf	7
  6721  1C79  0801               	movf	1,w
  6722  1C7A  00FA               	movwf	??_fputs+1
  6723  1C7B  087A               	movf	??_fputs+1,w
  6724  1C7C  00A0               	movwf	fputs@c
  6725  1C7D  0820               	movf	fputs@c,w
  6726  1C7E  1D03               	btfss	3,2
  6727  1C7F  2C81               	goto	u3131
  6728  1C80  2C82               	goto	u3130
  6729  1C81                     u3131:	
  6730  1C81  2C5F               	goto	l2962
  6731  1C82                     u3130:	
  6732  1C82                     l1148:	
  6733  1C82  0008               	return
  6734  1C83                     __end_of_fputs:	
  6735                           
  6736                           	psect	text12
  6737  1EF7                     __ptext12:	
  6738 ;; *************** function _fputc *****************
  6739 ;; Defined at:
  6740 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  c               2    0[COMMON] int 
  6743 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6744 ;;		 -> sprintf@f(5), 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;		None
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  2    0[COMMON] int 
  6749 ;; Registers used:
  6750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6756 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;Total ram usage:        8 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; Hardware stack levels required when called:    1
  6763 ;; This function calls:
  6764 ;;		_putch
  6765 ;; This function is called by:
  6766 ;;		_pad
  6767 ;;		_vfpfcnvrt
  6768 ;;		_fputs
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           
  6773                           ;psect for function _fputc
  6774  1EF7                     _fputc:	
  6775  1EF7                     l2940:	
  6776                           ;incstack = 0
  6777                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6778                           
  6779  1EF7  0872               	movf	fputc@fp,w
  6780  1EF8  1903               	btfsc	3,2
  6781  1EF9  2EFB               	goto	u3071
  6782  1EFA  2EFC               	goto	u3070
  6783  1EFB                     u3071:	
  6784  1EFB  2F01               	goto	l2944
  6785  1EFC                     u3070:	
  6786  1EFC                     l2942:	
  6787  1EFC  0872               	movf	fputc@fp,w
  6788  1EFD  1D03               	btfss	3,2
  6789  1EFE  2F00               	goto	u3081
  6790  1EFF  2F01               	goto	u3080
  6791  1F00                     u3081:	
  6792  1F00  2F06               	goto	l2946
  6793  1F01                     u3080:	
  6794  1F01                     l2944:	
  6795  1F01  0870               	movf	fputc@c,w
  6796  1F02  319A  22AF  319E   	fcall	_putch
  6797  1F05  2F4C               	goto	l1140
  6798  1F06                     l2946:	
  6799  1F06  0872               	movf	fputc@fp,w
  6800  1F07  3E03               	addlw	3
  6801  1F08  0086               	movwf	6
  6802  1F09  3001               	movlw	1	; select bank2/3
  6803  1F0A  0087               	movwf	7
  6804  1F0B  0016               	moviw fsr1++
  6805  1F0C  0401               	iorwf	1,w
  6806  1F0D  1903               	btfsc	3,2
  6807  1F0E  2F10               	goto	u3091
  6808  1F0F  2F11               	goto	u3090
  6809  1F10                     u3091:	
  6810  1F10  2F30               	goto	l2950
  6811  1F11                     u3090:	
  6812  1F11                     l2948:	
  6813  1F11  0872               	movf	fputc@fp,w
  6814  1F12  3E03               	addlw	3
  6815  1F13  0086               	movwf	6
  6816  1F14  3001               	movlw	1	; select bank2/3
  6817  1F15  0087               	movwf	7
  6818  1F16  3F40               	moviw [0]fsr1
  6819  1F17  00F3               	movwf	??_fputc
  6820  1F18  3F41               	moviw [1]fsr1
  6821  1F19  00F4               	movwf	??_fputc+1
  6822  1F1A  0A72               	incf	fputc@fp,w
  6823  1F1B  0086               	movwf	6
  6824  1F1C  3001               	movlw	1	; select bank2/3
  6825  1F1D  0087               	movwf	7
  6826  1F1E  3F40               	moviw [0]fsr1
  6827  1F1F  00F5               	movwf	??_fputc+2
  6828  1F20  3F41               	moviw [1]fsr1
  6829  1F21  00F6               	movwf	??_fputc+3
  6830  1F22  0876               	movf	??_fputc+3,w
  6831  1F23  3A80               	xorlw	128
  6832  1F24  00F7               	movwf	??_fputc+4
  6833  1F25  0874               	movf	??_fputc+1,w
  6834  1F26  3A80               	xorlw	128
  6835  1F27  0277               	subwf	??_fputc+4,w
  6836  1F28  1D03               	skipz
  6837  1F29  2F2C               	goto	u3105
  6838  1F2A  0873               	movf	??_fputc,w
  6839  1F2B  0275               	subwf	??_fputc+2,w
  6840  1F2C                     u3105:	
  6841  1F2C  1803               	skipnc
  6842  1F2D  2F2F               	goto	u3101
  6843  1F2E  2F30               	goto	u3100
  6844  1F2F                     u3101:	
  6845  1F2F  2F4C               	goto	l1140
  6846  1F30                     u3100:	
  6847  1F30                     l2950:	
  6848  1F30  0870               	movf	fputc@c,w
  6849  1F31  00F3               	movwf	??_fputc
  6850  1F32  0872               	movf	fputc@fp,w
  6851  1F33  0086               	movwf	6
  6852  1F34  3001               	movlw	1	; select bank2/3
  6853  1F35  0087               	movwf	7
  6854  1F36  0A72               	incf	fputc@fp,w
  6855  1F37  0084               	movwf	4
  6856  1F38  3001               	movlw	1	; select bank2/3
  6857  1F39  0085               	movwf	5
  6858  1F3A  0800               	movf	0,w
  6859  1F3B  0701               	addwf	1,w
  6860  1F3C  00F4               	movwf	??_fputc+1
  6861  1F3D  0874               	movf	??_fputc+1,w
  6862  1F3E  0086               	movwf	6
  6863  1F3F  3001               	movlw	1	; select bank2/3
  6864  1F40  0087               	movwf	7
  6865  1F41  0873               	movf	??_fputc,w
  6866  1F42  0081               	movwf	1
  6867  1F43                     l2952:	
  6868  1F43  0A72               	incf	fputc@fp,w
  6869  1F44  0086               	movwf	6
  6870  1F45  3001               	movlw	1	; select bank2/3
  6871  1F46  0087               	movwf	7
  6872  1F47  3001               	movlw	1
  6873  1F48  0781               	addwf	1,f
  6874  1F49  3141               	addfsr 1,1
  6875  1F4A  1803               	skipnc
  6876  1F4B  0A81               	incf	1,f
  6877  1F4C                     l1140:	
  6878  1F4C  0008               	return
  6879  1F4D                     __end_of_fputc:	
  6880                           
  6881                           	psect	text13
  6882  1AAF                     __ptext13:	
  6883 ;; *************** function _putch *****************
  6884 ;; Defined at:
  6885 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  c               1    wreg     unsigned char 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;  c               1    0[COMMON] unsigned char 
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      void 
  6892 ;; Registers used:
  6893 ;;		wreg
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_fputc
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           
  6913                           ;psect for function _putch
  6914  1AAF                     _putch:	
  6915  1AAF                     l1158:	
  6916                           ;incstack = 0
  6917                           ; Regs used in _putch: [wreg]
  6918                           
  6919  1AAF  0008               	return
  6920  1AB0                     __end_of_putch:	
  6921                           
  6922                           	psect	text14
  6923  0010                     __ptext14:	
  6924 ;; *************** function _floorf *****************
  6925 ;; Defined at:
  6926 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  x               4   58[BANK0 ] float 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  u               4   74[BANK0 ] struct .
  6931 ;;  m               4   68[BANK0 ] unsigned long 
  6932 ;;  e               2   72[BANK0 ] int 
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  4   58[BANK0 ] float 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2, status,0
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6942 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6943 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;Total ram usage:       20 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_efgtoa
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           
  6956                           ;psect for function _floorf
  6957  0010                     _floorf:	
  6958  0010                     l3262:	
  6959                           ;incstack = 0
  6960                           ; Regs used in _floorf: [wreg+status,2+status,0]
  6961                           
  6962  0010  0023               	movlb	3	; select bank3
  6963  0011  082B               	movf	(floorf@F524+3)^(0+384),w
  6964  0012  0020               	movlb	0	; select bank0
  6965  0013  00ED               	movwf	floorf@u+3
  6966  0014  0023               	movlb	3	; select bank3
  6967  0015  082A               	movf	(floorf@F524+2)^(0+384),w
  6968  0016  0020               	movlb	0	; select bank0
  6969  0017  00EC               	movwf	floorf@u+2
  6970  0018  0023               	movlb	3	; select bank3
  6971  0019  0829               	movf	(floorf@F524+1)^(0+384),w
  6972  001A  0020               	movlb	0	; select bank0
  6973  001B  00EB               	movwf	floorf@u+1
  6974  001C  0023               	movlb	3	; select bank3
  6975  001D  0828               	movf	floorf@F524^(0+384),w
  6976  001E  0020               	movlb	0	; select bank0
  6977  001F  00EA               	movwf	floorf@u
  6978  0020  085D               	movf	floorf@x+3,w
  6979  0021  00ED               	movwf	floorf@u+3
  6980  0022  085C               	movf	floorf@x+2,w
  6981  0023  00EC               	movwf	floorf@u+2
  6982  0024  085B               	movf	floorf@x+1,w
  6983  0025  00EB               	movwf	floorf@u+1
  6984  0026  085A               	movf	floorf@x,w
  6985  0027  00EA               	movwf	floorf@u
  6986  0028                     l3264:	
  6987  0028  086A               	movf	floorf@u,w
  6988  0029  00DE               	movwf	??_floorf
  6989  002A  086B               	movf	floorf@u+1,w
  6990  002B  00DF               	movwf	??_floorf+1
  6991  002C  086C               	movf	floorf@u+2,w
  6992  002D  00E0               	movwf	??_floorf+2
  6993  002E  086D               	movf	floorf@u+3,w
  6994  002F  00E1               	movwf	??_floorf+3
  6995  0030  3017               	movlw	23
  6996  0031                     u3795:	
  6997  0031  36E1               	lsrf	??_floorf+3,f
  6998  0032  0CE0               	rrf	??_floorf+2,f
  6999  0033  0CDF               	rrf	??_floorf+1,f
  7000  0034  0CDE               	rrf	??_floorf,f
  7001  0035                     u3790:	
  7002  0035  0B89               	decfsz	9,f
  7003  0036  2831               	goto	u3795
  7004  0037  30FF               	movlw	255
  7005  0038  055E               	andwf	??_floorf,w
  7006  0039  00E2               	movwf	??_floorf+4
  7007  003A  3000               	movlw	0
  7008  003B  055F               	andwf	??_floorf+1,w
  7009  003C  00E3               	movwf	??_floorf+5
  7010  003D  0862               	movf	??_floorf+4,w
  7011  003E  3E81               	addlw	129
  7012  003F  00E8               	movwf	floorf@e
  7013  0040  30FF               	movlw	255
  7014  0041  3D63               	addwfc	??_floorf+5,w
  7015  0042  00E9               	movwf	floorf@e+1
  7016  0043                     l3266:	
  7017  0043  0869               	movf	floorf@e+1,w
  7018  0044  3A80               	xorlw	128
  7019  0045  00DE               	movwf	??_floorf
  7020  0046  3080               	movlw	128
  7021  0047  025E               	subwf	??_floorf,w
  7022  0048  1D03               	skipz
  7023  0049  284C               	goto	u3805
  7024  004A  3017               	movlw	23
  7025  004B  0268               	subwf	floorf@e,w
  7026  004C                     u3805:	
  7027  004C  1C03               	skipc
  7028  004D  284F               	goto	u3801
  7029  004E  2850               	goto	u3800
  7030  004F                     u3801:	
  7031  004F  2851               	goto	l1100
  7032  0050                     u3800:	
  7033  0050                     l3268:	
  7034  0050  28FA               	goto	l1101
  7035  0051                     l1100:	
  7036  0051  0020               	movlb	0	; select bank0
  7037  0052  1BE9               	btfsc	floorf@e+1,7
  7038  0053  2855               	goto	u3811
  7039  0054  2856               	goto	u3810
  7040  0055                     u3811:	
  7041  0055  28B3               	goto	l3282
  7042  0056                     u3810:	
  7043  0056                     l3270:	
  7044  0056  30FF               	movlw	255
  7045  0057  00DE               	movwf	??_floorf
  7046  0058  30FF               	movlw	255
  7047  0059  00DF               	movwf	??_floorf+1
  7048  005A  307F               	movlw	127
  7049  005B  00E0               	movwf	??_floorf+2
  7050  005C  3000               	movlw	0
  7051  005D  00E1               	movwf	??_floorf+3
  7052  005E  0A68               	incf	floorf@e,w
  7053  005F  2864               	goto	u3820
  7054  0060                     u3825:	
  7055  0060  37E1               	asrf	??_floorf+3,f
  7056  0061  0CE0               	rrf	??_floorf+2,f
  7057  0062  0CDF               	rrf	??_floorf+1,f
  7058  0063  0CDE               	rrf	??_floorf,f
  7059  0064                     u3820:	
  7060  0064  0B89               	decfsz	9,f
  7061  0065  2860               	goto	u3825
  7062  0066  0861               	movf	??_floorf+3,w
  7063  0067  00E7               	movwf	floorf@m+3
  7064  0068  0860               	movf	??_floorf+2,w
  7065  0069  00E6               	movwf	floorf@m+2
  7066  006A  085F               	movf	??_floorf+1,w
  7067  006B  00E5               	movwf	floorf@m+1
  7068  006C  085E               	movf	??_floorf,w
  7069  006D  00E4               	movwf	floorf@m
  7070  006E                     l3272:	
  7071  006E  086A               	movf	floorf@u,w
  7072  006F  0564               	andwf	floorf@m,w
  7073  0070  00DE               	movwf	??_floorf
  7074  0071  086B               	movf	floorf@u+1,w
  7075  0072  0565               	andwf	floorf@m+1,w
  7076  0073  00DF               	movwf	??_floorf+1
  7077  0074  086C               	movf	floorf@u+2,w
  7078  0075  0566               	andwf	floorf@m+2,w
  7079  0076  00E0               	movwf	??_floorf+2
  7080  0077  086D               	movf	floorf@u+3,w
  7081  0078  0567               	andwf	floorf@m+3,w
  7082  0079  00E1               	movwf	??_floorf+3
  7083  007A  0861               	movf	??_floorf+3,w
  7084  007B  0460               	iorwf	??_floorf+2,w
  7085  007C  045F               	iorwf	??_floorf+1,w
  7086  007D  045E               	iorwf	??_floorf,w
  7087  007E  1D03               	skipz
  7088  007F  2881               	goto	u3831
  7089  0080  2882               	goto	u3830
  7090  0081                     u3831:	
  7091  0081  2883               	goto	l3276
  7092  0082                     u3830:	
  7093  0082  2850               	goto	l3268
  7094  0083                     l3276:	
  7095  0083  086A               	movf	floorf@u,w
  7096  0084  00DE               	movwf	??_floorf
  7097  0085  086B               	movf	floorf@u+1,w
  7098  0086  00DF               	movwf	??_floorf+1
  7099  0087  086C               	movf	floorf@u+2,w
  7100  0088  00E0               	movwf	??_floorf+2
  7101  0089  086D               	movf	floorf@u+3,w
  7102  008A  00E1               	movwf	??_floorf+3
  7103  008B  301F               	movlw	31
  7104  008C                     u3845:	
  7105  008C  36E1               	lsrf	??_floorf+3,f
  7106  008D  0CE0               	rrf	??_floorf+2,f
  7107  008E  0CDF               	rrf	??_floorf+1,f
  7108  008F  0CDE               	rrf	??_floorf,f
  7109  0090                     u3840:	
  7110  0090  0B89               	decfsz	9,f
  7111  0091  288C               	goto	u3845
  7112  0092  0861               	movf	??_floorf+3,w
  7113  0093  0460               	iorwf	??_floorf+2,w
  7114  0094  045F               	iorwf	??_floorf+1,w
  7115  0095  045E               	iorwf	??_floorf,w
  7116  0096  1903               	skipnz
  7117  0097  2899               	goto	u3851
  7118  0098  289A               	goto	u3850
  7119  0099                     u3851:	
  7120  0099  28A2               	goto	l3280
  7121  009A                     u3850:	
  7122  009A                     l3278:	
  7123  009A  0864               	movf	floorf@m,w
  7124  009B  07EA               	addwf	floorf@u,f
  7125  009C  0865               	movf	floorf@m+1,w
  7126  009D  3DEB               	addwfc	floorf@u+1,f
  7127  009E  0866               	movf	floorf@m+2,w
  7128  009F  3DEC               	addwfc	floorf@u+2,f
  7129  00A0  0867               	movf	floorf@m+3,w
  7130  00A1  3DED               	addwfc	floorf@u+3,f
  7131  00A2                     l3280:	
  7132  00A2  0964               	comf	floorf@m,w
  7133  00A3  00DE               	movwf	??_floorf
  7134  00A4  0965               	comf	floorf@m+1,w
  7135  00A5  00DF               	movwf	??_floorf+1
  7136  00A6  0966               	comf	floorf@m+2,w
  7137  00A7  00E0               	movwf	??_floorf+2
  7138  00A8  0967               	comf	floorf@m+3,w
  7139  00A9  00E1               	movwf	??_floorf+3
  7140  00AA  085E               	movf	??_floorf,w
  7141  00AB  05EA               	andwf	floorf@u,f
  7142  00AC  085F               	movf	??_floorf+1,w
  7143  00AD  05EB               	andwf	floorf@u+1,f
  7144  00AE  0860               	movf	??_floorf+2,w
  7145  00AF  05EC               	andwf	floorf@u+2,f
  7146  00B0  0861               	movf	??_floorf+3,w
  7147  00B1  05ED               	andwf	floorf@u+3,f
  7148  00B2  28F2               	goto	l1105
  7149  00B3                     l3282:	
  7150  00B3  086A               	movf	floorf@u,w
  7151  00B4  00DE               	movwf	??_floorf
  7152  00B5  086B               	movf	floorf@u+1,w
  7153  00B6  00DF               	movwf	??_floorf+1
  7154  00B7  086C               	movf	floorf@u+2,w
  7155  00B8  00E0               	movwf	??_floorf+2
  7156  00B9  086D               	movf	floorf@u+3,w
  7157  00BA  00E1               	movwf	??_floorf+3
  7158  00BB  301F               	movlw	31
  7159  00BC                     u3865:	
  7160  00BC  36E1               	lsrf	??_floorf+3,f
  7161  00BD  0CE0               	rrf	??_floorf+2,f
  7162  00BE  0CDF               	rrf	??_floorf+1,f
  7163  00BF  0CDE               	rrf	??_floorf,f
  7164  00C0                     u3860:	
  7165  00C0  0B89               	decfsz	9,f
  7166  00C1  28BC               	goto	u3865
  7167  00C2  0861               	movf	??_floorf+3,w
  7168  00C3  0460               	iorwf	??_floorf+2,w
  7169  00C4  045F               	iorwf	??_floorf+1,w
  7170  00C5  045E               	iorwf	??_floorf,w
  7171  00C6  1D03               	skipz
  7172  00C7  28C9               	goto	u3871
  7173  00C8  28CA               	goto	u3870
  7174  00C9                     u3871:	
  7175  00C9  28D3               	goto	l3286
  7176  00CA                     u3870:	
  7177  00CA                     l3284:	
  7178  00CA  3000               	movlw	0
  7179  00CB  00ED               	movwf	floorf@u+3
  7180  00CC  3000               	movlw	0
  7181  00CD  00EC               	movwf	floorf@u+2
  7182  00CE  3000               	movlw	0
  7183  00CF  00EB               	movwf	floorf@u+1
  7184  00D0  3000               	movlw	0
  7185  00D1  00EA               	movwf	floorf@u
  7186  00D2  28F2               	goto	l1105
  7187  00D3                     l3286:	
  7188  00D3  086A               	movf	floorf@u,w
  7189  00D4  00DE               	movwf	??_floorf
  7190  00D5  086B               	movf	floorf@u+1,w
  7191  00D6  00DF               	movwf	??_floorf+1
  7192  00D7  086C               	movf	floorf@u+2,w
  7193  00D8  00E0               	movwf	??_floorf+2
  7194  00D9  086D               	movf	floorf@u+3,w
  7195  00DA  00E1               	movwf	??_floorf+3
  7196  00DB  3001               	movlw	1
  7197  00DC                     u3885:	
  7198  00DC  35DE               	lslf	??_floorf,f
  7199  00DD  0DDF               	rlf	??_floorf+1,f
  7200  00DE  0DE0               	rlf	??_floorf+2,f
  7201  00DF  0DE1               	rlf	??_floorf+3,f
  7202  00E0                     u3880:	
  7203  00E0  0B89               	decfsz	9,f
  7204  00E1  28DC               	goto	u3885
  7205  00E2  0861               	movf	??_floorf+3,w
  7206  00E3  0460               	iorwf	??_floorf+2,w
  7207  00E4  045F               	iorwf	??_floorf+1,w
  7208  00E5  045E               	iorwf	??_floorf,w
  7209  00E6  1903               	skipnz
  7210  00E7  28E9               	goto	u3891
  7211  00E8  28EA               	goto	u3890
  7212  00E9                     u3891:	
  7213  00E9  28F2               	goto	l1105
  7214  00EA                     u3890:	
  7215  00EA                     l3288:	
  7216  00EA  30BF               	movlw	191
  7217  00EB  00ED               	movwf	floorf@u+3
  7218  00EC  3080               	movlw	128
  7219  00ED  00EC               	movwf	floorf@u+2
  7220  00EE  3000               	movlw	0
  7221  00EF  00EB               	movwf	floorf@u+1
  7222  00F0  3000               	movlw	0
  7223  00F1  00EA               	movwf	floorf@u
  7224  00F2                     l1105:	
  7225  00F2  086D               	movf	floorf@u+3,w
  7226  00F3  00DD               	movwf	?_floorf+3
  7227  00F4  086C               	movf	floorf@u+2,w
  7228  00F5  00DC               	movwf	?_floorf+2
  7229  00F6  086B               	movf	floorf@u+1,w
  7230  00F7  00DB               	movwf	?_floorf+1
  7231  00F8  086A               	movf	floorf@u,w
  7232  00F9  00DA               	movwf	?_floorf
  7233  00FA                     l1101:	
  7234  00FA  0008               	return
  7235  00FB                     __end_of_floorf:	
  7236                           
  7237                           	psect	text15
  7238  11CD                     __ptext15:	
  7239 ;; *************** function ___fpclassifyf *****************
  7240 ;; Defined at:
  7241 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  7242 ;; Parameters:    Size  Location     Type
  7243 ;;  x               4    0[COMMON] float 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;  u               4    2[BANK0 ] struct .
  7246 ;;  e               2    0[BANK0 ] int 
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  2    0[COMMON] int 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2, status,0
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7259 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7260 ;;Total ram usage:       16 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; This function calls:
  7263 ;;		Nothing
  7264 ;; This function is called by:
  7265 ;;		_efgtoa
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           
  7270                           ;psect for function ___fpclassifyf
  7271  11CD                     ___fpclassifyf:	
  7272  11CD                     l3224:	
  7273                           ;incstack = 0
  7274                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7275                           
  7276  11CD  0023               	movlb	3	; select bank3
  7277  11CE  082F               	movf	(___fpclassifyf@F463+3)^(0+384),w
  7278  11CF  0020               	movlb	0	; select bank0
  7279  11D0  00A5               	movwf	___fpclassifyf@u+3
  7280  11D1  0023               	movlb	3	; select bank3
  7281  11D2  082E               	movf	(___fpclassifyf@F463+2)^(0+384),w
  7282  11D3  0020               	movlb	0	; select bank0
  7283  11D4  00A4               	movwf	___fpclassifyf@u+2
  7284  11D5  0023               	movlb	3	; select bank3
  7285  11D6  082D               	movf	(___fpclassifyf@F463+1)^(0+384),w
  7286  11D7  0020               	movlb	0	; select bank0
  7287  11D8  00A3               	movwf	___fpclassifyf@u+1
  7288  11D9  0023               	movlb	3	; select bank3
  7289  11DA  082C               	movf	___fpclassifyf@F463^(0+384),w
  7290  11DB  0020               	movlb	0	; select bank0
  7291  11DC  00A2               	movwf	___fpclassifyf@u
  7292  11DD  0873               	movf	___fpclassifyf@x+3,w
  7293  11DE  00A5               	movwf	___fpclassifyf@u+3
  7294  11DF  0872               	movf	___fpclassifyf@x+2,w
  7295  11E0  00A4               	movwf	___fpclassifyf@u+2
  7296  11E1  0871               	movf	___fpclassifyf@x+1,w
  7297  11E2  00A3               	movwf	___fpclassifyf@u+1
  7298  11E3  0870               	movf	___fpclassifyf@x,w
  7299  11E4  00A2               	movwf	___fpclassifyf@u
  7300  11E5                     l3226:	
  7301  11E5  0822               	movf	___fpclassifyf@u,w
  7302  11E6  00F4               	movwf	??___fpclassifyf
  7303  11E7  0823               	movf	___fpclassifyf@u+1,w
  7304  11E8  00F5               	movwf	??___fpclassifyf+1
  7305  11E9  0824               	movf	___fpclassifyf@u+2,w
  7306  11EA  00F6               	movwf	??___fpclassifyf+2
  7307  11EB  0825               	movf	___fpclassifyf@u+3,w
  7308  11EC  00F7               	movwf	??___fpclassifyf+3
  7309  11ED  3017               	movlw	23
  7310  11EE                     u3675:	
  7311  11EE  36F7               	lsrf	??___fpclassifyf+3,f
  7312  11EF  0CF6               	rrf	??___fpclassifyf+2,f
  7313  11F0  0CF5               	rrf	??___fpclassifyf+1,f
  7314  11F1  0CF4               	rrf	??___fpclassifyf,f
  7315  11F2                     u3670:	
  7316  11F2  0B89               	decfsz	9,f
  7317  11F3  29EE               	goto	u3675
  7318  11F4  30FF               	movlw	255
  7319  11F5  0574               	andwf	??___fpclassifyf,w
  7320  11F6  00A0               	movwf	___fpclassifyf@e
  7321  11F7  3000               	movlw	0
  7322  11F8  0575               	andwf	??___fpclassifyf+1,w
  7323  11F9  00A1               	movwf	___fpclassifyf@e+1
  7324  11FA                     l3228:	
  7325  11FA  0820               	movf	___fpclassifyf@e,w
  7326  11FB  0421               	iorwf	___fpclassifyf@e+1,w
  7327  11FC  1D03               	btfss	3,2
  7328  11FD  29FF               	goto	u3681
  7329  11FE  2A00               	goto	u3680
  7330  11FF                     u3681:	
  7331  11FF  2A21               	goto	l3238
  7332  1200                     u3680:	
  7333  1200                     l3230:	
  7334  1200  0822               	movf	___fpclassifyf@u,w
  7335  1201  00F4               	movwf	??___fpclassifyf
  7336  1202  0823               	movf	___fpclassifyf@u+1,w
  7337  1203  00F5               	movwf	??___fpclassifyf+1
  7338  1204  0824               	movf	___fpclassifyf@u+2,w
  7339  1205  00F6               	movwf	??___fpclassifyf+2
  7340  1206  0825               	movf	___fpclassifyf@u+3,w
  7341  1207  00F7               	movwf	??___fpclassifyf+3
  7342  1208  3001               	movlw	1
  7343  1209                     u3695:	
  7344  1209  35F4               	lslf	??___fpclassifyf,f
  7345  120A  0DF5               	rlf	??___fpclassifyf+1,f
  7346  120B  0DF6               	rlf	??___fpclassifyf+2,f
  7347  120C  0DF7               	rlf	??___fpclassifyf+3,f
  7348  120D                     u3690:	
  7349  120D  0B89               	decfsz	9,f
  7350  120E  2A09               	goto	u3695
  7351  120F  0877               	movf	??___fpclassifyf+3,w
  7352  1210  0476               	iorwf	??___fpclassifyf+2,w
  7353  1211  0475               	iorwf	??___fpclassifyf+1,w
  7354  1212  0474               	iorwf	??___fpclassifyf,w
  7355  1213  1D03               	skipz
  7356  1214  2A16               	goto	u3701
  7357  1215  2A17               	goto	u3700
  7358  1216                     u3701:	
  7359  1216  2A1C               	goto	l3234
  7360  1217                     u3700:	
  7361  1217                     l3232:	
  7362  1217  3002               	movlw	2
  7363  1218  00F0               	movwf	?___fpclassifyf
  7364  1219  3000               	movlw	0
  7365  121A  00F1               	movwf	?___fpclassifyf+1
  7366  121B  2A4B               	goto	l1063
  7367  121C                     l3234:	
  7368  121C  3003               	movlw	3
  7369  121D  00F0               	movwf	?___fpclassifyf
  7370  121E  3000               	movlw	0
  7371  121F  00F1               	movwf	?___fpclassifyf+1
  7372  1220  2A4B               	goto	l1063
  7373  1221                     l3238:	
  7374  1221  0A20               	incf	___fpclassifyf@e,w
  7375  1222  0421               	iorwf	___fpclassifyf@e+1,w
  7376  1223  1D03               	btfss	3,2
  7377  1224  2A26               	goto	u3711
  7378  1225  2A27               	goto	u3710
  7379  1226                     u3711:	
  7380  1226  2A47               	goto	l3244
  7381  1227                     u3710:	
  7382  1227                     l3240:	
  7383  1227  0822               	movf	___fpclassifyf@u,w
  7384  1228  00F4               	movwf	??___fpclassifyf
  7385  1229  0823               	movf	___fpclassifyf@u+1,w
  7386  122A  00F5               	movwf	??___fpclassifyf+1
  7387  122B  0824               	movf	___fpclassifyf@u+2,w
  7388  122C  00F6               	movwf	??___fpclassifyf+2
  7389  122D  0825               	movf	___fpclassifyf@u+3,w
  7390  122E  00F7               	movwf	??___fpclassifyf+3
  7391  122F  3009               	movlw	9
  7392  1230                     u3725:	
  7393  1230  35F4               	lslf	??___fpclassifyf,f
  7394  1231  0DF5               	rlf	??___fpclassifyf+1,f
  7395  1232  0DF6               	rlf	??___fpclassifyf+2,f
  7396  1233  0DF7               	rlf	??___fpclassifyf+3,f
  7397  1234                     u3720:	
  7398  1234  0B89               	decfsz	9,f
  7399  1235  2A30               	goto	u3725
  7400  1236  0877               	movf	??___fpclassifyf+3,w
  7401  1237  0476               	iorwf	??___fpclassifyf+2,w
  7402  1238  0475               	iorwf	??___fpclassifyf+1,w
  7403  1239  0474               	iorwf	??___fpclassifyf,w
  7404  123A  1903               	skipnz
  7405  123B  2A3D               	goto	u3731
  7406  123C  2A3F               	goto	u3730
  7407  123D                     u3731:	
  7408  123D  3001               	movlw	1
  7409  123E  2A40               	goto	u3740
  7410  123F                     u3730:	
  7411  123F  3000               	movlw	0
  7412  1240                     u3740:	
  7413  1240  00F8               	movwf	??___fpclassifyf+4
  7414  1241  01F9               	clrf	??___fpclassifyf+5
  7415  1242  0878               	movf	??___fpclassifyf+4,w
  7416  1243  00F0               	movwf	?___fpclassifyf
  7417  1244  0879               	movf	??___fpclassifyf+5,w
  7418  1245  00F1               	movwf	?___fpclassifyf+1
  7419  1246  2A4B               	goto	l1063
  7420  1247                     l3244:	
  7421  1247  3004               	movlw	4
  7422  1248  00F0               	movwf	?___fpclassifyf
  7423  1249  3000               	movlw	0
  7424  124A  00F1               	movwf	?___fpclassifyf+1
  7425  124B                     l1063:	
  7426  124B  0008               	return
  7427  124C                     __end_of___fpclassifyf:	
  7428                           
  7429                           	psect	text16
  7430  1159                     __ptext16:	
  7431 ;; *************** function ___fltol *****************
  7432 ;; Defined at:
  7433 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  f1              4    0[COMMON] int 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  exp1            1   10[COMMON] unsigned char 
  7438 ;;  sign1           1    9[COMMON] unsigned char 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  4    0[COMMON] long 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2, status,0
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;Total ram usage:       11 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; This function calls:
  7455 ;;		Nothing
  7456 ;; This function is called by:
  7457 ;;		_efgtoa
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           
  7462                           ;psect for function ___fltol
  7463  1159                     ___fltol:	
  7464  1159                     l3432:	
  7465                           ;incstack = 0
  7466                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7467                           
  7468  1159  1003               	clrc
  7469  115A  0D72               	rlf	___fltol@f1+2,w
  7470  115B  0D73               	rlf	___fltol@f1+3,w
  7471  115C  00F4               	movwf	??___fltol
  7472  115D  0874               	movf	??___fltol,w
  7473  115E  00FA               	movwf	___fltol@exp1
  7474  115F  087A               	movf	___fltol@exp1,w
  7475  1160  1D03               	btfss	3,2
  7476  1161  2963               	goto	u4241
  7477  1162  2964               	goto	u4240
  7478  1163                     u4241:	
  7479  1163  296D               	goto	l3438
  7480  1164                     u4240:	
  7481  1164                     l3434:	
  7482  1164  3000               	movlw	0
  7483  1165  00F3               	movwf	?___fltol+3
  7484  1166  3000               	movlw	0
  7485  1167  00F2               	movwf	?___fltol+2
  7486  1168  3000               	movlw	0
  7487  1169  00F1               	movwf	?___fltol+1
  7488  116A  3000               	movlw	0
  7489  116B  00F0               	movwf	?___fltol
  7490  116C  29CC               	goto	l797
  7491  116D                     l3438:	
  7492  116D  0870               	movf	___fltol@f1,w
  7493  116E  00F4               	movwf	??___fltol
  7494  116F  0871               	movf	___fltol@f1+1,w
  7495  1170  00F5               	movwf	??___fltol+1
  7496  1171  0872               	movf	___fltol@f1+2,w
  7497  1172  00F6               	movwf	??___fltol+2
  7498  1173  0873               	movf	___fltol@f1+3,w
  7499  1174  00F7               	movwf	??___fltol+3
  7500  1175  301F               	movlw	31
  7501  1176                     u4255:	
  7502  1176  36F7               	lsrf	??___fltol+3,f
  7503  1177  0CF6               	rrf	??___fltol+2,f
  7504  1178  0CF5               	rrf	??___fltol+1,f
  7505  1179  0CF4               	rrf	??___fltol,f
  7506  117A                     u4250:	
  7507  117A  0B89               	decfsz	9,f
  7508  117B  2976               	goto	u4255
  7509  117C  0874               	movf	??___fltol,w
  7510  117D  00F8               	movwf	??___fltol+4
  7511  117E  0878               	movf	??___fltol+4,w
  7512  117F  00F9               	movwf	___fltol@sign1
  7513  1180                     l3440:	
  7514  1180  17F2               	bsf	___fltol@f1+2,7
  7515  1181                     l3442:	
  7516  1181  30FF               	movlw	255
  7517  1182  05F0               	andwf	___fltol@f1,f
  7518  1183  30FF               	movlw	255
  7519  1184  05F1               	andwf	___fltol@f1+1,f
  7520  1185  30FF               	movlw	255
  7521  1186  05F2               	andwf	___fltol@f1+2,f
  7522  1187  3000               	movlw	0
  7523  1188  05F3               	andwf	___fltol@f1+3,f
  7524  1189                     l3444:	
  7525  1189  3096               	movlw	150
  7526  118A  02FA               	subwf	___fltol@exp1,f
  7527  118B                     l3446:	
  7528  118B  1FFA               	btfss	___fltol@exp1,7
  7529  118C  298E               	goto	u4261
  7530  118D  298F               	goto	u4260
  7531  118E                     u4261:	
  7532  118E  29A7               	goto	l3456
  7533  118F                     u4260:	
  7534  118F                     l3448:	
  7535  118F  087A               	movf	___fltol@exp1,w
  7536  1190  3A80               	xorlw	128
  7537  1191  3E97               	addlw	151
  7538  1192  1803               	skipnc
  7539  1193  2995               	goto	u4271
  7540  1194  2996               	goto	u4270
  7541  1195                     u4271:	
  7542  1195  2997               	goto	l3454
  7543  1196                     u4270:	
  7544  1196  2964               	goto	l3434
  7545  1197                     l3454:	
  7546  1197  3001               	movlw	1
  7547  1198                     u4285:	
  7548  1198  36F3               	lsrf	___fltol@f1+3,f
  7549  1199  0CF2               	rrf	___fltol@f1+2,f
  7550  119A  0CF1               	rrf	___fltol@f1+1,f
  7551  119B  0CF0               	rrf	___fltol@f1,f
  7552  119C  0B89               	decfsz	9,f
  7553  119D  2998               	goto	u4285
  7554  119E  3001               	movlw	1
  7555  119F  00F4               	movwf	??___fltol
  7556  11A0  0874               	movf	??___fltol,w
  7557  11A1  07FA               	addwf	___fltol@exp1,f
  7558  11A2  1D03               	btfss	3,2
  7559  11A3  29A5               	goto	u4291
  7560  11A4  29A6               	goto	u4290
  7561  11A5                     u4291:	
  7562  11A5  2997               	goto	l3454
  7563  11A6                     u4290:	
  7564  11A6  29BC               	goto	l3464
  7565  11A7                     l3456:	
  7566  11A7  3020               	movlw	32
  7567  11A8  027A               	subwf	___fltol@exp1,w
  7568  11A9  1C03               	skipc
  7569  11AA  29AC               	goto	u4301
  7570  11AB  29AD               	goto	u4300
  7571  11AC                     u4301:	
  7572  11AC  29B7               	goto	l804
  7573  11AD                     u4300:	
  7574  11AD  2964               	goto	l3434
  7575  11AE                     l3462:	
  7576  11AE  3001               	movlw	1
  7577  11AF                     u4315:	
  7578  11AF  35F0               	lslf	___fltol@f1,f
  7579  11B0  0DF1               	rlf	___fltol@f1+1,f
  7580  11B1  0DF2               	rlf	___fltol@f1+2,f
  7581  11B2  0DF3               	rlf	___fltol@f1+3,f
  7582  11B3  0B89               	decfsz	9,f
  7583  11B4  29AF               	goto	u4315
  7584  11B5  3001               	movlw	1
  7585  11B6  02FA               	subwf	___fltol@exp1,f
  7586  11B7                     l804:	
  7587  11B7  087A               	movf	___fltol@exp1,w
  7588  11B8  1D03               	btfss	3,2
  7589  11B9  29BB               	goto	u4321
  7590  11BA  29BC               	goto	u4320
  7591  11BB                     u4321:	
  7592  11BB  29AE               	goto	l3462
  7593  11BC                     u4320:	
  7594  11BC                     l3464:	
  7595  11BC  0879               	movf	___fltol@sign1,w
  7596  11BD  1903               	btfsc	3,2
  7597  11BE  29C0               	goto	u4331
  7598  11BF  29C1               	goto	u4330
  7599  11C0                     u4331:	
  7600  11C0  29CC               	goto	l807
  7601  11C1                     u4330:	
  7602  11C1                     l3466:	
  7603  11C1  09F0               	comf	___fltol@f1,f
  7604  11C2  09F1               	comf	___fltol@f1+1,f
  7605  11C3  09F2               	comf	___fltol@f1+2,f
  7606  11C4  09F3               	comf	___fltol@f1+3,f
  7607  11C5  0AF0               	incf	___fltol@f1,f
  7608  11C6  1903               	skipnz
  7609  11C7  0AF1               	incf	___fltol@f1+1,f
  7610  11C8  1903               	skipnz
  7611  11C9  0AF2               	incf	___fltol@f1+2,f
  7612  11CA  1903               	skipnz
  7613  11CB  0AF3               	incf	___fltol@f1+3,f
  7614  11CC                     l807:	
  7615  11CC                     l797:	
  7616  11CC  0008               	return
  7617  11CD                     __end_of___fltol:	
  7618                           
  7619                           	psect	text17
  7620  1D13                     __ptext17:	
  7621 ;; *************** function ___flsub *****************
  7622 ;; Defined at:
  7623 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  a               4    0[BANK1 ] long 
  7626 ;;  b               4    4[BANK1 ] long 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;		None
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  4    0[BANK1 ] long 
  7631 ;; Registers used:
  7632 ;;		wreg, status,2, status,0, pclath, cstack
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7638 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;Total ram usage:        8 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:    1
  7645 ;; This function calls:
  7646 ;;		___fladd
  7647 ;; This function is called by:
  7648 ;;		_efgtoa
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function ___flsub
  7654  1D13                     ___flsub:	
  7655  1D13                     l3468:	
  7656                           ;incstack = 0
  7657                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7658                           
  7659  1D13  3080               	movlw	128
  7660  1D14  0021               	movlb	1	; select bank1
  7661  1D15  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7662  1D16                     l3470:	
  7663  1D16  0827               	movf	(___flsub@b+3)^(0+128),w
  7664  1D17  0020               	movlb	0	; select bank0
  7665  1D18  00DD               	movwf	___fladd@b+3
  7666  1D19  0021               	movlb	1	; select bank1
  7667  1D1A  0826               	movf	(___flsub@b+2)^(0+128),w
  7668  1D1B  0020               	movlb	0	; select bank0
  7669  1D1C  00DC               	movwf	___fladd@b+2
  7670  1D1D  0021               	movlb	1	; select bank1
  7671  1D1E  0825               	movf	(___flsub@b+1)^(0+128),w
  7672  1D1F  0020               	movlb	0	; select bank0
  7673  1D20  00DB               	movwf	___fladd@b+1
  7674  1D21  0021               	movlb	1	; select bank1
  7675  1D22  0824               	movf	___flsub@b^(0+128),w
  7676  1D23  0020               	movlb	0	; select bank0
  7677  1D24  00DA               	movwf	___fladd@b
  7678  1D25  0021               	movlb	1	; select bank1
  7679  1D26  0823               	movf	(___flsub@a+3)^(0+128),w
  7680  1D27  0020               	movlb	0	; select bank0
  7681  1D28  00E1               	movwf	___fladd@a+3
  7682  1D29  0021               	movlb	1	; select bank1
  7683  1D2A  0822               	movf	(___flsub@a+2)^(0+128),w
  7684  1D2B  0020               	movlb	0	; select bank0
  7685  1D2C  00E0               	movwf	___fladd@a+2
  7686  1D2D  0021               	movlb	1	; select bank1
  7687  1D2E  0821               	movf	(___flsub@a+1)^(0+128),w
  7688  1D2F  0020               	movlb	0	; select bank0
  7689  1D30  00DF               	movwf	___fladd@a+1
  7690  1D31  0021               	movlb	1	; select bank1
  7691  1D32  0820               	movf	___flsub@a^(0+128),w
  7692  1D33  0020               	movlb	0	; select bank0
  7693  1D34  00DE               	movwf	___fladd@a
  7694  1D35  3188  2053  319D   	fcall	___fladd
  7695  1D38  0020               	movlb	0	; select bank0
  7696  1D39  085D               	movf	?___fladd+3,w
  7697  1D3A  0021               	movlb	1	; select bank1
  7698  1D3B  00A3               	movwf	(?___flsub+3)^(0+128)
  7699  1D3C  0020               	movlb	0	; select bank0
  7700  1D3D  085C               	movf	?___fladd+2,w
  7701  1D3E  0021               	movlb	1	; select bank1
  7702  1D3F  00A2               	movwf	(?___flsub+2)^(0+128)
  7703  1D40  0020               	movlb	0	; select bank0
  7704  1D41  085B               	movf	?___fladd+1,w
  7705  1D42  0021               	movlb	1	; select bank1
  7706  1D43  00A1               	movwf	(?___flsub+1)^(0+128)
  7707  1D44  0020               	movlb	0	; select bank0
  7708  1D45  085A               	movf	?___fladd,w
  7709  1D46  0021               	movlb	1	; select bank1
  7710  1D47  00A0               	movwf	?___flsub^(0+128)
  7711  1D48                     l950:	
  7712  1D48  0008               	return
  7713  1D49                     __end_of___flsub:	
  7714                           
  7715                           	psect	text18
  7716  0853                     __ptext18:	
  7717 ;; *************** function ___fladd *****************
  7718 ;; Defined at:
  7719 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  b               4   58[BANK0 ] long 
  7722 ;;  a               4   62[BANK0 ] long 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  grs             1   77[BANK0 ] unsigned char 
  7725 ;;  bexp            1   76[BANK0 ] unsigned char 
  7726 ;;  aexp            1   75[BANK0 ] unsigned char 
  7727 ;;  signs           1   74[BANK0 ] unsigned char 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  4   58[BANK0 ] unsigned char 
  7730 ;; Registers used:
  7731 ;;		wreg, status,2, status,0
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7737 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;Total ram usage:       20 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; This function calls:
  7744 ;;		Nothing
  7745 ;; This function is called by:
  7746 ;;		_main
  7747 ;;		_efgtoa
  7748 ;;		___flsub
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           
  7753                           ;psect for function ___fladd
  7754  0853                     ___fladd:	
  7755  0853                     l2982:	
  7756                           ;incstack = 0
  7757                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7758                           
  7759  0853  0020               	movlb	0	; select bank0
  7760  0854  085D               	movf	___fladd@b+3,w
  7761  0855  3980               	andlw	128
  7762  0856  00E2               	movwf	??___fladd
  7763  0857  0862               	movf	??___fladd,w
  7764  0858  00EA               	movwf	___fladd@signs
  7765  0859                     l2984:	
  7766  0859  355D               	lslf	___fladd@b+3,w
  7767  085A  00E2               	movwf	??___fladd
  7768  085B  0862               	movf	??___fladd,w
  7769  085C  00EC               	movwf	___fladd@bexp
  7770  085D                     l2986:	
  7771  085D  1FDC               	btfss	___fladd@b+2,7
  7772  085E  2860               	goto	u3171
  7773  085F  2861               	goto	u3170
  7774  0860                     u3171:	
  7775  0860  2862               	goto	l2990
  7776  0861                     u3170:	
  7777  0861                     l2988:	
  7778  0861  146C               	bsf	___fladd@bexp,0
  7779  0862                     l2990:	
  7780  0862  086C               	movf	___fladd@bexp,w
  7781  0863  1903               	btfsc	3,2
  7782  0864  2866               	goto	u3181
  7783  0865  2867               	goto	u3180
  7784  0866                     u3181:	
  7785  0866  2877               	goto	l3000
  7786  0867                     u3180:	
  7787  0867                     l2992:	
  7788  0867  0A6C               	incf	___fladd@bexp,w
  7789  0868  1D03               	btfss	3,2
  7790  0869  286B               	goto	u3191
  7791  086A  286C               	goto	u3190
  7792  086B                     u3191:	
  7793  086B  2874               	goto	l2996
  7794  086C                     u3190:	
  7795  086C                     l2994:	
  7796  086C  3000               	movlw	0
  7797  086D  00DD               	movwf	___fladd@b+3
  7798  086E  3000               	movlw	0
  7799  086F  00DC               	movwf	___fladd@b+2
  7800  0870  3000               	movlw	0
  7801  0871  00DB               	movwf	___fladd@b+1
  7802  0872  3000               	movlw	0
  7803  0873  00DA               	movwf	___fladd@b
  7804  0874                     l2996:	
  7805  0874  17DC               	bsf	___fladd@b+2,7
  7806  0875                     l2998:	
  7807  0875  01DD               	clrf	___fladd@b+3
  7808  0876  287F               	goto	l3002
  7809  0877                     l3000:	
  7810  0877  3000               	movlw	0
  7811  0878  00DD               	movwf	___fladd@b+3
  7812  0879  3000               	movlw	0
  7813  087A  00DC               	movwf	___fladd@b+2
  7814  087B  3000               	movlw	0
  7815  087C  00DB               	movwf	___fladd@b+1
  7816  087D  3000               	movlw	0
  7817  087E  00DA               	movwf	___fladd@b
  7818  087F                     l3002:	
  7819  087F  0861               	movf	___fladd@a+3,w
  7820  0880  3980               	andlw	128
  7821  0881  00E2               	movwf	??___fladd
  7822  0882  0862               	movf	??___fladd,w
  7823  0883  00EB               	movwf	___fladd@aexp
  7824  0884                     l3004:	
  7825  0884  086B               	movf	___fladd@aexp,w
  7826  0885  066A               	xorwf	___fladd@signs,w
  7827  0886  1903               	skipnz
  7828  0887  2889               	goto	u3201
  7829  0888  288A               	goto	u3200
  7830  0889                     u3201:	
  7831  0889  288B               	goto	l3008
  7832  088A                     u3200:	
  7833  088A                     l3006:	
  7834  088A  176A               	bsf	___fladd@signs,6
  7835  088B                     l3008:	
  7836  088B  3561               	lslf	___fladd@a+3,w
  7837  088C  00E2               	movwf	??___fladd
  7838  088D  0862               	movf	??___fladd,w
  7839  088E  00EB               	movwf	___fladd@aexp
  7840  088F                     l3010:	
  7841  088F  1FE0               	btfss	___fladd@a+2,7
  7842  0890  2892               	goto	u3211
  7843  0891  2893               	goto	u3210
  7844  0892                     u3211:	
  7845  0892  2894               	goto	l3014
  7846  0893                     u3210:	
  7847  0893                     l3012:	
  7848  0893  146B               	bsf	___fladd@aexp,0
  7849  0894                     l3014:	
  7850  0894  086B               	movf	___fladd@aexp,w
  7851  0895  1903               	btfsc	3,2
  7852  0896  2898               	goto	u3221
  7853  0897  2899               	goto	u3220
  7854  0898                     u3221:	
  7855  0898  28A9               	goto	l3024
  7856  0899                     u3220:	
  7857  0899                     l3016:	
  7858  0899  0A6B               	incf	___fladd@aexp,w
  7859  089A  1D03               	btfss	3,2
  7860  089B  289D               	goto	u3231
  7861  089C  289E               	goto	u3230
  7862  089D                     u3231:	
  7863  089D  28A6               	goto	l3020
  7864  089E                     u3230:	
  7865  089E                     l3018:	
  7866  089E  3000               	movlw	0
  7867  089F  00E1               	movwf	___fladd@a+3
  7868  08A0  3000               	movlw	0
  7869  08A1  00E0               	movwf	___fladd@a+2
  7870  08A2  3000               	movlw	0
  7871  08A3  00DF               	movwf	___fladd@a+1
  7872  08A4  3000               	movlw	0
  7873  08A5  00DE               	movwf	___fladd@a
  7874  08A6                     l3020:	
  7875  08A6  17E0               	bsf	___fladd@a+2,7
  7876  08A7                     l3022:	
  7877  08A7  01E1               	clrf	___fladd@a+3
  7878  08A8  28B1               	goto	l904
  7879  08A9                     l3024:	
  7880  08A9  3000               	movlw	0
  7881  08AA  00E1               	movwf	___fladd@a+3
  7882  08AB  3000               	movlw	0
  7883  08AC  00E0               	movwf	___fladd@a+2
  7884  08AD  3000               	movlw	0
  7885  08AE  00DF               	movwf	___fladd@a+1
  7886  08AF  3000               	movlw	0
  7887  08B0  00DE               	movwf	___fladd@a
  7888  08B1                     l904:	
  7889  08B1  086C               	movf	___fladd@bexp,w
  7890  08B2  026B               	subwf	___fladd@aexp,w
  7891  08B3  1803               	skipnc
  7892  08B4  28B6               	goto	u3241
  7893  08B5  28B7               	goto	u3240
  7894  08B6                     u3241:	
  7895  08B6  28FB               	goto	l3060
  7896  08B7                     u3240:	
  7897  08B7                     l3026:	
  7898  08B7  1F6A               	btfss	___fladd@signs,6
  7899  08B8  28BA               	goto	u3251
  7900  08B9  28BB               	goto	u3250
  7901  08BA                     u3251:	
  7902  08BA  28BF               	goto	l3030
  7903  08BB                     u3250:	
  7904  08BB                     l3028:	
  7905  08BB  3080               	movlw	128
  7906  08BC  00E2               	movwf	??___fladd
  7907  08BD  0862               	movf	??___fladd,w
  7908  08BE  06EA               	xorwf	___fladd@signs,f
  7909  08BF                     l3030:	
  7910  08BF  086C               	movf	___fladd@bexp,w
  7911  08C0  00E2               	movwf	??___fladd
  7912  08C1  0862               	movf	??___fladd,w
  7913  08C2  00ED               	movwf	___fladd@grs
  7914  08C3                     l3032:	
  7915  08C3  086B               	movf	___fladd@aexp,w
  7916  08C4  00E2               	movwf	??___fladd
  7917  08C5  0862               	movf	??___fladd,w
  7918  08C6  00EC               	movwf	___fladd@bexp
  7919  08C7                     l3034:	
  7920  08C7  086D               	movf	___fladd@grs,w
  7921  08C8  00E2               	movwf	??___fladd
  7922  08C9  0862               	movf	??___fladd,w
  7923  08CA  00EB               	movwf	___fladd@aexp
  7924  08CB                     l3036:	
  7925  08CB  085A               	movf	___fladd@b,w
  7926  08CC  00E2               	movwf	??___fladd
  7927  08CD  0862               	movf	??___fladd,w
  7928  08CE  00ED               	movwf	___fladd@grs
  7929  08CF                     l3038:	
  7930  08CF  085E               	movf	___fladd@a,w
  7931  08D0  00E2               	movwf	??___fladd
  7932  08D1  0862               	movf	??___fladd,w
  7933  08D2  00DA               	movwf	___fladd@b
  7934  08D3                     l3040:	
  7935  08D3  086D               	movf	___fladd@grs,w
  7936  08D4  00E2               	movwf	??___fladd
  7937  08D5  0862               	movf	??___fladd,w
  7938  08D6  00DE               	movwf	___fladd@a
  7939  08D7                     l3042:	
  7940  08D7  085B               	movf	___fladd@b+1,w
  7941  08D8  00E2               	movwf	??___fladd
  7942  08D9  0862               	movf	??___fladd,w
  7943  08DA  00ED               	movwf	___fladd@grs
  7944  08DB                     l3044:	
  7945  08DB  085F               	movf	___fladd@a+1,w
  7946  08DC  00E2               	movwf	??___fladd
  7947  08DD  0862               	movf	??___fladd,w
  7948  08DE  00DB               	movwf	___fladd@b+1
  7949  08DF                     l3046:	
  7950  08DF  086D               	movf	___fladd@grs,w
  7951  08E0  00E2               	movwf	??___fladd
  7952  08E1  0862               	movf	??___fladd,w
  7953  08E2  00DF               	movwf	___fladd@a+1
  7954  08E3                     l3048:	
  7955  08E3  085C               	movf	___fladd@b+2,w
  7956  08E4  00E2               	movwf	??___fladd
  7957  08E5  0862               	movf	??___fladd,w
  7958  08E6  00ED               	movwf	___fladd@grs
  7959  08E7                     l3050:	
  7960  08E7  0860               	movf	___fladd@a+2,w
  7961  08E8  00E2               	movwf	??___fladd
  7962  08E9  0862               	movf	??___fladd,w
  7963  08EA  00DC               	movwf	___fladd@b+2
  7964  08EB                     l3052:	
  7965  08EB  086D               	movf	___fladd@grs,w
  7966  08EC  00E2               	movwf	??___fladd
  7967  08ED  0862               	movf	??___fladd,w
  7968  08EE  00E0               	movwf	___fladd@a+2
  7969  08EF                     l3054:	
  7970  08EF  085D               	movf	___fladd@b+3,w
  7971  08F0  00E2               	movwf	??___fladd
  7972  08F1  0862               	movf	??___fladd,w
  7973  08F2  00ED               	movwf	___fladd@grs
  7974  08F3                     l3056:	
  7975  08F3  0861               	movf	___fladd@a+3,w
  7976  08F4  00E2               	movwf	??___fladd
  7977  08F5  0862               	movf	??___fladd,w
  7978  08F6  00DD               	movwf	___fladd@b+3
  7979  08F7                     l3058:	
  7980  08F7  086D               	movf	___fladd@grs,w
  7981  08F8  00E2               	movwf	??___fladd
  7982  08F9  0862               	movf	??___fladd,w
  7983  08FA  00E1               	movwf	___fladd@a+3
  7984  08FB                     l3060:	
  7985  08FB  01ED               	clrf	___fladd@grs
  7986  08FC                     l3062:	
  7987  08FC  086B               	movf	___fladd@aexp,w
  7988  08FD  00E2               	movwf	??___fladd
  7989  08FE  01E3               	clrf	??___fladd+1
  7990  08FF  0863               	movf	??___fladd+1,w
  7991  0900  00E5               	movwf	??___fladd+3
  7992  0901  086C               	movf	___fladd@bexp,w
  7993  0902  0262               	subwf	??___fladd,w
  7994  0903  00E4               	movwf	??___fladd+2
  7995  0904  1C03               	skipc
  7996  0905  03E5               	decf	??___fladd+3,f
  7997  0906  0865               	movf	??___fladd+3,w
  7998  0907  3A80               	xorlw	128
  7999  0908  00E6               	movwf	??___fladd+4
  8000  0909  3080               	movlw	128
  8001  090A  0266               	subwf	??___fladd+4,w
  8002  090B  1D03               	skipz
  8003  090C  290F               	goto	u3265
  8004  090D  301A               	movlw	26
  8005  090E  0264               	subwf	??___fladd+2,w
  8006  090F                     u3265:	
  8007  090F  1C03               	skipc
  8008  0910  2912               	goto	u3261
  8009  0911  2913               	goto	u3260
  8010  0912                     u3261:	
  8011  0912  294B               	goto	l3078
  8012  0913                     u3260:	
  8013  0913                     l3064:	
  8014  0913  0020               	movlb	0	; select bank0
  8015  0914  085D               	movf	___fladd@b+3,w
  8016  0915  045C               	iorwf	___fladd@b+2,w
  8017  0916  045B               	iorwf	___fladd@b+1,w
  8018  0917  045A               	iorwf	___fladd@b,w
  8019  0918  1D03               	skipz
  8020  0919  291B               	goto	u3271
  8021  091A  291D               	goto	u3270
  8022  091B                     u3271:	
  8023  091B  3001               	movlw	1
  8024  091C  291E               	goto	u3280
  8025  091D                     u3270:	
  8026  091D  3000               	movlw	0
  8027  091E                     u3280:	
  8028  091E  00E2               	movwf	??___fladd
  8029  091F  0862               	movf	??___fladd,w
  8030  0920  00ED               	movwf	___fladd@grs
  8031  0921  3000               	movlw	0
  8032  0922  00DD               	movwf	___fladd@b+3
  8033  0923  3000               	movlw	0
  8034  0924  00DC               	movwf	___fladd@b+2
  8035  0925  3000               	movlw	0
  8036  0926  00DB               	movwf	___fladd@b+1
  8037  0927  3000               	movlw	0
  8038  0928  00DA               	movwf	___fladd@b
  8039  0929  086B               	movf	___fladd@aexp,w
  8040  092A  00E2               	movwf	??___fladd
  8041  092B  0862               	movf	??___fladd,w
  8042  092C  00EC               	movwf	___fladd@bexp
  8043  092D  2952               	goto	l908
  8044  092E                     l910:	
  8045  092E  1C6D               	btfss	___fladd@grs,0
  8046  092F  2931               	goto	u3291
  8047  0930  2932               	goto	u3290
  8048  0931                     u3291:	
  8049  0931  2938               	goto	l3068
  8050  0932                     u3290:	
  8051  0932                     l3066:	
  8052  0932  366D               	lsrf	___fladd@grs,w
  8053  0933  3801               	iorlw	1
  8054  0934  00E2               	movwf	??___fladd
  8055  0935  0862               	movf	??___fladd,w
  8056  0936  00ED               	movwf	___fladd@grs
  8057  0937  293A               	goto	l3070
  8058  0938                     l3068:	
  8059  0938  1003               	clrc
  8060  0939  0CED               	rrf	___fladd@grs,f
  8061  093A                     l3070:	
  8062  093A  1C5A               	btfss	___fladd@b,0
  8063  093B  293D               	goto	u3301
  8064  093C  293E               	goto	u3300
  8065  093D                     u3301:	
  8066  093D  293F               	goto	l3074
  8067  093E                     u3300:	
  8068  093E                     l3072:	
  8069  093E  17ED               	bsf	___fladd@grs,7
  8070  093F                     l3074:	
  8071  093F  3001               	movlw	1
  8072  0940  00E2               	movwf	??___fladd
  8073  0941                     u3315:	
  8074  0941  37DD               	asrf	___fladd@b+3,f
  8075  0942  0CDC               	rrf	___fladd@b+2,f
  8076  0943  0CDB               	rrf	___fladd@b+1,f
  8077  0944  0CDA               	rrf	___fladd@b,f
  8078  0945  0BE2               	decfsz	??___fladd& (0+127),f
  8079  0946  2941               	goto	u3315
  8080  0947                     l3076:	
  8081  0947  3001               	movlw	1
  8082  0948  00E2               	movwf	??___fladd
  8083  0949  0862               	movf	??___fladd,w
  8084  094A  07EC               	addwf	___fladd@bexp,f
  8085  094B                     l3078:	
  8086  094B  0020               	movlb	0	; select bank0
  8087  094C  086B               	movf	___fladd@aexp,w
  8088  094D  026C               	subwf	___fladd@bexp,w
  8089  094E  1C03               	skipc
  8090  094F  2951               	goto	u3321
  8091  0950  2952               	goto	u3320
  8092  0951                     u3321:	
  8093  0951  292E               	goto	l910
  8094  0952                     u3320:	
  8095  0952                     l908:	
  8096  0952  1B6A               	btfsc	___fladd@signs,6
  8097  0953  2955               	goto	u3331
  8098  0954  2956               	goto	u3330
  8099  0955                     u3331:	
  8100  0955  298E               	goto	l3104
  8101  0956                     u3330:	
  8102  0956                     l3080:	
  8103  0956  086C               	movf	___fladd@bexp,w
  8104  0957  1D03               	btfss	3,2
  8105  0958  295A               	goto	u3341
  8106  0959  295B               	goto	u3340
  8107  095A                     u3341:	
  8108  095A  2964               	goto	l3086
  8109  095B                     u3340:	
  8110  095B                     l3082:	
  8111  095B  3000               	movlw	0
  8112  095C  00DD               	movwf	?___fladd+3
  8113  095D  3000               	movlw	0
  8114  095E  00DC               	movwf	?___fladd+2
  8115  095F  3000               	movlw	0
  8116  0960  00DB               	movwf	?___fladd+1
  8117  0961  3000               	movlw	0
  8118  0962  00DA               	movwf	?___fladd
  8119  0963  2A8A               	goto	l917
  8120  0964                     l3086:	
  8121  0964  085E               	movf	___fladd@a,w
  8122  0965  07DA               	addwf	___fladd@b,f
  8123  0966  085F               	movf	___fladd@a+1,w
  8124  0967  3DDB               	addwfc	___fladd@b+1,f
  8125  0968  0860               	movf	___fladd@a+2,w
  8126  0969  3DDC               	addwfc	___fladd@b+2,f
  8127  096A  0861               	movf	___fladd@a+3,w
  8128  096B  3DDD               	addwfc	___fladd@b+3,f
  8129  096C                     l3088:	
  8130  096C  1C5D               	btfss	___fladd@b+3,0
  8131  096D  296F               	goto	u3351
  8132  096E  2970               	goto	u3350
  8133  096F                     u3351:	
  8134  096F  2A1A               	goto	l3138
  8135  0970                     u3350:	
  8136  0970                     l3090:	
  8137  0970  1C6D               	btfss	___fladd@grs,0
  8138  0971  2973               	goto	u3361
  8139  0972  2974               	goto	u3360
  8140  0973                     u3361:	
  8141  0973  297A               	goto	l3094
  8142  0974                     u3360:	
  8143  0974                     l3092:	
  8144  0974  366D               	lsrf	___fladd@grs,w
  8145  0975  3801               	iorlw	1
  8146  0976  00E2               	movwf	??___fladd
  8147  0977  0862               	movf	??___fladd,w
  8148  0978  00ED               	movwf	___fladd@grs
  8149  0979  297C               	goto	l3096
  8150  097A                     l3094:	
  8151  097A  1003               	clrc
  8152  097B  0CED               	rrf	___fladd@grs,f
  8153  097C                     l3096:	
  8154  097C  1C5A               	btfss	___fladd@b,0
  8155  097D  297F               	goto	u3371
  8156  097E  2980               	goto	u3370
  8157  097F                     u3371:	
  8158  097F  2981               	goto	l3100
  8159  0980                     u3370:	
  8160  0980                     l3098:	
  8161  0980  17ED               	bsf	___fladd@grs,7
  8162  0981                     l3100:	
  8163  0981  3001               	movlw	1
  8164  0982  00E2               	movwf	??___fladd
  8165  0983                     u3385:	
  8166  0983  37DD               	asrf	___fladd@b+3,f
  8167  0984  0CDC               	rrf	___fladd@b+2,f
  8168  0985  0CDB               	rrf	___fladd@b+1,f
  8169  0986  0CDA               	rrf	___fladd@b,f
  8170  0987  0BE2               	decfsz	??___fladd& (0+127),f
  8171  0988  2983               	goto	u3385
  8172  0989                     l3102:	
  8173  0989  3001               	movlw	1
  8174  098A  00E2               	movwf	??___fladd
  8175  098B  0862               	movf	??___fladd,w
  8176  098C  07EC               	addwf	___fladd@bexp,f
  8177  098D  2A1A               	goto	l3138
  8178  098E                     l3104:	
  8179  098E  085D               	movf	___fladd@b+3,w
  8180  098F  3A80               	xorlw	128
  8181  0990  00E2               	movwf	??___fladd
  8182  0991  0861               	movf	___fladd@a+3,w
  8183  0992  3A80               	xorlw	128
  8184  0993  0262               	subwf	??___fladd,w
  8185  0994  1D03               	skipz
  8186  0995  29A0               	goto	u3393
  8187  0996  0860               	movf	___fladd@a+2,w
  8188  0997  025C               	subwf	___fladd@b+2,w
  8189  0998  1D03               	skipz
  8190  0999  29A0               	goto	u3393
  8191  099A  085F               	movf	___fladd@a+1,w
  8192  099B  025B               	subwf	___fladd@b+1,w
  8193  099C  1D03               	skipz
  8194  099D  29A0               	goto	u3393
  8195  099E  085E               	movf	___fladd@a,w
  8196  099F  025A               	subwf	___fladd@b,w
  8197  09A0                     u3393:	
  8198  09A0  1803               	skipnc
  8199  09A1  29A3               	goto	u3391
  8200  09A2  29A4               	goto	u3390
  8201  09A3                     u3391:	
  8202  09A3  29DC               	goto	l3114
  8203  09A4                     u3390:	
  8204  09A4                     l3106:	
  8205  09A4  30FF               	movlw	255
  8206  09A5  00E2               	movwf	??___fladd
  8207  09A6  30FF               	movlw	255
  8208  09A7  00E3               	movwf	??___fladd+1
  8209  09A8  30FF               	movlw	255
  8210  09A9  00E4               	movwf	??___fladd+2
  8211  09AA  30FF               	movlw	255
  8212  09AB  00E5               	movwf	??___fladd+3
  8213  09AC  085A               	movf	___fladd@b,w
  8214  09AD  025E               	subwf	___fladd@a,w
  8215  09AE  00E6               	movwf	??___fladd+4
  8216  09AF  085B               	movf	___fladd@b+1,w
  8217  09B0  3B5F               	subwfb	___fladd@a+1,w
  8218  09B1  00E7               	movwf	??___fladd+5
  8219  09B2  085C               	movf	___fladd@b+2,w
  8220  09B3  3B60               	subwfb	___fladd@a+2,w
  8221  09B4  00E8               	movwf	??___fladd+6
  8222  09B5  085D               	movf	___fladd@b+3,w
  8223  09B6  3B61               	subwfb	___fladd@a+3,w
  8224  09B7  00E9               	movwf	??___fladd+7
  8225  09B8  0866               	movf	??___fladd+4,w
  8226  09B9  07E2               	addwf	??___fladd,f
  8227  09BA  0867               	movf	??___fladd+5,w
  8228  09BB  3DE3               	addwfc	??___fladd+1,f
  8229  09BC  0868               	movf	??___fladd+6,w
  8230  09BD  3DE4               	addwfc	??___fladd+2,f
  8231  09BE  0869               	movf	??___fladd+7,w
  8232  09BF  3DE5               	addwfc	??___fladd+3,f
  8233  09C0  0865               	movf	??___fladd+3,w
  8234  09C1  00DD               	movwf	___fladd@b+3
  8235  09C2  0864               	movf	??___fladd+2,w
  8236  09C3  00DC               	movwf	___fladd@b+2
  8237  09C4  0863               	movf	??___fladd+1,w
  8238  09C5  00DB               	movwf	___fladd@b+1
  8239  09C6  0862               	movf	??___fladd,w
  8240  09C7  00DA               	movwf	___fladd@b
  8241  09C8                     l3108:	
  8242  09C8  3080               	movlw	128
  8243  09C9  00E2               	movwf	??___fladd
  8244  09CA  0862               	movf	??___fladd,w
  8245  09CB  06EA               	xorwf	___fladd@signs,f
  8246  09CC  09ED               	comf	___fladd@grs,f
  8247  09CD  0AED               	incf	___fladd@grs,f
  8248  09CE                     l3110:	
  8249  09CE  086D               	movf	___fladd@grs,w
  8250  09CF  1D03               	btfss	3,2
  8251  09D0  29D2               	goto	u3401
  8252  09D1  29D3               	goto	u3400
  8253  09D2                     u3401:	
  8254  09D2  29E4               	goto	l925
  8255  09D3                     u3400:	
  8256  09D3                     l3112:	
  8257  09D3  3001               	movlw	1
  8258  09D4  07DA               	addwf	___fladd@b,f
  8259  09D5  3000               	movlw	0
  8260  09D6  3DDB               	addwfc	___fladd@b+1,f
  8261  09D7  3000               	movlw	0
  8262  09D8  3DDC               	addwfc	___fladd@b+2,f
  8263  09D9  3000               	movlw	0
  8264  09DA  3DDD               	addwfc	___fladd@b+3,f
  8265  09DB  29E4               	goto	l925
  8266  09DC                     l3114:	
  8267  09DC  085E               	movf	___fladd@a,w
  8268  09DD  02DA               	subwf	___fladd@b,f
  8269  09DE  085F               	movf	___fladd@a+1,w
  8270  09DF  3BDB               	subwfb	___fladd@b+1,f
  8271  09E0  0860               	movf	___fladd@a+2,w
  8272  09E1  3BDC               	subwfb	___fladd@b+2,f
  8273  09E2  0861               	movf	___fladd@a+3,w
  8274  09E3  3BDD               	subwfb	___fladd@b+3,f
  8275  09E4                     l925:	
  8276  09E4  085D               	movf	___fladd@b+3,w
  8277  09E5  045C               	iorwf	___fladd@b+2,w
  8278  09E6  045B               	iorwf	___fladd@b+1,w
  8279  09E7  045A               	iorwf	___fladd@b,w
  8280  09E8  1D03               	skipz
  8281  09E9  29EB               	goto	u3411
  8282  09EA  29EC               	goto	u3410
  8283  09EB                     u3411:	
  8284  09EB  2A16               	goto	l3136
  8285  09EC                     u3410:	
  8286  09EC                     l3116:	
  8287  09EC  086D               	movf	___fladd@grs,w
  8288  09ED  1D03               	btfss	3,2
  8289  09EE  29F0               	goto	u3421
  8290  09EF  29F1               	goto	u3420
  8291  09F0                     u3421:	
  8292  09F0  2A16               	goto	l3136
  8293  09F1                     u3420:	
  8294  09F1                     l3118:	
  8295  09F1  3000               	movlw	0
  8296  09F2  00DD               	movwf	?___fladd+3
  8297  09F3  3000               	movlw	0
  8298  09F4  00DC               	movwf	?___fladd+2
  8299  09F5  3000               	movlw	0
  8300  09F6  00DB               	movwf	?___fladd+1
  8301  09F7  3000               	movlw	0
  8302  09F8  00DA               	movwf	?___fladd
  8303  09F9  2A8A               	goto	l917
  8304  09FA                     l3122:	
  8305  09FA  3001               	movlw	1
  8306  09FB                     u3435:	
  8307  09FB  35DA               	lslf	___fladd@b,f
  8308  09FC  0DDB               	rlf	___fladd@b+1,f
  8309  09FD  0DDC               	rlf	___fladd@b+2,f
  8310  09FE  0DDD               	rlf	___fladd@b+3,f
  8311  09FF  0B89               	decfsz	9,f
  8312  0A00  29FB               	goto	u3435
  8313  0A01                     l3124:	
  8314  0A01  1FED               	btfss	___fladd@grs,7
  8315  0A02  2A04               	goto	u3441
  8316  0A03  2A05               	goto	u3440
  8317  0A04                     u3441:	
  8318  0A04  2A06               	goto	l929
  8319  0A05                     u3440:	
  8320  0A05                     l3126:	
  8321  0A05  145A               	bsf	___fladd@b,0
  8322  0A06                     l929:	
  8323  0A06  1C6D               	btfss	___fladd@grs,0
  8324  0A07  2A09               	goto	u3451
  8325  0A08  2A0A               	goto	u3450
  8326  0A09                     u3451:	
  8327  0A09  2A0D               	goto	l3130
  8328  0A0A                     u3450:	
  8329  0A0A                     l3128:	
  8330  0A0A  1403               	setc
  8331  0A0B  0DED               	rlf	___fladd@grs,f
  8332  0A0C  2A0F               	goto	l3132
  8333  0A0D                     l3130:	
  8334  0A0D  1003               	clrc
  8335  0A0E  0DED               	rlf	___fladd@grs,f
  8336  0A0F                     l3132:	
  8337  0A0F  086C               	movf	___fladd@bexp,w
  8338  0A10  1903               	btfsc	3,2
  8339  0A11  2A13               	goto	u3461
  8340  0A12  2A14               	goto	u3460
  8341  0A13                     u3461:	
  8342  0A13  2A16               	goto	l3136
  8343  0A14                     u3460:	
  8344  0A14                     l3134:	
  8345  0A14  3001               	movlw	1
  8346  0A15  02EC               	subwf	___fladd@bexp,f
  8347  0A16                     l3136:	
  8348  0A16  1FDC               	btfss	___fladd@b+2,7
  8349  0A17  2A19               	goto	u3471
  8350  0A18  2A1A               	goto	u3470
  8351  0A19                     u3471:	
  8352  0A19  29FA               	goto	l3122
  8353  0A1A                     u3470:	
  8354  0A1A                     l3138:	
  8355  0A1A  01EB               	clrf	___fladd@aexp
  8356  0A1B                     l3140:	
  8357  0A1B  1FED               	btfss	___fladd@grs,7
  8358  0A1C  2A1E               	goto	u3481
  8359  0A1D  2A1F               	goto	u3480
  8360  0A1E                     u3481:	
  8361  0A1E  2A2D               	goto	l3148
  8362  0A1F                     u3480:	
  8363  0A1F                     l3142:	
  8364  0A1F  086D               	movf	___fladd@grs,w
  8365  0A20  397F               	andlw	127
  8366  0A21  1903               	btfsc	3,2
  8367  0A22  2A24               	goto	u3491
  8368  0A23  2A25               	goto	u3490
  8369  0A24                     u3491:	
  8370  0A24  2A28               	goto	l935
  8371  0A25                     u3490:	
  8372  0A25                     l3144:	
  8373  0A25  01EB               	clrf	___fladd@aexp
  8374  0A26  0AEB               	incf	___fladd@aexp,f
  8375  0A27  2A2D               	goto	l3148
  8376  0A28                     l935:	
  8377  0A28  1C5A               	btfss	___fladd@b,0
  8378  0A29  2A2B               	goto	u3501
  8379  0A2A  2A2C               	goto	u3500
  8380  0A2B                     u3501:	
  8381  0A2B  2A2D               	goto	l3148
  8382  0A2C                     u3500:	
  8383  0A2C  2A25               	goto	l3144
  8384  0A2D                     l3148:	
  8385  0A2D  086B               	movf	___fladd@aexp,w
  8386  0A2E  1903               	btfsc	3,2
  8387  0A2F  2A31               	goto	u3511
  8388  0A30  2A32               	goto	u3510
  8389  0A31                     u3511:	
  8390  0A31  2A5F               	goto	l938
  8391  0A32                     u3510:	
  8392  0A32                     l3150:	
  8393  0A32  3001               	movlw	1
  8394  0A33  07DA               	addwf	___fladd@b,f
  8395  0A34  3000               	movlw	0
  8396  0A35  3DDB               	addwfc	___fladd@b+1,f
  8397  0A36  3000               	movlw	0
  8398  0A37  3DDC               	addwfc	___fladd@b+2,f
  8399  0A38  3000               	movlw	0
  8400  0A39  3DDD               	addwfc	___fladd@b+3,f
  8401  0A3A                     l3152:	
  8402  0A3A  1C5D               	btfss	___fladd@b+3,0
  8403  0A3B  2A3D               	goto	u3521
  8404  0A3C  2A3E               	goto	u3520
  8405  0A3D                     u3521:	
  8406  0A3D  2A5F               	goto	l938
  8407  0A3E                     u3520:	
  8408  0A3E                     l3154:	
  8409  0A3E  085A               	movf	___fladd@b,w
  8410  0A3F  00E2               	movwf	??___fladd
  8411  0A40  085B               	movf	___fladd@b+1,w
  8412  0A41  00E3               	movwf	??___fladd+1
  8413  0A42  085C               	movf	___fladd@b+2,w
  8414  0A43  00E4               	movwf	??___fladd+2
  8415  0A44  085D               	movf	___fladd@b+3,w
  8416  0A45  00E5               	movwf	??___fladd+3
  8417  0A46  3001               	movlw	1
  8418  0A47  00E6               	movwf	??___fladd+4
  8419  0A48                     u3535:	
  8420  0A48  37E5               	asrf	??___fladd+3,f
  8421  0A49  0CE4               	rrf	??___fladd+2,f
  8422  0A4A  0CE3               	rrf	??___fladd+1,f
  8423  0A4B  0CE2               	rrf	??___fladd,f
  8424  0A4C                     u3530:	
  8425  0A4C  0BE6               	decfsz	??___fladd+4,f
  8426  0A4D  2A48               	goto	u3535
  8427  0A4E  0865               	movf	??___fladd+3,w
  8428  0A4F  00DD               	movwf	___fladd@b+3
  8429  0A50  0864               	movf	??___fladd+2,w
  8430  0A51  00DC               	movwf	___fladd@b+2
  8431  0A52  0863               	movf	??___fladd+1,w
  8432  0A53  00DB               	movwf	___fladd@b+1
  8433  0A54  0862               	movf	??___fladd,w
  8434  0A55  00DA               	movwf	___fladd@b
  8435  0A56  0A6C               	incf	___fladd@bexp,w
  8436  0A57  1903               	btfsc	3,2
  8437  0A58  2A5A               	goto	u3541
  8438  0A59  2A5B               	goto	u3540
  8439  0A5A                     u3541:	
  8440  0A5A  2A5F               	goto	l938
  8441  0A5B                     u3540:	
  8442  0A5B                     l3156:	
  8443  0A5B  3001               	movlw	1
  8444  0A5C  00E2               	movwf	??___fladd
  8445  0A5D  0862               	movf	??___fladd,w
  8446  0A5E  07EC               	addwf	___fladd@bexp,f
  8447  0A5F                     l938:	
  8448  0A5F  0A6C               	incf	___fladd@bexp,w
  8449  0A60  1903               	btfsc	3,2
  8450  0A61  2A63               	goto	u3551
  8451  0A62  2A64               	goto	u3550
  8452  0A63                     u3551:	
  8453  0A63  2A69               	goto	l3160
  8454  0A64                     u3550:	
  8455  0A64                     l3158:	
  8456  0A64  086C               	movf	___fladd@bexp,w
  8457  0A65  1D03               	btfss	3,2
  8458  0A66  2A68               	goto	u3561
  8459  0A67  2A69               	goto	u3560
  8460  0A68                     u3561:	
  8461  0A68  2A77               	goto	l3166
  8462  0A69                     u3560:	
  8463  0A69                     l3160:	
  8464  0A69  3000               	movlw	0
  8465  0A6A  00DD               	movwf	___fladd@b+3
  8466  0A6B  3000               	movlw	0
  8467  0A6C  00DC               	movwf	___fladd@b+2
  8468  0A6D  3000               	movlw	0
  8469  0A6E  00DB               	movwf	___fladd@b+1
  8470  0A6F  3000               	movlw	0
  8471  0A70  00DA               	movwf	___fladd@b
  8472  0A71                     l3162:	
  8473  0A71  086C               	movf	___fladd@bexp,w
  8474  0A72  1D03               	btfss	3,2
  8475  0A73  2A75               	goto	u3571
  8476  0A74  2A76               	goto	u3570
  8477  0A75                     u3571:	
  8478  0A75  2A77               	goto	l3166
  8479  0A76                     u3570:	
  8480  0A76                     l3164:	
  8481  0A76  01EA               	clrf	___fladd@signs
  8482  0A77                     l3166:	
  8483  0A77  1C6C               	btfss	___fladd@bexp,0
  8484  0A78  2A7A               	goto	u3581
  8485  0A79  2A7B               	goto	u3580
  8486  0A7A                     u3581:	
  8487  0A7A  2A7D               	goto	l3170
  8488  0A7B                     u3580:	
  8489  0A7B                     l3168:	
  8490  0A7B  17DC               	bsf	___fladd@b+2,7
  8491  0A7C  2A81               	goto	l946
  8492  0A7D                     l3170:	
  8493  0A7D  307F               	movlw	127
  8494  0A7E  00E2               	movwf	??___fladd
  8495  0A7F  0862               	movf	??___fladd,w
  8496  0A80  05DC               	andwf	___fladd@b+2,f
  8497  0A81                     l946:	
  8498  0A81  366C               	lsrf	___fladd@bexp,w
  8499  0A82  00E2               	movwf	??___fladd
  8500  0A83  0862               	movf	??___fladd,w
  8501  0A84  00DD               	movwf	___fladd@b+3
  8502  0A85                     l3172:	
  8503  0A85  1FEA               	btfss	___fladd@signs,7
  8504  0A86  2A88               	goto	u3591
  8505  0A87  2A89               	goto	u3590
  8506  0A88                     u3591:	
  8507  0A88  2A8A               	goto	l947
  8508  0A89                     u3590:	
  8509  0A89                     l3174:	
  8510  0A89  17DD               	bsf	___fladd@b+3,7
  8511  0A8A                     l947:	
  8512  0A8A                     l917:	
  8513  0A8A  0008               	return
  8514  0A8B                     __end_of___fladd:	
  8515                           
  8516                           	psect	text19
  8517  1ADC                     __ptext19:	
  8518 ;; *************** function ___flneg *****************
  8519 ;; Defined at:
  8520 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  f1              4    0[COMMON] unsigned char 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;		None
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  4    0[COMMON] unsigned char 
  8527 ;; Registers used:
  8528 ;;		wreg
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8537 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8538 ;;Total ram usage:        4 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; This function calls:
  8541 ;;		Nothing
  8542 ;; This function is called by:
  8543 ;;		_efgtoa
  8544 ;; This function uses a non-reentrant model
  8545 ;;
  8546                           
  8547                           
  8548                           ;psect for function ___flneg
  8549  1ADC                     ___flneg:	
  8550  1ADC                     l3424:	
  8551                           ;incstack = 0
  8552                           ; Regs used in ___flneg: [wreg]
  8553                           
  8554  1ADC  0873               	movf	___flneg@f1+3,w
  8555  1ADD  0472               	iorwf	___flneg@f1+2,w
  8556  1ADE  0471               	iorwf	___flneg@f1+1,w
  8557  1ADF  0470               	iorwf	___flneg@f1,w
  8558  1AE0  1903               	skipnz
  8559  1AE1  2AE3               	goto	u4231
  8560  1AE2  2AE4               	goto	u4230
  8561  1AE3                     u4231:	
  8562  1AE3  2AE6               	goto	l3428
  8563  1AE4                     u4230:	
  8564  1AE4                     l3426:	
  8565  1AE4  3080               	movlw	128
  8566  1AE5  06F3               	xorwf	___flneg@f1+3,f
  8567  1AE6                     l3428:	
  8568  1AE6                     l793:	
  8569  1AE6  0008               	return
  8570  1AE7                     __end_of___flneg:	
  8571                           
  8572                           	psect	text20
  8573  0A8B                     __ptext20:	
  8574 ;; *************** function ___flmul *****************
  8575 ;; Defined at:
  8576 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  b               4    6[BANK0 ] unsigned char 
  8579 ;;  a               4   10[BANK0 ] unsigned char 
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;  prod            4   26[BANK0 ] struct .
  8582 ;;  grs             4   20[BANK0 ] unsigned long 
  8583 ;;  temp            2   30[BANK0 ] struct .
  8584 ;;  bexp            1   25[BANK0 ] unsigned char 
  8585 ;;  aexp            1   24[BANK0 ] unsigned char 
  8586 ;;  sign            1   19[BANK0 ] unsigned char 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  4    6[BANK0 ] unsigned char 
  8589 ;; Registers used:
  8590 ;;		wreg, status,2, status,0, pclath, cstack
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8596 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;Total ram usage:       26 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; Hardware stack levels required when called:    1
  8603 ;; This function calls:
  8604 ;;		__Umul8_16
  8605 ;; This function is called by:
  8606 ;;		_main
  8607 ;;		_efgtoa
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           
  8612                           ;psect for function ___flmul
  8613  0A8B                     ___flmul:	
  8614  0A8B                     l3614:	
  8615                           ;incstack = 0
  8616                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8617                           
  8618  0A8B  0020               	movlb	0	; select bank0
  8619  0A8C  0829               	movf	___flmul@b+3,w
  8620  0A8D  3980               	andlw	128
  8621  0A8E  00AE               	movwf	??___flmul
  8622  0A8F  082E               	movf	??___flmul,w
  8623  0A90  00B3               	movwf	___flmul@sign
  8624  0A91                     l3616:	
  8625  0A91  3529               	lslf	___flmul@b+3,w
  8626  0A92  00AE               	movwf	??___flmul
  8627  0A93  082E               	movf	??___flmul,w
  8628  0A94  00B9               	movwf	___flmul@bexp
  8629  0A95                     l3618:	
  8630  0A95  1FA8               	btfss	___flmul@b+2,7
  8631  0A96  2A98               	goto	u4631
  8632  0A97  2A99               	goto	u4630
  8633  0A98                     u4631:	
  8634  0A98  2A9A               	goto	l3622
  8635  0A99                     u4630:	
  8636  0A99                     l3620:	
  8637  0A99  1439               	bsf	___flmul@bexp,0
  8638  0A9A                     l3622:	
  8639  0A9A  0839               	movf	___flmul@bexp,w
  8640  0A9B  1903               	btfsc	3,2
  8641  0A9C  2A9E               	goto	u4641
  8642  0A9D  2A9F               	goto	u4640
  8643  0A9E                     u4641:	
  8644  0A9E  2AAE               	goto	l3630
  8645  0A9F                     u4640:	
  8646  0A9F                     l3624:	
  8647  0A9F  0A39               	incf	___flmul@bexp,w
  8648  0AA0  1D03               	btfss	3,2
  8649  0AA1  2AA3               	goto	u4651
  8650  0AA2  2AA4               	goto	u4650
  8651  0AA3                     u4651:	
  8652  0AA3  2AAC               	goto	l3628
  8653  0AA4                     u4650:	
  8654  0AA4                     l3626:	
  8655  0AA4  3000               	movlw	0
  8656  0AA5  00A9               	movwf	___flmul@b+3
  8657  0AA6  3000               	movlw	0
  8658  0AA7  00A8               	movwf	___flmul@b+2
  8659  0AA8  3000               	movlw	0
  8660  0AA9  00A7               	movwf	___flmul@b+1
  8661  0AAA  3000               	movlw	0
  8662  0AAB  00A6               	movwf	___flmul@b
  8663  0AAC                     l3628:	
  8664  0AAC  17A8               	bsf	___flmul@b+2,7
  8665  0AAD  2AB6               	goto	l3632
  8666  0AAE                     l3630:	
  8667  0AAE  3000               	movlw	0
  8668  0AAF  00A9               	movwf	___flmul@b+3
  8669  0AB0  3000               	movlw	0
  8670  0AB1  00A8               	movwf	___flmul@b+2
  8671  0AB2  3000               	movlw	0
  8672  0AB3  00A7               	movwf	___flmul@b+1
  8673  0AB4  3000               	movlw	0
  8674  0AB5  00A6               	movwf	___flmul@b
  8675  0AB6                     l3632:	
  8676  0AB6  082D               	movf	___flmul@a+3,w
  8677  0AB7  3980               	andlw	128
  8678  0AB8  00AE               	movwf	??___flmul
  8679  0AB9  082E               	movf	??___flmul,w
  8680  0ABA  06B3               	xorwf	___flmul@sign,f
  8681  0ABB                     l3634:	
  8682  0ABB  352D               	lslf	___flmul@a+3,w
  8683  0ABC  00AE               	movwf	??___flmul
  8684  0ABD  082E               	movf	??___flmul,w
  8685  0ABE  00B8               	movwf	___flmul@aexp
  8686  0ABF                     l3636:	
  8687  0ABF  1FAC               	btfss	___flmul@a+2,7
  8688  0AC0  2AC2               	goto	u4661
  8689  0AC1  2AC3               	goto	u4660
  8690  0AC2                     u4661:	
  8691  0AC2  2AC4               	goto	l3640
  8692  0AC3                     u4660:	
  8693  0AC3                     l3638:	
  8694  0AC3  1438               	bsf	___flmul@aexp,0
  8695  0AC4                     l3640:	
  8696  0AC4  0838               	movf	___flmul@aexp,w
  8697  0AC5  1903               	btfsc	3,2
  8698  0AC6  2AC8               	goto	u4671
  8699  0AC7  2AC9               	goto	u4670
  8700  0AC8                     u4671:	
  8701  0AC8  2AD8               	goto	l3648
  8702  0AC9                     u4670:	
  8703  0AC9                     l3642:	
  8704  0AC9  0A38               	incf	___flmul@aexp,w
  8705  0ACA  1D03               	btfss	3,2
  8706  0ACB  2ACD               	goto	u4681
  8707  0ACC  2ACE               	goto	u4680
  8708  0ACD                     u4681:	
  8709  0ACD  2AD6               	goto	l3646
  8710  0ACE                     u4680:	
  8711  0ACE                     l3644:	
  8712  0ACE  3000               	movlw	0
  8713  0ACF  00AD               	movwf	___flmul@a+3
  8714  0AD0  3000               	movlw	0
  8715  0AD1  00AC               	movwf	___flmul@a+2
  8716  0AD2  3000               	movlw	0
  8717  0AD3  00AB               	movwf	___flmul@a+1
  8718  0AD4  3000               	movlw	0
  8719  0AD5  00AA               	movwf	___flmul@a
  8720  0AD6                     l3646:	
  8721  0AD6  17AC               	bsf	___flmul@a+2,7
  8722  0AD7  2AE0               	goto	l3650
  8723  0AD8                     l3648:	
  8724  0AD8  3000               	movlw	0
  8725  0AD9  00AD               	movwf	___flmul@a+3
  8726  0ADA  3000               	movlw	0
  8727  0ADB  00AC               	movwf	___flmul@a+2
  8728  0ADC  3000               	movlw	0
  8729  0ADD  00AB               	movwf	___flmul@a+1
  8730  0ADE  3000               	movlw	0
  8731  0ADF  00AA               	movwf	___flmul@a
  8732  0AE0                     l3650:	
  8733  0AE0  0838               	movf	___flmul@aexp,w
  8734  0AE1  1903               	btfsc	3,2
  8735  0AE2  2AE4               	goto	u4691
  8736  0AE3  2AE5               	goto	u4690
  8737  0AE4                     u4691:	
  8738  0AE4  2AEA               	goto	l3654
  8739  0AE5                     u4690:	
  8740  0AE5                     l3652:	
  8741  0AE5  0839               	movf	___flmul@bexp,w
  8742  0AE6  1D03               	btfss	3,2
  8743  0AE7  2AE9               	goto	u4701
  8744  0AE8  2AEA               	goto	u4700
  8745  0AE9                     u4701:	
  8746  0AE9  2AF3               	goto	l3658
  8747  0AEA                     u4700:	
  8748  0AEA                     l3654:	
  8749  0AEA  3000               	movlw	0
  8750  0AEB  00A9               	movwf	?___flmul+3
  8751  0AEC  3000               	movlw	0
  8752  0AED  00A8               	movwf	?___flmul+2
  8753  0AEE  3000               	movlw	0
  8754  0AEF  00A7               	movwf	?___flmul+1
  8755  0AF0  3000               	movlw	0
  8756  0AF1  00A6               	movwf	?___flmul
  8757  0AF2  2CE1               	goto	l1000
  8758  0AF3                     l3658:	
  8759  0AF3  0826               	movf	___flmul@b,w
  8760  0AF4  00AE               	movwf	??___flmul
  8761  0AF5  082E               	movf	??___flmul,w
  8762  0AF6  00F0               	movwf	__Umul8_16@multiplicand
  8763  0AF7  082C               	movf	___flmul@a+2,w
  8764  0AF8  319B  23EE  318A   	fcall	__Umul8_16
  8765  0AFB  0871               	movf	?__Umul8_16+1,w
  8766  0AFC  0020               	movlb	0	; select bank0
  8767  0AFD  00BF               	movwf	___flmul@temp+1
  8768  0AFE  0870               	movf	?__Umul8_16,w
  8769  0AFF  00BE               	movwf	___flmul@temp
  8770  0B00                     l3660:	
  8771  0B00  083E               	movf	___flmul@temp,w
  8772  0B01  00AE               	movwf	??___flmul
  8773  0B02  01AF               	clrf	??___flmul+1
  8774  0B03  01B0               	clrf	??___flmul+2
  8775  0B04  01B1               	clrf	??___flmul+3
  8776  0B05  0831               	movf	??___flmul+3,w
  8777  0B06  00B7               	movwf	___flmul@grs+3
  8778  0B07  0830               	movf	??___flmul+2,w
  8779  0B08  00B6               	movwf	___flmul@grs+2
  8780  0B09  082F               	movf	??___flmul+1,w
  8781  0B0A  00B5               	movwf	___flmul@grs+1
  8782  0B0B  082E               	movf	??___flmul,w
  8783  0B0C  00B4               	movwf	___flmul@grs
  8784  0B0D                     l3662:	
  8785  0B0D  083F               	movf	___flmul@temp+1,w
  8786  0B0E  00AE               	movwf	??___flmul
  8787  0B0F  01AF               	clrf	??___flmul+1
  8788  0B10  01B0               	clrf	??___flmul+2
  8789  0B11  01B1               	clrf	??___flmul+3
  8790  0B12  0831               	movf	??___flmul+3,w
  8791  0B13  00BD               	movwf	___flmul@prod+3
  8792  0B14  0830               	movf	??___flmul+2,w
  8793  0B15  00BC               	movwf	___flmul@prod+2
  8794  0B16  082F               	movf	??___flmul+1,w
  8795  0B17  00BB               	movwf	___flmul@prod+1
  8796  0B18  082E               	movf	??___flmul,w
  8797  0B19  00BA               	movwf	___flmul@prod
  8798  0B1A  0827               	movf	___flmul@b+1,w
  8799  0B1B  00AE               	movwf	??___flmul
  8800  0B1C  082E               	movf	??___flmul,w
  8801  0B1D  00F0               	movwf	__Umul8_16@multiplicand
  8802  0B1E  082B               	movf	___flmul@a+1,w
  8803  0B1F  319B  23EE  318A   	fcall	__Umul8_16
  8804  0B22  0871               	movf	?__Umul8_16+1,w
  8805  0B23  0020               	movlb	0	; select bank0
  8806  0B24  00BF               	movwf	___flmul@temp+1
  8807  0B25  0870               	movf	?__Umul8_16,w
  8808  0B26  00BE               	movwf	___flmul@temp
  8809  0B27                     l3664:	
  8810  0B27  083E               	movf	___flmul@temp,w
  8811  0B28  00AE               	movwf	??___flmul
  8812  0B29  01AF               	clrf	??___flmul+1
  8813  0B2A  01B0               	clrf	??___flmul+2
  8814  0B2B  01B1               	clrf	??___flmul+3
  8815  0B2C  082E               	movf	??___flmul,w
  8816  0B2D  07B4               	addwf	___flmul@grs,f
  8817  0B2E  082F               	movf	??___flmul+1,w
  8818  0B2F  3DB5               	addwfc	___flmul@grs+1,f
  8819  0B30  0830               	movf	??___flmul+2,w
  8820  0B31  3DB6               	addwfc	___flmul@grs+2,f
  8821  0B32  0831               	movf	??___flmul+3,w
  8822  0B33  3DB7               	addwfc	___flmul@grs+3,f
  8823  0B34                     l3666:	
  8824  0B34  083F               	movf	___flmul@temp+1,w
  8825  0B35  00AE               	movwf	??___flmul
  8826  0B36  01AF               	clrf	??___flmul+1
  8827  0B37  01B0               	clrf	??___flmul+2
  8828  0B38  01B1               	clrf	??___flmul+3
  8829  0B39  082E               	movf	??___flmul,w
  8830  0B3A  07BA               	addwf	___flmul@prod,f
  8831  0B3B  082F               	movf	??___flmul+1,w
  8832  0B3C  3DBB               	addwfc	___flmul@prod+1,f
  8833  0B3D  0830               	movf	??___flmul+2,w
  8834  0B3E  3DBC               	addwfc	___flmul@prod+2,f
  8835  0B3F  0831               	movf	??___flmul+3,w
  8836  0B40  3DBD               	addwfc	___flmul@prod+3,f
  8837  0B41  0828               	movf	___flmul@b+2,w
  8838  0B42  00AE               	movwf	??___flmul
  8839  0B43  082E               	movf	??___flmul,w
  8840  0B44  00F0               	movwf	__Umul8_16@multiplicand
  8841  0B45  082A               	movf	___flmul@a,w
  8842  0B46  319B  23EE  318A   	fcall	__Umul8_16
  8843  0B49  0871               	movf	?__Umul8_16+1,w
  8844  0B4A  0020               	movlb	0	; select bank0
  8845  0B4B  00BF               	movwf	___flmul@temp+1
  8846  0B4C  0870               	movf	?__Umul8_16,w
  8847  0B4D  00BE               	movwf	___flmul@temp
  8848  0B4E                     l3668:	
  8849  0B4E  083E               	movf	___flmul@temp,w
  8850  0B4F  00AE               	movwf	??___flmul
  8851  0B50  01AF               	clrf	??___flmul+1
  8852  0B51  01B0               	clrf	??___flmul+2
  8853  0B52  01B1               	clrf	??___flmul+3
  8854  0B53  082E               	movf	??___flmul,w
  8855  0B54  07B4               	addwf	___flmul@grs,f
  8856  0B55  082F               	movf	??___flmul+1,w
  8857  0B56  3DB5               	addwfc	___flmul@grs+1,f
  8858  0B57  0830               	movf	??___flmul+2,w
  8859  0B58  3DB6               	addwfc	___flmul@grs+2,f
  8860  0B59  0831               	movf	??___flmul+3,w
  8861  0B5A  3DB7               	addwfc	___flmul@grs+3,f
  8862  0B5B                     l3670:	
  8863  0B5B  083F               	movf	___flmul@temp+1,w
  8864  0B5C  00AE               	movwf	??___flmul
  8865  0B5D  01AF               	clrf	??___flmul+1
  8866  0B5E  01B0               	clrf	??___flmul+2
  8867  0B5F  01B1               	clrf	??___flmul+3
  8868  0B60  082E               	movf	??___flmul,w
  8869  0B61  07BA               	addwf	___flmul@prod,f
  8870  0B62  082F               	movf	??___flmul+1,w
  8871  0B63  3DBB               	addwfc	___flmul@prod+1,f
  8872  0B64  0830               	movf	??___flmul+2,w
  8873  0B65  3DBC               	addwfc	___flmul@prod+2,f
  8874  0B66  0831               	movf	??___flmul+3,w
  8875  0B67  3DBD               	addwfc	___flmul@prod+3,f
  8876  0B68                     l3672:	
  8877  0B68  3008               	movlw	8
  8878  0B69                     u4715:	
  8879  0B69  35B4               	lslf	___flmul@grs,f
  8880  0B6A  0DB5               	rlf	___flmul@grs+1,f
  8881  0B6B  0DB6               	rlf	___flmul@grs+2,f
  8882  0B6C  0DB7               	rlf	___flmul@grs+3,f
  8883  0B6D  0B89               	decfsz	9,f
  8884  0B6E  2B69               	goto	u4715
  8885  0B6F                     l3674:	
  8886  0B6F  0827               	movf	___flmul@b+1,w
  8887  0B70  00AE               	movwf	??___flmul
  8888  0B71  082E               	movf	??___flmul,w
  8889  0B72  00F0               	movwf	__Umul8_16@multiplicand
  8890  0B73  082A               	movf	___flmul@a,w
  8891  0B74  319B  23EE  318A   	fcall	__Umul8_16
  8892  0B77  0871               	movf	?__Umul8_16+1,w
  8893  0B78  0020               	movlb	0	; select bank0
  8894  0B79  00BF               	movwf	___flmul@temp+1
  8895  0B7A  0870               	movf	?__Umul8_16,w
  8896  0B7B  00BE               	movwf	___flmul@temp
  8897  0B7C                     l3676:	
  8898  0B7C  083E               	movf	___flmul@temp,w
  8899  0B7D  07B4               	addwf	___flmul@grs,f
  8900  0B7E  083F               	movf	___flmul@temp+1,w
  8901  0B7F  3DB5               	addwfc	___flmul@grs+1,f
  8902  0B80  3000               	movlw	0
  8903  0B81  3DB6               	addwfc	___flmul@grs+2,f
  8904  0B82  3DB7               	addwfc	___flmul@grs+3,f
  8905  0B83                     l3678:	
  8906  0B83  0826               	movf	___flmul@b,w
  8907  0B84  00AE               	movwf	??___flmul
  8908  0B85  082E               	movf	??___flmul,w
  8909  0B86  00F0               	movwf	__Umul8_16@multiplicand
  8910  0B87  082B               	movf	___flmul@a+1,w
  8911  0B88  319B  23EE  318A   	fcall	__Umul8_16
  8912  0B8B  0871               	movf	?__Umul8_16+1,w
  8913  0B8C  0020               	movlb	0	; select bank0
  8914  0B8D  00BF               	movwf	___flmul@temp+1
  8915  0B8E  0870               	movf	?__Umul8_16,w
  8916  0B8F  00BE               	movwf	___flmul@temp
  8917  0B90                     l3680:	
  8918  0B90  083E               	movf	___flmul@temp,w
  8919  0B91  07B4               	addwf	___flmul@grs,f
  8920  0B92  083F               	movf	___flmul@temp+1,w
  8921  0B93  3DB5               	addwfc	___flmul@grs+1,f
  8922  0B94  3000               	movlw	0
  8923  0B95  3DB6               	addwfc	___flmul@grs+2,f
  8924  0B96  3DB7               	addwfc	___flmul@grs+3,f
  8925  0B97                     l3682:	
  8926  0B97  3008               	movlw	8
  8927  0B98                     u4725:	
  8928  0B98  35B4               	lslf	___flmul@grs,f
  8929  0B99  0DB5               	rlf	___flmul@grs+1,f
  8930  0B9A  0DB6               	rlf	___flmul@grs+2,f
  8931  0B9B  0DB7               	rlf	___flmul@grs+3,f
  8932  0B9C  0B89               	decfsz	9,f
  8933  0B9D  2B98               	goto	u4725
  8934  0B9E  0826               	movf	___flmul@b,w
  8935  0B9F  00AE               	movwf	??___flmul
  8936  0BA0  082E               	movf	??___flmul,w
  8937  0BA1  00F0               	movwf	__Umul8_16@multiplicand
  8938  0BA2  082A               	movf	___flmul@a,w
  8939  0BA3  319B  23EE  318A   	fcall	__Umul8_16
  8940  0BA6  0871               	movf	?__Umul8_16+1,w
  8941  0BA7  0020               	movlb	0	; select bank0
  8942  0BA8  00BF               	movwf	___flmul@temp+1
  8943  0BA9  0870               	movf	?__Umul8_16,w
  8944  0BAA  00BE               	movwf	___flmul@temp
  8945  0BAB                     l3684:	
  8946  0BAB  083E               	movf	___flmul@temp,w
  8947  0BAC  07B4               	addwf	___flmul@grs,f
  8948  0BAD  083F               	movf	___flmul@temp+1,w
  8949  0BAE  3DB5               	addwfc	___flmul@grs+1,f
  8950  0BAF  3000               	movlw	0
  8951  0BB0  3DB6               	addwfc	___flmul@grs+2,f
  8952  0BB1  3DB7               	addwfc	___flmul@grs+3,f
  8953  0BB2                     l3686:	
  8954  0BB2  0827               	movf	___flmul@b+1,w
  8955  0BB3  00AE               	movwf	??___flmul
  8956  0BB4  082E               	movf	??___flmul,w
  8957  0BB5  00F0               	movwf	__Umul8_16@multiplicand
  8958  0BB6  082C               	movf	___flmul@a+2,w
  8959  0BB7  319B  23EE  318A   	fcall	__Umul8_16
  8960  0BBA  0871               	movf	?__Umul8_16+1,w
  8961  0BBB  0020               	movlb	0	; select bank0
  8962  0BBC  00BF               	movwf	___flmul@temp+1
  8963  0BBD  0870               	movf	?__Umul8_16,w
  8964  0BBE  00BE               	movwf	___flmul@temp
  8965  0BBF  083E               	movf	___flmul@temp,w
  8966  0BC0  07BA               	addwf	___flmul@prod,f
  8967  0BC1  083F               	movf	___flmul@temp+1,w
  8968  0BC2  3DBB               	addwfc	___flmul@prod+1,f
  8969  0BC3  3000               	movlw	0
  8970  0BC4  3DBC               	addwfc	___flmul@prod+2,f
  8971  0BC5  3DBD               	addwfc	___flmul@prod+3,f
  8972  0BC6                     l3688:	
  8973  0BC6  0828               	movf	___flmul@b+2,w
  8974  0BC7  00AE               	movwf	??___flmul
  8975  0BC8  082E               	movf	??___flmul,w
  8976  0BC9  00F0               	movwf	__Umul8_16@multiplicand
  8977  0BCA  082B               	movf	___flmul@a+1,w
  8978  0BCB  319B  23EE  318A   	fcall	__Umul8_16
  8979  0BCE  0871               	movf	?__Umul8_16+1,w
  8980  0BCF  0020               	movlb	0	; select bank0
  8981  0BD0  00BF               	movwf	___flmul@temp+1
  8982  0BD1  0870               	movf	?__Umul8_16,w
  8983  0BD2  00BE               	movwf	___flmul@temp
  8984  0BD3                     l3690:	
  8985  0BD3  083E               	movf	___flmul@temp,w
  8986  0BD4  07BA               	addwf	___flmul@prod,f
  8987  0BD5  083F               	movf	___flmul@temp+1,w
  8988  0BD6  3DBB               	addwfc	___flmul@prod+1,f
  8989  0BD7  3000               	movlw	0
  8990  0BD8  3DBC               	addwfc	___flmul@prod+2,f
  8991  0BD9  3DBD               	addwfc	___flmul@prod+3,f
  8992  0BDA  0828               	movf	___flmul@b+2,w
  8993  0BDB  00AE               	movwf	??___flmul
  8994  0BDC  082E               	movf	??___flmul,w
  8995  0BDD  00F0               	movwf	__Umul8_16@multiplicand
  8996  0BDE  082C               	movf	___flmul@a+2,w
  8997  0BDF  319B  23EE  318A   	fcall	__Umul8_16
  8998  0BE2  0871               	movf	?__Umul8_16+1,w
  8999  0BE3  0020               	movlb	0	; select bank0
  9000  0BE4  00BF               	movwf	___flmul@temp+1
  9001  0BE5  0870               	movf	?__Umul8_16,w
  9002  0BE6  00BE               	movwf	___flmul@temp
  9003  0BE7                     l3692:	
  9004  0BE7  083E               	movf	___flmul@temp,w
  9005  0BE8  00AE               	movwf	??___flmul
  9006  0BE9  083F               	movf	___flmul@temp+1,w
  9007  0BEA  00AF               	movwf	??___flmul+1
  9008  0BEB  01B0               	clrf	??___flmul+2
  9009  0BEC  01B1               	clrf	??___flmul+3
  9010  0BED  3008               	movlw	8
  9011  0BEE                     u4735:	
  9012  0BEE  35AE               	lslf	??___flmul,f
  9013  0BEF  0DAF               	rlf	??___flmul+1,f
  9014  0BF0  0DB0               	rlf	??___flmul+2,f
  9015  0BF1  0DB1               	rlf	??___flmul+3,f
  9016  0BF2                     u4730:	
  9017  0BF2  0B89               	decfsz	9,f
  9018  0BF3  2BEE               	goto	u4735
  9019  0BF4  082E               	movf	??___flmul,w
  9020  0BF5  07BA               	addwf	___flmul@prod,f
  9021  0BF6  082F               	movf	??___flmul+1,w
  9022  0BF7  3DBB               	addwfc	___flmul@prod+1,f
  9023  0BF8  0830               	movf	??___flmul+2,w
  9024  0BF9  3DBC               	addwfc	___flmul@prod+2,f
  9025  0BFA  0831               	movf	??___flmul+3,w
  9026  0BFB  3DBD               	addwfc	___flmul@prod+3,f
  9027  0BFC                     l3694:	
  9028  0BFC  0834               	movf	___flmul@grs,w
  9029  0BFD  00AE               	movwf	??___flmul
  9030  0BFE  0835               	movf	___flmul@grs+1,w
  9031  0BFF  00AF               	movwf	??___flmul+1
  9032  0C00  0836               	movf	___flmul@grs+2,w
  9033  0C01  00B0               	movwf	??___flmul+2
  9034  0C02  0837               	movf	___flmul@grs+3,w
  9035  0C03  00B1               	movwf	??___flmul+3
  9036  0C04  3018               	movlw	24
  9037  0C05                     u4745:	
  9038  0C05  36B1               	lsrf	??___flmul+3,f
  9039  0C06  0CB0               	rrf	??___flmul+2,f
  9040  0C07  0CAF               	rrf	??___flmul+1,f
  9041  0C08  0CAE               	rrf	??___flmul,f
  9042  0C09                     u4740:	
  9043  0C09  0B89               	decfsz	9,f
  9044  0C0A  2C05               	goto	u4745
  9045  0C0B  082E               	movf	??___flmul,w
  9046  0C0C  07BA               	addwf	___flmul@prod,f
  9047  0C0D  082F               	movf	??___flmul+1,w
  9048  0C0E  3DBB               	addwfc	___flmul@prod+1,f
  9049  0C0F  0830               	movf	??___flmul+2,w
  9050  0C10  3DBC               	addwfc	___flmul@prod+2,f
  9051  0C11  0831               	movf	??___flmul+3,w
  9052  0C12  3DBD               	addwfc	___flmul@prod+3,f
  9053  0C13                     l3696:	
  9054  0C13  3008               	movlw	8
  9055  0C14                     u4755:	
  9056  0C14  35B4               	lslf	___flmul@grs,f
  9057  0C15  0DB5               	rlf	___flmul@grs+1,f
  9058  0C16  0DB6               	rlf	___flmul@grs+2,f
  9059  0C17  0DB7               	rlf	___flmul@grs+3,f
  9060  0C18  0B89               	decfsz	9,f
  9061  0C19  2C14               	goto	u4755
  9062  0C1A                     l3698:	
  9063  0C1A  0839               	movf	___flmul@bexp,w
  9064  0C1B  0738               	addwf	___flmul@aexp,w
  9065  0C1C  00AE               	movwf	??___flmul
  9066  0C1D  01AF               	clrf	??___flmul+1
  9067  0C1E  0DAF               	rlf	??___flmul+1,f
  9068  0C1F  082E               	movf	??___flmul,w
  9069  0C20  3E82               	addlw	130
  9070  0C21  00BE               	movwf	___flmul@temp
  9071  0C22  30FF               	movlw	255
  9072  0C23  3D2F               	addwfc	??___flmul+1,w
  9073  0C24  00BF               	movwf	___flmul@temp+1
  9074  0C25  2C3D               	goto	l3710
  9075  0C26                     l3700:	
  9076  0C26  3001               	movlw	1
  9077  0C27                     u4765:	
  9078  0C27  35BA               	lslf	___flmul@prod,f
  9079  0C28  0DBB               	rlf	___flmul@prod+1,f
  9080  0C29  0DBC               	rlf	___flmul@prod+2,f
  9081  0C2A  0DBD               	rlf	___flmul@prod+3,f
  9082  0C2B  0B89               	decfsz	9,f
  9083  0C2C  2C27               	goto	u4765
  9084  0C2D                     l3702:	
  9085  0C2D  1FB7               	btfss	___flmul@grs+3,7
  9086  0C2E  2C30               	goto	u4771
  9087  0C2F  2C31               	goto	u4770
  9088  0C30                     u4771:	
  9089  0C30  2C32               	goto	l3706
  9090  0C31                     u4770:	
  9091  0C31                     l3704:	
  9092  0C31  143A               	bsf	___flmul@prod,0
  9093  0C32                     l3706:	
  9094  0C32  3001               	movlw	1
  9095  0C33                     u4785:	
  9096  0C33  35B4               	lslf	___flmul@grs,f
  9097  0C34  0DB5               	rlf	___flmul@grs+1,f
  9098  0C35  0DB6               	rlf	___flmul@grs+2,f
  9099  0C36  0DB7               	rlf	___flmul@grs+3,f
  9100  0C37  0B89               	decfsz	9,f
  9101  0C38  2C33               	goto	u4785
  9102  0C39                     l3708:	
  9103  0C39  30FF               	movlw	255
  9104  0C3A  07BE               	addwf	___flmul@temp,f
  9105  0C3B  30FF               	movlw	255
  9106  0C3C  3DBF               	addwfc	___flmul@temp+1,f
  9107  0C3D                     l3710:	
  9108  0C3D  1FBC               	btfss	___flmul@prod+2,7
  9109  0C3E  2C40               	goto	u4791
  9110  0C3F  2C41               	goto	u4790
  9111  0C40                     u4791:	
  9112  0C40  2C26               	goto	l3700
  9113  0C41                     u4790:	
  9114  0C41                     l3712:	
  9115  0C41  01B8               	clrf	___flmul@aexp
  9116  0C42                     l3714:	
  9117  0C42  1FB7               	btfss	___flmul@grs+3,7
  9118  0C43  2C45               	goto	u4801
  9119  0C44  2C46               	goto	u4800
  9120  0C45                     u4801:	
  9121  0C45  2C62               	goto	l3722
  9122  0C46                     u4800:	
  9123  0C46                     l3716:	
  9124  0C46  30FF               	movlw	255
  9125  0C47  0534               	andwf	___flmul@grs,w
  9126  0C48  00AE               	movwf	??___flmul
  9127  0C49  30FF               	movlw	255
  9128  0C4A  0535               	andwf	___flmul@grs+1,w
  9129  0C4B  00AF               	movwf	??___flmul+1
  9130  0C4C  30FF               	movlw	255
  9131  0C4D  0536               	andwf	___flmul@grs+2,w
  9132  0C4E  00B0               	movwf	??___flmul+2
  9133  0C4F  307F               	movlw	127
  9134  0C50  0537               	andwf	___flmul@grs+3,w
  9135  0C51  00B1               	movwf	??___flmul+3
  9136  0C52  0831               	movf	??___flmul+3,w
  9137  0C53  0430               	iorwf	??___flmul+2,w
  9138  0C54  042F               	iorwf	??___flmul+1,w
  9139  0C55  042E               	iorwf	??___flmul,w
  9140  0C56  1903               	skipnz
  9141  0C57  2C59               	goto	u4811
  9142  0C58  2C5A               	goto	u4810
  9143  0C59                     u4811:	
  9144  0C59  2C5D               	goto	l1006
  9145  0C5A                     u4810:	
  9146  0C5A                     l3718:	
  9147  0C5A  01B8               	clrf	___flmul@aexp
  9148  0C5B  0AB8               	incf	___flmul@aexp,f
  9149  0C5C  2C62               	goto	l3722
  9150  0C5D                     l1006:	
  9151  0C5D  1C3A               	btfss	___flmul@prod,0
  9152  0C5E  2C60               	goto	u4821
  9153  0C5F  2C61               	goto	u4820
  9154  0C60                     u4821:	
  9155  0C60  2C62               	goto	l3722
  9156  0C61                     u4820:	
  9157  0C61  2C5A               	goto	l3718
  9158  0C62                     l3722:	
  9159  0C62  0838               	movf	___flmul@aexp,w
  9160  0C63  1903               	btfsc	3,2
  9161  0C64  2C66               	goto	u4831
  9162  0C65  2C67               	goto	u4830
  9163  0C66                     u4831:	
  9164  0C66  2C8F               	goto	l3732
  9165  0C67                     u4830:	
  9166  0C67                     l3724:	
  9167  0C67  3001               	movlw	1
  9168  0C68  07BA               	addwf	___flmul@prod,f
  9169  0C69  3000               	movlw	0
  9170  0C6A  3DBB               	addwfc	___flmul@prod+1,f
  9171  0C6B  3000               	movlw	0
  9172  0C6C  3DBC               	addwfc	___flmul@prod+2,f
  9173  0C6D  3000               	movlw	0
  9174  0C6E  3DBD               	addwfc	___flmul@prod+3,f
  9175  0C6F                     l3726:	
  9176  0C6F  1C3D               	btfss	___flmul@prod+3,0
  9177  0C70  2C72               	goto	u4841
  9178  0C71  2C73               	goto	u4840
  9179  0C72                     u4841:	
  9180  0C72  2C8F               	goto	l3732
  9181  0C73                     u4840:	
  9182  0C73                     l3728:	
  9183  0C73  083A               	movf	___flmul@prod,w
  9184  0C74  00AE               	movwf	??___flmul
  9185  0C75  083B               	movf	___flmul@prod+1,w
  9186  0C76  00AF               	movwf	??___flmul+1
  9187  0C77  083C               	movf	___flmul@prod+2,w
  9188  0C78  00B0               	movwf	??___flmul+2
  9189  0C79  083D               	movf	___flmul@prod+3,w
  9190  0C7A  00B1               	movwf	??___flmul+3
  9191  0C7B  3001               	movlw	1
  9192  0C7C  00B2               	movwf	??___flmul+4
  9193  0C7D                     u4855:	
  9194  0C7D  37B1               	asrf	??___flmul+3,f
  9195  0C7E  0CB0               	rrf	??___flmul+2,f
  9196  0C7F  0CAF               	rrf	??___flmul+1,f
  9197  0C80  0CAE               	rrf	??___flmul,f
  9198  0C81                     u4850:	
  9199  0C81  0BB2               	decfsz	??___flmul+4,f
  9200  0C82  2C7D               	goto	u4855
  9201  0C83  0831               	movf	??___flmul+3,w
  9202  0C84  00BD               	movwf	___flmul@prod+3
  9203  0C85  0830               	movf	??___flmul+2,w
  9204  0C86  00BC               	movwf	___flmul@prod+2
  9205  0C87  082F               	movf	??___flmul+1,w
  9206  0C88  00BB               	movwf	___flmul@prod+1
  9207  0C89  082E               	movf	??___flmul,w
  9208  0C8A  00BA               	movwf	___flmul@prod
  9209  0C8B                     l3730:	
  9210  0C8B  3001               	movlw	1
  9211  0C8C  07BE               	addwf	___flmul@temp,f
  9212  0C8D  3000               	movlw	0
  9213  0C8E  3DBF               	addwfc	___flmul@temp+1,f
  9214  0C8F                     l3732:	
  9215  0C8F  083F               	movf	___flmul@temp+1,w
  9216  0C90  3A80               	xorlw	128
  9217  0C91  00AE               	movwf	??___flmul
  9218  0C92  3080               	movlw	128
  9219  0C93  022E               	subwf	??___flmul,w
  9220  0C94  1D03               	skipz
  9221  0C95  2C98               	goto	u4865
  9222  0C96  30FF               	movlw	255
  9223  0C97  023E               	subwf	___flmul@temp,w
  9224  0C98                     u4865:	
  9225  0C98  1C03               	skipc
  9226  0C99  2C9B               	goto	u4861
  9227  0C9A  2C9C               	goto	u4860
  9228  0C9B                     u4861:	
  9229  0C9B  2CA6               	goto	l3736
  9230  0C9C                     u4860:	
  9231  0C9C                     l3734:	
  9232  0C9C  307F               	movlw	127
  9233  0C9D  0020               	movlb	0	; select bank0
  9234  0C9E  00BD               	movwf	___flmul@prod+3
  9235  0C9F  3080               	movlw	128
  9236  0CA0  00BC               	movwf	___flmul@prod+2
  9237  0CA1  3000               	movlw	0
  9238  0CA2  00BB               	movwf	___flmul@prod+1
  9239  0CA3  3000               	movlw	0
  9240  0CA4  00BA               	movwf	___flmul@prod
  9241  0CA5  2CD5               	goto	l1012
  9242  0CA6                     l3736:	
  9243  0CA6  0020               	movlb	0	; select bank0
  9244  0CA7  083F               	movf	___flmul@temp+1,w
  9245  0CA8  3A80               	xorlw	128
  9246  0CA9  00AE               	movwf	??___flmul
  9247  0CAA  3080               	movlw	128
  9248  0CAB  022E               	subwf	??___flmul,w
  9249  0CAC  1D03               	skipz
  9250  0CAD  2CB0               	goto	u4875
  9251  0CAE  3001               	movlw	1
  9252  0CAF  023E               	subwf	___flmul@temp,w
  9253  0CB0                     u4875:	
  9254  0CB0  1803               	skipnc
  9255  0CB1  2CB3               	goto	u4871
  9256  0CB2  2CB4               	goto	u4870
  9257  0CB3                     u4871:	
  9258  0CB3  2CBF               	goto	l3742
  9259  0CB4                     u4870:	
  9260  0CB4                     l3738:	
  9261  0CB4  3000               	movlw	0
  9262  0CB5  0020               	movlb	0	; select bank0
  9263  0CB6  00BD               	movwf	___flmul@prod+3
  9264  0CB7  3000               	movlw	0
  9265  0CB8  00BC               	movwf	___flmul@prod+2
  9266  0CB9  3000               	movlw	0
  9267  0CBA  00BB               	movwf	___flmul@prod+1
  9268  0CBB  3000               	movlw	0
  9269  0CBC  00BA               	movwf	___flmul@prod
  9270  0CBD                     l3740:	
  9271  0CBD  01B3               	clrf	___flmul@sign
  9272  0CBE  2CD5               	goto	l1012
  9273  0CBF                     l3742:	
  9274  0CBF  0020               	movlb	0	; select bank0
  9275  0CC0  083E               	movf	___flmul@temp,w
  9276  0CC1  00AE               	movwf	??___flmul
  9277  0CC2  082E               	movf	??___flmul,w
  9278  0CC3  00B9               	movwf	___flmul@bexp
  9279  0CC4  30FF               	movlw	255
  9280  0CC5  05BA               	andwf	___flmul@prod,f
  9281  0CC6  30FF               	movlw	255
  9282  0CC7  05BB               	andwf	___flmul@prod+1,f
  9283  0CC8  307F               	movlw	127
  9284  0CC9  05BC               	andwf	___flmul@prod+2,f
  9285  0CCA  3000               	movlw	0
  9286  0CCB  05BD               	andwf	___flmul@prod+3,f
  9287  0CCC                     l3744:	
  9288  0CCC  1C39               	btfss	___flmul@bexp,0
  9289  0CCD  2CCF               	goto	u4881
  9290  0CCE  2CD0               	goto	u4880
  9291  0CCF                     u4881:	
  9292  0CCF  2CD1               	goto	l3748
  9293  0CD0                     u4880:	
  9294  0CD0                     l3746:	
  9295  0CD0  17BC               	bsf	___flmul@prod+2,7
  9296  0CD1                     l3748:	
  9297  0CD1  3639               	lsrf	___flmul@bexp,w
  9298  0CD2  00AE               	movwf	??___flmul
  9299  0CD3  082E               	movf	??___flmul,w
  9300  0CD4  00BD               	movwf	___flmul@prod+3
  9301  0CD5                     l1012:	
  9302  0CD5  0833               	movf	___flmul@sign,w
  9303  0CD6  00AE               	movwf	??___flmul
  9304  0CD7  082E               	movf	??___flmul,w
  9305  0CD8  04BD               	iorwf	___flmul@prod+3,f
  9306  0CD9                     l3750:	
  9307  0CD9  083D               	movf	___flmul@prod+3,w
  9308  0CDA  00A9               	movwf	?___flmul+3
  9309  0CDB  083C               	movf	___flmul@prod+2,w
  9310  0CDC  00A8               	movwf	?___flmul+2
  9311  0CDD  083B               	movf	___flmul@prod+1,w
  9312  0CDE  00A7               	movwf	?___flmul+1
  9313  0CDF  083A               	movf	___flmul@prod,w
  9314  0CE0  00A6               	movwf	?___flmul
  9315  0CE1                     l1000:	
  9316  0CE1  0008               	return
  9317  0CE2                     __end_of___flmul:	
  9318                           
  9319                           	psect	text21
  9320  1BEE                     __ptext21:	
  9321 ;; *************** function __Umul8_16 *****************
  9322 ;; Defined at:
  9323 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8_16.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;  multiplier      1    wreg     unsigned char 
  9326 ;;  multiplicand    1    0[COMMON] unsigned char 
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;  multiplier      1    8[COMMON] unsigned char 
  9329 ;;  word_mpld       2    6[COMMON] unsigned int 
  9330 ;;  product         2    4[COMMON] unsigned int 
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  2    0[COMMON] unsigned int 
  9333 ;; Registers used:
  9334 ;;		wreg, status,2, status,0
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9341 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9343 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9344 ;;Total ram usage:        9 bytes
  9345 ;; Hardware stack levels used:    1
  9346 ;; This function calls:
  9347 ;;		Nothing
  9348 ;; This function is called by:
  9349 ;;		___flmul
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353                           
  9354                           ;psect for function __Umul8_16
  9355  1BEE                     __Umul8_16:	
  9356                           
  9357                           ;incstack = 0
  9358                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9359                           ;__Umul8_16@multiplier stored from wreg
  9360  1BEE  00F8               	movwf	__Umul8_16@multiplier
  9361  1BEF                     l3176:	
  9362  1BEF  01F4               	clrf	__Umul8_16@product
  9363  1BF0  01F5               	clrf	__Umul8_16@product+1
  9364  1BF1                     l3178:	
  9365  1BF1  0870               	movf	__Umul8_16@multiplicand,w
  9366  1BF2  00F2               	movwf	??__Umul8_16
  9367  1BF3  01F3               	clrf	??__Umul8_16+1
  9368  1BF4  0872               	movf	??__Umul8_16,w
  9369  1BF5  00F6               	movwf	__Umul8_16@word_mpld
  9370  1BF6  0873               	movf	??__Umul8_16+1,w
  9371  1BF7  00F7               	movwf	__Umul8_16@word_mpld+1
  9372  1BF8                     l3180:	
  9373  1BF8  1C78               	btfss	__Umul8_16@multiplier,0
  9374  1BF9  2BFB               	goto	u3601
  9375  1BFA  2BFC               	goto	u3600
  9376  1BFB                     u3601:	
  9377  1BFB  2C00               	goto	l1196
  9378  1BFC                     u3600:	
  9379  1BFC                     l3182:	
  9380  1BFC  0876               	movf	__Umul8_16@word_mpld,w
  9381  1BFD  07F4               	addwf	__Umul8_16@product,f
  9382  1BFE  0877               	movf	__Umul8_16@word_mpld+1,w
  9383  1BFF  3DF5               	addwfc	__Umul8_16@product+1,f
  9384  1C00                     l1196:	
  9385  1C00  3001               	movlw	1
  9386  1C01                     u3615:	
  9387  1C01  35F6               	lslf	__Umul8_16@word_mpld,f
  9388  1C02  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9389  1C03  0B89               	decfsz	9,f
  9390  1C04  2C01               	goto	u3615
  9391  1C05  1003               	clrc
  9392  1C06  0CF8               	rrf	__Umul8_16@multiplier,f
  9393  1C07                     l3184:	
  9394  1C07  0878               	movf	__Umul8_16@multiplier,w
  9395  1C08  1D03               	btfss	3,2
  9396  1C09  2C0B               	goto	u3621
  9397  1C0A  2C0C               	goto	u3620
  9398  1C0B                     u3621:	
  9399  1C0B  2BF8               	goto	l3180
  9400  1C0C                     u3620:	
  9401  1C0C                     l3186:	
  9402  1C0C  0875               	movf	__Umul8_16@product+1,w
  9403  1C0D  00F1               	movwf	?__Umul8_16+1
  9404  1C0E  0874               	movf	__Umul8_16@product,w
  9405  1C0F  00F0               	movwf	?__Umul8_16
  9406  1C10                     l1198:	
  9407  1C10  0008               	return
  9408  1C11                     __end_of__Umul8_16:	
  9409                           
  9410                           	psect	text22
  9411  124C                     __ptext22:	
  9412 ;; *************** function ___flge *****************
  9413 ;; Defined at:
  9414 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  ff1             4   32[BANK0 ] unsigned int 
  9417 ;;  ff2             4   36[BANK0 ] unsigned int 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;		None
  9420 ;; Return value:  Size  Location     Type
  9421 ;;		None               void
  9422 ;; Registers used:
  9423 ;;		wreg, status,2, status,0
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9429 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9431 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9432 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;Total ram usage:       12 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; This function calls:
  9436 ;;		Nothing
  9437 ;; This function is called by:
  9438 ;;		_efgtoa
  9439 ;; This function uses a non-reentrant model
  9440 ;;
  9441                           
  9442                           
  9443                           ;psect for function ___flge
  9444  124C                     ___flge:	
  9445  124C                     l3404:	
  9446                           ;incstack = 0
  9447                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9448                           
  9449  124C  3000               	movlw	0
  9450  124D  0020               	movlb	0	; select bank0
  9451  124E  0540               	andwf	___flge@ff1,w
  9452  124F  00C8               	movwf	??___flge
  9453  1250  3000               	movlw	0
  9454  1251  0541               	andwf	___flge@ff1+1,w
  9455  1252  00C9               	movwf	??___flge+1
  9456  1253  3080               	movlw	128
  9457  1254  0542               	andwf	___flge@ff1+2,w
  9458  1255  00CA               	movwf	??___flge+2
  9459  1256  307F               	movlw	127
  9460  1257  0543               	andwf	___flge@ff1+3,w
  9461  1258  00CB               	movwf	??___flge+3
  9462  1259  084B               	movf	??___flge+3,w
  9463  125A  044A               	iorwf	??___flge+2,w
  9464  125B  0449               	iorwf	??___flge+1,w
  9465  125C  0448               	iorwf	??___flge,w
  9466  125D  1D03               	skipz
  9467  125E  2A60               	goto	u4181
  9468  125F  2A61               	goto	u4180
  9469  1260                     u4181:	
  9470  1260  2A69               	goto	l781
  9471  1261                     u4180:	
  9472  1261                     l3406:	
  9473  1261  3000               	movlw	0
  9474  1262  00C3               	movwf	___flge@ff1+3
  9475  1263  3000               	movlw	0
  9476  1264  00C2               	movwf	___flge@ff1+2
  9477  1265  3000               	movlw	0
  9478  1266  00C1               	movwf	___flge@ff1+1
  9479  1267  3000               	movlw	0
  9480  1268  00C0               	movwf	___flge@ff1
  9481  1269                     l781:	
  9482  1269  3000               	movlw	0
  9483  126A  0544               	andwf	___flge@ff2,w
  9484  126B  00C8               	movwf	??___flge
  9485  126C  3000               	movlw	0
  9486  126D  0545               	andwf	___flge@ff2+1,w
  9487  126E  00C9               	movwf	??___flge+1
  9488  126F  3080               	movlw	128
  9489  1270  0546               	andwf	___flge@ff2+2,w
  9490  1271  00CA               	movwf	??___flge+2
  9491  1272  307F               	movlw	127
  9492  1273  0547               	andwf	___flge@ff2+3,w
  9493  1274  00CB               	movwf	??___flge+3
  9494  1275  084B               	movf	??___flge+3,w
  9495  1276  044A               	iorwf	??___flge+2,w
  9496  1277  0449               	iorwf	??___flge+1,w
  9497  1278  0448               	iorwf	??___flge,w
  9498  1279  1D03               	skipz
  9499  127A  2A7C               	goto	u4191
  9500  127B  2A7D               	goto	u4190
  9501  127C                     u4191:	
  9502  127C  2A85               	goto	l3410
  9503  127D                     u4190:	
  9504  127D                     l3408:	
  9505  127D  3000               	movlw	0
  9506  127E  00C7               	movwf	___flge@ff2+3
  9507  127F  3000               	movlw	0
  9508  1280  00C6               	movwf	___flge@ff2+2
  9509  1281  3000               	movlw	0
  9510  1282  00C5               	movwf	___flge@ff2+1
  9511  1283  3000               	movlw	0
  9512  1284  00C4               	movwf	___flge@ff2
  9513  1285                     l3410:	
  9514  1285  1FC3               	btfss	___flge@ff1+3,7
  9515  1286  2A88               	goto	u4201
  9516  1287  2A89               	goto	u4200
  9517  1288                     u4201:	
  9518  1288  2AA1               	goto	l3414
  9519  1289                     u4200:	
  9520  1289                     l3412:	
  9521  1289  3000               	movlw	0
  9522  128A  00C8               	movwf	??___flge
  9523  128B  3000               	movlw	0
  9524  128C  00C9               	movwf	??___flge+1
  9525  128D  3000               	movlw	0
  9526  128E  00CA               	movwf	??___flge+2
  9527  128F  3080               	movlw	128
  9528  1290  00CB               	movwf	??___flge+3
  9529  1291  0840               	movf	___flge@ff1,w
  9530  1292  02C8               	subwf	??___flge,f
  9531  1293  0841               	movf	___flge@ff1+1,w
  9532  1294  3BC9               	subwfb	??___flge+1,f
  9533  1295  0842               	movf	___flge@ff1+2,w
  9534  1296  3BCA               	subwfb	??___flge+2,f
  9535  1297  0843               	movf	___flge@ff1+3,w
  9536  1298  3BCB               	subwfb	??___flge+3,f
  9537  1299  084B               	movf	??___flge+3,w
  9538  129A  00C3               	movwf	___flge@ff1+3
  9539  129B  084A               	movf	??___flge+2,w
  9540  129C  00C2               	movwf	___flge@ff1+2
  9541  129D  0849               	movf	??___flge+1,w
  9542  129E  00C1               	movwf	___flge@ff1+1
  9543  129F  0848               	movf	??___flge,w
  9544  12A0  00C0               	movwf	___flge@ff1
  9545  12A1                     l3414:	
  9546  12A1  1FC7               	btfss	___flge@ff2+3,7
  9547  12A2  2AA4               	goto	u4211
  9548  12A3  2AA5               	goto	u4210
  9549  12A4                     u4211:	
  9550  12A4  2ABD               	goto	l784
  9551  12A5                     u4210:	
  9552  12A5                     l3416:	
  9553  12A5  3000               	movlw	0
  9554  12A6  00C8               	movwf	??___flge
  9555  12A7  3000               	movlw	0
  9556  12A8  00C9               	movwf	??___flge+1
  9557  12A9  3000               	movlw	0
  9558  12AA  00CA               	movwf	??___flge+2
  9559  12AB  3080               	movlw	128
  9560  12AC  00CB               	movwf	??___flge+3
  9561  12AD  0844               	movf	___flge@ff2,w
  9562  12AE  02C8               	subwf	??___flge,f
  9563  12AF  0845               	movf	___flge@ff2+1,w
  9564  12B0  3BC9               	subwfb	??___flge+1,f
  9565  12B1  0846               	movf	___flge@ff2+2,w
  9566  12B2  3BCA               	subwfb	??___flge+2,f
  9567  12B3  0847               	movf	___flge@ff2+3,w
  9568  12B4  3BCB               	subwfb	??___flge+3,f
  9569  12B5  084B               	movf	??___flge+3,w
  9570  12B6  00C7               	movwf	___flge@ff2+3
  9571  12B7  084A               	movf	??___flge+2,w
  9572  12B8  00C6               	movwf	___flge@ff2+2
  9573  12B9  0849               	movf	??___flge+1,w
  9574  12BA  00C5               	movwf	___flge@ff2+1
  9575  12BB  0848               	movf	??___flge,w
  9576  12BC  00C4               	movwf	___flge@ff2
  9577  12BD                     l784:	
  9578  12BD  3080               	movlw	128
  9579  12BE  06C3               	xorwf	___flge@ff1+3,f
  9580  12BF  3080               	movlw	128
  9581  12C0  06C7               	xorwf	___flge@ff2+3,f
  9582  12C1  0847               	movf	___flge@ff2+3,w
  9583  12C2  0243               	subwf	___flge@ff1+3,w
  9584  12C3  1D03               	skipz
  9585  12C4  2ACF               	goto	u4225
  9586  12C5  0846               	movf	___flge@ff2+2,w
  9587  12C6  0242               	subwf	___flge@ff1+2,w
  9588  12C7  1D03               	skipz
  9589  12C8  2ACF               	goto	u4225
  9590  12C9  0845               	movf	___flge@ff2+1,w
  9591  12CA  0241               	subwf	___flge@ff1+1,w
  9592  12CB  1D03               	skipz
  9593  12CC  2ACF               	goto	u4225
  9594  12CD  0844               	movf	___flge@ff2,w
  9595  12CE  0240               	subwf	___flge@ff1,w
  9596  12CF                     u4225:	
  9597  12CF  1803               	skipnc
  9598  12D0  2AD2               	goto	u4221
  9599  12D1  2AD3               	goto	u4220
  9600  12D2                     u4221:	
  9601  12D2  2AD5               	goto	l3420
  9602  12D3                     u4220:	
  9603  12D3                     l3418:	
  9604  12D3  1003               	clrc
  9605  12D4  2AD6               	goto	l789
  9606  12D5                     l3420:	
  9607  12D5  1403               	setc
  9608  12D6                     l789:	
  9609  12D6  0008               	return
  9610  12D7                     __end_of___flge:	
  9611                           
  9612                           	psect	text23
  9613  1EA9                     __ptext23:	
  9614 ;; *************** function ___fleq *****************
  9615 ;; Defined at:
  9616 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  9617 ;; Parameters:    Size  Location     Type
  9618 ;;  ff1             4    0[COMMON] unsigned int 
  9619 ;;  ff2             4    4[COMMON] unsigned int 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;		None
  9622 ;; Return value:  Size  Location     Type
  9623 ;;		None               void
  9624 ;; Registers used:
  9625 ;;		wreg, status,2, status,0
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9631 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9633 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9634 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;Total ram usage:       12 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; This function calls:
  9638 ;;		Nothing
  9639 ;; This function is called by:
  9640 ;;		_efgtoa
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           
  9645                           ;psect for function ___fleq
  9646  1EA9                     ___fleq:	
  9647  1EA9                     l3392:	
  9648                           ;incstack = 0
  9649                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9650                           
  9651  1EA9  3000               	movlw	0
  9652  1EAA  0570               	andwf	___fleq@ff1,w
  9653  1EAB  00F8               	movwf	??___fleq
  9654  1EAC  3000               	movlw	0
  9655  1EAD  0571               	andwf	___fleq@ff1+1,w
  9656  1EAE  00F9               	movwf	??___fleq+1
  9657  1EAF  3080               	movlw	128
  9658  1EB0  0572               	andwf	___fleq@ff1+2,w
  9659  1EB1  00FA               	movwf	??___fleq+2
  9660  1EB2  307F               	movlw	127
  9661  1EB3  0573               	andwf	___fleq@ff1+3,w
  9662  1EB4  00FB               	movwf	??___fleq+3
  9663  1EB5  087B               	movf	??___fleq+3,w
  9664  1EB6  047A               	iorwf	??___fleq+2,w
  9665  1EB7  0479               	iorwf	??___fleq+1,w
  9666  1EB8  0478               	iorwf	??___fleq,w
  9667  1EB9  1D03               	skipz
  9668  1EBA  2EBC               	goto	u4151
  9669  1EBB  2EBD               	goto	u4150
  9670  1EBC                     u4151:	
  9671  1EBC  2EC5               	goto	l772
  9672  1EBD                     u4150:	
  9673  1EBD                     l3394:	
  9674  1EBD  3000               	movlw	0
  9675  1EBE  00F3               	movwf	___fleq@ff1+3
  9676  1EBF  3000               	movlw	0
  9677  1EC0  00F2               	movwf	___fleq@ff1+2
  9678  1EC1  3000               	movlw	0
  9679  1EC2  00F1               	movwf	___fleq@ff1+1
  9680  1EC3  3000               	movlw	0
  9681  1EC4  00F0               	movwf	___fleq@ff1
  9682  1EC5                     l772:	
  9683  1EC5  3000               	movlw	0
  9684  1EC6  0574               	andwf	___fleq@ff2,w
  9685  1EC7  00F8               	movwf	??___fleq
  9686  1EC8  3000               	movlw	0
  9687  1EC9  0575               	andwf	___fleq@ff2+1,w
  9688  1ECA  00F9               	movwf	??___fleq+1
  9689  1ECB  3080               	movlw	128
  9690  1ECC  0576               	andwf	___fleq@ff2+2,w
  9691  1ECD  00FA               	movwf	??___fleq+2
  9692  1ECE  307F               	movlw	127
  9693  1ECF  0577               	andwf	___fleq@ff2+3,w
  9694  1ED0  00FB               	movwf	??___fleq+3
  9695  1ED1  087B               	movf	??___fleq+3,w
  9696  1ED2  047A               	iorwf	??___fleq+2,w
  9697  1ED3  0479               	iorwf	??___fleq+1,w
  9698  1ED4  0478               	iorwf	??___fleq,w
  9699  1ED5  1D03               	skipz
  9700  1ED6  2ED8               	goto	u4161
  9701  1ED7  2ED9               	goto	u4160
  9702  1ED8                     u4161:	
  9703  1ED8  2EE1               	goto	l773
  9704  1ED9                     u4160:	
  9705  1ED9                     l3396:	
  9706  1ED9  3000               	movlw	0
  9707  1EDA  00F7               	movwf	___fleq@ff2+3
  9708  1EDB  3000               	movlw	0
  9709  1EDC  00F6               	movwf	___fleq@ff2+2
  9710  1EDD  3000               	movlw	0
  9711  1EDE  00F5               	movwf	___fleq@ff2+1
  9712  1EDF  3000               	movlw	0
  9713  1EE0  00F4               	movwf	___fleq@ff2
  9714  1EE1                     l773:	
  9715  1EE1  0877               	movf	___fleq@ff2+3,w
  9716  1EE2  0673               	xorwf	___fleq@ff1+3,w
  9717  1EE3  1D03               	skipz
  9718  1EE4  2EEF               	goto	u4175
  9719  1EE5  0876               	movf	___fleq@ff2+2,w
  9720  1EE6  0672               	xorwf	___fleq@ff1+2,w
  9721  1EE7  1D03               	skipz
  9722  1EE8  2EEF               	goto	u4175
  9723  1EE9  0875               	movf	___fleq@ff2+1,w
  9724  1EEA  0671               	xorwf	___fleq@ff1+1,w
  9725  1EEB  1D03               	skipz
  9726  1EEC  2EEF               	goto	u4175
  9727  1EED  0874               	movf	___fleq@ff2,w
  9728  1EEE  0670               	xorwf	___fleq@ff1,w
  9729  1EEF                     u4175:	
  9730  1EEF  1903               	skipnz
  9731  1EF0  2EF2               	goto	u4171
  9732  1EF1  2EF3               	goto	u4170
  9733  1EF2                     u4171:	
  9734  1EF2  2EF5               	goto	l3400
  9735  1EF3                     u4170:	
  9736  1EF3                     l3398:	
  9737  1EF3  1003               	clrc
  9738  1EF4  2EF6               	goto	l778
  9739  1EF5                     l3400:	
  9740  1EF5  1403               	setc
  9741  1EF6                     l778:	
  9742  1EF6  0008               	return
  9743  1EF7                     __end_of___fleq:	
  9744                           
  9745                           	psect	text24
  9746  1433                     __ptext24:	
  9747 ;; *************** function ___fldiv *****************
  9748 ;; Defined at:
  9749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  a               4   32[BANK0 ] unsigned int 
  9752 ;;  b               4   36[BANK0 ] unsigned int 
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;  grs             4   52[BANK0 ] unsigned long 
  9755 ;;  rem             4   45[BANK0 ] unsigned long 
  9756 ;;  new_exp         2   50[BANK0 ] int 
  9757 ;;  aexp            1   57[BANK0 ] unsigned char 
  9758 ;;  bexp            1   56[BANK0 ] unsigned char 
  9759 ;;  sign            1   49[BANK0 ] unsigned char 
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  4   32[BANK0 ] unsigned char 
  9762 ;; Registers used:
  9763 ;;		wreg, status,2, status,0
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9769 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9770 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;Total ram usage:       26 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; This function calls:
  9776 ;;		Nothing
  9777 ;; This function is called by:
  9778 ;;		_main
  9779 ;;		_efgtoa
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           
  9784                           ;psect for function ___fldiv
  9785  1433                     ___fldiv:	
  9786  1433                     l3474:	
  9787                           ;incstack = 0
  9788                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9789                           
  9790  1433  0020               	movlb	0	; select bank0
  9791  1434  0847               	movf	___fldiv@b+3,w
  9792  1435  3980               	andlw	128
  9793  1436  00C8               	movwf	??___fldiv
  9794  1437  0848               	movf	??___fldiv,w
  9795  1438  00D1               	movwf	___fldiv@sign
  9796  1439                     l3476:	
  9797  1439  3547               	lslf	___fldiv@b+3,w
  9798  143A  00C8               	movwf	??___fldiv
  9799  143B  0848               	movf	??___fldiv,w
  9800  143C  00D8               	movwf	___fldiv@bexp
  9801  143D                     l3478:	
  9802  143D  1FC6               	btfss	___fldiv@b+2,7
  9803  143E  2C40               	goto	u4341
  9804  143F  2C41               	goto	u4340
  9805  1440                     u4341:	
  9806  1440  2C42               	goto	l3482
  9807  1441                     u4340:	
  9808  1441                     l3480:	
  9809  1441  1458               	bsf	___fldiv@bexp,0
  9810  1442                     l3482:	
  9811  1442  0858               	movf	___fldiv@bexp,w
  9812  1443  1903               	btfsc	3,2
  9813  1444  2C46               	goto	u4351
  9814  1445  2C47               	goto	u4350
  9815  1446                     u4351:	
  9816  1446  2C57               	goto	l3492
  9817  1447                     u4350:	
  9818  1447                     l3484:	
  9819  1447  0A58               	incf	___fldiv@bexp,w
  9820  1448  1D03               	btfss	3,2
  9821  1449  2C4B               	goto	u4361
  9822  144A  2C4C               	goto	u4360
  9823  144B                     u4361:	
  9824  144B  2C54               	goto	l3488
  9825  144C                     u4360:	
  9826  144C                     l3486:	
  9827  144C  3000               	movlw	0
  9828  144D  00C7               	movwf	___fldiv@b+3
  9829  144E  3000               	movlw	0
  9830  144F  00C6               	movwf	___fldiv@b+2
  9831  1450  3000               	movlw	0
  9832  1451  00C5               	movwf	___fldiv@b+1
  9833  1452  3000               	movlw	0
  9834  1453  00C4               	movwf	___fldiv@b
  9835  1454                     l3488:	
  9836  1454  17C6               	bsf	___fldiv@b+2,7
  9837  1455                     l3490:	
  9838  1455  01C7               	clrf	___fldiv@b+3
  9839  1456  2C5F               	goto	l3494
  9840  1457                     l3492:	
  9841  1457  3000               	movlw	0
  9842  1458  00C7               	movwf	___fldiv@b+3
  9843  1459  3000               	movlw	0
  9844  145A  00C6               	movwf	___fldiv@b+2
  9845  145B  3000               	movlw	0
  9846  145C  00C5               	movwf	___fldiv@b+1
  9847  145D  3000               	movlw	0
  9848  145E  00C4               	movwf	___fldiv@b
  9849  145F                     l3494:	
  9850  145F  0843               	movf	___fldiv@a+3,w
  9851  1460  3980               	andlw	128
  9852  1461  00C8               	movwf	??___fldiv
  9853  1462  0848               	movf	??___fldiv,w
  9854  1463  06D1               	xorwf	___fldiv@sign,f
  9855  1464                     l3496:	
  9856  1464  3543               	lslf	___fldiv@a+3,w
  9857  1465  00C8               	movwf	??___fldiv
  9858  1466  0848               	movf	??___fldiv,w
  9859  1467  00D9               	movwf	___fldiv@aexp
  9860  1468                     l3498:	
  9861  1468  1FC2               	btfss	___fldiv@a+2,7
  9862  1469  2C6B               	goto	u4371
  9863  146A  2C6C               	goto	u4370
  9864  146B                     u4371:	
  9865  146B  2C6D               	goto	l3502
  9866  146C                     u4370:	
  9867  146C                     l3500:	
  9868  146C  1459               	bsf	___fldiv@aexp,0
  9869  146D                     l3502:	
  9870  146D  0859               	movf	___fldiv@aexp,w
  9871  146E  1903               	btfsc	3,2
  9872  146F  2C71               	goto	u4381
  9873  1470  2C72               	goto	u4380
  9874  1471                     u4381:	
  9875  1471  2C82               	goto	l3512
  9876  1472                     u4380:	
  9877  1472                     l3504:	
  9878  1472  0A59               	incf	___fldiv@aexp,w
  9879  1473  1D03               	btfss	3,2
  9880  1474  2C76               	goto	u4391
  9881  1475  2C77               	goto	u4390
  9882  1476                     u4391:	
  9883  1476  2C7F               	goto	l3508
  9884  1477                     u4390:	
  9885  1477                     l3506:	
  9886  1477  3000               	movlw	0
  9887  1478  00C3               	movwf	___fldiv@a+3
  9888  1479  3000               	movlw	0
  9889  147A  00C2               	movwf	___fldiv@a+2
  9890  147B  3000               	movlw	0
  9891  147C  00C1               	movwf	___fldiv@a+1
  9892  147D  3000               	movlw	0
  9893  147E  00C0               	movwf	___fldiv@a
  9894  147F                     l3508:	
  9895  147F  17C2               	bsf	___fldiv@a+2,7
  9896  1480                     l3510:	
  9897  1480  01C3               	clrf	___fldiv@a+3
  9898  1481  2C8A               	goto	l960
  9899  1482                     l3512:	
  9900  1482  3000               	movlw	0
  9901  1483  00C3               	movwf	___fldiv@a+3
  9902  1484  3000               	movlw	0
  9903  1485  00C2               	movwf	___fldiv@a+2
  9904  1486  3000               	movlw	0
  9905  1487  00C1               	movwf	___fldiv@a+1
  9906  1488  3000               	movlw	0
  9907  1489  00C0               	movwf	___fldiv@a
  9908  148A                     l960:	
  9909  148A  0843               	movf	___fldiv@a+3,w
  9910  148B  0442               	iorwf	___fldiv@a+2,w
  9911  148C  0441               	iorwf	___fldiv@a+1,w
  9912  148D  0440               	iorwf	___fldiv@a,w
  9913  148E  1D03               	skipz
  9914  148F  2C91               	goto	u4401
  9915  1490  2C92               	goto	u4400
  9916  1491                     u4401:	
  9917  1491  2CAB               	goto	l3522
  9918  1492                     u4400:	
  9919  1492                     l3514:	
  9920  1492  3000               	movlw	0
  9921  1493  00C7               	movwf	___fldiv@b+3
  9922  1494  3000               	movlw	0
  9923  1495  00C6               	movwf	___fldiv@b+2
  9924  1496  3000               	movlw	0
  9925  1497  00C5               	movwf	___fldiv@b+1
  9926  1498  3000               	movlw	0
  9927  1499  00C4               	movwf	___fldiv@b
  9928  149A  3080               	movlw	128
  9929  149B  04C6               	iorwf	___fldiv@b+2,f
  9930  149C  307F               	movlw	127
  9931  149D  04C7               	iorwf	___fldiv@b+3,f
  9932  149E                     l3516:	
  9933  149E  0851               	movf	___fldiv@sign,w
  9934  149F  00C8               	movwf	??___fldiv
  9935  14A0  0848               	movf	??___fldiv,w
  9936  14A1  04C7               	iorwf	___fldiv@b+3,f
  9937  14A2                     l3518:	
  9938  14A2  0847               	movf	___fldiv@b+3,w
  9939  14A3  00C3               	movwf	?___fldiv+3
  9940  14A4  0846               	movf	___fldiv@b+2,w
  9941  14A5  00C2               	movwf	?___fldiv+2
  9942  14A6  0845               	movf	___fldiv@b+1,w
  9943  14A7  00C1               	movwf	?___fldiv+1
  9944  14A8  0844               	movf	___fldiv@b,w
  9945  14A9  00C0               	movwf	?___fldiv
  9946  14AA  2DE6               	goto	l962
  9947  14AB                     l3522:	
  9948  14AB  0858               	movf	___fldiv@bexp,w
  9949  14AC  1D03               	btfss	3,2
  9950  14AD  2CAF               	goto	u4411
  9951  14AE  2CB0               	goto	u4410
  9952  14AF                     u4411:	
  9953  14AF  2CB9               	goto	l3528
  9954  14B0                     u4410:	
  9955  14B0                     l3524:	
  9956  14B0  3000               	movlw	0
  9957  14B1  00C3               	movwf	?___fldiv+3
  9958  14B2  3000               	movlw	0
  9959  14B3  00C2               	movwf	?___fldiv+2
  9960  14B4  3000               	movlw	0
  9961  14B5  00C1               	movwf	?___fldiv+1
  9962  14B6  3000               	movlw	0
  9963  14B7  00C0               	movwf	?___fldiv
  9964  14B8  2DE6               	goto	l962
  9965  14B9                     l3528:	
  9966  14B9  0858               	movf	___fldiv@bexp,w
  9967  14BA  00C8               	movwf	??___fldiv
  9968  14BB  01C9               	clrf	??___fldiv+1
  9969  14BC  0849               	movf	??___fldiv+1,w
  9970  14BD  00CB               	movwf	??___fldiv+3
  9971  14BE  0859               	movf	___fldiv@aexp,w
  9972  14BF  0248               	subwf	??___fldiv,w
  9973  14C0  00CA               	movwf	??___fldiv+2
  9974  14C1  1C03               	skipc
  9975  14C2  03CB               	decf	??___fldiv+3,f
  9976  14C3  084A               	movf	??___fldiv+2,w
  9977  14C4  3E7F               	addlw	127
  9978  14C5  00D2               	movwf	___fldiv@new_exp
  9979  14C6  3000               	movlw	0
  9980  14C7  3D4B               	addwfc	??___fldiv+3,w
  9981  14C8  00D3               	movwf	___fldiv@new_exp+1
  9982  14C9                     l3530:	
  9983  14C9  0847               	movf	___fldiv@b+3,w
  9984  14CA  00D0               	movwf	___fldiv@rem+3
  9985  14CB  0846               	movf	___fldiv@b+2,w
  9986  14CC  00CF               	movwf	___fldiv@rem+2
  9987  14CD  0845               	movf	___fldiv@b+1,w
  9988  14CE  00CE               	movwf	___fldiv@rem+1
  9989  14CF  0844               	movf	___fldiv@b,w
  9990  14D0  00CD               	movwf	___fldiv@rem
  9991  14D1                     l3532:	
  9992  14D1  3000               	movlw	0
  9993  14D2  00C7               	movwf	___fldiv@b+3
  9994  14D3  3000               	movlw	0
  9995  14D4  00C6               	movwf	___fldiv@b+2
  9996  14D5  3000               	movlw	0
  9997  14D6  00C5               	movwf	___fldiv@b+1
  9998  14D7  3000               	movlw	0
  9999  14D8  00C4               	movwf	___fldiv@b
 10000  14D9                     l3534:	
 10001  14D9  3000               	movlw	0
 10002  14DA  00D7               	movwf	___fldiv@grs+3
 10003  14DB  3000               	movlw	0
 10004  14DC  00D6               	movwf	___fldiv@grs+2
 10005  14DD  3000               	movlw	0
 10006  14DE  00D5               	movwf	___fldiv@grs+1
 10007  14DF  3000               	movlw	0
 10008  14E0  00D4               	movwf	___fldiv@grs
 10009  14E1                     l3536:	
 10010  14E1  01D9               	clrf	___fldiv@aexp
 10011  14E2  2D21               	goto	l3556
 10012  14E3                     l3538:	
 10013  14E3  0859               	movf	___fldiv@aexp,w
 10014  14E4  1903               	btfsc	3,2
 10015  14E5  2CE7               	goto	u4421
 10016  14E6  2CE8               	goto	u4420
 10017  14E7                     u4421:	
 10018  14E7  2D02               	goto	l3548
 10019  14E8                     u4420:	
 10020  14E8                     l3540:	
 10021  14E8  3001               	movlw	1
 10022  14E9                     u4435:	
 10023  14E9  35CD               	lslf	___fldiv@rem,f
 10024  14EA  0DCE               	rlf	___fldiv@rem+1,f
 10025  14EB  0DCF               	rlf	___fldiv@rem+2,f
 10026  14EC  0DD0               	rlf	___fldiv@rem+3,f
 10027  14ED  0B89               	decfsz	9,f
 10028  14EE  2CE9               	goto	u4435
 10029  14EF  3001               	movlw	1
 10030  14F0                     u4445:	
 10031  14F0  35C4               	lslf	___fldiv@b,f
 10032  14F1  0DC5               	rlf	___fldiv@b+1,f
 10033  14F2  0DC6               	rlf	___fldiv@b+2,f
 10034  14F3  0DC7               	rlf	___fldiv@b+3,f
 10035  14F4  0B89               	decfsz	9,f
 10036  14F5  2CF0               	goto	u4445
 10037  14F6                     l3542:	
 10038  14F6  1FD7               	btfss	___fldiv@grs+3,7
 10039  14F7  2CF9               	goto	u4451
 10040  14F8  2CFA               	goto	u4450
 10041  14F9                     u4451:	
 10042  14F9  2CFB               	goto	l3546
 10043  14FA                     u4450:	
 10044  14FA                     l3544:	
 10045  14FA  1444               	bsf	___fldiv@b,0
 10046  14FB                     l3546:	
 10047  14FB  3001               	movlw	1
 10048  14FC                     u4465:	
 10049  14FC  35D4               	lslf	___fldiv@grs,f
 10050  14FD  0DD5               	rlf	___fldiv@grs+1,f
 10051  14FE  0DD6               	rlf	___fldiv@grs+2,f
 10052  14FF  0DD7               	rlf	___fldiv@grs+3,f
 10053  1500  0B89               	decfsz	9,f
 10054  1501  2CFC               	goto	u4465
 10055  1502                     l3548:	
 10056  1502  0843               	movf	___fldiv@a+3,w
 10057  1503  0250               	subwf	___fldiv@rem+3,w
 10058  1504  1D03               	skipz
 10059  1505  2D10               	goto	u4475
 10060  1506  0842               	movf	___fldiv@a+2,w
 10061  1507  024F               	subwf	___fldiv@rem+2,w
 10062  1508  1D03               	skipz
 10063  1509  2D10               	goto	u4475
 10064  150A  0841               	movf	___fldiv@a+1,w
 10065  150B  024E               	subwf	___fldiv@rem+1,w
 10066  150C  1D03               	skipz
 10067  150D  2D10               	goto	u4475
 10068  150E  0840               	movf	___fldiv@a,w
 10069  150F  024D               	subwf	___fldiv@rem,w
 10070  1510                     u4475:	
 10071  1510  1C03               	skipc
 10072  1511  2D13               	goto	u4471
 10073  1512  2D14               	goto	u4470
 10074  1513                     u4471:	
 10075  1513  2D1D               	goto	l3554
 10076  1514                     u4470:	
 10077  1514                     l3550:	
 10078  1514  1757               	bsf	___fldiv@grs+3,6
 10079  1515                     l3552:	
 10080  1515  0840               	movf	___fldiv@a,w
 10081  1516  02CD               	subwf	___fldiv@rem,f
 10082  1517  0841               	movf	___fldiv@a+1,w
 10083  1518  3BCE               	subwfb	___fldiv@rem+1,f
 10084  1519  0842               	movf	___fldiv@a+2,w
 10085  151A  3BCF               	subwfb	___fldiv@rem+2,f
 10086  151B  0843               	movf	___fldiv@a+3,w
 10087  151C  3BD0               	subwfb	___fldiv@rem+3,f
 10088  151D                     l3554:	
 10089  151D  3001               	movlw	1
 10090  151E  00C8               	movwf	??___fldiv
 10091  151F  0848               	movf	??___fldiv,w
 10092  1520  07D9               	addwf	___fldiv@aexp,f
 10093  1521                     l3556:	
 10094  1521  301A               	movlw	26
 10095  1522  0259               	subwf	___fldiv@aexp,w
 10096  1523  1C03               	skipc
 10097  1524  2D26               	goto	u4481
 10098  1525  2D27               	goto	u4480
 10099  1526                     u4481:	
 10100  1526  2CE3               	goto	l3538
 10101  1527                     u4480:	
 10102  1527                     l3558:	
 10103  1527  0850               	movf	___fldiv@rem+3,w
 10104  1528  044F               	iorwf	___fldiv@rem+2,w
 10105  1529  044E               	iorwf	___fldiv@rem+1,w
 10106  152A  044D               	iorwf	___fldiv@rem,w
 10107  152B  1903               	skipnz
 10108  152C  2D2E               	goto	u4491
 10109  152D  2D2F               	goto	u4490
 10110  152E                     u4491:	
 10111  152E  2D48               	goto	l3572
 10112  152F                     u4490:	
 10113  152F                     l3560:	
 10114  152F  1454               	bsf	___fldiv@grs,0
 10115  1530  2D48               	goto	l3572
 10116  1531                     l3562:	
 10117  1531  3001               	movlw	1
 10118  1532                     u4505:	
 10119  1532  35C4               	lslf	___fldiv@b,f
 10120  1533  0DC5               	rlf	___fldiv@b+1,f
 10121  1534  0DC6               	rlf	___fldiv@b+2,f
 10122  1535  0DC7               	rlf	___fldiv@b+3,f
 10123  1536  0B89               	decfsz	9,f
 10124  1537  2D32               	goto	u4505
 10125  1538                     l3564:	
 10126  1538  1FD7               	btfss	___fldiv@grs+3,7
 10127  1539  2D3B               	goto	u4511
 10128  153A  2D3C               	goto	u4510
 10129  153B                     u4511:	
 10130  153B  2D3D               	goto	l3568
 10131  153C                     u4510:	
 10132  153C                     l3566:	
 10133  153C  1444               	bsf	___fldiv@b,0
 10134  153D                     l3568:	
 10135  153D  3001               	movlw	1
 10136  153E                     u4525:	
 10137  153E  35D4               	lslf	___fldiv@grs,f
 10138  153F  0DD5               	rlf	___fldiv@grs+1,f
 10139  1540  0DD6               	rlf	___fldiv@grs+2,f
 10140  1541  0DD7               	rlf	___fldiv@grs+3,f
 10141  1542  0B89               	decfsz	9,f
 10142  1543  2D3E               	goto	u4525
 10143  1544                     l3570:	
 10144  1544  30FF               	movlw	255
 10145  1545  07D2               	addwf	___fldiv@new_exp,f
 10146  1546  30FF               	movlw	255
 10147  1547  3DD3               	addwfc	___fldiv@new_exp+1,f
 10148  1548                     l3572:	
 10149  1548  1FC6               	btfss	___fldiv@b+2,7
 10150  1549  2D4B               	goto	u4531
 10151  154A  2D4C               	goto	u4530
 10152  154B                     u4531:	
 10153  154B  2D31               	goto	l3562
 10154  154C                     u4530:	
 10155  154C                     l3574:	
 10156  154C  01D9               	clrf	___fldiv@aexp
 10157  154D                     l3576:	
 10158  154D  1FD7               	btfss	___fldiv@grs+3,7
 10159  154E  2D50               	goto	u4541
 10160  154F  2D51               	goto	u4540
 10161  1550                     u4541:	
 10162  1550  2D6D               	goto	l3584
 10163  1551                     u4540:	
 10164  1551                     l3578:	
 10165  1551  30FF               	movlw	255
 10166  1552  0554               	andwf	___fldiv@grs,w
 10167  1553  00C8               	movwf	??___fldiv
 10168  1554  30FF               	movlw	255
 10169  1555  0555               	andwf	___fldiv@grs+1,w
 10170  1556  00C9               	movwf	??___fldiv+1
 10171  1557  30FF               	movlw	255
 10172  1558  0556               	andwf	___fldiv@grs+2,w
 10173  1559  00CA               	movwf	??___fldiv+2
 10174  155A  307F               	movlw	127
 10175  155B  0557               	andwf	___fldiv@grs+3,w
 10176  155C  00CB               	movwf	??___fldiv+3
 10177  155D  084B               	movf	??___fldiv+3,w
 10178  155E  044A               	iorwf	??___fldiv+2,w
 10179  155F  0449               	iorwf	??___fldiv+1,w
 10180  1560  0448               	iorwf	??___fldiv,w
 10181  1561  1903               	skipnz
 10182  1562  2D64               	goto	u4551
 10183  1563  2D65               	goto	u4550
 10184  1564                     u4551:	
 10185  1564  2D68               	goto	l976
 10186  1565                     u4550:	
 10187  1565                     l3580:	
 10188  1565  01D9               	clrf	___fldiv@aexp
 10189  1566  0AD9               	incf	___fldiv@aexp,f
 10190  1567  2D6D               	goto	l3584
 10191  1568                     l976:	
 10192  1568  1C44               	btfss	___fldiv@b,0
 10193  1569  2D6B               	goto	u4561
 10194  156A  2D6C               	goto	u4560
 10195  156B                     u4561:	
 10196  156B  2D6D               	goto	l3584
 10197  156C                     u4560:	
 10198  156C  2D65               	goto	l3580
 10199  156D                     l3584:	
 10200  156D  0859               	movf	___fldiv@aexp,w
 10201  156E  1903               	btfsc	3,2
 10202  156F  2D71               	goto	u4571
 10203  1570  2D72               	goto	u4570
 10204  1571                     u4571:	
 10205  1571  2D9A               	goto	l3594
 10206  1572                     u4570:	
 10207  1572                     l3586:	
 10208  1572  3001               	movlw	1
 10209  1573  07C4               	addwf	___fldiv@b,f
 10210  1574  3000               	movlw	0
 10211  1575  3DC5               	addwfc	___fldiv@b+1,f
 10212  1576  3000               	movlw	0
 10213  1577  3DC6               	addwfc	___fldiv@b+2,f
 10214  1578  3000               	movlw	0
 10215  1579  3DC7               	addwfc	___fldiv@b+3,f
 10216  157A                     l3588:	
 10217  157A  1C47               	btfss	___fldiv@b+3,0
 10218  157B  2D7D               	goto	u4581
 10219  157C  2D7E               	goto	u4580
 10220  157D                     u4581:	
 10221  157D  2D9A               	goto	l3594
 10222  157E                     u4580:	
 10223  157E                     l3590:	
 10224  157E  0844               	movf	___fldiv@b,w
 10225  157F  00C8               	movwf	??___fldiv
 10226  1580  0845               	movf	___fldiv@b+1,w
 10227  1581  00C9               	movwf	??___fldiv+1
 10228  1582  0846               	movf	___fldiv@b+2,w
 10229  1583  00CA               	movwf	??___fldiv+2
 10230  1584  0847               	movf	___fldiv@b+3,w
 10231  1585  00CB               	movwf	??___fldiv+3
 10232  1586  3001               	movlw	1
 10233  1587  00CC               	movwf	??___fldiv+4
 10234  1588                     u4595:	
 10235  1588  37CB               	asrf	??___fldiv+3,f
 10236  1589  0CCA               	rrf	??___fldiv+2,f
 10237  158A  0CC9               	rrf	??___fldiv+1,f
 10238  158B  0CC8               	rrf	??___fldiv,f
 10239  158C                     u4590:	
 10240  158C  0BCC               	decfsz	??___fldiv+4,f
 10241  158D  2D88               	goto	u4595
 10242  158E  084B               	movf	??___fldiv+3,w
 10243  158F  00C7               	movwf	___fldiv@b+3
 10244  1590  084A               	movf	??___fldiv+2,w
 10245  1591  00C6               	movwf	___fldiv@b+2
 10246  1592  0849               	movf	??___fldiv+1,w
 10247  1593  00C5               	movwf	___fldiv@b+1
 10248  1594  0848               	movf	??___fldiv,w
 10249  1595  00C4               	movwf	___fldiv@b
 10250  1596                     l3592:	
 10251  1596  3001               	movlw	1
 10252  1597  07D2               	addwf	___fldiv@new_exp,f
 10253  1598  3000               	movlw	0
 10254  1599  3DD3               	addwfc	___fldiv@new_exp+1,f
 10255  159A                     l3594:	
 10256  159A  0853               	movf	___fldiv@new_exp+1,w
 10257  159B  3A80               	xorlw	128
 10258  159C  00C8               	movwf	??___fldiv
 10259  159D  3080               	movlw	128
 10260  159E  0248               	subwf	??___fldiv,w
 10261  159F  1D03               	skipz
 10262  15A0  2DA3               	goto	u4605
 10263  15A1  30FF               	movlw	255
 10264  15A2  0252               	subwf	___fldiv@new_exp,w
 10265  15A3                     u4605:	
 10266  15A3  1C03               	skipc
 10267  15A4  2DA6               	goto	u4601
 10268  15A5  2DA7               	goto	u4600
 10269  15A6                     u4601:	
 10270  15A6  2DB4               	goto	l981
 10271  15A7                     u4600:	
 10272  15A7                     l3596:	
 10273  15A7  30FF               	movlw	255
 10274  15A8  0020               	movlb	0	; select bank0
 10275  15A9  00D2               	movwf	___fldiv@new_exp
 10276  15AA  3000               	movlw	0
 10277  15AB  00D3               	movwf	___fldiv@new_exp+1
 10278  15AC  3000               	movlw	0
 10279  15AD  00C7               	movwf	___fldiv@b+3
 10280  15AE  3000               	movlw	0
 10281  15AF  00C6               	movwf	___fldiv@b+2
 10282  15B0  3000               	movlw	0
 10283  15B1  00C5               	movwf	___fldiv@b+1
 10284  15B2  3000               	movlw	0
 10285  15B3  00C4               	movwf	___fldiv@b
 10286  15B4                     l981:	
 10287  15B4  0020               	movlb	0	; select bank0
 10288  15B5  0853               	movf	___fldiv@new_exp+1,w
 10289  15B6  3A80               	xorlw	128
 10290  15B7  00C8               	movwf	??___fldiv
 10291  15B8  3080               	movlw	128
 10292  15B9  0248               	subwf	??___fldiv,w
 10293  15BA  1D03               	skipz
 10294  15BB  2DBE               	goto	u4615
 10295  15BC  3001               	movlw	1
 10296  15BD  0252               	subwf	___fldiv@new_exp,w
 10297  15BE                     u4615:	
 10298  15BE  1803               	skipnc
 10299  15BF  2DC1               	goto	u4611
 10300  15C0  2DC2               	goto	u4610
 10301  15C1                     u4611:	
 10302  15C1  2DCE               	goto	l982
 10303  15C2                     u4610:	
 10304  15C2                     l3598:	
 10305  15C2  0020               	movlb	0	; select bank0
 10306  15C3  01D2               	clrf	___fldiv@new_exp
 10307  15C4  01D3               	clrf	___fldiv@new_exp+1
 10308  15C5                     l3600:	
 10309  15C5  3000               	movlw	0
 10310  15C6  00C7               	movwf	___fldiv@b+3
 10311  15C7  3000               	movlw	0
 10312  15C8  00C6               	movwf	___fldiv@b+2
 10313  15C9  3000               	movlw	0
 10314  15CA  00C5               	movwf	___fldiv@b+1
 10315  15CB  3000               	movlw	0
 10316  15CC  00C4               	movwf	___fldiv@b
 10317  15CD                     l3602:	
 10318  15CD  01D1               	clrf	___fldiv@sign
 10319  15CE                     l982:	
 10320  15CE  0020               	movlb	0	; select bank0
 10321  15CF  0852               	movf	___fldiv@new_exp,w
 10322  15D0  00C8               	movwf	??___fldiv
 10323  15D1  0848               	movf	??___fldiv,w
 10324  15D2  00D8               	movwf	___fldiv@bexp
 10325  15D3                     l3604:	
 10326  15D3  1C58               	btfss	___fldiv@bexp,0
 10327  15D4  2DD6               	goto	u4621
 10328  15D5  2DD7               	goto	u4620
 10329  15D6                     u4621:	
 10330  15D6  2DD9               	goto	l3608
 10331  15D7                     u4620:	
 10332  15D7                     l3606:	
 10333  15D7  17C6               	bsf	___fldiv@b+2,7
 10334  15D8  2DDD               	goto	l984
 10335  15D9                     l3608:	
 10336  15D9  307F               	movlw	127
 10337  15DA  00C8               	movwf	??___fldiv
 10338  15DB  0848               	movf	??___fldiv,w
 10339  15DC  05C6               	andwf	___fldiv@b+2,f
 10340  15DD                     l984:	
 10341  15DD  3658               	lsrf	___fldiv@bexp,w
 10342  15DE  00C8               	movwf	??___fldiv
 10343  15DF  0848               	movf	??___fldiv,w
 10344  15E0  00C7               	movwf	___fldiv@b+3
 10345  15E1  0851               	movf	___fldiv@sign,w
 10346  15E2  00C8               	movwf	??___fldiv
 10347  15E3  0848               	movf	??___fldiv,w
 10348  15E4  04C7               	iorwf	___fldiv@b+3,f
 10349  15E5  2CA2               	goto	l3518
 10350  15E6                     l962:	
 10351  15E6  0008               	return
 10352  15E7                     __end_of___fldiv:	
 10353                           
 10354                           	psect	text25
 10355  0800                     __ptext25:	
 10356 ;; *************** function ___awmod *****************
 10357 ;; Defined at:
 10358 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 10359 ;; Parameters:    Size  Location     Type
 10360 ;;  divisor         2    0[COMMON] int 
 10361 ;;  dividend        2    2[COMMON] int 
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;  sign            1    6[COMMON] unsigned char 
 10364 ;;  counter         1    5[COMMON] unsigned char 
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  2    0[COMMON] int 
 10367 ;; Registers used:
 10368 ;;		wreg, status,2, status,0
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10375 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10377 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10378 ;;Total ram usage:        7 bytes
 10379 ;; Hardware stack levels used:    1
 10380 ;; This function calls:
 10381 ;;		Nothing
 10382 ;; This function is called by:
 10383 ;;		_efgtoa
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           
 10388                           ;psect for function ___awmod
 10389  0800                     ___awmod:	
 10390  0800                     l3354:	
 10391                           ;incstack = 0
 10392                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10393                           
 10394  0800  01F6               	clrf	___awmod@sign
 10395  0801                     l3356:	
 10396  0801  1FF3               	btfss	___awmod@dividend+1,7
 10397  0802  2804               	goto	u4061
 10398  0803  2805               	goto	u4060
 10399  0804                     u4061:	
 10400  0804  280C               	goto	l3362
 10401  0805                     u4060:	
 10402  0805                     l3358:	
 10403  0805  09F2               	comf	___awmod@dividend,f
 10404  0806  09F3               	comf	___awmod@dividend+1,f
 10405  0807  0AF2               	incf	___awmod@dividend,f
 10406  0808  1903               	skipnz
 10407  0809  0AF3               	incf	___awmod@dividend+1,f
 10408  080A                     l3360:	
 10409  080A  01F6               	clrf	___awmod@sign
 10410  080B  0AF6               	incf	___awmod@sign,f
 10411  080C                     l3362:	
 10412  080C  1FF1               	btfss	___awmod@divisor+1,7
 10413  080D  280F               	goto	u4071
 10414  080E  2810               	goto	u4070
 10415  080F                     u4071:	
 10416  080F  2815               	goto	l3366
 10417  0810                     u4070:	
 10418  0810                     l3364:	
 10419  0810  09F0               	comf	___awmod@divisor,f
 10420  0811  09F1               	comf	___awmod@divisor+1,f
 10421  0812  0AF0               	incf	___awmod@divisor,f
 10422  0813  1903               	skipnz
 10423  0814  0AF1               	incf	___awmod@divisor+1,f
 10424  0815                     l3366:	
 10425  0815  0870               	movf	___awmod@divisor,w
 10426  0816  0471               	iorwf	___awmod@divisor+1,w
 10427  0817  1903               	btfsc	3,2
 10428  0818  281A               	goto	u4081
 10429  0819  281B               	goto	u4080
 10430  081A                     u4081:	
 10431  081A  2844               	goto	l3384
 10432  081B                     u4080:	
 10433  081B                     l3368:	
 10434  081B  01F5               	clrf	___awmod@counter
 10435  081C  0AF5               	incf	___awmod@counter,f
 10436  081D  2827               	goto	l3374
 10437  081E                     l3370:	
 10438  081E  3001               	movlw	1
 10439  081F                     u4095:	
 10440  081F  35F0               	lslf	___awmod@divisor,f
 10441  0820  0DF1               	rlf	___awmod@divisor+1,f
 10442  0821  0B89               	decfsz	9,f
 10443  0822  281F               	goto	u4095
 10444  0823                     l3372:	
 10445  0823  3001               	movlw	1
 10446  0824  00F4               	movwf	??___awmod
 10447  0825  0874               	movf	??___awmod,w
 10448  0826  07F5               	addwf	___awmod@counter,f
 10449  0827                     l3374:	
 10450  0827  1FF1               	btfss	___awmod@divisor+1,7
 10451  0828  282A               	goto	u4101
 10452  0829  282B               	goto	u4100
 10453  082A                     u4101:	
 10454  082A  281E               	goto	l3370
 10455  082B                     u4100:	
 10456  082B                     l3376:	
 10457  082B  0871               	movf	___awmod@divisor+1,w
 10458  082C  0273               	subwf	___awmod@dividend+1,w
 10459  082D  1D03               	skipz
 10460  082E  2831               	goto	u4115
 10461  082F  0870               	movf	___awmod@divisor,w
 10462  0830  0272               	subwf	___awmod@dividend,w
 10463  0831                     u4115:	
 10464  0831  1C03               	skipc
 10465  0832  2834               	goto	u4111
 10466  0833  2835               	goto	u4110
 10467  0834                     u4111:	
 10468  0834  2839               	goto	l3380
 10469  0835                     u4110:	
 10470  0835                     l3378:	
 10471  0835  0870               	movf	___awmod@divisor,w
 10472  0836  02F2               	subwf	___awmod@dividend,f
 10473  0837  0871               	movf	___awmod@divisor+1,w
 10474  0838  3BF3               	subwfb	___awmod@dividend+1,f
 10475  0839                     l3380:	
 10476  0839  3001               	movlw	1
 10477  083A                     u4125:	
 10478  083A  36F1               	lsrf	___awmod@divisor+1,f
 10479  083B  0CF0               	rrf	___awmod@divisor,f
 10480  083C  0B89               	decfsz	9,f
 10481  083D  283A               	goto	u4125
 10482  083E                     l3382:	
 10483  083E  3001               	movlw	1
 10484  083F  02F5               	subwf	___awmod@counter,f
 10485  0840  1D03               	btfss	3,2
 10486  0841  2843               	goto	u4131
 10487  0842  2844               	goto	u4130
 10488  0843                     u4131:	
 10489  0843  282B               	goto	l3376
 10490  0844                     u4130:	
 10491  0844                     l3384:	
 10492  0844  0876               	movf	___awmod@sign,w
 10493  0845  1903               	btfsc	3,2
 10494  0846  2848               	goto	u4141
 10495  0847  2849               	goto	u4140
 10496  0848                     u4141:	
 10497  0848  284E               	goto	l3388
 10498  0849                     u4140:	
 10499  0849                     l3386:	
 10500  0849  09F2               	comf	___awmod@dividend,f
 10501  084A  09F3               	comf	___awmod@dividend+1,f
 10502  084B  0AF2               	incf	___awmod@dividend,f
 10503  084C  1903               	skipnz
 10504  084D  0AF3               	incf	___awmod@dividend+1,f
 10505  084E                     l3388:	
 10506  084E  0873               	movf	___awmod@dividend+1,w
 10507  084F  00F1               	movwf	?___awmod+1
 10508  0850  0872               	movf	___awmod@dividend,w
 10509  0851  00F0               	movwf	?___awmod
 10510  0852                     l769:	
 10511  0852  0008               	return
 10512  0853                     __end_of___awmod:	
 10513                           
 10514                           	psect	text26
 10515  10FA                     __ptext26:	
 10516 ;; *************** function ___awdiv *****************
 10517 ;; Defined at:
 10518 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;  divisor         2    0[COMMON] int 
 10521 ;;  dividend        2    2[COMMON] int 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  quotient        2    7[COMMON] int 
 10524 ;;  sign            1    6[COMMON] unsigned char 
 10525 ;;  counter         1    5[COMMON] unsigned char 
 10526 ;; Return value:  Size  Location     Type
 10527 ;;                  2    0[COMMON] int 
 10528 ;; Registers used:
 10529 ;;		wreg, status,2, status,0
 10530 ;; Tracked objects:
 10531 ;;		On entry : 0/0
 10532 ;;		On exit  : 0/0
 10533 ;;		Unchanged: 0/0
 10534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10535 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10536 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;Total ram usage:        9 bytes
 10540 ;; Hardware stack levels used:    1
 10541 ;; This function calls:
 10542 ;;		Nothing
 10543 ;; This function is called by:
 10544 ;;		_efgtoa
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548                           
 10549                           ;psect for function ___awdiv
 10550  10FA                     ___awdiv:	
 10551  10FA                     l3310:	
 10552                           ;incstack = 0
 10553                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10554                           
 10555  10FA  01F6               	clrf	___awdiv@sign
 10556  10FB                     l3312:	
 10557  10FB  1FF1               	btfss	___awdiv@divisor+1,7
 10558  10FC  28FE               	goto	u3961
 10559  10FD  28FF               	goto	u3960
 10560  10FE                     u3961:	
 10561  10FE  2906               	goto	l3318
 10562  10FF                     u3960:	
 10563  10FF                     l3314:	
 10564  10FF  09F0               	comf	___awdiv@divisor,f
 10565  1100  09F1               	comf	___awdiv@divisor+1,f
 10566  1101  0AF0               	incf	___awdiv@divisor,f
 10567  1102  1903               	skipnz
 10568  1103  0AF1               	incf	___awdiv@divisor+1,f
 10569  1104                     l3316:	
 10570  1104  01F6               	clrf	___awdiv@sign
 10571  1105  0AF6               	incf	___awdiv@sign,f
 10572  1106                     l3318:	
 10573  1106  1FF3               	btfss	___awdiv@dividend+1,7
 10574  1107  2909               	goto	u3971
 10575  1108  290A               	goto	u3970
 10576  1109                     u3971:	
 10577  1109  2913               	goto	l3324
 10578  110A                     u3970:	
 10579  110A                     l3320:	
 10580  110A  09F2               	comf	___awdiv@dividend,f
 10581  110B  09F3               	comf	___awdiv@dividend+1,f
 10582  110C  0AF2               	incf	___awdiv@dividend,f
 10583  110D  1903               	skipnz
 10584  110E  0AF3               	incf	___awdiv@dividend+1,f
 10585  110F                     l3322:	
 10586  110F  3001               	movlw	1
 10587  1110  00F4               	movwf	??___awdiv
 10588  1111  0874               	movf	??___awdiv,w
 10589  1112  06F6               	xorwf	___awdiv@sign,f
 10590  1113                     l3324:	
 10591  1113  01F7               	clrf	___awdiv@quotient
 10592  1114  01F8               	clrf	___awdiv@quotient+1
 10593  1115                     l3326:	
 10594  1115  0870               	movf	___awdiv@divisor,w
 10595  1116  0471               	iorwf	___awdiv@divisor+1,w
 10596  1117  1903               	btfsc	3,2
 10597  1118  291A               	goto	u3981
 10598  1119  291B               	goto	u3980
 10599  111A                     u3981:	
 10600  111A  294A               	goto	l3346
 10601  111B                     u3980:	
 10602  111B                     l3328:	
 10603  111B  01F5               	clrf	___awdiv@counter
 10604  111C  0AF5               	incf	___awdiv@counter,f
 10605  111D  2927               	goto	l3334
 10606  111E                     l3330:	
 10607  111E  3001               	movlw	1
 10608  111F                     u3995:	
 10609  111F  35F0               	lslf	___awdiv@divisor,f
 10610  1120  0DF1               	rlf	___awdiv@divisor+1,f
 10611  1121  0B89               	decfsz	9,f
 10612  1122  291F               	goto	u3995
 10613  1123                     l3332:	
 10614  1123  3001               	movlw	1
 10615  1124  00F4               	movwf	??___awdiv
 10616  1125  0874               	movf	??___awdiv,w
 10617  1126  07F5               	addwf	___awdiv@counter,f
 10618  1127                     l3334:	
 10619  1127  1FF1               	btfss	___awdiv@divisor+1,7
 10620  1128  292A               	goto	u4001
 10621  1129  292B               	goto	u4000
 10622  112A                     u4001:	
 10623  112A  291E               	goto	l3330
 10624  112B                     u4000:	
 10625  112B                     l3336:	
 10626  112B  3001               	movlw	1
 10627  112C                     u4015:	
 10628  112C  35F7               	lslf	___awdiv@quotient,f
 10629  112D  0DF8               	rlf	___awdiv@quotient+1,f
 10630  112E  0B89               	decfsz	9,f
 10631  112F  292C               	goto	u4015
 10632  1130  0871               	movf	___awdiv@divisor+1,w
 10633  1131  0273               	subwf	___awdiv@dividend+1,w
 10634  1132  1D03               	skipz
 10635  1133  2936               	goto	u4025
 10636  1134  0870               	movf	___awdiv@divisor,w
 10637  1135  0272               	subwf	___awdiv@dividend,w
 10638  1136                     u4025:	
 10639  1136  1C03               	skipc
 10640  1137  2939               	goto	u4021
 10641  1138  293A               	goto	u4020
 10642  1139                     u4021:	
 10643  1139  293F               	goto	l3342
 10644  113A                     u4020:	
 10645  113A                     l3338:	
 10646  113A  0870               	movf	___awdiv@divisor,w
 10647  113B  02F2               	subwf	___awdiv@dividend,f
 10648  113C  0871               	movf	___awdiv@divisor+1,w
 10649  113D  3BF3               	subwfb	___awdiv@dividend+1,f
 10650  113E                     l3340:	
 10651  113E  1477               	bsf	___awdiv@quotient,0
 10652  113F                     l3342:	
 10653  113F  3001               	movlw	1
 10654  1140                     u4035:	
 10655  1140  36F1               	lsrf	___awdiv@divisor+1,f
 10656  1141  0CF0               	rrf	___awdiv@divisor,f
 10657  1142  0B89               	decfsz	9,f
 10658  1143  2940               	goto	u4035
 10659  1144                     l3344:	
 10660  1144  3001               	movlw	1
 10661  1145  02F5               	subwf	___awdiv@counter,f
 10662  1146  1D03               	btfss	3,2
 10663  1147  2949               	goto	u4041
 10664  1148  294A               	goto	u4040
 10665  1149                     u4041:	
 10666  1149  292B               	goto	l3336
 10667  114A                     u4040:	
 10668  114A                     l3346:	
 10669  114A  0876               	movf	___awdiv@sign,w
 10670  114B  1903               	btfsc	3,2
 10671  114C  294E               	goto	u4051
 10672  114D  294F               	goto	u4050
 10673  114E                     u4051:	
 10674  114E  2954               	goto	l3350
 10675  114F                     u4050:	
 10676  114F                     l3348:	
 10677  114F  09F7               	comf	___awdiv@quotient,f
 10678  1150  09F8               	comf	___awdiv@quotient+1,f
 10679  1151  0AF7               	incf	___awdiv@quotient,f
 10680  1152  1903               	skipnz
 10681  1153  0AF8               	incf	___awdiv@quotient+1,f
 10682  1154                     l3350:	
 10683  1154  0878               	movf	___awdiv@quotient+1,w
 10684  1155  00F1               	movwf	?___awdiv+1
 10685  1156  0877               	movf	___awdiv@quotient,w
 10686  1157  00F0               	movwf	?___awdiv
 10687  1158                     l756:	
 10688  1158  0008               	return
 10689  1159                     __end_of___awdiv:	
 10690                           
 10691                           	psect	text27
 10692  1384                     __ptext27:	
 10693 ;; *************** function _atoi *****************
 10694 ;; Defined at:
 10695 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 10696 ;; Parameters:    Size  Location     Type
 10697 ;;  s               2    6[COMMON] PTR const unsigned char 
 10698 ;;		 -> STR_5(6), STR_3(6), STR_1(6), 
 10699 ;; Auto vars:     Size  Location     Type
 10700 ;;  n               2    7[BANK0 ] int 
 10701 ;;  neg             2    0[BANK0 ] int 
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  2    6[COMMON] int 
 10704 ;; Registers used:
 10705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10712 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10713 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10714 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10715 ;;Total ram usage:       15 bytes
 10716 ;; Hardware stack levels used:    1
 10717 ;; Hardware stack levels required when called:    1
 10718 ;; This function calls:
 10719 ;;		___wmul
 10720 ;;		_isdigit
 10721 ;;		_isspace
 10722 ;; This function is called by:
 10723 ;;		_vfpfcnvrt
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727                           
 10728                           ;psect for function _atoi
 10729  1384                     _atoi:	
 10730  1384                     l4060:	
 10731                           ;incstack = 0
 10732                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10733                           
 10734  1384  0020               	movlb	0	; select bank0
 10735  1385  01A7               	clrf	atoi@n
 10736  1386  01A8               	clrf	atoi@n+1
 10737  1387  01A0               	clrf	atoi@neg
 10738  1388  01A1               	clrf	atoi@neg+1
 10739  1389  2B8E               	goto	l4064
 10740  138A                     l4062:	
 10741  138A  3001               	movlw	1
 10742  138B  07F6               	addwf	atoi@s,f
 10743  138C  3000               	movlw	0
 10744  138D  3DF7               	addwfc	atoi@s+1,f
 10745  138E                     l4064:	
 10746  138E  01A6               	clrf	_atoi$1156
 10747  138F  0AA6               	incf	_atoi$1156,f
 10748  1390                     l4066:	
 10749  1390  0876               	movf	atoi@s,w
 10750  1391  0084               	movwf	4
 10751  1392  0877               	movf	atoi@s+1,w
 10752  1393  0085               	movwf	5
 10753  1394  0012               	moviw fsr0++
 10754  1395  3A20               	xorlw	32
 10755  1396  1903               	btfsc	3,2
 10756  1397  2B99               	goto	u5431
 10757  1398  2B9A               	goto	u5430
 10758  1399                     u5431:	
 10759  1399  2BAF               	goto	l4072
 10760  139A                     u5430:	
 10761  139A                     l4068:	
 10762  139A  0876               	movf	atoi@s,w
 10763  139B  0084               	movwf	4
 10764  139C  0877               	movf	atoi@s+1,w
 10765  139D  0085               	movwf	5
 10766  139E  0800               	movf	0,w	;code access
 10767  139F  3EF7               	addlw	247
 10768  13A0  00F8               	movwf	??_atoi
 10769  13A1  30FF               	movlw	255
 10770  13A2  1803               	skipnc
 10771  13A3  3000               	movlw	0
 10772  13A4  00F9               	movwf	??_atoi+1
 10773  13A5  3000               	movlw	0
 10774  13A6  0279               	subwf	??_atoi+1,w
 10775  13A7  3005               	movlw	5
 10776  13A8  1903               	skipnz
 10777  13A9  0278               	subwf	??_atoi,w
 10778  13AA  1C03               	skipc
 10779  13AB  2BAD               	goto	u5441
 10780  13AC  2BAE               	goto	u5440
 10781  13AD                     u5441:	
 10782  13AD  2BAF               	goto	l4072
 10783  13AE                     u5440:	
 10784  13AE                     l4070:	
 10785  13AE  01A6               	clrf	_atoi$1156
 10786  13AF                     l4072:	
 10787  13AF  0826               	movf	_atoi$1156,w
 10788  13B0  00F8               	movwf	??_atoi
 10789  13B1  01F9               	clrf	??_atoi+1
 10790  13B2  0878               	movf	??_atoi,w
 10791  13B3  00A2               	movwf	_atoi$1155
 10792  13B4  0879               	movf	??_atoi+1,w
 10793  13B5  00A3               	movwf	_atoi$1155+1
 10794  13B6                     l4076:	
 10795  13B6  0822               	movf	_atoi$1155,w
 10796  13B7  0423               	iorwf	_atoi$1155+1,w
 10797  13B8  1D03               	btfss	3,2
 10798  13B9  2BBB               	goto	u5451
 10799  13BA  2BBC               	goto	u5450
 10800  13BB                     u5451:	
 10801  13BB  2B8A               	goto	l4062
 10802  13BC                     u5450:	
 10803  13BC  2BC6               	goto	l4080
 10804  13BD                     l4078:	
 10805  13BD  3001               	movlw	1
 10806  13BE  00A0               	movwf	atoi@neg
 10807  13BF  3000               	movlw	0
 10808  13C0  00A1               	movwf	atoi@neg+1
 10809  13C1                     l1082:	
 10810  13C1  3001               	movlw	1
 10811  13C2  07F6               	addwf	atoi@s,f
 10812  13C3  3000               	movlw	0
 10813  13C4  3DF7               	addwfc	atoi@s+1,f
 10814  13C5  2BFA               	goto	l4086
 10815  13C6                     l4080:	
 10816  13C6  0876               	movf	atoi@s,w
 10817  13C7  0084               	movwf	4
 10818  13C8  0877               	movf	atoi@s+1,w
 10819  13C9  0085               	movwf	5
 10820  13CA  0800               	movf	0,w	;code access
 10821  13CB  00F8               	movwf	??_atoi
 10822  13CC  01F9               	clrf	??_atoi+1
 10823                           
 10824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10825                           ; Switch size 1, requested type "simple"
 10826                           ; Number of cases is 1, Range of values is 0 to 0
 10827                           ; switch strategies available:
 10828                           ; Name         Instructions Cycles
 10829                           ; simple_byte            4     3 (average)
 10830                           ; direct_byte            8     6 (fixed)
 10831                           ; jumptable            260     6 (fixed)
 10832                           ;	Chosen strategy is simple_byte
 10833  13CD  0879               	movf	??_atoi+1,w
 10834  13CE  3A00               	xorlw	0	; case 0
 10835  13CF  1903               	skipnz
 10836  13D0  2BD2               	goto	l4680
 10837  13D1  2BFA               	goto	l4086
 10838  13D2                     l4680:	
 10839                           
 10840                           ; Switch size 1, requested type "simple"
 10841                           ; Number of cases is 2, Range of values is 43 to 45
 10842                           ; switch strategies available:
 10843                           ; Name         Instructions Cycles
 10844                           ; simple_byte            7     4 (average)
 10845                           ; direct_byte           15     9 (fixed)
 10846                           ; jumptable            263     9 (fixed)
 10847                           ;	Chosen strategy is simple_byte
 10848  13D2  0878               	movf	??_atoi,w
 10849  13D3  3A2B               	xorlw	43	; case 43
 10850  13D4  1903               	skipnz
 10851  13D5  2BC1               	goto	l1082
 10852  13D6  3A06               	xorlw	6	; case 45
 10853  13D7  1903               	skipnz
 10854  13D8  2BBD               	goto	l4078
 10855  13D9  2BFA               	goto	l4086
 10856  13DA                     l4082:	
 10857  13DA  0876               	movf	atoi@s,w
 10858  13DB  0084               	movwf	4
 10859  13DC  0877               	movf	atoi@s+1,w
 10860  13DD  0085               	movwf	5
 10861  13DE  0800               	movf	0,w	;code access
 10862  13DF  00F8               	movwf	??_atoi
 10863  13E0  0828               	movf	atoi@n+1,w
 10864  13E1  00F1               	movwf	___wmul@multiplier+1
 10865  13E2  0827               	movf	atoi@n,w
 10866  13E3  00F0               	movwf	___wmul@multiplier
 10867  13E4  300A               	movlw	10
 10868  13E5  00F2               	movwf	___wmul@multiplicand
 10869  13E6  3000               	movlw	0
 10870  13E7  00F3               	movwf	___wmul@multiplicand+1
 10871  13E8  319B  238D  3193   	fcall	___wmul
 10872  13EB  0871               	movf	?___wmul+1,w
 10873  13EC  00FA               	movwf	??_atoi+2
 10874  13ED  0878               	movf	??_atoi,w
 10875  13EE  0270               	subwf	?___wmul,w
 10876  13EF  00F9               	movwf	??_atoi+1
 10877  13F0  1C03               	skipc
 10878  13F1  03FA               	decf	??_atoi+2,f
 10879  13F2  0879               	movf	??_atoi+1,w
 10880  13F3  3E30               	addlw	48
 10881  13F4  0020               	movlb	0	; select bank0
 10882  13F5  00A7               	movwf	atoi@n
 10883  13F6  3000               	movlw	0
 10884  13F7  3D7A               	addwfc	??_atoi+2,w
 10885  13F8  00A8               	movwf	atoi@n+1
 10886  13F9  2BC1               	goto	l1082
 10887  13FA                     l4086:	
 10888  13FA  0876               	movf	atoi@s,w
 10889  13FB  0084               	movwf	4
 10890  13FC  0877               	movf	atoi@s+1,w
 10891  13FD  0085               	movwf	5
 10892  13FE  0800               	movf	0,w	;code access
 10893  13FF  3ED0               	addlw	208
 10894  1400  00F8               	movwf	??_atoi
 10895  1401  30FF               	movlw	255
 10896  1402  1803               	skipnc
 10897  1403  3000               	movlw	0
 10898  1404  00F9               	movwf	??_atoi+1
 10899  1405  3000               	movlw	0
 10900  1406  0279               	subwf	??_atoi+1,w
 10901  1407  300A               	movlw	10
 10902  1408  1903               	skipnz
 10903  1409  0278               	subwf	??_atoi,w
 10904  140A  1C03               	skipc
 10905  140B  2C0D               	goto	u5461
 10906  140C  2C0F               	goto	u5460
 10907  140D                     u5461:	
 10908  140D  3001               	movlw	1
 10909  140E  2C10               	goto	u5470
 10910  140F                     u5460:	
 10911  140F  3000               	movlw	0
 10912  1410                     u5470:	
 10913  1410  00FA               	movwf	??_atoi+2
 10914  1411  01FB               	clrf	??_atoi+3
 10915  1412  087A               	movf	??_atoi+2,w
 10916  1413  00A4               	movwf	_atoi$1157
 10917  1414  087B               	movf	??_atoi+3,w
 10918  1415  00A5               	movwf	_atoi$1157+1
 10919  1416                     l4090:	
 10920  1416  0824               	movf	_atoi$1157,w
 10921  1417  0425               	iorwf	_atoi$1157+1,w
 10922  1418  1D03               	btfss	3,2
 10923  1419  2C1B               	goto	u5481
 10924  141A  2C1C               	goto	u5480
 10925  141B                     u5481:	
 10926  141B  2BDA               	goto	l4082
 10927  141C                     u5480:	
 10928  141C                     l4092:	
 10929  141C  0820               	movf	atoi@neg,w
 10930  141D  0421               	iorwf	atoi@neg+1,w
 10931  141E  1D03               	btfss	3,2
 10932  141F  2C21               	goto	u5491
 10933  1420  2C22               	goto	u5490
 10934  1421                     u5491:	
 10935  1421  2C2E               	goto	l4096
 10936  1422                     u5490:	
 10937  1422                     l4094:	
 10938  1422  0927               	comf	atoi@n,w
 10939  1423  00F8               	movwf	??_atoi
 10940  1424  0928               	comf	atoi@n+1,w
 10941  1425  00F9               	movwf	??_atoi+1
 10942  1426  0AF8               	incf	??_atoi,f
 10943  1427  1903               	skipnz
 10944  1428  0AF9               	incf	??_atoi+1,f
 10945  1429  0878               	movf	??_atoi,w
 10946  142A  00F6               	movwf	?_atoi
 10947  142B  0879               	movf	??_atoi+1,w
 10948  142C  00F7               	movwf	?_atoi+1
 10949  142D  2C32               	goto	l1095
 10950  142E                     l4096:	
 10951  142E  0828               	movf	atoi@n+1,w
 10952  142F  00F7               	movwf	?_atoi+1
 10953  1430  0827               	movf	atoi@n,w
 10954  1431  00F6               	movwf	?_atoi
 10955  1432                     l1095:	
 10956  1432  0008               	return
 10957  1433                     __end_of_atoi:	
 10958                           
 10959                           	psect	text28
 10960  1BAC                     __ptext28:	
 10961 ;; *************** function _isspace *****************
 10962 ;; Defined at:
 10963 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 10964 ;; Parameters:    Size  Location     Type
 10965 ;;  c               2    0[COMMON] int 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;		None
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  2    0[COMMON] int 
 10970 ;; Registers used:
 10971 ;;		wreg, status,2, status,0
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10980 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10981 ;;Total ram usage:        5 bytes
 10982 ;; Hardware stack levels used:    1
 10983 ;; This function calls:
 10984 ;;		Nothing
 10985 ;; This function is called by:
 10986 ;;		_atoi
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990                           
 10991                           ;psect for function _isspace
 10992  1BAC                     _isspace:	
 10993  1BAC                     l3754:	
 10994                           ;incstack = 0
 10995                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10996                           
 10997  1BAC  01F4               	clrf	_isspace$1186
 10998  1BAD  0AF4               	incf	_isspace$1186,f
 10999  1BAE                     l3756:	
 11000  1BAE  3020               	movlw	32
 11001  1BAF  0670               	xorwf	isspace@c,w
 11002  1BB0  0471               	iorwf	isspace@c+1,w
 11003  1BB1  1903               	btfsc	3,2
 11004  1BB2  2BB4               	goto	u4891
 11005  1BB3  2BB5               	goto	u4890
 11006  1BB4                     u4891:	
 11007  1BB4  2BC5               	goto	l3762
 11008  1BB5                     u4890:	
 11009  1BB5                     l3758:	
 11010  1BB5  0870               	movf	isspace@c,w
 11011  1BB6  3EF7               	addlw	247
 11012  1BB7  00F2               	movwf	??_isspace
 11013  1BB8  30FF               	movlw	255
 11014  1BB9  3D71               	addwfc	isspace@c+1,w
 11015  1BBA  00F3               	movwf	??_isspace+1
 11016  1BBB  3000               	movlw	0
 11017  1BBC  0273               	subwf	??_isspace+1,w
 11018  1BBD  3005               	movlw	5
 11019  1BBE  1903               	skipnz
 11020  1BBF  0272               	subwf	??_isspace,w
 11021  1BC0  1C03               	skipc
 11022  1BC1  2BC3               	goto	u4901
 11023  1BC2  2BC4               	goto	u4900
 11024  1BC3                     u4901:	
 11025  1BC3  2BC5               	goto	l3762
 11026  1BC4                     u4900:	
 11027  1BC4                     l3760:	
 11028  1BC4  01F4               	clrf	_isspace$1186
 11029  1BC5                     l3762:	
 11030  1BC5  0874               	movf	_isspace$1186,w
 11031  1BC6  00F2               	movwf	??_isspace
 11032  1BC7  01F3               	clrf	??_isspace+1
 11033  1BC8  0872               	movf	??_isspace,w
 11034  1BC9  00F0               	movwf	?_isspace
 11035  1BCA  0873               	movf	??_isspace+1,w
 11036  1BCB  00F1               	movwf	?_isspace+1
 11037  1BCC                     l1119:	
 11038  1BCC  0008               	return
 11039  1BCD                     __end_of_isspace:	
 11040                           
 11041                           	psect	text29
 11042  1B0B                     __ptext29:	
 11043 ;; *************** function _isdigit *****************
 11044 ;; Defined at:
 11045 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 11046 ;; Parameters:    Size  Location     Type
 11047 ;;  c               2    0[COMMON] int 
 11048 ;; Auto vars:     Size  Location     Type
 11049 ;;		None
 11050 ;; Return value:  Size  Location     Type
 11051 ;;                  2    0[COMMON] int 
 11052 ;; Registers used:
 11053 ;;		wreg, status,2, status,0
 11054 ;; Tracked objects:
 11055 ;;		On entry : 0/0
 11056 ;;		On exit  : 0/0
 11057 ;;		Unchanged: 0/0
 11058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11063 ;;Total ram usage:        6 bytes
 11064 ;; Hardware stack levels used:    1
 11065 ;; This function calls:
 11066 ;;		Nothing
 11067 ;; This function is called by:
 11068 ;;		_vfpfcnvrt
 11069 ;;		_atoi
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           
 11074                           ;psect for function _isdigit
 11075  1B0B                     _isdigit:	
 11076  1B0B                     l3292:	
 11077                           ;incstack = 0
 11078                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11079                           
 11080  1B0B  0870               	movf	isdigit@c,w
 11081  1B0C  3ED0               	addlw	208
 11082  1B0D  00F2               	movwf	??_isdigit
 11083  1B0E  30FF               	movlw	255
 11084  1B0F  3D71               	addwfc	isdigit@c+1,w
 11085  1B10  00F3               	movwf	??_isdigit+1
 11086  1B11  3000               	movlw	0
 11087  1B12  0273               	subwf	??_isdigit+1,w
 11088  1B13  300A               	movlw	10
 11089  1B14  1903               	skipnz
 11090  1B15  0272               	subwf	??_isdigit,w
 11091  1B16  1C03               	skipc
 11092  1B17  2B19               	goto	u3901
 11093  1B18  2B1B               	goto	u3900
 11094  1B19                     u3901:	
 11095  1B19  3001               	movlw	1
 11096  1B1A  2B1C               	goto	u3910
 11097  1B1B                     u3900:	
 11098  1B1B  3000               	movlw	0
 11099  1B1C                     u3910:	
 11100  1B1C  00F4               	movwf	??_isdigit+2
 11101  1B1D  01F5               	clrf	??_isdigit+3
 11102  1B1E  0874               	movf	??_isdigit+2,w
 11103  1B1F  00F0               	movwf	?_isdigit
 11104  1B20  0875               	movf	??_isdigit+3,w
 11105  1B21  00F1               	movwf	?_isdigit+1
 11106  1B22                     l1111:	
 11107  1B22  0008               	return
 11108  1B23                     __end_of_isdigit:	
 11109                           
 11110                           	psect	text30
 11111  1B8D                     __ptext30:	
 11112 ;; *************** function ___wmul *****************
 11113 ;; Defined at:
 11114 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  multiplier      2    0[COMMON] unsigned int 
 11117 ;;  multiplicand    2    2[COMMON] unsigned int 
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;  product         2    4[COMMON] unsigned int 
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  2    0[COMMON] unsigned int 
 11122 ;; Registers used:
 11123 ;;		wreg, status,2, status,0
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11133 ;;Total ram usage:        6 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; This function calls:
 11136 ;;		Nothing
 11137 ;; This function is called by:
 11138 ;;		_atoi
 11139 ;; This function uses a non-reentrant model
 11140 ;;
 11141                           
 11142                           
 11143                           ;psect for function ___wmul
 11144  1B8D                     ___wmul:	
 11145  1B8D                     l3296:	
 11146                           ;incstack = 0
 11147                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11148                           
 11149  1B8D  01F4               	clrf	___wmul@product
 11150  1B8E  01F5               	clrf	___wmul@product+1
 11151  1B8F                     l3298:	
 11152  1B8F  1C70               	btfss	___wmul@multiplier,0
 11153  1B90  2B92               	goto	u3921
 11154  1B91  2B93               	goto	u3920
 11155  1B92                     u3921:	
 11156  1B92  2B97               	goto	l603
 11157  1B93                     u3920:	
 11158  1B93                     l3300:	
 11159  1B93  0872               	movf	___wmul@multiplicand,w
 11160  1B94  07F4               	addwf	___wmul@product,f
 11161  1B95  0873               	movf	___wmul@multiplicand+1,w
 11162  1B96  3DF5               	addwfc	___wmul@product+1,f
 11163  1B97                     l603:	
 11164  1B97  3001               	movlw	1
 11165  1B98                     u3935:	
 11166  1B98  35F2               	lslf	___wmul@multiplicand,f
 11167  1B99  0DF3               	rlf	___wmul@multiplicand+1,f
 11168  1B9A  0B89               	decfsz	9,f
 11169  1B9B  2B98               	goto	u3935
 11170  1B9C                     l3302:	
 11171  1B9C  3001               	movlw	1
 11172  1B9D                     u3945:	
 11173  1B9D  36F1               	lsrf	___wmul@multiplier+1,f
 11174  1B9E  0CF0               	rrf	___wmul@multiplier,f
 11175  1B9F  0B89               	decfsz	9,f
 11176  1BA0  2B9D               	goto	u3945
 11177  1BA1                     l3304:	
 11178  1BA1  0870               	movf	___wmul@multiplier,w
 11179  1BA2  0471               	iorwf	___wmul@multiplier+1,w
 11180  1BA3  1D03               	btfss	3,2
 11181  1BA4  2BA6               	goto	u3951
 11182  1BA5  2BA7               	goto	u3950
 11183  1BA6                     u3951:	
 11184  1BA6  2B8F               	goto	l3298
 11185  1BA7                     u3950:	
 11186  1BA7                     l3306:	
 11187  1BA7  0875               	movf	___wmul@product+1,w
 11188  1BA8  00F1               	movwf	?___wmul+1
 11189  1BA9  0874               	movf	___wmul@product,w
 11190  1BAA  00F0               	movwf	?___wmul
 11191  1BAB                     l605:	
 11192  1BAB  0008               	return
 11193  1BAC                     __end_of___wmul:	
 11194                           
 11195                           	psect	text31
 11196  1DCF                     __ptext31:	
 11197 ;; *************** function _read_U *****************
 11198 ;; Defined at:
 11199 ;;		line 127 in file "main.c"
 11200 ;; Parameters:    Size  Location     Type
 11201 ;;		None
 11202 ;; Auto vars:     Size  Location     Type
 11203 ;;		None
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  1    wreg      unsigned char 
 11206 ;; Registers used:
 11207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11215 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11216 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;Total ram usage:        6 bytes
 11218 ;; Hardware stack levels used:    1
 11219 ;; This function calls:
 11220 ;;		Nothing
 11221 ;; This function is called by:
 11222 ;;		_main
 11223 ;; This function uses a non-reentrant model
 11224 ;;
 11225                           
 11226                           
 11227                           ;psect for function _read_U
 11228  1DCF                     _read_U:	
 11229  1DCF                     l4476:	
 11230                           ;incstack = 0
 11231                           ; Regs used in _read_U: [wreg-fsr1h+status,2+status,0]
 11232                           
 11233                           
 11234                           ;main.c: 129:     ADCON0=0b00011001;
 11235  1DCF  3019               	movlw	25
 11236  1DD0  0021               	movlb	1	; select bank1
 11237  1DD1  009D               	movwf	29	;volatile
 11238                           
 11239                           ;main.c: 130:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 11240  1DD2  3042               	movlw	66
 11241  1DD3                     u6157:	
 11242  1DD3  0B89               	decfsz	9,f
 11243  1DD4  2DD3               	goto	u6157
 11244  1DD5  3200               	nop2
 11245  1DD6                     l4478:	
 11246                           
 11247                           ;main.c: 131:     ADCON0bits.GO=1;
 11248  1DD6  0021               	movlb	1	; select bank1
 11249  1DD7  149D               	bsf	29,1	;volatile
 11250  1DD8                     l95:	
 11251                           ;main.c: 132:     while(ADCON0bits.GO==1){};
 11252                           
 11253  1DD8  189D               	btfsc	29,1	;volatile
 11254  1DD9  2DDB               	goto	u5921
 11255  1DDA  2DDC               	goto	u5920
 11256  1DDB                     u5921:	
 11257  1DDB  2DD8               	goto	l95
 11258  1DDC                     u5920:	
 11259  1DDC                     l4480:	
 11260                           
 11261                           ;main.c: 133:     esantion_curent_u=ADRESH;
 11262  1DDC  081C               	movf	28,w	;volatile
 11263  1DDD  00F0               	movwf	??_read_U
 11264  1DDE  01F1               	clrf	??_read_U+1
 11265  1DDF  0870               	movf	??_read_U,w
 11266  1DE0  0022               	movlb	2	; select bank2
 11267  1DE1  00ED               	movwf	_esantion_curent_u^(0+256)
 11268  1DE2  0871               	movf	??_read_U+1,w
 11269  1DE3  00EE               	movwf	(_esantion_curent_u+1)^(0+256)
 11270  1DE4                     l4482:	
 11271                           
 11272                           ;main.c: 134:     esantioane_u[0]=(esantion_curent_u+esantioane_u[1]+esantioane_u[2]+esa
      +                          ntioane_u[3])/4;
 11273  1DE4  3006               	movlw	6
 11274  1DE5  3E59               	addlw	(low (_esantioane_u| (0+256)))& (0+255)
 11275  1DE6  0086               	movwf	6
 11276  1DE7  3001               	movlw	1	; select bank2/3
 11277  1DE8  0087               	movwf	7
 11278  1DE9  3004               	movlw	4
 11279  1DEA  3E59               	addlw	(low (_esantioane_u| (0+256)))& (0+255)
 11280  1DEB  0084               	movwf	4
 11281  1DEC  3001               	movlw	1	; select bank2/3
 11282  1DED  0085               	movwf	5
 11283  1DEE  3F00               	moviw [0]fsr0
 11284  1DEF  075B               	addwf	(_esantioane_u^(0+256)+2),w
 11285  1DF0  00F0               	movwf	??_read_U
 11286  1DF1  3F01               	moviw [1]fsr0
 11287  1DF2  3D5C               	addwfc	((_esantioane_u+1)^(0+256)+2),w
 11288  1DF3  00F1               	movwf	??_read_U+1
 11289  1DF4  3F40               	moviw [0]fsr1
 11290  1DF5  0770               	addwf	??_read_U,w
 11291  1DF6  00F2               	movwf	??_read_U+2
 11292  1DF7  3F41               	moviw [1]fsr1
 11293  1DF8  3D71               	addwfc	??_read_U+1,w
 11294  1DF9  00F3               	movwf	??_read_U+3
 11295  1DFA  086D               	movf	_esantion_curent_u^(0+256),w
 11296  1DFB  0772               	addwf	??_read_U+2,w
 11297  1DFC  00F4               	movwf	??_read_U+4
 11298  1DFD  086E               	movf	(_esantion_curent_u+1)^(0+256),w
 11299  1DFE  3D73               	addwfc	??_read_U+3,w
 11300  1DFF  00F5               	movwf	??_read_U+5
 11301  1E00  36F5               	lsrf	??_read_U+5,f
 11302  1E01  0CF4               	rrf	??_read_U+4,f
 11303  1E02  36F5               	lsrf	??_read_U+5,f
 11304  1E03  0CF4               	rrf	??_read_U+4,f
 11305  1E04  0874               	movf	??_read_U+4,w
 11306  1E05  00D9               	movwf	_esantioane_u^(0+256)
 11307  1E06  0875               	movf	??_read_U+5,w
 11308  1E07  00DA               	movwf	(_esantioane_u+1)^(0+256)
 11309  1E08                     l4484:	
 11310                           
 11311                           ;main.c: 135:     esantioane_u[3]=esantioane_u[2];
 11312  1E08  085E               	movf	((_esantioane_u+1)^(0+256)+4),w
 11313  1E09  00E0               	movwf	((_esantioane_u+1)^(0+256)+6)
 11314  1E0A  085D               	movf	(_esantioane_u^(0+256)+4),w
 11315  1E0B  00DF               	movwf	(_esantioane_u^(0+256)+6)
 11316  1E0C                     l4486:	
 11317                           
 11318                           ;main.c: 136:     esantioane_u[2]=esantioane_u[1];
 11319  1E0C  085C               	movf	((_esantioane_u+1)^(0+256)+2),w
 11320  1E0D  00DE               	movwf	((_esantioane_u+1)^(0+256)+4)
 11321  1E0E  085B               	movf	(_esantioane_u^(0+256)+2),w
 11322  1E0F  00DD               	movwf	(_esantioane_u^(0+256)+4)
 11323  1E10                     l4488:	
 11324                           
 11325                           ;main.c: 137:     esantioane_u[1]=esantioane_u[0];
 11326  1E10  085A               	movf	(_esantioane_u+1)^(0+256),w
 11327  1E11  00DC               	movwf	((_esantioane_u+1)^(0+256)+2)
 11328  1E12  0859               	movf	_esantioane_u^(0+256),w
 11329  1E13  00DB               	movwf	(_esantioane_u^(0+256)+2)
 11330  1E14                     l4490:	
 11331                           
 11332                           ;main.c: 139:     return esantioane_u[0];
 11333  1E14  0859               	movf	_esantioane_u^(0+256),w
 11334  1E15                     l98:	
 11335  1E15  0008               	return
 11336  1E16                     __end_of_read_U:	
 11337                           
 11338                           	psect	text32
 11339  1E5F                     __ptext32:	
 11340 ;; *************** function _read_Temp *****************
 11341 ;; Defined at:
 11342 ;;		line 112 in file "main.c"
 11343 ;; Parameters:    Size  Location     Type
 11344 ;;		None
 11345 ;; Auto vars:     Size  Location     Type
 11346 ;;		None
 11347 ;; Return value:  Size  Location     Type
 11348 ;;                  1    wreg      unsigned char 
 11349 ;; Registers used:
 11350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11351 ;; Tracked objects:
 11352 ;;		On entry : 0/0
 11353 ;;		On exit  : 0/0
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11358 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;Total ram usage:        6 bytes
 11361 ;; Hardware stack levels used:    1
 11362 ;; This function calls:
 11363 ;;		Nothing
 11364 ;; This function is called by:
 11365 ;;		_main
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           
 11370                           ;psect for function _read_Temp
 11371  1E5F                     _read_Temp:	
 11372  1E5F                     l4440:	
 11373                           ;incstack = 0
 11374                           ; Regs used in _read_Temp: [wreg-fsr1h+status,2+status,0]
 11375                           
 11376                           
 11377                           ;main.c: 114:     ADCON0=0b00001101;
 11378  1E5F  300D               	movlw	13
 11379  1E60  0021               	movlb	1	; select bank1
 11380  1E61  009D               	movwf	29	;volatile
 11381                           
 11382                           ;main.c: 115:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 11383  1E62  3042               	movlw	66
 11384  1E63                     u6167:	
 11385  1E63  0B89               	decfsz	9,f
 11386  1E64  2E63               	goto	u6167
 11387  1E65  3200               	nop2
 11388  1E66                     l4442:	
 11389                           
 11390                           ;main.c: 116:     ADCON0bits.GO=1;
 11391  1E66  0021               	movlb	1	; select bank1
 11392  1E67  149D               	bsf	29,1	;volatile
 11393  1E68                     l89:	
 11394                           ;main.c: 117:     while(ADCON0bits.GO==1){};
 11395                           
 11396  1E68  189D               	btfsc	29,1	;volatile
 11397  1E69  2E6B               	goto	u5901
 11398  1E6A  2E6C               	goto	u5900
 11399  1E6B                     u5901:	
 11400  1E6B  2E68               	goto	l89
 11401  1E6C                     u5900:	
 11402  1E6C                     l4444:	
 11403                           
 11404                           ;main.c: 118:     esantion_curent_t=ADRESH;
 11405  1E6C  081C               	movf	28,w	;volatile
 11406  1E6D  00F0               	movwf	??_read_Temp
 11407  1E6E  01F1               	clrf	??_read_Temp+1
 11408  1E6F  0870               	movf	??_read_Temp,w
 11409  1E70  0022               	movlb	2	; select bank2
 11410  1E71  00E9               	movwf	_esantion_curent_t^(0+256)
 11411  1E72  0871               	movf	??_read_Temp+1,w
 11412  1E73  00EA               	movwf	(_esantion_curent_t+1)^(0+256)
 11413  1E74                     l4446:	
 11414                           
 11415                           ;main.c: 119:     esantioane_t[0]=(esantion_curent_t+esantioane_t[1]+esantioane_t[2]+esa
      +                          ntioane_t[3])/4;
 11416  1E74  3006               	movlw	6
 11417  1E75  3EA0               	addlw	(low (_esantioane_t| (0+256)))& (0+255)
 11418  1E76  0086               	movwf	6
 11419  1E77  3001               	movlw	1	; select bank3/4
 11420  1E78  0087               	movwf	7
 11421  1E79  3004               	movlw	4
 11422  1E7A  3EA0               	addlw	(low (_esantioane_t| (0+256)))& (0+255)
 11423  1E7B  0084               	movwf	4
 11424  1E7C  3001               	movlw	1	; select bank3/4
 11425  1E7D  0085               	movwf	5
 11426  1E7E  3F00               	moviw [0]fsr0
 11427  1E7F  0023               	movlb	3	; select bank3
 11428  1E80  0722               	addwf	(_esantioane_t^(0+384)+2),w
 11429  1E81  00F0               	movwf	??_read_Temp
 11430  1E82  3F01               	moviw [1]fsr0
 11431  1E83  3D23               	addwfc	((_esantioane_t+1)^(0+384)+2),w
 11432  1E84  00F1               	movwf	??_read_Temp+1
 11433  1E85  3F40               	moviw [0]fsr1
 11434  1E86  0770               	addwf	??_read_Temp,w
 11435  1E87  00F2               	movwf	??_read_Temp+2
 11436  1E88  3F41               	moviw [1]fsr1
 11437  1E89  3D71               	addwfc	??_read_Temp+1,w
 11438  1E8A  00F3               	movwf	??_read_Temp+3
 11439  1E8B  0022               	movlb	2	; select bank2
 11440  1E8C  0869               	movf	_esantion_curent_t^(0+256),w
 11441  1E8D  0772               	addwf	??_read_Temp+2,w
 11442  1E8E  00F4               	movwf	??_read_Temp+4
 11443  1E8F  086A               	movf	(_esantion_curent_t+1)^(0+256),w
 11444  1E90  3D73               	addwfc	??_read_Temp+3,w
 11445  1E91  00F5               	movwf	??_read_Temp+5
 11446  1E92  36F5               	lsrf	??_read_Temp+5,f
 11447  1E93  0CF4               	rrf	??_read_Temp+4,f
 11448  1E94  36F5               	lsrf	??_read_Temp+5,f
 11449  1E95  0CF4               	rrf	??_read_Temp+4,f
 11450  1E96  0874               	movf	??_read_Temp+4,w
 11451  1E97  0023               	movlb	3	; select bank3
 11452  1E98  00A0               	movwf	_esantioane_t^(0+384)
 11453  1E99  0875               	movf	??_read_Temp+5,w
 11454  1E9A  00A1               	movwf	(_esantioane_t+1)^(0+384)
 11455  1E9B                     l4448:	
 11456                           
 11457                           ;main.c: 120:     esantioane_t[3]=esantioane_t[2];
 11458  1E9B  0825               	movf	((_esantioane_t+1)^(0+384)+4),w
 11459  1E9C  00A7               	movwf	((_esantioane_t+1)^(0+384)+6)
 11460  1E9D  0824               	movf	(_esantioane_t^(0+384)+4),w
 11461  1E9E  00A6               	movwf	(_esantioane_t^(0+384)+6)
 11462  1E9F                     l4450:	
 11463                           
 11464                           ;main.c: 121:     esantioane_t[2]=esantioane_t[1];
 11465  1E9F  0823               	movf	((_esantioane_t+1)^(0+384)+2),w
 11466  1EA0  00A5               	movwf	((_esantioane_t+1)^(0+384)+4)
 11467  1EA1  0822               	movf	(_esantioane_t^(0+384)+2),w
 11468  1EA2  00A4               	movwf	(_esantioane_t^(0+384)+4)
 11469  1EA3                     l4452:	
 11470                           
 11471                           ;main.c: 122:     esantioane_t[1]=esantioane_t[0];
 11472  1EA3  0821               	movf	(_esantioane_t+1)^(0+384),w
 11473  1EA4  00A3               	movwf	((_esantioane_t+1)^(0+384)+2)
 11474  1EA5  0820               	movf	_esantioane_t^(0+384),w
 11475  1EA6  00A2               	movwf	(_esantioane_t^(0+384)+2)
 11476  1EA7                     l4454:	
 11477                           
 11478                           ;main.c: 124:     return esantioane_t[0];
 11479  1EA7  0820               	movf	_esantioane_t^(0+384),w
 11480  1EA8                     l92:	
 11481  1EA8  0008               	return
 11482  1EA9                     __end_of_read_Temp:	
 11483                           
 11484                           	psect	text33
 11485  1D88                     __ptext33:	
 11486 ;; *************** function _read_I *****************
 11487 ;; Defined at:
 11488 ;;		line 142 in file "main.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;		None
 11491 ;; Auto vars:     Size  Location     Type
 11492 ;;		None
 11493 ;; Return value:  Size  Location     Type
 11494 ;;                  1    wreg      unsigned char 
 11495 ;; Registers used:
 11496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11497 ;; Tracked objects:
 11498 ;;		On entry : 0/0
 11499 ;;		On exit  : 0/0
 11500 ;;		Unchanged: 0/0
 11501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11505 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11506 ;;Total ram usage:        6 bytes
 11507 ;; Hardware stack levels used:    1
 11508 ;; This function calls:
 11509 ;;		Nothing
 11510 ;; This function is called by:
 11511 ;;		_main
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           
 11516                           ;psect for function _read_I
 11517  1D88                     _read_I:	
 11518  1D88                     l4458:	
 11519                           ;incstack = 0
 11520                           ; Regs used in _read_I: [wreg-fsr1h+status,2+status,0]
 11521                           
 11522                           
 11523                           ;main.c: 144:     ADCON0=0b00011101;
 11524  1D88  301D               	movlw	29
 11525  1D89  0021               	movlb	1	; select bank1
 11526  1D8A  009D               	movwf	29	;volatile
 11527                           
 11528                           ;main.c: 145:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 11529  1D8B  3042               	movlw	66
 11530  1D8C                     u6177:	
 11531  1D8C  0B89               	decfsz	9,f
 11532  1D8D  2D8C               	goto	u6177
 11533  1D8E  3200               	nop2
 11534  1D8F                     l4460:	
 11535                           
 11536                           ;main.c: 146:     ADCON0bits.GO=1;
 11537  1D8F  0021               	movlb	1	; select bank1
 11538  1D90  149D               	bsf	29,1	;volatile
 11539  1D91                     l101:	
 11540                           ;main.c: 147:     while(ADCON0bits.GO==1){};
 11541                           
 11542  1D91  189D               	btfsc	29,1	;volatile
 11543  1D92  2D94               	goto	u5911
 11544  1D93  2D95               	goto	u5910
 11545  1D94                     u5911:	
 11546  1D94  2D91               	goto	l101
 11547  1D95                     u5910:	
 11548  1D95                     l4462:	
 11549                           
 11550                           ;main.c: 148:     esantion_curent_i=ADRESH;
 11551  1D95  081C               	movf	28,w	;volatile
 11552  1D96  00F0               	movwf	??_read_I
 11553  1D97  01F1               	clrf	??_read_I+1
 11554  1D98  0870               	movf	??_read_I,w
 11555  1D99  0022               	movlb	2	; select bank2
 11556  1D9A  00EB               	movwf	_esantion_curent_i^(0+256)
 11557  1D9B  0871               	movf	??_read_I+1,w
 11558  1D9C  00EC               	movwf	(_esantion_curent_i+1)^(0+256)
 11559  1D9D                     l4464:	
 11560                           
 11561                           ;main.c: 149:     esantioane_i[0]=(esantion_curent_i+esantioane_i[1]+esantioane_i[2]+esa
      +                          ntioane_i[3])/4;
 11562  1D9D  3006               	movlw	6
 11563  1D9E  3E51               	addlw	(low (_esantioane_i| (0+256)))& (0+255)
 11564  1D9F  0086               	movwf	6
 11565  1DA0  3001               	movlw	1	; select bank2/3
 11566  1DA1  0087               	movwf	7
 11567  1DA2  3004               	movlw	4
 11568  1DA3  3E51               	addlw	(low (_esantioane_i| (0+256)))& (0+255)
 11569  1DA4  0084               	movwf	4
 11570  1DA5  3001               	movlw	1	; select bank2/3
 11571  1DA6  0085               	movwf	5
 11572  1DA7  3F00               	moviw [0]fsr0
 11573  1DA8  0753               	addwf	(_esantioane_i^(0+256)+2),w
 11574  1DA9  00F0               	movwf	??_read_I
 11575  1DAA  3F01               	moviw [1]fsr0
 11576  1DAB  3D54               	addwfc	((_esantioane_i+1)^(0+256)+2),w
 11577  1DAC  00F1               	movwf	??_read_I+1
 11578  1DAD  3F40               	moviw [0]fsr1
 11579  1DAE  0770               	addwf	??_read_I,w
 11580  1DAF  00F2               	movwf	??_read_I+2
 11581  1DB0  3F41               	moviw [1]fsr1
 11582  1DB1  3D71               	addwfc	??_read_I+1,w
 11583  1DB2  00F3               	movwf	??_read_I+3
 11584  1DB3  086B               	movf	_esantion_curent_i^(0+256),w
 11585  1DB4  0772               	addwf	??_read_I+2,w
 11586  1DB5  00F4               	movwf	??_read_I+4
 11587  1DB6  086C               	movf	(_esantion_curent_i+1)^(0+256),w
 11588  1DB7  3D73               	addwfc	??_read_I+3,w
 11589  1DB8  00F5               	movwf	??_read_I+5
 11590  1DB9  36F5               	lsrf	??_read_I+5,f
 11591  1DBA  0CF4               	rrf	??_read_I+4,f
 11592  1DBB  36F5               	lsrf	??_read_I+5,f
 11593  1DBC  0CF4               	rrf	??_read_I+4,f
 11594  1DBD  0874               	movf	??_read_I+4,w
 11595  1DBE  00D1               	movwf	_esantioane_i^(0+256)
 11596  1DBF  0875               	movf	??_read_I+5,w
 11597  1DC0  00D2               	movwf	(_esantioane_i+1)^(0+256)
 11598  1DC1                     l4466:	
 11599                           
 11600                           ;main.c: 150:     esantioane_i[3]=esantioane_i[2];
 11601  1DC1  0856               	movf	((_esantioane_i+1)^(0+256)+4),w
 11602  1DC2  00D8               	movwf	((_esantioane_i+1)^(0+256)+6)
 11603  1DC3  0855               	movf	(_esantioane_i^(0+256)+4),w
 11604  1DC4  00D7               	movwf	(_esantioane_i^(0+256)+6)
 11605  1DC5                     l4468:	
 11606                           
 11607                           ;main.c: 151:     esantioane_i[2]=esantioane_i[1];
 11608  1DC5  0854               	movf	((_esantioane_i+1)^(0+256)+2),w
 11609  1DC6  00D6               	movwf	((_esantioane_i+1)^(0+256)+4)
 11610  1DC7  0853               	movf	(_esantioane_i^(0+256)+2),w
 11611  1DC8  00D5               	movwf	(_esantioane_i^(0+256)+4)
 11612  1DC9                     l4470:	
 11613                           
 11614                           ;main.c: 152:     esantioane_i[1]=esantioane_i[0];
 11615  1DC9  0852               	movf	(_esantioane_i+1)^(0+256),w
 11616  1DCA  00D4               	movwf	((_esantioane_i+1)^(0+256)+2)
 11617  1DCB  0851               	movf	_esantioane_i^(0+256),w
 11618  1DCC  00D3               	movwf	(_esantioane_i^(0+256)+2)
 11619  1DCD                     l4472:	
 11620                           
 11621                           ;main.c: 154:     return esantioane_i[0];
 11622  1DCD  0851               	movf	_esantioane_i^(0+256),w
 11623  1DCE                     l104:	
 11624  1DCE  0008               	return
 11625  1DCF                     __end_of_read_I:	
 11626                           
 11627                           	psect	text34
 11628  1AF5                     __ptext34:	
 11629 ;; *************** function _pwm_config *****************
 11630 ;; Defined at:
 11631 ;;		line 68 in file "config.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;		None
 11634 ;; Auto vars:     Size  Location     Type
 11635 ;;		None
 11636 ;; Return value:  Size  Location     Type
 11637 ;;                  1    wreg      void 
 11638 ;; Registers used:
 11639 ;;		wreg, status,2
 11640 ;; Tracked objects:
 11641 ;;		On entry : 0/0
 11642 ;;		On exit  : 0/0
 11643 ;;		Unchanged: 0/0
 11644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11649 ;;Total ram usage:        0 bytes
 11650 ;; Hardware stack levels used:    1
 11651 ;; This function calls:
 11652 ;;		Nothing
 11653 ;; This function is called by:
 11654 ;;		_main
 11655 ;; This function uses a non-reentrant model
 11656 ;;
 11657                           
 11658                           
 11659                           ;psect for function _pwm_config
 11660  1AF5                     _pwm_config:	
 11661  1AF5                     l4422:	
 11662                           ;incstack = 0
 11663                           ; Regs used in _pwm_config: [wreg+status,2]
 11664                           
 11665                           
 11666                           ;config.c: 70:     TRISAbits.TRISA5 = 1;
 11667  1AF5  0021               	movlb	1	; select bank1
 11668  1AF6  168C               	bsf	12,5	;volatile
 11669                           
 11670                           ;config.c: 71:     PIR1bits.TMR2IF = 0;
 11671  1AF7  0020               	movlb	0	; select bank0
 11672  1AF8  1091               	bcf	17,1	;volatile
 11673                           
 11674                           ;config.c: 72:     APFCON1bits.CCP2SEL = 1;
 11675  1AF9  0022               	movlb	2	; select bank2
 11676  1AFA  141E               	bsf	30,0	;volatile
 11677  1AFB                     l4424:	
 11678                           
 11679                           ;config.c: 73:     CCP2CON=0b00001100;
 11680  1AFB  300C               	movlw	12
 11681  1AFC  0025               	movlb	5	; select bank5
 11682  1AFD  009A               	movwf	26	;volatile
 11683  1AFE                     l4426:	
 11684                           
 11685                           ;config.c: 74:     CCPTMRS = 0b00000000;
 11686  1AFE  019E               	clrf	30	;volatile
 11687  1AFF                     l4428:	
 11688                           
 11689                           ;config.c: 75:     CCP2AS=0b00000000;
 11690  1AFF  019C               	clrf	28	;volatile
 11691                           
 11692                           ;config.c: 76:     PR2=0x65;
 11693  1B00  3065               	movlw	101
 11694  1B01  0020               	movlb	0	; select bank0
 11695  1B02  009B               	movwf	27	;volatile
 11696  1B03                     l4430:	
 11697                           
 11698                           ;config.c: 77:     CCPR2L=0;
 11699  1B03  0025               	movlb	5	; select bank5
 11700  1B04  0198               	clrf	24	;volatile
 11701  1B05                     l4432:	
 11702                           
 11703                           ;config.c: 78:     T2CON=0b00000100;
 11704  1B05  3004               	movlw	4
 11705  1B06  0020               	movlb	0	; select bank0
 11706  1B07  009C               	movwf	28	;volatile
 11707  1B08                     l4434:	
 11708                           
 11709                           ;config.c: 79:     TRISAbits.TRISA5 = 0;
 11710  1B08  0021               	movlb	1	; select bank1
 11711  1B09  128C               	bcf	12,5	;volatile
 11712  1B0A                     l172:	
 11713  1B0A  0008               	return
 11714  1B0B                     __end_of_pwm_config:	
 11715                           
 11716                           	psect	text35
 11717  109E                     __ptext35:	
 11718 ;; *************** function _config *****************
 11719 ;; Defined at:
 11720 ;;		line 13 in file "config.c"
 11721 ;; Parameters:    Size  Location     Type
 11722 ;;		None
 11723 ;; Auto vars:     Size  Location     Type
 11724 ;;		None
 11725 ;; Return value:  Size  Location     Type
 11726 ;;                  1    wreg      void 
 11727 ;; Registers used:
 11728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11729 ;; Tracked objects:
 11730 ;;		On entry : 0/0
 11731 ;;		On exit  : 0/0
 11732 ;;		Unchanged: 0/0
 11733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11738 ;;Total ram usage:        2 bytes
 11739 ;; Hardware stack levels used:    1
 11740 ;; Hardware stack levels required when called:    5
 11741 ;; This function calls:
 11742 ;;		_Cursor_Off
 11743 ;;		_I2C_Master_Init
 11744 ;;		_Lcd_Clear
 11745 ;;		_Lcd_Init
 11746 ;;		_Lcd_Set_Cursor
 11747 ;;		_Lcd_Write_String
 11748 ;; This function is called by:
 11749 ;;		_main
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           
 11754                           ;psect for function _config
 11755  109E                     _config:	
 11756  109E                     l4382:	
 11757                           ;incstack = 0
 11758                           ; Regs used in _config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11759                           
 11760                           
 11761                           ;config.c: 15:     OSCCONbits.IRCF0=0;
 11762  109E  0021               	movlb	1	; select bank1
 11763  109F  1199               	bcf	25,3	;volatile
 11764                           
 11765                           ;config.c: 16:     OSCCONbits.IRCF1=1;
 11766  10A0  1619               	bsf	25,4	;volatile
 11767                           
 11768                           ;config.c: 17:     OSCCONbits.IRCF2=1;
 11769  10A1  1699               	bsf	25,5	;volatile
 11770                           
 11771                           ;config.c: 18:     OSCCONbits.IRCF3=1;
 11772  10A2  1719               	bsf	25,6	;volatile
 11773                           
 11774                           ;config.c: 20:     INTCONbits.GIE = 0;
 11775  10A3  138B               	bcf	11,7	;volatile
 11776                           
 11777                           ;config.c: 21:     INTCONbits.INTE = 0;
 11778  10A4  120B               	bcf	11,4	;volatile
 11779                           
 11780                           ;config.c: 22:     INTCONbits.PEIE = 0;
 11781  10A5  130B               	bcf	11,6	;volatile
 11782  10A6                     l4384:	
 11783                           
 11784                           ;config.c: 24:     ANSELA=0X00;
 11785  10A6  0023               	movlb	3	; select bank3
 11786  10A7  018C               	clrf	12	;volatile
 11787                           
 11788                           ;config.c: 25:     ANSELC=0X00;
 11789  10A8  018E               	clrf	14	;volatile
 11790                           
 11791                           ;config.c: 26:     TRISA=0X00;
 11792  10A9  0021               	movlb	1	; select bank1
 11793  10AA  018C               	clrf	12	;volatile
 11794                           
 11795                           ;config.c: 27:     TRISC=0X00;
 11796  10AB  018E               	clrf	14	;volatile
 11797                           
 11798                           ;config.c: 28:     PORTA=0X00;
 11799  10AC  0020               	movlb	0	; select bank0
 11800  10AD  018C               	clrf	12	;volatile
 11801                           
 11802                           ;config.c: 29:     PORTC=0X00;
 11803  10AE  018E               	clrf	14	;volatile
 11804                           
 11805                           ;config.c: 30:     LATA=0X00;
 11806  10AF  0022               	movlb	2	; select bank2
 11807  10B0  018C               	clrf	12	;volatile
 11808                           
 11809                           ;config.c: 31:     LATC=0X00;
 11810  10B1  018E               	clrf	14	;volatile
 11811  10B2                     l4386:	
 11812                           
 11813                           ;config.c: 34:     TRISAbits.TRISA0 = 1;
 11814  10B2  0021               	movlb	1	; select bank1
 11815  10B3  140C               	bsf	12,0	;volatile
 11816  10B4                     l4388:	
 11817                           
 11818                           ;config.c: 35:     TRISAbits.TRISA1 = 1;
 11819  10B4  148C               	bsf	12,1	;volatile
 11820  10B5                     l4390:	
 11821                           
 11822                           ;config.c: 36:     TRISAbits.TRISA2 = 1;
 11823  10B5  150C               	bsf	12,2	;volatile
 11824  10B6                     l4392:	
 11825                           
 11826                           ;config.c: 39:     TRISCbits.TRISC4 = 0;
 11827  10B6  120E               	bcf	14,4	;volatile
 11828  10B7                     l4394:	
 11829                           
 11830                           ;config.c: 40:     TRISCbits.TRISC5 = 0;
 11831  10B7  128E               	bcf	14,5	;volatile
 11832  10B8                     l4396:	
 11833                           
 11834                           ;config.c: 45:     TRISAbits.TRISA4 = 1;
 11835  10B8  160C               	bsf	12,4	;volatile
 11836  10B9                     l4398:	
 11837                           
 11838                           ;config.c: 46:     TRISCbits.TRISC2 = 1;
 11839  10B9  150E               	bsf	14,2	;volatile
 11840  10BA                     l4400:	
 11841                           
 11842                           ;config.c: 47:     TRISCbits.TRISC3 = 1;
 11843  10BA  158E               	bsf	14,3	;volatile
 11844  10BB                     l4402:	
 11845                           
 11846                           ;config.c: 50:     TRISCbits.TRISC0=1;
 11847  10BB  140E               	bsf	14,0	;volatile
 11848  10BC                     l4404:	
 11849                           
 11850                           ;config.c: 51:     TRISCbits.TRISC1=1;
 11851  10BC  148E               	bsf	14,1	;volatile
 11852  10BD                     l4406:	
 11853                           
 11854                           ;config.c: 52:     I2C_Master_Init(100000);
 11855  10BD  3000               	movlw	0
 11856  10BE  0020               	movlb	0	; select bank0
 11857  10BF  00A3               	movwf	I2C_Master_Init@c+3
 11858  10C0  3001               	movlw	1
 11859  10C1  00A2               	movwf	I2C_Master_Init@c+2
 11860  10C2  3086               	movlw	134
 11861  10C3  00A1               	movwf	I2C_Master_Init@c+1
 11862  10C4  30A0               	movlw	160
 11863  10C5  00A0               	movwf	I2C_Master_Init@c
 11864  10C6  319C  24B2  3190   	fcall	_I2C_Master_Init
 11865  10C9                     l4408:	
 11866                           
 11867                           ;config.c: 53:     _delay((unsigned long)((100)*(8000000/4000.0)));
 11868  10C9  3002               	movlw	2
 11869  10CA  0020               	movlb	0	; select bank0
 11870  10CB  00A9               	movwf	??_config+1
 11871  10CC  3004               	movlw	4
 11872  10CD  00A8               	movwf	??_config
 11873  10CE  30BA               	movlw	186
 11874  10CF                     u6187:	
 11875  10CF  0B89               	decfsz	9,f
 11876  10D0  28CF               	goto	u6187
 11877  10D1  0BA8               	decfsz	??_config,f
 11878  10D2  28CF               	goto	u6187
 11879  10D3  0BA9               	decfsz	??_config+1,f
 11880  10D4  28CF               	goto	u6187
 11881  10D5  0000               	nop
 11882  10D6                     l4410:	
 11883                           
 11884                           ;config.c: 54:     Lcd_Init();
 11885  10D6  3190  2000  3190   	fcall	_Lcd_Init
 11886  10D9                     l4412:	
 11887                           
 11888                           ;config.c: 55:     Lcd_Clear();
 11889  10D9  319A  22D3  3190   	fcall	_Lcd_Clear
 11890  10DC                     l4414:	
 11891                           
 11892                           ;config.c: 56:     Cursor_Off();
 11893  10DC  319A  22CA  3190   	fcall	_Cursor_Off
 11894  10DF                     l4416:	
 11895                           
 11896                           ;config.c: 57:     Lcd_Set_Cursor(1,1);
 11897  10DF  01FB               	clrf	Lcd_Set_Cursor@b
 11898  10E0  0AFB               	incf	Lcd_Set_Cursor@b,f
 11899  10E1  3001               	movlw	1
 11900  10E2  319E  2616  3190   	fcall	_Lcd_Set_Cursor
 11901  10E5                     l4418:	
 11902                           
 11903                           ;config.c: 58:     Lcd_Write_String("Paul Iorga");
 11904  10E5  3000               	movlw	low (STR_7| (0+32768))
 11905  10E6  00FA               	movwf	Lcd_Write_String@a
 11906  10E7  3098               	movlw	high (STR_7| (0+32768))
 11907  10E8  00FB               	movwf	Lcd_Write_String@a+1
 11908  10E9  319B  236E  3190   	fcall	_Lcd_Write_String
 11909  10EC                     l4420:	
 11910                           
 11911                           ;config.c: 59:     _delay((unsigned long)((2000)*(8000000/4000.0)));
 11912  10EC  3015               	movlw	21
 11913  10ED  0020               	movlb	0	; select bank0
 11914  10EE  00A9               	movwf	??_config+1
 11915  10EF  304B               	movlw	75
 11916  10F0  00A8               	movwf	??_config
 11917  10F1  30BE               	movlw	190
 11918  10F2                     u6197:	
 11919  10F2  0B89               	decfsz	9,f
 11920  10F3  28F2               	goto	u6197
 11921  10F4  0BA8               	decfsz	??_config,f
 11922  10F5  28F2               	goto	u6197
 11923  10F6  0BA9               	decfsz	??_config+1,f
 11924  10F7  28F2               	goto	u6197
 11925  10F8  0000               	nop
 11926  10F9                     l169:	
 11927  10F9  0008               	return
 11928  10FA                     __end_of_config:	
 11929                           
 11930                           	psect	text36
 11931  1B6E                     __ptext36:	
 11932 ;; *************** function _Lcd_Write_String *****************
 11933 ;; Defined at:
 11934 ;;		line 114 in file "i2c_display.c"
 11935 ;; Parameters:    Size  Location     Type
 11936 ;;  a               2   10[COMMON] PTR unsigned char 
 11937 ;;		 -> STR_7(11), STR_6(3), STR_4(3), STR_2(3), 
 11938 ;;		 -> temp(5), 
 11939 ;; Auto vars:     Size  Location     Type
 11940 ;;  i               2    0[BANK0 ] int 
 11941 ;; Return value:  Size  Location     Type
 11942 ;;                  1    wreg      void 
 11943 ;; Registers used:
 11944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11945 ;; Tracked objects:
 11946 ;;		On entry : 0/0
 11947 ;;		On exit  : 0/0
 11948 ;;		Unchanged: 0/0
 11949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11951 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;Total ram usage:        5 bytes
 11955 ;; Hardware stack levels used:    1
 11956 ;; Hardware stack levels required when called:    4
 11957 ;; This function calls:
 11958 ;;		_Lcd_Write_Char
 11959 ;; This function is called by:
 11960 ;;		_main
 11961 ;;		_config
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           
 11966                           ;psect for function _Lcd_Write_String
 11967  1B6E                     _Lcd_Write_String:	
 11968  1B6E                     l4338:	
 11969                           ;incstack = 0
 11970                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11971                           
 11972                           
 11973                           ;i2c_display.c: 114: void Lcd_Write_String(char *a);i2c_display.c: 115: {;i2c_display.c:
      +                           116:  int i;;i2c_display.c: 117:  for(i=0;a[i]!='\0';i++)
 11974  1B6E  0020               	movlb	0	; select bank0
 11975  1B6F  01A0               	clrf	Lcd_Write_String@i
 11976  1B70  01A1               	clrf	Lcd_Write_String@i+1
 11977  1B71  2B81               	goto	l4344
 11978  1B72                     l4340:	
 11979                           
 11980                           ;i2c_display.c: 118:     Lcd_Write_Char(a[i]);
 11981  1B72  087A               	movf	Lcd_Write_String@a,w
 11982  1B73  0720               	addwf	Lcd_Write_String@i,w
 11983  1B74  0084               	movwf	4
 11984  1B75  087B               	movf	Lcd_Write_String@a+1,w
 11985  1B76  3D21               	addwfc	Lcd_Write_String@i+1,w
 11986  1B77  0085               	movwf	5
 11987  1B78  0800               	movf	0,w	;code access
 11988  1B79  319D  2549  319B   	fcall	_Lcd_Write_Char
 11989  1B7C                     l4342:	
 11990  1B7C  3001               	movlw	1
 11991  1B7D  0020               	movlb	0	; select bank0
 11992  1B7E  07A0               	addwf	Lcd_Write_String@i,f
 11993  1B7F  3000               	movlw	0
 11994  1B80  3DA1               	addwfc	Lcd_Write_String@i+1,f
 11995  1B81                     l4344:	
 11996  1B81  087A               	movf	Lcd_Write_String@a,w
 11997  1B82  0720               	addwf	Lcd_Write_String@i,w
 11998  1B83  0084               	movwf	4
 11999  1B84  087B               	movf	Lcd_Write_String@a+1,w
 12000  1B85  3D21               	addwfc	Lcd_Write_String@i+1,w
 12001  1B86  0085               	movwf	5
 12002  1B87  0012               	moviw fsr0++
 12003  1B88  1D03               	btfss	3,2
 12004  1B89  2B8B               	goto	u5871
 12005  1B8A  2B8C               	goto	u5870
 12006  1B8B                     u5871:	
 12007  1B8B  2B72               	goto	l4340
 12008  1B8C                     u5870:	
 12009  1B8C                     l230:	
 12010  1B8C  0008               	return
 12011  1B8D                     __end_of_Lcd_Write_String:	
 12012                           
 12013                           	psect	text37
 12014  1D49                     __ptext37:	
 12015 ;; *************** function _Lcd_Write_Char *****************
 12016 ;; Defined at:
 12017 ;;		line 90 in file "i2c_display.c"
 12018 ;; Parameters:    Size  Location     Type
 12019 ;;  a               1    wreg     unsigned char 
 12020 ;; Auto vars:     Size  Location     Type
 12021 ;;  a               1    7[COMMON] unsigned char 
 12022 ;;  temp            1    9[COMMON] unsigned char 
 12023 ;;  y               1    8[COMMON] unsigned char 
 12024 ;; Return value:  Size  Location     Type
 12025 ;;                  1    wreg      void 
 12026 ;; Registers used:
 12027 ;;		wreg, status,2, status,0, pclath, cstack
 12028 ;; Tracked objects:
 12029 ;;		On entry : 0/0
 12030 ;;		On exit  : 0/0
 12031 ;;		Unchanged: 0/0
 12032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;Total ram usage:        5 bytes
 12038 ;; Hardware stack levels used:    1
 12039 ;; Hardware stack levels required when called:    3
 12040 ;; This function calls:
 12041 ;;		_Lcd_Port
 12042 ;; This function is called by:
 12043 ;;		_Lcd_Write_String
 12044 ;; This function uses a non-reentrant model
 12045 ;;
 12046                           
 12047                           
 12048                           ;psect for function _Lcd_Write_Char
 12049  1D49                     _Lcd_Write_Char:	
 12050                           
 12051                           ;incstack = 0
 12052                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 12053                           ;Lcd_Write_Char@a stored from wreg
 12054  1D49  00F7               	movwf	Lcd_Write_Char@a
 12055  1D4A                     l4152:	
 12056                           
 12057                           ;i2c_display.c: 90: void Lcd_Write_Char(char a);i2c_display.c: 91: {;i2c_display.c: 92: 
      +                             char temp,y;;i2c_display.c: 93:    temp = a&0x0F;
 12058  1D4A  0877               	movf	Lcd_Write_Char@a,w
 12059  1D4B  390F               	andlw	15
 12060  1D4C  00F5               	movwf	??_Lcd_Write_Char
 12061  1D4D  0875               	movf	??_Lcd_Write_Char,w
 12062  1D4E  00F9               	movwf	Lcd_Write_Char@temp
 12063  1D4F                     l4154:	
 12064                           
 12065                           ;i2c_display.c: 94:    temp=temp<<4;
 12066  1D4F  0879               	movf	Lcd_Write_Char@temp,w
 12067  1D50  00F5               	movwf	??_Lcd_Write_Char
 12068  1D51  3003               	movlw	3
 12069  1D52                     u5565:	
 12070  1D52  35F5               	lslf	??_Lcd_Write_Char,f
 12071  1D53  3EFF               	addlw	-1
 12072  1D54  1D03               	skipz
 12073  1D55  2D52               	goto	u5565
 12074  1D56  3575               	lslf	??_Lcd_Write_Char,w
 12075  1D57  00F6               	movwf	??_Lcd_Write_Char+1
 12076  1D58  0876               	movf	??_Lcd_Write_Char+1,w
 12077  1D59  00F9               	movwf	Lcd_Write_Char@temp
 12078  1D5A                     l4156:	
 12079                           
 12080                           ;i2c_display.c: 95:    y = a&0xF0;
 12081  1D5A  0877               	movf	Lcd_Write_Char@a,w
 12082  1D5B  39F0               	andlw	240
 12083  1D5C  00F5               	movwf	??_Lcd_Write_Char
 12084  1D5D  0875               	movf	??_Lcd_Write_Char,w
 12085  1D5E  00F8               	movwf	Lcd_Write_Char@y
 12086  1D5F                     l4158:	
 12087                           
 12088                           ;i2c_display.c: 98:    Lcd_Port(0x00 | 0x01 | 0x00 | 0x00);
 12089  1D5F  3001               	movlw	1
 12090  1D60  319B  233B  319D   	fcall	_Lcd_Port
 12091  1D63                     l4160:	
 12092                           
 12093                           ;i2c_display.c: 99:    Lcd_Port(y);
 12094  1D63  0878               	movf	Lcd_Write_Char@y,w
 12095  1D64  319B  233B  319D   	fcall	_Lcd_Port
 12096  1D67                     l4162:	
 12097                           
 12098                           ;i2c_display.c: 101:    Lcd_Port(y | 0x01 | 0x04 | 0x00);
 12099  1D67  0878               	movf	Lcd_Write_Char@y,w
 12100  1D68  3805               	iorlw	5
 12101  1D69  319B  233B  319D   	fcall	_Lcd_Port
 12102  1D6C                     l4164:	
 12103                           
 12104                           ;i2c_display.c: 102:    _delay((unsigned long)((40)*(8000000/4000000.0)));
 12105  1D6C  301A               	movlw	26
 12106  1D6D                     u6207:	
 12107  1D6D  0B89               	decfsz	9,f
 12108  1D6E  2D6D               	goto	u6207
 12109  1D6F  3200               	nop2
 12110  1D70                     l4166:	
 12111                           
 12112                           ;i2c_display.c: 104:    Lcd_Port(y | 0x01 | 0x00 | 0x00);
 12113  1D70  0878               	movf	Lcd_Write_Char@y,w
 12114  1D71  3801               	iorlw	1
 12115  1D72  319B  233B  319D   	fcall	_Lcd_Port
 12116  1D75                     l4168:	
 12117                           
 12118                           ;i2c_display.c: 105:    Lcd_Port(temp);
 12119  1D75  0879               	movf	Lcd_Write_Char@temp,w
 12120  1D76  319B  233B  319D   	fcall	_Lcd_Port
 12121  1D79                     l4170:	
 12122                           
 12123                           ;i2c_display.c: 108:    Lcd_Port(temp | 0x01 | 0x04 | 0x00);
 12124  1D79  0879               	movf	Lcd_Write_Char@temp,w
 12125  1D7A  3805               	iorlw	5
 12126  1D7B  319B  233B  319D   	fcall	_Lcd_Port
 12127  1D7E                     l4172:	
 12128                           
 12129                           ;i2c_display.c: 109:    _delay((unsigned long)((40)*(8000000/4000000.0)));
 12130  1D7E  301A               	movlw	26
 12131  1D7F                     u6217:	
 12132  1D7F  0B89               	decfsz	9,f
 12133  1D80  2D7F               	goto	u6217
 12134  1D81  3200               	nop2
 12135  1D82                     l4174:	
 12136                           
 12137                           ;i2c_display.c: 111:    Lcd_Port(temp | 0x01 | 0x00 | 0x00);
 12138  1D82  0879               	movf	Lcd_Write_Char@temp,w
 12139  1D83  3801               	iorlw	1
 12140  1D84  319B  233B  319D   	fcall	_Lcd_Port
 12141  1D87                     l224:	
 12142  1D87  0008               	return
 12143  1D88                     __end_of_Lcd_Write_Char:	
 12144                           
 12145                           	psect	text38
 12146  1E16                     __ptext38:	
 12147 ;; *************** function _Lcd_Set_Cursor *****************
 12148 ;; Defined at:
 12149 ;;		line 50 in file "i2c_display.c"
 12150 ;; Parameters:    Size  Location     Type
 12151 ;;  a               1    wreg     unsigned char 
 12152 ;;  b               1   11[COMMON] unsigned char 
 12153 ;; Auto vars:     Size  Location     Type
 12154 ;;  a               1    0[BANK0 ] unsigned char 
 12155 ;;  temp            1    3[BANK0 ] unsigned char 
 12156 ;;  y               1    2[BANK0 ] unsigned char 
 12157 ;;  z               1    1[BANK0 ] unsigned char 
 12158 ;; Return value:  Size  Location     Type
 12159 ;;                  1    wreg      void 
 12160 ;; Registers used:
 12161 ;;		wreg, status,2, status,0, pclath, cstack
 12162 ;; Tracked objects:
 12163 ;;		On entry : 0/0
 12164 ;;		On exit  : 0/0
 12165 ;;		Unchanged: 0/0
 12166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12167 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12168 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;Total ram usage:        7 bytes
 12172 ;; Hardware stack levels used:    1
 12173 ;; Hardware stack levels required when called:    4
 12174 ;; This function calls:
 12175 ;;		_Lcd_Cmd
 12176 ;; This function is called by:
 12177 ;;		_main
 12178 ;;		_config
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           
 12183                           ;psect for function _Lcd_Set_Cursor
 12184  1E16                     _Lcd_Set_Cursor:	
 12185                           
 12186                           ;incstack = 0
 12187                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 12188                           ;Lcd_Set_Cursor@a stored from wreg
 12189  1E16  0020               	movlb	0	; select bank0
 12190  1E17  00A0               	movwf	Lcd_Set_Cursor@a
 12191  1E18                     l4318:	
 12192                           
 12193                           ;i2c_display.c: 50: void Lcd_Set_Cursor(char a, char b);i2c_display.c: 51: {;i2c_display
      +                          .c: 52:  char temp,z,y;;i2c_display.c: 53:  if(a == 1)
 12194  1E18  0320               	decf	Lcd_Set_Cursor@a,w
 12195  1E19  1D03               	btfss	3,2
 12196  1E1A  2E1C               	goto	u5831
 12197  1E1B  2E1D               	goto	u5830
 12198  1E1C                     u5831:	
 12199  1E1C  2E3B               	goto	l4328
 12200  1E1D                     u5830:	
 12201  1E1D                     l4320:	
 12202                           
 12203                           ;i2c_display.c: 54:  {;i2c_display.c: 55:    temp = 0x80 + b - 1;
 12204  1E1D  087B               	movf	Lcd_Set_Cursor@b,w
 12205  1E1E  3E7F               	addlw	127
 12206  1E1F  00FC               	movwf	??_Lcd_Set_Cursor
 12207  1E20  087C               	movf	??_Lcd_Set_Cursor,w
 12208  1E21  00A3               	movwf	Lcd_Set_Cursor@temp
 12209                           
 12210                           ;i2c_display.c: 56:   z = temp>>4;
 12211  1E22  0823               	movf	Lcd_Set_Cursor@temp,w
 12212  1E23  00FC               	movwf	??_Lcd_Set_Cursor
 12213  1E24  3004               	movlw	4
 12214  1E25                     u5845:	
 12215  1E25  36FC               	lsrf	??_Lcd_Set_Cursor,f
 12216  1E26  0B89               	decfsz	9,f
 12217  1E27  2E25               	goto	u5845
 12218  1E28  087C               	movf	??_Lcd_Set_Cursor,w
 12219  1E29  00FD               	movwf	??_Lcd_Set_Cursor+1
 12220  1E2A  087D               	movf	??_Lcd_Set_Cursor+1,w
 12221  1E2B  00A1               	movwf	Lcd_Set_Cursor@z
 12222  1E2C                     l4322:	
 12223                           
 12224                           ;i2c_display.c: 57:   y = temp & 0x0F;
 12225  1E2C  0823               	movf	Lcd_Set_Cursor@temp,w
 12226  1E2D  390F               	andlw	15
 12227  1E2E  00FC               	movwf	??_Lcd_Set_Cursor
 12228  1E2F  087C               	movf	??_Lcd_Set_Cursor,w
 12229  1E30  00A2               	movwf	Lcd_Set_Cursor@y
 12230  1E31                     l4324:	
 12231                           
 12232                           ;i2c_display.c: 58:   Lcd_Cmd(z);
 12233  1E31  0821               	movf	Lcd_Set_Cursor@z,w
 12234  1E32  319C  24E2  319E   	fcall	_Lcd_Cmd
 12235  1E35                     l4326:	
 12236                           
 12237                           ;i2c_display.c: 59:   Lcd_Cmd(y);
 12238  1E35  0020               	movlb	0	; select bank0
 12239  1E36  0822               	movf	Lcd_Set_Cursor@y,w
 12240  1E37  319C  24E2  319E   	fcall	_Lcd_Cmd
 12241                           
 12242                           ;i2c_display.c: 60:  }
 12243  1E3A  2E5E               	goto	l218
 12244  1E3B                     l4328:	
 12245  1E3B  3002               	movlw	2
 12246  1E3C  0620               	xorwf	Lcd_Set_Cursor@a,w
 12247  1E3D  1D03               	btfss	3,2
 12248  1E3E  2E40               	goto	u5851
 12249  1E3F  2E41               	goto	u5850
 12250  1E40                     u5851:	
 12251  1E40  2E5E               	goto	l218
 12252  1E41                     u5850:	
 12253  1E41                     l4330:	
 12254                           
 12255                           ;i2c_display.c: 62:  {;i2c_display.c: 63:   temp = 0xC0 + b - 1;
 12256  1E41  087B               	movf	Lcd_Set_Cursor@b,w
 12257  1E42  3EBF               	addlw	191
 12258  1E43  00FC               	movwf	??_Lcd_Set_Cursor
 12259  1E44  087C               	movf	??_Lcd_Set_Cursor,w
 12260  1E45  00A3               	movwf	Lcd_Set_Cursor@temp
 12261                           
 12262                           ;i2c_display.c: 64:   z = temp>>4;
 12263  1E46  0823               	movf	Lcd_Set_Cursor@temp,w
 12264  1E47  00FC               	movwf	??_Lcd_Set_Cursor
 12265  1E48  3004               	movlw	4
 12266  1E49                     u5865:	
 12267  1E49  36FC               	lsrf	??_Lcd_Set_Cursor,f
 12268  1E4A  0B89               	decfsz	9,f
 12269  1E4B  2E49               	goto	u5865
 12270  1E4C  087C               	movf	??_Lcd_Set_Cursor,w
 12271  1E4D  00FD               	movwf	??_Lcd_Set_Cursor+1
 12272  1E4E  087D               	movf	??_Lcd_Set_Cursor+1,w
 12273  1E4F  00A1               	movwf	Lcd_Set_Cursor@z
 12274  1E50                     l4332:	
 12275                           
 12276                           ;i2c_display.c: 65:   y = temp & 0x0F;
 12277  1E50  0823               	movf	Lcd_Set_Cursor@temp,w
 12278  1E51  390F               	andlw	15
 12279  1E52  00FC               	movwf	??_Lcd_Set_Cursor
 12280  1E53  087C               	movf	??_Lcd_Set_Cursor,w
 12281  1E54  00A2               	movwf	Lcd_Set_Cursor@y
 12282  1E55                     l4334:	
 12283                           
 12284                           ;i2c_display.c: 66:   Lcd_Cmd(z);
 12285  1E55  0821               	movf	Lcd_Set_Cursor@z,w
 12286  1E56  319C  24E2  319E   	fcall	_Lcd_Cmd
 12287  1E59                     l4336:	
 12288                           
 12289                           ;i2c_display.c: 67:   Lcd_Cmd(y);
 12290  1E59  0020               	movlb	0	; select bank0
 12291  1E5A  0822               	movf	Lcd_Set_Cursor@y,w
 12292  1E5B  319C  24E2  319E   	fcall	_Lcd_Cmd
 12293  1E5E                     l218:	
 12294  1E5E  0008               	return
 12295  1E5F                     __end_of_Lcd_Set_Cursor:	
 12296                           
 12297                           	psect	text39
 12298  1000                     __ptext39:	
 12299 ;; *************** function _Lcd_Init *****************
 12300 ;; Defined at:
 12301 ;;		line 71 in file "i2c_display.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;		None
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;		None
 12306 ;; Return value:  Size  Location     Type
 12307 ;;                  1    wreg      void 
 12308 ;; Registers used:
 12309 ;;		wreg, status,2, status,0, pclath, cstack
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/0
 12312 ;;		On exit  : 0/0
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;Total ram usage:        1 bytes
 12320 ;; Hardware stack levels used:    1
 12321 ;; Hardware stack levels required when called:    4
 12322 ;; This function calls:
 12323 ;;		_Lcd_Cmd
 12324 ;;		_Lcd_Port
 12325 ;; This function is called by:
 12326 ;;		_config
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           
 12331                           ;psect for function _Lcd_Init
 12332  1000                     _Lcd_Init:	
 12333  1000                     l4358:	
 12334                           ;incstack = 0
 12335                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 12336                           
 12337                           
 12338                           ;i2c_display.c: 73:   Lcd_Port(0x00);
 12339  1000  3000               	movlw	0
 12340  1001  319B  233B  3190   	fcall	_Lcd_Port
 12341  1004                     l4360:	
 12342                           
 12343                           ;i2c_display.c: 74:    _delay((unsigned long)((20)*(8000000/4000.0)));
 12344  1004  3034               	movlw	52
 12345  1005  00FB               	movwf	??_Lcd_Init
 12346  1006  30F2               	movlw	242
 12347  1007                     u6227:	
 12348  1007  0B89               	decfsz	9,f
 12349  1008  2807               	goto	u6227
 12350  1009  0BFB               	decfsz	??_Lcd_Init,f
 12351  100A  2807               	goto	u6227
 12352  100B                     l4362:	
 12353                           
 12354                           ;i2c_display.c: 75:   Lcd_Cmd(0x03);
 12355  100B  3003               	movlw	3
 12356  100C  319C  24E2  3190   	fcall	_Lcd_Cmd
 12357                           
 12358                           ;i2c_display.c: 76:  _delay((unsigned long)((5)*(8000000/4000.0)));
 12359  100F  300D               	movlw	13
 12360  1010  00FB               	movwf	??_Lcd_Init
 12361  1011  30FC               	movlw	252
 12362  1012                     u6237:	
 12363  1012  0B89               	decfsz	9,f
 12364  1013  2812               	goto	u6237
 12365  1014  0BFB               	decfsz	??_Lcd_Init,f
 12366  1015  2812               	goto	u6237
 12367  1016                     l4364:	
 12368                           
 12369                           ;i2c_display.c: 77:   Lcd_Cmd(0x03);
 12370  1016  3003               	movlw	3
 12371  1017  319C  24E2  3190   	fcall	_Lcd_Cmd
 12372  101A                     l4366:	
 12373                           
 12374                           ;i2c_display.c: 78:  _delay((unsigned long)((11)*(8000000/4000.0)));
 12375  101A  301D               	movlw	29
 12376  101B  00FB               	movwf	??_Lcd_Init
 12377  101C  3091               	movlw	145
 12378  101D                     u6247:	
 12379  101D  0B89               	decfsz	9,f
 12380  101E  281D               	goto	u6247
 12381  101F  0BFB               	decfsz	??_Lcd_Init,f
 12382  1020  281D               	goto	u6247
 12383  1021  0000               	nop
 12384                           
 12385                           ;i2c_display.c: 79:   Lcd_Cmd(0x03);
 12386  1022  3003               	movlw	3
 12387  1023  319C  24E2  3190   	fcall	_Lcd_Cmd
 12388                           
 12389                           ;i2c_display.c: 81:   Lcd_Cmd(0x02);
 12390  1026  3002               	movlw	2
 12391  1027  319C  24E2  3190   	fcall	_Lcd_Cmd
 12392                           
 12393                           ;i2c_display.c: 82:   Lcd_Cmd(0x02);
 12394  102A  3002               	movlw	2
 12395  102B  319C  24E2  3190   	fcall	_Lcd_Cmd
 12396                           
 12397                           ;i2c_display.c: 83:   Lcd_Cmd(0x08);
 12398  102E  3008               	movlw	8
 12399  102F  319C  24E2  3190   	fcall	_Lcd_Cmd
 12400                           
 12401                           ;i2c_display.c: 84:   Lcd_Cmd(0x00);
 12402  1032  3000               	movlw	0
 12403  1033  319C  24E2  3190   	fcall	_Lcd_Cmd
 12404                           
 12405                           ;i2c_display.c: 85:   Lcd_Cmd(0x0C);
 12406  1036  300C               	movlw	12
 12407  1037  319C  24E2  3190   	fcall	_Lcd_Cmd
 12408                           
 12409                           ;i2c_display.c: 86:   Lcd_Cmd(0x00);
 12410  103A  3000               	movlw	0
 12411  103B  319C  24E2  3190   	fcall	_Lcd_Cmd
 12412                           
 12413                           ;i2c_display.c: 87:   Lcd_Cmd(0x06);
 12414  103E  3006               	movlw	6
 12415  103F  319C  24E2  3190   	fcall	_Lcd_Cmd
 12416  1042                     l221:	
 12417  1042  0008               	return
 12418  1043                     __end_of_Lcd_Init:	
 12419                           
 12420                           	psect	text40
 12421  1AD3                     __ptext40:	
 12422 ;; *************** function _Lcd_Clear *****************
 12423 ;; Defined at:
 12424 ;;		line 44 in file "i2c_display.c"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;		None
 12427 ;; Auto vars:     Size  Location     Type
 12428 ;;		None
 12429 ;; Return value:  Size  Location     Type
 12430 ;;                  1    wreg      void 
 12431 ;; Registers used:
 12432 ;;		wreg, status,2, status,0, pclath, cstack
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12442 ;;Total ram usage:        0 bytes
 12443 ;; Hardware stack levels used:    1
 12444 ;; Hardware stack levels required when called:    4
 12445 ;; This function calls:
 12446 ;;		_Lcd_Cmd
 12447 ;; This function is called by:
 12448 ;;		_main
 12449 ;;		_config
 12450 ;; This function uses a non-reentrant model
 12451 ;;
 12452                           
 12453                           
 12454                           ;psect for function _Lcd_Clear
 12455  1AD3                     _Lcd_Clear:	
 12456  1AD3                     l4316:	
 12457                           ;incstack = 0
 12458                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 12459                           
 12460                           
 12461                           ;i2c_display.c: 46:  Lcd_Cmd(0);
 12462  1AD3  3000               	movlw	0
 12463  1AD4  319C  24E2  319A   	fcall	_Lcd_Cmd
 12464                           
 12465                           ;i2c_display.c: 47:  Lcd_Cmd(1);
 12466  1AD7  3001               	movlw	1
 12467  1AD8  319C  24E2  319A   	fcall	_Lcd_Cmd
 12468  1ADB                     l212:	
 12469  1ADB  0008               	return
 12470  1ADC                     __end_of_Lcd_Clear:	
 12471                           
 12472                           	psect	text41
 12473  1CB2                     __ptext41:	
 12474 ;; *************** function _I2C_Master_Init *****************
 12475 ;; Defined at:
 12476 ;;		line 164 in file "i2c_display.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;  c               4    0[BANK0 ] const unsigned long 
 12479 ;; Auto vars:     Size  Location     Type
 12480 ;;		None
 12481 ;; Return value:  Size  Location     Type
 12482 ;;                  1    wreg      void 
 12483 ;; Registers used:
 12484 ;;		wreg, status,2, status,0, pclath, cstack
 12485 ;; Tracked objects:
 12486 ;;		On entry : 0/0
 12487 ;;		On exit  : 0/0
 12488 ;;		Unchanged: 0/0
 12489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12490 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12492 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12493 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12494 ;;Total ram usage:        8 bytes
 12495 ;; Hardware stack levels used:    1
 12496 ;; Hardware stack levels required when called:    1
 12497 ;; This function calls:
 12498 ;;		___lldiv
 12499 ;; This function is called by:
 12500 ;;		_config
 12501 ;; This function uses a non-reentrant model
 12502 ;;
 12503                           
 12504                           
 12505                           ;psect for function _I2C_Master_Init
 12506  1CB2                     _I2C_Master_Init:	
 12507  1CB2                     l4346:	
 12508                           ;incstack = 0
 12509                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 12510                           
 12511                           
 12512                           ;i2c_display.c: 164: void I2C_Master_Init(const unsigned long c);i2c_display.c: 165: {;i
      +                          2c_display.c: 166:     SSP1CON1 = 0b00101000;
 12513  1CB2  3028               	movlw	40
 12514  1CB3  0024               	movlb	4	; select bank4
 12515  1CB4  0095               	movwf	21	;volatile
 12516  1CB5                     l4348:	
 12517                           
 12518                           ;i2c_display.c: 167:     SSP1CON2 = 0x00;
 12519  1CB5  0196               	clrf	22	;volatile
 12520  1CB6                     l4350:	
 12521                           
 12522                           ;i2c_display.c: 168:     SSP1ADD = (8000000/(4*c))-1;
 12523  1CB6  0020               	movlb	0	; select bank0
 12524  1CB7  0820               	movf	I2C_Master_Init@c,w
 12525  1CB8  00A4               	movwf	??_I2C_Master_Init
 12526  1CB9  0821               	movf	I2C_Master_Init@c+1,w
 12527  1CBA  00A5               	movwf	??_I2C_Master_Init+1
 12528  1CBB  0822               	movf	I2C_Master_Init@c+2,w
 12529  1CBC  00A6               	movwf	??_I2C_Master_Init+2
 12530  1CBD  0823               	movf	I2C_Master_Init@c+3,w
 12531  1CBE  00A7               	movwf	??_I2C_Master_Init+3
 12532  1CBF  3002               	movlw	2
 12533  1CC0                     u5885:	
 12534  1CC0  35A4               	lslf	??_I2C_Master_Init,f
 12535  1CC1  0DA5               	rlf	??_I2C_Master_Init+1,f
 12536  1CC2  0DA6               	rlf	??_I2C_Master_Init+2,f
 12537  1CC3  0DA7               	rlf	??_I2C_Master_Init+3,f
 12538  1CC4                     u5880:	
 12539  1CC4  0B89               	decfsz	9,f
 12540  1CC5  2CC0               	goto	u5885
 12541  1CC6  0827               	movf	??_I2C_Master_Init+3,w
 12542  1CC7  00F3               	movwf	___lldiv@divisor+3
 12543  1CC8  0826               	movf	??_I2C_Master_Init+2,w
 12544  1CC9  00F2               	movwf	___lldiv@divisor+2
 12545  1CCA  0825               	movf	??_I2C_Master_Init+1,w
 12546  1CCB  00F1               	movwf	___lldiv@divisor+1
 12547  1CCC  0824               	movf	??_I2C_Master_Init,w
 12548  1CCD  00F0               	movwf	___lldiv@divisor
 12549  1CCE  3000               	movlw	0
 12550  1CCF  00F7               	movwf	___lldiv@dividend+3
 12551  1CD0  307A               	movlw	122
 12552  1CD1  00F6               	movwf	___lldiv@dividend+2
 12553  1CD2  3012               	movlw	18
 12554  1CD3  00F5               	movwf	___lldiv@dividend+1
 12555  1CD4  3000               	movlw	0
 12556  1CD5  00F4               	movwf	___lldiv@dividend
 12557  1CD6  319F  27A6  319C   	fcall	___lldiv
 12558  1CD9  0870               	movf	?___lldiv,w
 12559  1CDA  3EFF               	addlw	255
 12560  1CDB  0024               	movlb	4	; select bank4
 12561  1CDC  0092               	movwf	18	;volatile
 12562  1CDD                     l4352:	
 12563                           
 12564                           ;i2c_display.c: 169:     SSP1STAT = 0x00;
 12565  1CDD  0194               	clrf	20	;volatile
 12566  1CDE                     l4354:	
 12567                           
 12568                           ;i2c_display.c: 170:     TRISCbits.TRISC0=1;
 12569  1CDE  0021               	movlb	1	; select bank1
 12570  1CDF  140E               	bsf	14,0	;volatile
 12571  1CE0                     l4356:	
 12572                           
 12573                           ;i2c_display.c: 171:     TRISCbits.TRISC1=1;
 12574  1CE0  148E               	bsf	14,1	;volatile
 12575  1CE1                     l251:	
 12576  1CE1  0008               	return
 12577  1CE2                     __end_of_I2C_Master_Init:	
 12578                           
 12579                           	psect	text42
 12580  1FA6                     __ptext42:	
 12581 ;; *************** function ___lldiv *****************
 12582 ;; Defined at:
 12583 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 12584 ;; Parameters:    Size  Location     Type
 12585 ;;  divisor         4    0[COMMON] unsigned long 
 12586 ;;  dividend        4    4[COMMON] unsigned long 
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;  quotient        4    9[COMMON] unsigned long 
 12589 ;;  counter         1   13[COMMON] unsigned char 
 12590 ;; Return value:  Size  Location     Type
 12591 ;;                  4    0[COMMON] unsigned long 
 12592 ;; Registers used:
 12593 ;;		wreg, status,2, status,0
 12594 ;; Tracked objects:
 12595 ;;		On entry : 0/0
 12596 ;;		On exit  : 0/0
 12597 ;;		Unchanged: 0/0
 12598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12599 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12602 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12603 ;;Total ram usage:       14 bytes
 12604 ;; Hardware stack levels used:    1
 12605 ;; This function calls:
 12606 ;;		Nothing
 12607 ;; This function is called by:
 12608 ;;		_I2C_Master_Init
 12609 ;; This function uses a non-reentrant model
 12610 ;;
 12611                           
 12612                           
 12613                           ;psect for function ___lldiv
 12614  1FA6                     ___lldiv:	
 12615  1FA6                     l4292:	
 12616                           ;incstack = 0
 12617                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12618                           
 12619  1FA6  3000               	movlw	0
 12620  1FA7  00FC               	movwf	___lldiv@quotient+3
 12621  1FA8  3000               	movlw	0
 12622  1FA9  00FB               	movwf	___lldiv@quotient+2
 12623  1FAA  3000               	movlw	0
 12624  1FAB  00FA               	movwf	___lldiv@quotient+1
 12625  1FAC  3000               	movlw	0
 12626  1FAD  00F9               	movwf	___lldiv@quotient
 12627  1FAE  0873               	movf	___lldiv@divisor+3,w
 12628  1FAF  0472               	iorwf	___lldiv@divisor+2,w
 12629  1FB0  0471               	iorwf	___lldiv@divisor+1,w
 12630  1FB1  0470               	iorwf	___lldiv@divisor,w
 12631  1FB2  1903               	skipnz
 12632  1FB3  2FB5               	goto	u5761
 12633  1FB4  2FB6               	goto	u5760
 12634  1FB5                     u5761:	
 12635  1FB5  2FF7               	goto	l4312
 12636  1FB6                     u5760:	
 12637  1FB6                     l4294:	
 12638  1FB6  01FD               	clrf	___lldiv@counter
 12639  1FB7  0AFD               	incf	___lldiv@counter,f
 12640  1FB8  2FC4               	goto	l4298
 12641  1FB9                     l4296:	
 12642  1FB9  3001               	movlw	1
 12643  1FBA                     u5775:	
 12644  1FBA  35F0               	lslf	___lldiv@divisor,f
 12645  1FBB  0DF1               	rlf	___lldiv@divisor+1,f
 12646  1FBC  0DF2               	rlf	___lldiv@divisor+2,f
 12647  1FBD  0DF3               	rlf	___lldiv@divisor+3,f
 12648  1FBE  0B89               	decfsz	9,f
 12649  1FBF  2FBA               	goto	u5775
 12650  1FC0  3001               	movlw	1
 12651  1FC1  00F8               	movwf	??___lldiv
 12652  1FC2  0878               	movf	??___lldiv,w
 12653  1FC3  07FD               	addwf	___lldiv@counter,f
 12654  1FC4                     l4298:	
 12655  1FC4  1FF3               	btfss	___lldiv@divisor+3,7
 12656  1FC5  2FC7               	goto	u5781
 12657  1FC6  2FC8               	goto	u5780
 12658  1FC7                     u5781:	
 12659  1FC7  2FB9               	goto	l4296
 12660  1FC8                     u5780:	
 12661  1FC8                     l4300:	
 12662  1FC8  3001               	movlw	1
 12663  1FC9                     u5795:	
 12664  1FC9  35F9               	lslf	___lldiv@quotient,f
 12665  1FCA  0DFA               	rlf	___lldiv@quotient+1,f
 12666  1FCB  0DFB               	rlf	___lldiv@quotient+2,f
 12667  1FCC  0DFC               	rlf	___lldiv@quotient+3,f
 12668  1FCD  0B89               	decfsz	9,f
 12669  1FCE  2FC9               	goto	u5795
 12670  1FCF                     l4302:	
 12671  1FCF  0873               	movf	___lldiv@divisor+3,w
 12672  1FD0  0277               	subwf	___lldiv@dividend+3,w
 12673  1FD1  1D03               	skipz
 12674  1FD2  2FDD               	goto	u5805
 12675  1FD3  0872               	movf	___lldiv@divisor+2,w
 12676  1FD4  0276               	subwf	___lldiv@dividend+2,w
 12677  1FD5  1D03               	skipz
 12678  1FD6  2FDD               	goto	u5805
 12679  1FD7  0871               	movf	___lldiv@divisor+1,w
 12680  1FD8  0275               	subwf	___lldiv@dividend+1,w
 12681  1FD9  1D03               	skipz
 12682  1FDA  2FDD               	goto	u5805
 12683  1FDB  0870               	movf	___lldiv@divisor,w
 12684  1FDC  0274               	subwf	___lldiv@dividend,w
 12685  1FDD                     u5805:	
 12686  1FDD  1C03               	skipc
 12687  1FDE  2FE0               	goto	u5801
 12688  1FDF  2FE1               	goto	u5800
 12689  1FE0                     u5801:	
 12690  1FE0  2FEA               	goto	l4308
 12691  1FE1                     u5800:	
 12692  1FE1                     l4304:	
 12693  1FE1  0870               	movf	___lldiv@divisor,w
 12694  1FE2  02F4               	subwf	___lldiv@dividend,f
 12695  1FE3  0871               	movf	___lldiv@divisor+1,w
 12696  1FE4  3BF5               	subwfb	___lldiv@dividend+1,f
 12697  1FE5  0872               	movf	___lldiv@divisor+2,w
 12698  1FE6  3BF6               	subwfb	___lldiv@dividend+2,f
 12699  1FE7  0873               	movf	___lldiv@divisor+3,w
 12700  1FE8  3BF7               	subwfb	___lldiv@dividend+3,f
 12701  1FE9                     l4306:	
 12702  1FE9  1479               	bsf	___lldiv@quotient,0
 12703  1FEA                     l4308:	
 12704  1FEA  3001               	movlw	1
 12705  1FEB                     u5815:	
 12706  1FEB  36F3               	lsrf	___lldiv@divisor+3,f
 12707  1FEC  0CF2               	rrf	___lldiv@divisor+2,f
 12708  1FED  0CF1               	rrf	___lldiv@divisor+1,f
 12709  1FEE  0CF0               	rrf	___lldiv@divisor,f
 12710  1FEF  0B89               	decfsz	9,f
 12711  1FF0  2FEB               	goto	u5815
 12712  1FF1                     l4310:	
 12713  1FF1  3001               	movlw	1
 12714  1FF2  02FD               	subwf	___lldiv@counter,f
 12715  1FF3  1D03               	btfss	3,2
 12716  1FF4  2FF6               	goto	u5821
 12717  1FF5  2FF7               	goto	u5820
 12718  1FF6                     u5821:	
 12719  1FF6  2FC8               	goto	l4300
 12720  1FF7                     u5820:	
 12721  1FF7                     l4312:	
 12722  1FF7  087C               	movf	___lldiv@quotient+3,w
 12723  1FF8  00F3               	movwf	?___lldiv+3
 12724  1FF9  087B               	movf	___lldiv@quotient+2,w
 12725  1FFA  00F2               	movwf	?___lldiv+2
 12726  1FFB  087A               	movf	___lldiv@quotient+1,w
 12727  1FFC  00F1               	movwf	?___lldiv+1
 12728  1FFD  0879               	movf	___lldiv@quotient,w
 12729  1FFE  00F0               	movwf	?___lldiv
 12730  1FFF                     l639:	
 12731  1FFF  0008               	return
 12732  2000                     __end_of___lldiv:	
 12733                           
 12734                           	psect	text43
 12735  1ACA                     __ptext43:	
 12736 ;; *************** function _Cursor_Off *****************
 12737 ;; Defined at:
 12738 ;;		line 139 in file "i2c_display.c"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;		None
 12741 ;; Auto vars:     Size  Location     Type
 12742 ;;		None
 12743 ;; Return value:  Size  Location     Type
 12744 ;;                  1    wreg      void 
 12745 ;; Registers used:
 12746 ;;		wreg, status,2, status,0, pclath, cstack
 12747 ;; Tracked objects:
 12748 ;;		On entry : 0/0
 12749 ;;		On exit  : 0/0
 12750 ;;		Unchanged: 0/0
 12751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12756 ;;Total ram usage:        0 bytes
 12757 ;; Hardware stack levels used:    1
 12758 ;; Hardware stack levels required when called:    4
 12759 ;; This function calls:
 12760 ;;		_Lcd_Cmd
 12761 ;; This function is called by:
 12762 ;;		_config
 12763 ;; This function uses a non-reentrant model
 12764 ;;
 12765                           
 12766                           
 12767                           ;psect for function _Cursor_Off
 12768  1ACA                     _Cursor_Off:	
 12769  1ACA                     l4368:	
 12770                           ;incstack = 0
 12771                           ; Regs used in _Cursor_Off: [wreg+status,2+status,0+pclath+cstack]
 12772                           
 12773                           
 12774                           ;i2c_display.c: 141: Lcd_Cmd(0x00);
 12775  1ACA  3000               	movlw	0
 12776  1ACB  319C  24E2  319A   	fcall	_Lcd_Cmd
 12777                           
 12778                           ;i2c_display.c: 142: Lcd_Cmd(0x0C);
 12779  1ACE  300C               	movlw	12
 12780  1ACF  319C  24E2  319A   	fcall	_Lcd_Cmd
 12781  1AD2                     l242:	
 12782  1AD2  0008               	return
 12783  1AD3                     __end_of_Cursor_Off:	
 12784                           
 12785                           	psect	text44
 12786  1CE2                     __ptext44:	
 12787 ;; *************** function _Lcd_Cmd *****************
 12788 ;; Defined at:
 12789 ;;		line 25 in file "i2c_display.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  a               1    wreg     unsigned char 
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;  a               1   10[COMMON] unsigned char 
 12794 ;;  buff            2    8[COMMON] int 
 12795 ;; Return value:  Size  Location     Type
 12796 ;;                  1    wreg      void 
 12797 ;; Registers used:
 12798 ;;		wreg, status,2, status,0, pclath, cstack
 12799 ;; Tracked objects:
 12800 ;;		On entry : 0/0
 12801 ;;		On exit  : 0/0
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12805 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;Total ram usage:        6 bytes
 12809 ;; Hardware stack levels used:    1
 12810 ;; Hardware stack levels required when called:    3
 12811 ;; This function calls:
 12812 ;;		_Lcd_Port
 12813 ;; This function is called by:
 12814 ;;		_Lcd_Clear
 12815 ;;		_Lcd_Set_Cursor
 12816 ;;		_Lcd_Init
 12817 ;;		_Cursor_Off
 12818 ;;		_Lcd_Shift_Right
 12819 ;;		_Lcd_Shift_Left
 12820 ;;		_Cursor_On
 12821 ;;		_Cursor_Left
 12822 ;;		_Cursor_Right
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           
 12827                           ;psect for function _Lcd_Cmd
 12828  1CE2                     _Lcd_Cmd:	
 12829                           
 12830                           ;incstack = 0
 12831                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 12832                           ;Lcd_Cmd@a stored from wreg
 12833  1CE2  00FA               	movwf	Lcd_Cmd@a
 12834  1CE3                     l4132:	
 12835                           
 12836                           ;i2c_display.c: 25: void Lcd_Cmd(char a);i2c_display.c: 26: {;i2c_display.c: 27:     int
      +                           buff;;i2c_display.c: 28:     a=a<<4;
 12837  1CE3  087A               	movf	Lcd_Cmd@a,w
 12838  1CE4  00F5               	movwf	??_Lcd_Cmd
 12839  1CE5  3003               	movlw	3
 12840  1CE6                     u5555:	
 12841  1CE6  35F5               	lslf	??_Lcd_Cmd,f
 12842  1CE7  3EFF               	addlw	-1
 12843  1CE8  1D03               	skipz
 12844  1CE9  2CE6               	goto	u5555
 12845  1CEA  3575               	lslf	??_Lcd_Cmd,w
 12846  1CEB  00F6               	movwf	??_Lcd_Cmd+1
 12847  1CEC  0876               	movf	??_Lcd_Cmd+1,w
 12848  1CED  00FA               	movwf	Lcd_Cmd@a
 12849  1CEE                     l4134:	
 12850  1CEE                     l4136:	
 12851  1CEE                     l4138:	
 12852  1CEE  3000               	movlw	0
 12853  1CEF  319B  233B  319C   	fcall	_Lcd_Port
 12854  1CF2                     l4140:	
 12855                           
 12856                           ;i2c_display.c: 33:  Lcd_Port(a);
 12857  1CF2  087A               	movf	Lcd_Cmd@a,w
 12858  1CF3  319B  233B  319C   	fcall	_Lcd_Port
 12859  1CF6                     l4142:	
 12860                           
 12861                           ;i2c_display.c: 36:     buff=a | 0x00 | 0x04 | 0x00;
 12862  1CF6  3004               	movlw	4
 12863  1CF7  047A               	iorwf	Lcd_Cmd@a,w
 12864  1CF8  00F8               	movwf	Lcd_Cmd@buff
 12865  1CF9  3000               	movlw	0
 12866  1CFA  00F9               	movwf	Lcd_Cmd@buff+1
 12867  1CFB                     l4144:	
 12868                           
 12869                           ;i2c_display.c: 37:     Lcd_Port(buff);
 12870  1CFB  0878               	movf	Lcd_Cmd@buff,w
 12871  1CFC  319B  233B  319C   	fcall	_Lcd_Port
 12872  1CFF                     l4146:	
 12873                           
 12874                           ;i2c_display.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
 12875  1CFF  300B               	movlw	11
 12876  1D00  00F5               	movwf	??_Lcd_Cmd
 12877  1D01  3062               	movlw	98
 12878  1D02                     u6257:	
 12879  1D02  0B89               	decfsz	9,f
 12880  1D03  2D02               	goto	u6257
 12881  1D04  0BF5               	decfsz	??_Lcd_Cmd,f
 12882  1D05  2D02               	goto	u6257
 12883  1D06  3200               	nop2
 12884  1D07                     l4148:	
 12885                           
 12886                           ;i2c_display.c: 40:     buff=a | 0x00 | 0x00 | 0x00;
 12887  1D07  087A               	movf	Lcd_Cmd@a,w
 12888  1D08  00F5               	movwf	??_Lcd_Cmd
 12889  1D09  01F6               	clrf	??_Lcd_Cmd+1
 12890  1D0A  0875               	movf	??_Lcd_Cmd,w
 12891  1D0B  00F8               	movwf	Lcd_Cmd@buff
 12892  1D0C  0876               	movf	??_Lcd_Cmd+1,w
 12893  1D0D  00F9               	movwf	Lcd_Cmd@buff+1
 12894  1D0E                     l4150:	
 12895                           
 12896                           ;i2c_display.c: 41:     Lcd_Port(buff);
 12897  1D0E  0878               	movf	Lcd_Cmd@buff,w
 12898  1D0F  319B  233B  319C   	fcall	_Lcd_Port
 12899  1D12                     l209:	
 12900  1D12  0008               	return
 12901  1D13                     __end_of_Lcd_Cmd:	
 12902                           
 12903                           	psect	text45
 12904  1B3B                     __ptext45:	
 12905 ;; *************** function _Lcd_Port *****************
 12906 ;; Defined at:
 12907 ;;		line 19 in file "i2c_display.c"
 12908 ;; Parameters:    Size  Location     Type
 12909 ;;  data            1    wreg     unsigned char 
 12910 ;; Auto vars:     Size  Location     Type
 12911 ;;  data            1    4[COMMON] unsigned char 
 12912 ;; Return value:  Size  Location     Type
 12913 ;;                  1    wreg      void 
 12914 ;; Registers used:
 12915 ;;		wreg, status,2, status,0, pclath, cstack
 12916 ;; Tracked objects:
 12917 ;;		On entry : 0/0
 12918 ;;		On exit  : 0/0
 12919 ;;		Unchanged: 0/0
 12920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12924 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12925 ;;Total ram usage:        3 bytes
 12926 ;; Hardware stack levels used:    1
 12927 ;; Hardware stack levels required when called:    2
 12928 ;; This function calls:
 12929 ;;		_I2C_Master_Start
 12930 ;;		_I2C_Master_Stop
 12931 ;;		_I2C_Write_Display
 12932 ;; This function is called by:
 12933 ;;		_Lcd_Cmd
 12934 ;;		_Lcd_Init
 12935 ;;		_Lcd_Write_Char
 12936 ;; This function uses a non-reentrant model
 12937 ;;
 12938                           
 12939                           
 12940                           ;psect for function _Lcd_Port
 12941  1B3B                     _Lcd_Port:	
 12942                           
 12943                           ;incstack = 0
 12944                           ; Regs used in _Lcd_Port: [wreg+status,2+status,0+pclath+cstack]
 12945                           ;Lcd_Port@data stored from wreg
 12946  1B3B  00F4               	movwf	Lcd_Port@data
 12947  1B3C                     l3766:	
 12948                           
 12949                           ;i2c_display.c: 19: void Lcd_Port(char data);i2c_display.c: 20: { I2C_Master_Start();
 12950  1B3C  319A  22B1  319B   	fcall	_I2C_Master_Start
 12951                           
 12952                           ;i2c_display.c: 21:     I2C_Write_Display(0x70);
 12953  1B3F  3070               	movlw	112
 12954  1B40  00F0               	movwf	I2C_Write_Display@d
 12955  1B41  3000               	movlw	0
 12956  1B42  00F1               	movwf	I2C_Write_Display@d+1
 12957  1B43  319A  22C3  319B   	fcall	_I2C_Write_Display
 12958                           
 12959                           ;i2c_display.c: 22:  I2C_Write_Display(data);
 12960  1B46  0874               	movf	Lcd_Port@data,w
 12961  1B47  00F2               	movwf	??_Lcd_Port
 12962  1B48  01F3               	clrf	??_Lcd_Port+1
 12963  1B49  0872               	movf	??_Lcd_Port,w
 12964  1B4A  00F0               	movwf	I2C_Write_Display@d
 12965  1B4B  0873               	movf	??_Lcd_Port+1,w
 12966  1B4C  00F1               	movwf	I2C_Write_Display@d+1
 12967  1B4D  319A  22C3  319B   	fcall	_I2C_Write_Display
 12968                           
 12969                           ;i2c_display.c: 23:     I2C_Master_Stop();
 12970  1B50  319A  22B7  319B   	fcall	_I2C_Master_Stop
 12971  1B53                     l204:	
 12972  1B53  0008               	return
 12973  1B54                     __end_of_Lcd_Port:	
 12974                           
 12975                           	psect	text46
 12976  1AC3                     __ptext46:	
 12977 ;; *************** function _I2C_Write_Display *****************
 12978 ;; Defined at:
 12979 ;;		line 205 in file "i2c_display.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;  d               2    0[COMMON] unsigned int 
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;		None
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  1    wreg      void 
 12986 ;; Registers used:
 12987 ;;		wreg, status,2, status,0, pclath, cstack
 12988 ;; Tracked objects:
 12989 ;;		On entry : 0/0
 12990 ;;		On exit  : 0/0
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12997 ;;Total ram usage:        2 bytes
 12998 ;; Hardware stack levels used:    1
 12999 ;; Hardware stack levels required when called:    1
 13000 ;; This function calls:
 13001 ;;		_I2C_Master_Wait
 13002 ;; This function is called by:
 13003 ;;		_Lcd_Port
 13004 ;; This function uses a non-reentrant model
 13005 ;;
 13006                           
 13007                           
 13008                           ;psect for function _I2C_Write_Display
 13009  1AC3                     _I2C_Write_Display:	
 13010  1AC3                     l3194:	
 13011                           ;incstack = 0
 13012                           ; Regs used in _I2C_Write_Display: [wreg+status,2+status,0+pclath+cstack]
 13013                           
 13014                           
 13015                           ;i2c_display.c: 205: void I2C_Write_Display(unsigned d);i2c_display.c: 206: {;i2c_displa
      +                          y.c: 207:     I2C_Master_Wait();
 13016  1AC3  3180  2004  319A   	fcall	_I2C_Master_Wait
 13017  1AC6                     l3196:	
 13018                           
 13019                           ;i2c_display.c: 208:     SSP1BUF = d;
 13020  1AC6  0870               	movf	I2C_Write_Display@d,w
 13021  1AC7  0024               	movlb	4	; select bank4
 13022  1AC8  0091               	movwf	17	;volatile
 13023  1AC9                     l272:	
 13024  1AC9  0008               	return
 13025  1ACA                     __end_of_I2C_Write_Display:	
 13026                           
 13027                           	psect	text47
 13028  1AB7                     __ptext47:	
 13029 ;; *************** function _I2C_Master_Stop *****************
 13030 ;; Defined at:
 13031 ;;		line 193 in file "i2c_display.c"
 13032 ;; Parameters:    Size  Location     Type
 13033 ;;		None
 13034 ;; Auto vars:     Size  Location     Type
 13035 ;;		None
 13036 ;; Return value:  Size  Location     Type
 13037 ;;                  1    wreg      void 
 13038 ;; Registers used:
 13039 ;;		wreg, status,2, status,0, pclath, cstack
 13040 ;; Tracked objects:
 13041 ;;		On entry : 0/0
 13042 ;;		On exit  : 0/0
 13043 ;;		Unchanged: 0/0
 13044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13049 ;;Total ram usage:        0 bytes
 13050 ;; Hardware stack levels used:    1
 13051 ;; Hardware stack levels required when called:    1
 13052 ;; This function calls:
 13053 ;;		_I2C_Master_Wait
 13054 ;; This function is called by:
 13055 ;;		_Lcd_Port
 13056 ;; This function uses a non-reentrant model
 13057 ;;
 13058                           
 13059                           
 13060                           ;psect for function _I2C_Master_Stop
 13061  1AB7                     _I2C_Master_Stop:	
 13062  1AB7                     l3198:	
 13063                           ;incstack = 0
 13064                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13065                           
 13066                           
 13067                           ;i2c_display.c: 195:     I2C_Master_Wait();
 13068  1AB7  3180  2004  319A   	fcall	_I2C_Master_Wait
 13069  1ABA                     l3200:	
 13070                           
 13071                           ;i2c_display.c: 196:     SSP1CON2bits.PEN = 1;
 13072  1ABA  0024               	movlb	4	; select bank4
 13073  1ABB  1516               	bsf	22,2	;volatile
 13074  1ABC                     l266:	
 13075  1ABC  0008               	return
 13076  1ABD                     __end_of_I2C_Master_Stop:	
 13077                           
 13078                           	psect	text48
 13079  1AB1                     __ptext48:	
 13080 ;; *************** function _I2C_Master_Start *****************
 13081 ;; Defined at:
 13082 ;;		line 181 in file "i2c_display.c"
 13083 ;; Parameters:    Size  Location     Type
 13084 ;;		None
 13085 ;; Auto vars:     Size  Location     Type
 13086 ;;		None
 13087 ;; Return value:  Size  Location     Type
 13088 ;;                  1    wreg      void 
 13089 ;; Registers used:
 13090 ;;		wreg, status,2, status,0, pclath, cstack
 13091 ;; Tracked objects:
 13092 ;;		On entry : 0/0
 13093 ;;		On exit  : 0/0
 13094 ;;		Unchanged: 0/0
 13095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13100 ;;Total ram usage:        0 bytes
 13101 ;; Hardware stack levels used:    1
 13102 ;; Hardware stack levels required when called:    1
 13103 ;; This function calls:
 13104 ;;		_I2C_Master_Wait
 13105 ;; This function is called by:
 13106 ;;		_Lcd_Port
 13107 ;; This function uses a non-reentrant model
 13108 ;;
 13109                           
 13110                           
 13111                           ;psect for function _I2C_Master_Start
 13112  1AB1                     _I2C_Master_Start:	
 13113  1AB1                     l3190:	
 13114                           ;incstack = 0
 13115                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13116                           
 13117                           
 13118                           ;i2c_display.c: 183:     I2C_Master_Wait();
 13119  1AB1  3180  2004  319A   	fcall	_I2C_Master_Wait
 13120  1AB4                     l3192:	
 13121                           
 13122                           ;i2c_display.c: 184:     SSP1CON2bits.SEN = 1;
 13123  1AB4  0024               	movlb	4	; select bank4
 13124  1AB5  1416               	bsf	22,0	;volatile
 13125  1AB6                     l260:	
 13126  1AB6  0008               	return
 13127  1AB7                     __end_of_I2C_Master_Start:	
 13128                           
 13129                           	psect	text49
 13130  0004                     __ptext49:	
 13131 ;; *************** function _I2C_Master_Wait *****************
 13132 ;; Defined at:
 13133 ;;		line 174 in file "i2c_display.c"
 13134 ;; Parameters:    Size  Location     Type
 13135 ;;		None
 13136 ;; Auto vars:     Size  Location     Type
 13137 ;;		None
 13138 ;; Return value:  Size  Location     Type
 13139 ;;                  1    wreg      void 
 13140 ;; Registers used:
 13141 ;;		wreg, status,2
 13142 ;; Tracked objects:
 13143 ;;		On entry : 0/0
 13144 ;;		On exit  : 0/0
 13145 ;;		Unchanged: 0/0
 13146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13151 ;;Total ram usage:        0 bytes
 13152 ;; Hardware stack levels used:    1
 13153 ;; This function calls:
 13154 ;;		Nothing
 13155 ;; This function is called by:
 13156 ;;		_I2C_Master_Start
 13157 ;;		_I2C_Master_Stop
 13158 ;;		_I2C_Write_Display
 13159 ;;		_I2C_Master_RepeatedStart
 13160 ;;		_I2C_Master_Write
 13161 ;;		_I2C_Master_Read
 13162 ;; This function uses a non-reentrant model
 13163 ;;
 13164                           
 13165                           
 13166                           ;psect for function _I2C_Master_Wait
 13167  0004                     _I2C_Master_Wait:	
 13168  0004                     l2956:	
 13169                           ;incstack = 0
 13170                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 13171                           
 13172  0004                     l254:	
 13173                           ;i2c_display.c: 176:    while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 13174                           
 13175  0004  0024               	movlb	4	; select bank4
 13176  0005  1914               	btfsc	20,2	;volatile
 13177  0006  2808               	goto	u3111
 13178  0007  2809               	goto	u3110
 13179  0008                     u3111:	
 13180  0008  2804               	goto	l254
 13181  0009                     u3110:	
 13182  0009                     l2958:	
 13183  0009  0816               	movf	22,w	;volatile
 13184  000A  391F               	andlw	31
 13185  000B  1D03               	btfss	3,2
 13186  000C  280E               	goto	u3121
 13187  000D  280F               	goto	u3120
 13188  000E                     u3121:	
 13189  000E  2804               	goto	l254
 13190  000F                     u3120:	
 13191  000F                     l257:	
 13192  000F  0008               	return
 13193  0010                     __end_of_I2C_Master_Wait:	
 13194                           
 13195                           	psect	text50
 13196  1AE7                     __ptext50:	
 13197 ;; *************** function _adc_config *****************
 13198 ;; Defined at:
 13199 ;;		line 82 in file "config.c"
 13200 ;; Parameters:    Size  Location     Type
 13201 ;;		None
 13202 ;; Auto vars:     Size  Location     Type
 13203 ;;		None
 13204 ;; Return value:  Size  Location     Type
 13205 ;;                  1    wreg      void 
 13206 ;; Registers used:
 13207 ;;		wreg
 13208 ;; Tracked objects:
 13209 ;;		On entry : 0/0
 13210 ;;		On exit  : 0/0
 13211 ;;		Unchanged: 0/0
 13212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13217 ;;Total ram usage:        0 bytes
 13218 ;; Hardware stack levels used:    1
 13219 ;; This function calls:
 13220 ;;		Nothing
 13221 ;; This function is called by:
 13222 ;;		_main
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           
 13227                           ;psect for function _adc_config
 13228  1AE7                     _adc_config:	
 13229  1AE7                     l4436:	
 13230                           ;incstack = 0
 13231                           ; Regs used in _adc_config: [wreg]
 13232                           
 13233                           
 13234                           ;config.c: 84:     TRISAbits.TRISA4 = 1;
 13235  1AE7  0021               	movlb	1	; select bank1
 13236  1AE8  160C               	bsf	12,4	;volatile
 13237                           
 13238                           ;config.c: 85:     TRISCbits.TRISC2 = 1;
 13239  1AE9  150E               	bsf	14,2	;volatile
 13240                           
 13241                           ;config.c: 86:     TRISCbits.TRISC3 = 1;
 13242  1AEA  158E               	bsf	14,3	;volatile
 13243                           
 13244                           ;config.c: 88:     ANSELAbits.ANSA4 = 1;
 13245  1AEB  0023               	movlb	3	; select bank3
 13246  1AEC  160C               	bsf	12,4	;volatile
 13247                           
 13248                           ;config.c: 89:     ANSELCbits.ANSC2 = 1;
 13249  1AED  150E               	bsf	14,2	;volatile
 13250                           
 13251                           ;config.c: 90:     ANSELCbits.ANSC3 = 1;
 13252  1AEE  158E               	bsf	14,3	;volatile
 13253  1AEF                     l4438:	
 13254                           
 13255                           ;config.c: 93:     ADCON0=0b00001101;
 13256  1AEF  300D               	movlw	13
 13257  1AF0  0021               	movlb	1	; select bank1
 13258  1AF1  009D               	movwf	29	;volatile
 13259                           
 13260                           ;config.c: 94:     ADCON1=0b0101000;
 13261  1AF2  3028               	movlw	40
 13262  1AF3  009E               	movwf	30	;volatile
 13263  1AF4                     l175:	
 13264  1AF4  0008               	return
 13265  1AF5                     __end_of_adc_config:	
 13266                           
 13267                           	psect	text51
 13268  12D7                     __ptext51:	
 13269 ;; *************** function ___xxtofl *****************
 13270 ;; Defined at:
 13271 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 13272 ;; Parameters:    Size  Location     Type
 13273 ;;  sign            1    wreg     unsigned char 
 13274 ;;  val             4    6[COMMON] long 
 13275 ;; Auto vars:     Size  Location     Type
 13276 ;;  sign            1    0[BANK0 ] unsigned char 
 13277 ;;  arg             4    2[BANK0 ] unsigned long 
 13278 ;;  exp             1    1[BANK0 ] unsigned char 
 13279 ;; Return value:  Size  Location     Type
 13280 ;;                  4    6[COMMON] unsigned char 
 13281 ;; Registers used:
 13282 ;;		wreg, status,2, status,0
 13283 ;; Tracked objects:
 13284 ;;		On entry : 0/0
 13285 ;;		On exit  : 0/0
 13286 ;;		Unchanged: 0/0
 13287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13289 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13290 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13291 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13292 ;;Total ram usage:       14 bytes
 13293 ;; Hardware stack levels used:    1
 13294 ;; This function calls:
 13295 ;;		Nothing
 13296 ;; This function is called by:
 13297 ;;		_main
 13298 ;; This function uses a non-reentrant model
 13299 ;;
 13300                           
 13301                           
 13302                           ;psect for function ___xxtofl
 13303  12D7                     ___xxtofl:	
 13304                           
 13305                           ;incstack = 0
 13306                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 13307                           ;___xxtofl@sign stored from wreg
 13308  12D7  0020               	movlb	0	; select bank0
 13309  12D8  00A0               	movwf	___xxtofl@sign
 13310  12D9                     l4506:	
 13311  12D9  0820               	movf	___xxtofl@sign,w
 13312  12DA  1903               	btfsc	3,2
 13313  12DB  2ADD               	goto	u5931
 13314  12DC  2ADE               	goto	u5930
 13315  12DD                     u5931:	
 13316  12DD  2AF2               	goto	l4512
 13317  12DE                     u5930:	
 13318  12DE                     l4508:	
 13319  12DE  1FF9               	btfss	___xxtofl@val+3,7
 13320  12DF  2AE1               	goto	u5941
 13321  12E0  2AE2               	goto	u5940
 13322  12E1                     u5941:	
 13323  12E1  2AF2               	goto	l4512
 13324  12E2                     u5940:	
 13325  12E2                     l4510:	
 13326  12E2  0976               	comf	___xxtofl@val,w
 13327  12E3  00A2               	movwf	___xxtofl@arg
 13328  12E4  0977               	comf	___xxtofl@val+1,w
 13329  12E5  00A3               	movwf	___xxtofl@arg+1
 13330  12E6  0978               	comf	___xxtofl@val+2,w
 13331  12E7  00A4               	movwf	___xxtofl@arg+2
 13332  12E8  0979               	comf	___xxtofl@val+3,w
 13333  12E9  00A5               	movwf	___xxtofl@arg+3
 13334  12EA  0AA2               	incf	___xxtofl@arg,f
 13335  12EB  1903               	skipnz
 13336  12EC  0AA3               	incf	___xxtofl@arg+1,f
 13337  12ED  1903               	skipnz
 13338  12EE  0AA4               	incf	___xxtofl@arg+2,f
 13339  12EF  1903               	skipnz
 13340  12F0  0AA5               	incf	___xxtofl@arg+3,f
 13341  12F1  2AFA               	goto	l1038
 13342  12F2                     l4512:	
 13343  12F2  0879               	movf	___xxtofl@val+3,w
 13344  12F3  00A5               	movwf	___xxtofl@arg+3
 13345  12F4  0878               	movf	___xxtofl@val+2,w
 13346  12F5  00A4               	movwf	___xxtofl@arg+2
 13347  12F6  0877               	movf	___xxtofl@val+1,w
 13348  12F7  00A3               	movwf	___xxtofl@arg+1
 13349  12F8  0876               	movf	___xxtofl@val,w
 13350  12F9  00A2               	movwf	___xxtofl@arg
 13351  12FA                     l1038:	
 13352  12FA  0879               	movf	___xxtofl@val+3,w
 13353  12FB  0478               	iorwf	___xxtofl@val+2,w
 13354  12FC  0477               	iorwf	___xxtofl@val+1,w
 13355  12FD  0476               	iorwf	___xxtofl@val,w
 13356  12FE  1D03               	skipz
 13357  12FF  2B01               	goto	u5951
 13358  1300  2B02               	goto	u5950
 13359  1301                     u5951:	
 13360  1301  2B0B               	goto	l4518
 13361  1302                     u5950:	
 13362  1302                     l4514:	
 13363  1302  3000               	movlw	0
 13364  1303  00F9               	movwf	?___xxtofl+3
 13365  1304  3000               	movlw	0
 13366  1305  00F8               	movwf	?___xxtofl+2
 13367  1306  3000               	movlw	0
 13368  1307  00F7               	movwf	?___xxtofl+1
 13369  1308  3000               	movlw	0
 13370  1309  00F6               	movwf	?___xxtofl
 13371  130A  2B83               	goto	l1040
 13372  130B                     l4518:	
 13373  130B  3096               	movlw	150
 13374  130C  00FA               	movwf	??___xxtofl
 13375  130D  087A               	movf	??___xxtofl,w
 13376  130E  00A1               	movwf	___xxtofl@exp
 13377  130F  2B1B               	goto	l4522
 13378  1310                     l4520:	
 13379  1310  3001               	movlw	1
 13380  1311  00FA               	movwf	??___xxtofl
 13381  1312  087A               	movf	??___xxtofl,w
 13382  1313  07A1               	addwf	___xxtofl@exp,f
 13383  1314  3001               	movlw	1
 13384  1315                     u5965:	
 13385  1315  36A5               	lsrf	___xxtofl@arg+3,f
 13386  1316  0CA4               	rrf	___xxtofl@arg+2,f
 13387  1317  0CA3               	rrf	___xxtofl@arg+1,f
 13388  1318  0CA2               	rrf	___xxtofl@arg,f
 13389  1319  0B89               	decfsz	9,f
 13390  131A  2B15               	goto	u5965
 13391  131B                     l4522:	
 13392  131B  30FE               	movlw	254
 13393  131C  0525               	andwf	___xxtofl@arg+3,w
 13394  131D  1D03               	btfss	3,2
 13395  131E  2B20               	goto	u5971
 13396  131F  2B21               	goto	u5970
 13397  1320                     u5971:	
 13398  1320  2B10               	goto	l4520
 13399  1321                     u5970:	
 13400  1321  2B35               	goto	l1044
 13401  1322                     l4524:	
 13402  1322  3001               	movlw	1
 13403  1323  00FA               	movwf	??___xxtofl
 13404  1324  087A               	movf	??___xxtofl,w
 13405  1325  07A1               	addwf	___xxtofl@exp,f
 13406  1326                     l4526:	
 13407  1326  3001               	movlw	1
 13408  1327  07A2               	addwf	___xxtofl@arg,f
 13409  1328  3000               	movlw	0
 13410  1329  3DA3               	addwfc	___xxtofl@arg+1,f
 13411  132A  3000               	movlw	0
 13412  132B  3DA4               	addwfc	___xxtofl@arg+2,f
 13413  132C  3000               	movlw	0
 13414  132D  3DA5               	addwfc	___xxtofl@arg+3,f
 13415  132E                     l4528:	
 13416  132E  3001               	movlw	1
 13417  132F                     u5985:	
 13418  132F  36A5               	lsrf	___xxtofl@arg+3,f
 13419  1330  0CA4               	rrf	___xxtofl@arg+2,f
 13420  1331  0CA3               	rrf	___xxtofl@arg+1,f
 13421  1332  0CA2               	rrf	___xxtofl@arg,f
 13422  1333  0B89               	decfsz	9,f
 13423  1334  2B2F               	goto	u5985
 13424  1335                     l1044:	
 13425  1335  30FF               	movlw	255
 13426  1336  0525               	andwf	___xxtofl@arg+3,w
 13427  1337  1D03               	btfss	3,2
 13428  1338  2B3A               	goto	u5991
 13429  1339  2B3B               	goto	u5990
 13430  133A                     u5991:	
 13431  133A  2B22               	goto	l4524
 13432  133B                     u5990:	
 13433  133B  2B45               	goto	l4532
 13434  133C                     l4530:	
 13435  133C  3001               	movlw	1
 13436  133D  02A1               	subwf	___xxtofl@exp,f
 13437  133E  3001               	movlw	1
 13438  133F                     u6005:	
 13439  133F  35A2               	lslf	___xxtofl@arg,f
 13440  1340  0DA3               	rlf	___xxtofl@arg+1,f
 13441  1341  0DA4               	rlf	___xxtofl@arg+2,f
 13442  1342  0DA5               	rlf	___xxtofl@arg+3,f
 13443  1343  0B89               	decfsz	9,f
 13444  1344  2B3F               	goto	u6005
 13445  1345                     l4532:	
 13446  1345  1BA4               	btfsc	___xxtofl@arg+2,7
 13447  1346  2B48               	goto	u6011
 13448  1347  2B49               	goto	u6010
 13449  1348                     u6011:	
 13450  1348  2B4F               	goto	l1051
 13451  1349                     u6010:	
 13452  1349                     l4534:	
 13453  1349  3002               	movlw	2
 13454  134A  0221               	subwf	___xxtofl@exp,w
 13455  134B  1803               	skipnc
 13456  134C  2B4E               	goto	u6021
 13457  134D  2B4F               	goto	u6020
 13458  134E                     u6021:	
 13459  134E  2B3C               	goto	l4530
 13460  134F                     u6020:	
 13461  134F                     l1051:	
 13462  134F  1821               	btfsc	___xxtofl@exp,0
 13463  1350  2B52               	goto	u6031
 13464  1351  2B53               	goto	u6030
 13465  1352                     u6031:	
 13466  1352  2B5B               	goto	l1052
 13467  1353                     u6030:	
 13468  1353                     l4536:	
 13469  1353  30FF               	movlw	255
 13470  1354  05A2               	andwf	___xxtofl@arg,f
 13471  1355  30FF               	movlw	255
 13472  1356  05A3               	andwf	___xxtofl@arg+1,f
 13473  1357  307F               	movlw	127
 13474  1358  05A4               	andwf	___xxtofl@arg+2,f
 13475  1359  30FF               	movlw	255
 13476  135A  05A5               	andwf	___xxtofl@arg+3,f
 13477  135B                     l1052:	
 13478  135B  1003               	clrc
 13479  135C  0CA1               	rrf	___xxtofl@exp,f
 13480  135D                     l4538:	
 13481  135D  0821               	movf	___xxtofl@exp,w
 13482  135E  00FA               	movwf	??___xxtofl
 13483  135F  01FB               	clrf	??___xxtofl+1
 13484  1360  01FC               	clrf	??___xxtofl+2
 13485  1361  01FD               	clrf	??___xxtofl+3
 13486  1362  3018               	movlw	24
 13487  1363                     u6045:	
 13488  1363  35FA               	lslf	??___xxtofl,f
 13489  1364  0DFB               	rlf	??___xxtofl+1,f
 13490  1365  0DFC               	rlf	??___xxtofl+2,f
 13491  1366  0DFD               	rlf	??___xxtofl+3,f
 13492  1367                     u6040:	
 13493  1367  0B89               	decfsz	9,f
 13494  1368  2B63               	goto	u6045
 13495  1369  087A               	movf	??___xxtofl,w
 13496  136A  04A2               	iorwf	___xxtofl@arg,f
 13497  136B  087B               	movf	??___xxtofl+1,w
 13498  136C  04A3               	iorwf	___xxtofl@arg+1,f
 13499  136D  087C               	movf	??___xxtofl+2,w
 13500  136E  04A4               	iorwf	___xxtofl@arg+2,f
 13501  136F  087D               	movf	??___xxtofl+3,w
 13502  1370  04A5               	iorwf	___xxtofl@arg+3,f
 13503  1371                     l4540:	
 13504  1371  0820               	movf	___xxtofl@sign,w
 13505  1372  1903               	btfsc	3,2
 13506  1373  2B75               	goto	u6051
 13507  1374  2B76               	goto	u6050
 13508  1375                     u6051:	
 13509  1375  2B7B               	goto	l4546
 13510  1376                     u6050:	
 13511  1376                     l4542:	
 13512  1376  1FF9               	btfss	___xxtofl@val+3,7
 13513  1377  2B79               	goto	u6061
 13514  1378  2B7A               	goto	u6060
 13515  1379                     u6061:	
 13516  1379  2B7B               	goto	l4546
 13517  137A                     u6060:	
 13518  137A                     l4544:	
 13519  137A  17A5               	bsf	___xxtofl@arg+3,7
 13520  137B                     l4546:	
 13521  137B  0825               	movf	___xxtofl@arg+3,w
 13522  137C  00F9               	movwf	?___xxtofl+3
 13523  137D  0824               	movf	___xxtofl@arg+2,w
 13524  137E  00F8               	movwf	?___xxtofl+2
 13525  137F  0823               	movf	___xxtofl@arg+1,w
 13526  1380  00F7               	movwf	?___xxtofl+1
 13527  1381  0822               	movf	___xxtofl@arg,w
 13528  1382  00F6               	movwf	?___xxtofl
 13529  1383                     l1040:	
 13530  1383  0008               	return
 13531  1384                     __end_of___xxtofl:	
 13532  007E                     btemp	set	126	;btemp
 13533  007E                     wtemp0	set	126


Data Sizes:
    Strings     45
    Constant    0
    Data        1
    BSS         161
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     49      80
    BANK3            80      0      51
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK2[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_3(CODE[6]), STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 5
		 -> temp(BANK3[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 5
		 -> temp(BANK3[5]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    S1199_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 5
		 -> temp(BANK3[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 5
		 -> temp(BANK3[5]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_3(CODE[6]), STR_1(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_3(CODE[6]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_3(CODE[6]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[11]), STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
		 -> temp(BANK3[5]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___xxtofl
    _vfpfcnvrt->_tolower
    _efgtoa->_tolower
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _atoi->___wmul
    _atoi->_isdigit
    _config->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Cursor_Off->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Lcd_Port->_I2C_Write_Display
    ___xxtofl->_read_I
    ___xxtofl->_read_Temp
    ___xxtofl->_read_U

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _efgtoa->___fladd
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _config->_I2C_Master_Init

Critical Paths under _main in BANK1

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub

Critical Paths under _main in BANK2

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   43795
                                             39 BANK2     10    10      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _adc_config
                             _config
                         _pwm_config
                             _read_I
                          _read_Temp
                             _read_U
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   28842
                                             23 BANK2     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   28308
                                             15 BANK2      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           47    45      2   27971
                                             78 BANK0      2     0      2
                                             74 BANK1      6     6      0
                                              0 BANK2     15    15      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              66    61      5   22419
                                              8 BANK1     66    61      5
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMMON     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2907
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2789
                                              0 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2440
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                          _read_Temp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3481
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
                             _read_I (ARG)
                          _read_Temp (ARG)
                             _read_U (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             32 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2489
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _read_I (ARG)
                          _read_Temp (ARG)
                             _read_U (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1237
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_U                                               6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _read_Temp                                            6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _read_I                                               6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _pwm_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               2     2      0    3621
                                              8 BANK0      2     2      0
                         _Cursor_Off
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     5     3      2    1019
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       5     5      0     397
                                              5 COMMON     5     5      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     929
                                             11 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             1     1      0     551
                                             11 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _Cursor_Off                                           0     0      0     355
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              6     6      0     355
                                              5 COMMON     6     6      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             3     3      0     196
                                              2 COMMON     3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                  _I2C_Write_Display
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Display                                    2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              6 COMMON     8     4      4
                                              0 BANK0      6     6      0
                             _read_I (ARG)
                          _read_Temp (ARG)
                             _read_U (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           _read_I (ARG)
           _read_Temp (ARG)
           _read_U (ARG)
         _read_I (ARG)
         _read_Temp (ARG)
         _read_U (ARG)
       ___xxtofl (ARG)
         _read_I (ARG)
         _read_Temp (ARG)
         _read_U (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
         _read_I (ARG)
         _read_Temp (ARG)
         _read_U (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     ___xxtofl (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     _read_Temp (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
         _read_I (ARG)
         _read_Temp (ARG)
         _read_U (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     ___xxtofl (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     _read_I (ARG)
     _read_Temp (ARG)
     _read_U (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
       _read_I (ARG)
       _read_Temp (ARG)
       _read_U (ARG)
     _read_I (ARG)
     _read_Temp (ARG)
     _read_U (ARG)
   ___xxtofl
     _read_I (ARG)
     _read_Temp (ARG)
     _read_U (ARG)
   _adc_config
   _config
     _Cursor_Off
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
       _Lcd_Port
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Write_Display
           _I2C_Master_Wait
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Write_Display
             _I2C_Master_Wait
   _pwm_config
   _read_I
   _read_Temp
   _read_U
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
                   _read_I (ARG)
                   _read_Temp (ARG)
                   _read_U (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             ___xxtofl (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             _read_Temp (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             ___xxtofl (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             _read_I (ARG)
             _read_Temp (ARG)
             _read_U (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
             _read_I (ARG)
             _read_Temp (ARG)
             _read_U (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                     _read_I (ARG)
                     _read_Temp (ARG)
                     _read_U (ARG)
                   _read_I (ARG)
                   _read_Temp (ARG)
                   _read_U (ARG)
                 ___xxtofl (ARG)
                   _read_I (ARG)
                   _read_Temp (ARG)
                   _read_U (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
                   _read_I (ARG)
                   _read_Temp (ARG)
                   _read_U (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_Temp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
                   _read_I (ARG)
                   _read_Temp (ARG)
                   _read_U (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               ___xxtofl (ARG)
                 _read_I (ARG)
                 _read_Temp (ARG)
                 _read_U (ARG)
               _read_I (ARG)
               _read_Temp (ARG)
               _read_U (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     31      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      33      11       63.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     181      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     181      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jun 19 20:44:18 2020

              ___fldiv@aexp 0059                ___fldiv@bexp 0058                ___fldiv@sign 0051  
               __CFG_CP$OFF 0000                          l80 17F3                          l92 1EA8  
                        l78 17DE                          l95 1DD8                          l89 1E68  
                        l98 1E15                ___awdiv@sign 0076         ___wmul@multiplicand 0072  
       __Umul8_16@word_mpld 0076                 __CFG_LVP$ON 0000                         l101 1D91  
                       l104 1DCE                         l204 1B53                         l212 1ADB  
                       l221 1042                         l230 1B8C          I2C_Write_Display@d 0070  
                       l224 1D87                         l209 1D12                         l242 1AD2  
                       l218 1E5E                         l251 1CE1                         l260 1AB6  
                       l172 1B0A                         l500 0363                         l501 0345  
                       l254 0004                         l175 1AF4                         l511 039C  
                       l272 1AC9                         l257 000F                         l169 10F9  
                       l266 1ABC                         l603 1B97                         l605 1BAB  
                       l462 1F69                         l465 1F8B                         l529 0581  
                       l467 1FA5                         l804 11B7                         l485 07DF  
                       l910 092E                         l639 1FFF                         l807 11CC  
                       l904 08B1                         l585 0FFF                         l756 1158  
                       l772 1EC5                         l908 0952                         l773 1EE1  
                       l781 1269                         l925 09E4                         l917 0A8A  
                       l950 1D48                         l935 0A28                         l599 1CB1  
                       l960 148A                         l784 12BD                         l769 0852  
                       l793 1AE6                         l929 0A06                         l962 15E6  
                       l778 1EF6                         l946 0A81                         l938 0A5F  
                       l947 0A8A                         l981 15B4                         l789 12D6  
                       l797 11CC                         l982 15CE                         l984 15DD  
                       l976 1568                         _PR2 001B                __CFG_CPD$OFF 0000  
                       _pad 1F4D                ___awmod@sign 0076                __CFG_BORV$LO 0000  
                       wreg 0009                ___flmul@aexp 0038                ___flmul@bexp 0039  
              ___flmul@sign 0033                ___flmul@temp 003E                ___flmul@prod 003A  
              ___fltol@exp1 007A                        l1000 0CE1                        l1012 0CD5  
                      l1100 0051                        l1101 00FA                        l1006 0C5D  
                      l1111 1B22                        l1040 1383                        l1105 00F2  
                      l1051 134F                        l1052 135B                        l1044 1335  
                      l1140 1F4C                        l1125 1B3A                        l1038 12FA  
                      l1119 1BCC                        l1063 124B                        l3000 0877  
                      l1082 13C1                        l3010 088F                        l3002 087F  
                      l1170 1B6D                        l1155 1C34                        l3100 0981  
                      l3020 08A6                        l3012 0893                        l3004 0884  
                      l1148 1C82                        l1164 1BED                        l3110 09CE  
                      l3102 0989                        l3030 08BF                        l3022 08A7  
                      l3014 0894                        l3006 088A                        l1158 1AAF  
                      l1174 109D                        l1095 1432                        l3200 1ABA  
                      l3112 09D3                        l3104 098E                        l3040 08D3  
                      l3032 08C3                        l3016 0899                        l3024 08A9  
                      l3008 088B                        l1184 1C59                        l4000 0701  
                      l3130 0A0D                        l3122 09FA                        l3106 09A4  
                      l3114 09DC                        l3050 08E7                        l3042 08D7  
                      l3034 08C7                        l3026 08B7                        l3018 089E  
                      l3210 1F67                        l3202 1F4F                        l4010 0716  
                      l4002 0707                        l3300 1B93                        l1196 1C00  
                      l3140 0A1B                        l3132 0A0F                        l3124 0A01  
                      l3116 09EC                        l3108 09C8                        l3052 08EB  
                      l3044 08DB                        l3036 08CB                        l3028 08BB  
                      l3060 08FB                        l3220 1F99                        l3212 1F6C  
                      l3204 1F54                        l4020 074A                        l4012 071B  
                      l4004 0709                        l1189 1C59                        l3302 1B9C  
                      l3310 10FA                        l1198 1C10                        l3150 0A32  
                      l3142 0A1F                        l3134 0A14                        l3126 0A05  
                      l3118 09F1                        l3070 093A                        l3062 08FC  
                      l3054 08EF                        l3046 08DF                        l3038 08CF  
                      l3230 1200                        l3214 1F78                        l3206 1F5D  
                      l4030 076C                        l4014 0720                        l4022 074E  
                      l4006 070D                        l4110 1058                        l3304 1BA1  
                      l3320 110A                        l3312 10FB                        l3400 1EF5  
                      l3160 0A69                        l3152 0A3A                        l3144 0A25  
                      l3128 0A0A                        l3136 0A16                        l3080 0956  
                      l3072 093E                        l3064 0913                        l3056 08F3  
                      l3048 08E3                        l3240 1227                        l3232 1217  
                      l3224 11CD                        l3216 1F7D                        l3208 1F62  
                      l4040 0786                        l4032 0771                        l4024 0754  
                      l4016 0736                        l4008 0711                        l4120 1067  
                      l4200 0D5F                        l3306 1BA7                        l3330 111E  
                      l3322 110F                        l3314 10FF                        l3410 1285  
                      l3170 0A7D                        l3162 0A71                        l3154 0A3E  
                      l3090 0970                        l3138 0A1A                        l3082 095B  
                      l3074 093F                        l3066 0932                        l3058 08F7  
                      l3234 121C                        l3226 11E5                        l3218 1F90  
                      l3250 1BD6                        l4050 07AD                        l4034 0775  
                      l4026 0761                        l4018 0746                        l4122 1070  
                      l4114 105B                        l4106 1044                        l4210 0DA5  
                      l4140 1CF2                        l4132 1CE3                        l4300 1FC8  
                      l4060 1384                        l3340 113E                        l3332 1123  
                      l3324 1113                        l3316 1104                        l3500 146C  
                      l3420 12D5                        l3412 1289                        l3404 124C  
                      l3180 1BF8                        l3172 0A85                        l3164 0A76  
                      l3156 0A5B                        l3148 0A2D                        l3092 0974  
                      l3076 0947                        l3068 0938                        l3244 1247  
                      l3228 11FA                        l3252 1C35                        l4052 07B6  
                      l4044 079E                        l4036 077E                        l4028 0766  
                      l4124 1079                        l4116 105F                        l4108 104C  
                      l4220 0DEE                        l4212 0DAF                        l4204 0D88  
                      l3190 1AB1                        l4150 1D0E                        l4142 1CF6  
                      l4134 1CEE                        l4310 1FF1                        l4302 1FCF  
                      l4070 13AE                        l4062 138A                        l3350 1154  
                      l3342 113F                        l3334 1127                        l3326 1115  
                      l3318 1106                        l3510 1480                        l3502 146D  
                      l3414 12A1                        l3406 1261                        l3182 1BFC  
                      l3174 0A89                        l3166 0A77                        l3158 0A64  
                      l3094 097A                        l3086 0964                        l3078 094B  
                      l3238 1221                        l3270 0056                        l3262 0010  
                      l4054 07BA                        l4046 07A4                        l4038 0782  
                      l4126 107F                        l4118 1063                        l4230 0E45  
                      l4222 0DF8                        l4214 0DC2                        l4206 0D8E  
                      l3192 1AB4                        l4144 1CFB                        l4136 1CEE  
                      l4304 1FE1                        l4312 1FF7                        l4320 1E1D  
                      l4160 1D63                        l4152 1D4A                        l4400 10BA  
                      l4080 13C6                        l4072 13AF                        l4064 138E  
                      l3344 1144                        l3336 112B                        l3328 111B  
                      l3360 080A                        l3600 15C5                        l3504 1472  
                      l3512 1482                        l3416 12A5                        l3408 127D  
                      l3184 1C07                        l3176 1BEF                        l3424 1ADC  
                      l3168 0A7B                        l3096 097C                        l3088 096C  
                      l3440 1180                        l3432 1159                        l3280 00A2  
                      l3272 006E                        l3264 0028                        l3248 1BCE  
                      l3256 1C4C                        l4048 07A9                        l4056 07C4  
                      l4128 108F                        l4240 0E97                        l4232 0E4A  
                      l4216 0DCC                        l4208 0DA2                        l3194 1AC3  
                      l4146 1CFF                        l4138 1CEE                        l4306 1FE9  
                      l4330 1E41                        l4322 1E2C                        l4170 1D79  
                      l4162 1D67                        l4154 1D4F                        l4410 10D6  
                      l4402 10BB                        l4090 1416                        l4082 13DA  
                      l4066 1390                        l3338 113A                        l3346 114A  
                      l3370 081E                        l3362 080C                        l3354 0800  
                      l3602 15CD                        l3530 14C9                        l3514 1492  
                      l3522 14AB                        l3506 1477                        l3418 12D3  
                      l3186 1C0C                        l3178 1BF1                        l3426 1AE4  
                      l3098 0980                        l3442 1181                        l3434 1164  
                      l3282 00B3                        l3266 0043                        l3258 1C52  
                      l4242 0EAA                        l4250 0EEA                        l4234 0E6B  
                      l4226 0E21                        l4218 0DDC                        l3196 1AC6  
                      l4148 1D07                        l4308 1FEA                        l4316 1AD3  
                      l4332 1E50                        l4324 1E31                        l4172 1D7E  
                      l4164 1D6C                        l4156 1D5A                        l4340 1B72  
                      l4420 10EC                        l4412 10D9                        l4404 10BC  
                      l3292 1B0B                        l4092 141C                        l4076 13B6  
                      l4068 139A                        l3348 114F                        l3380 0839  
                      l3372 0823                        l3364 0810                        l3356 0801  
                      l3604 15D3                        l3540 14E8                        l3532 14D1  
                      l3524 14B0                        l3516 149E                        l3508 147F  
                      l3700 0C26                        l3620 0A99                        l3428 1AE6  
                      l3444 1189                        l3284 00CA                        l3276 0083  
                      l3268 0050                        l4260 0F56                        l4252 0EFC  
                      l4244 0EB4                        l4236 0E70                        l4228 0E27  
                      l4180 0D02                        l4500 1C1F                        l4510 12E2  
                      l3198 1AB7                        l4350 1CB6                        l4334 1E55  
                      l4326 1E35                        l4318 1E18                        l4174 1D82  
                      l4166 1D70                        l4158 1D5F                        l4342 1B7C  
                      l4414 10DC                        l4406 10BD                        l4430 1B03  
                      l4422 1AF5                        l4094 1422                        l4086 13FA  
                      l4078 13BD                        l3382 083E                        l3374 0827  
                      l3366 0815                        l3358 0805                        l3606 15D7  
                      l3550 1514                        l3542 14F6                        l3534 14D9  
                      l3518 14A2                        l3702 0C2D                        l3710 0C3D  
                      l3630 0AAE                        l3622 0A9A                        l3614 0A8B  
                      l3470 1D16                        l3462 11AE                        l3454 1197  
                      l3446 118B                        l3438 116D                        l3286 00D3  
                      l3278 009A                        l4270 0FAC                        l4262 0F6A  
                      l4246 0EC7                        l4238 0E91                        l4190 0D38  
                      l4182 0D07                        l4502 1C2B                        l4520 1310  
                      l4512 12F2                        l4352 1CDD                        l4360 1004  
                      l4336 1E59                        l4328 1E3B                        l4168 1D75  
                      l4344 1B81                        l4416 10DF                        l4408 10C9  
                      l4432 1B05                        l4424 1AFB                        l4440 1E5F  
                      l3296 1B8D                        l4096 142E                        l3376 082B  
                      l3368 081B                        l3384 0844                        l3608 15D9  
                      l3560 152F                        l3552 1515                        l3544 14FA  
                      l3536 14E1                        l3528 14B9                        l3480 1441  
                      l3392 1EA9                        l3712 0C41                        l3704 0C31  
                      l3640 0AC4                        l3632 0AB6                        l3624 0A9F  
                      l3616 0A91                        l3464 11BC                        l3448 118F  
                      l3456 11A7                        l3288 00EA                        l3800 0184  
                      l4280 0FD3                        l4272 0FB6                        l4264 0F74  
                      l4256 0F3B                        l4192 0D3C                        l4184 0D0B  
                      l4176 0CE4                        l4600 17C1                        l4530 133C  
                      l4522 131B                        l4514 1302                        l4506 12D9  
                      l4354 1CDE                        l4346 1CB2                        l4362 100B  
                      l4338 1B6E                        l4418 10E5                        l4434 1B08  
                      l4426 1AFE                        l4450 1E9F                        l4442 1E66  
                      l3298 1B8F                        l3386 0849                        l3378 0835  
                      l3570 1544                        l3562 1531                        l3554 151D  
                      l3546 14FB                        l3538 14E3                        l3490 1455  
                      l3482 1442                        l3474 1433                        l3394 1EBD  
                      l3730 0C8B                        l3722 0C62                        l3714 0C42  
                      l3706 0C32                        l3650 0AE0                        l3642 0AC9  
                      l3634 0ABB                        l3626 0AA4                        l3618 0A95  
                      l3466 11C1                        l3810 01B6                        l4274 0FC3  
                      l4258 0F41                        l4194 0D3D                        l4186 0D1F  
                      l4178 0CF8                        l4370 1C85                        l4610 17E5  
                      l4602 17C8                        l4540 1371                        l4532 1345  
                      l4524 1322                        l4508 12DE                        l4436 1AE7  
                      l4292 1FA6                        l4356 1CE0                        l4348 1CB5  
                      l4364 1016                        l4428 1AFF                        l4460 1D8F  
                      l4452 1EA3                        l4444 1E6C                        l3388 084E  
                      l3580 1565                        l3564 1538                        l3572 1548  
                      l3548 1502                        l3556 1521                        l3484 1447  
                      l3492 1457                        l3476 1439                        l3396 1ED9  
                      l3740 0CBD                        l3724 0C67                        l3732 0C8F  
                      l3716 0C46                        l3708 0C39                        l3660 0B00  
                      l3652 0AE5                        l3644 0ACE                        l3636 0ABF  
                      l3628 0AAC                        l3468 1D13                        l2940 1EF7  
                      l3900 03CE                        l3812 01BB                        l3804 019D  
                      l4268 0F98                        l4188 0D29                        l4196 0D43  
                      l4284 0FD6                        l4372 1C89                        l4612 17F7  
                      l4604 17D5                        l4542 1376                        l4534 1349  
                      l4526 1326                        l4518 130B                        l4438 1AEF  
                      l4294 1FB6                        l4366 101A                        l4358 1000  
                      l4390 10B5                        l4382 109E                        l4470 1DC9  
                      l4462 1D95                        l4454 1EA7                        l4446 1E74  
                      l3590 157E                        l3574 154C                        l3566 153C  
                      l3558 1527                        l3494 145F                        l3486 144C  
                      l3478 143D                        l3398 1EF3                        l3750 0CD9  
                      l3742 0CBF                        l3734 0C9C                        l3726 0C6F  
                      l3718 0C5A                        l3670 0B5B                        l3662 0B0D  
                      l3654 0AEA                        l3646 0AD6                        l3638 0AC3  
                      l2950 1F30                        l2942 1EFC                        l3910 04A6  
                      l3902 03D2                        l3830 021F                        l3822 0201  
                      l3806 01A3                        l4286 0FF4                        l4278 0FC9  
                      l4198 0D55                        l4374 1C8C                        l4606 17DA  
                      l4550 15E7                        ?_pad 0024                        l4544 137A  
                      l4536 1353                        l4528 132E                        l4368 1ACA  
                      l4296 1FB9                        l4392 10B6                        l4384 10A6  
                      l4472 1DCD                        l4464 1D9D                        l4448 1E9B  
                      l4480 1DDC                        l3760 1BC4                        l3592 1596  
                      l3584 156D                        l3576 154D                        l3568 153D  
                      l3496 1464                        l3488 1454                        l3744 0CCC  
                      l3736 0CA6                        l3728 0C73                        l3680 0B90  
                      l3672 0B68                        l3664 0B27                        l3648 0AD8  
                      l2952 1F43                        l2944 1F01                        l2960 1C5C  
                      l3920 052C                        l3912 04AA                        l3904 03D4  
                      l3824 0207                        l3808 01AD                        l3816 01D6  
                      l4376 1CA4                        l4608 17E2                        l4560 15F5  
                      l4552 15EA                        l4546 137B                        l4538 135D  
                      l4298 1FC4                        l4394 10B7                        l4386 10B2  
                      l4466 1DC1                        l4458 1D88                        l4490 1E14  
                      l4482 1DE4                        l3762 1BC5                        l3754 1BAC  
                      l3586 1572                        l3594 159A                        l3578 1551  
                      l3498 1468                        l3746 0CD0                        l3738 0CB4  
                      l3690 0BD3                        l3682 0B97                        l3674 0B6F  
                      l3666 0B34                        l3658 0AF3                        l2946 1F06  
                      l2962 1C5F                        l2970 1B5A                        l3930 057A  
                      l3922 0531                        l3914 04B8                        l3906 03DC  
                      l3850 02F5                        l3842 025D                        l3826 0211  
                      l3818 01E8                        l3834 023A                        l3770 00FF  
                      l4378 1CAD                        l4570 15FC                        l4562 15F6  
                      l4554 15ED                        l2956 0004                        l4396 10B8  
                      l4388 10B4                        l4468 1DC5                        l4484 1E08  
                      l4476 1DCF                        l3756 1BAE                        l3596 15A7  
                      l3588 157A                        l3748 0CD1                        l3692 0BE7  
                      l3684 0BAB                        l3676 0B7C                        l3668 0B4E  
                      l2948 1F11                        l2964 1C6D                        l2972 1B5E  
                      l3940 05E3                        l3932 057F                        l3924 0539  
                      l3916 050A                        l3908 03E5                        l3860 033A  
                      l3852 02F9                        l3844 0289                        l3836 0243  
                      l3828 021A                        l3780 0141                        l3772 0107  
                      l4580 16F1                        l4572 1605                        l4564 15F9  
                      l4556 15F0                        l2958 0009                        l3766 1B3C  
                      l4398 10B9                        l4486 1E0C                        l4478 1DD6  
                      l3758 1BB5                        l3598 15C2                        l3694 0BFC  
                      l3686 0BB2                        l3678 0B83                        l2990 0862  
                      l2982 0853                        l2966 1C72                        l2974 1B67  
                      l3950 05FD                        l3942 05E9                        l3934 0588  
                      l3926 056C                        l3918 0514                        l3862 0341  
                      l3846 028D                        l3854 0320                        l3838 0245  
                      l3790 0160                        l3782 0149                        l3774 0125  
                      l4494 1C13                        l4590 178D                        l4582 1744  
                      l4574 160A                        l4558 15F3                        l4488 1E10  
                      l4680 13D2                        l3696 0C13                        l3688 0BC6  
                      l2992 0867                        l2984 0859                        l2968 1B55  
                      l3960 061C                        l3952 0606                        l3944 05ED  
                      l3936 05D7                        l3928 0574                        l3880 0397  
                      l3872 0369                        l3864 0354                        l3856 0330  
                      l3848 02C9                        l3792 0164                        l3784 014F  
                      l3776 012A                        l3768 00FD                        l4496 1C1B  
                      l4592 1794                        l4584 175D                        l4576 1617  
                      l3698 0C1A                        l2994 086C                        l2986 085D  
                      l2978 1B23                        l3970 0638                        l3962 0620  
                      l3954 060A                        l3938 05DC                        l3946 05F2  
                      l3890 03B4                        l3882 03A0                        l3874 036F  
                      l3866 035A                        l3858 0334                        l3794 0169  
                      l3786 0154                        l3778 013E                        l4498 1C1D  
                      l4594 179B                        l4586 1764                        l4578 16C5  
                      l2996 0874                        l2988 0861                        l3980 06B6  
                      l3972 063C                        l3964 0624                        l3956 060E  
                      l3948 05F9                        l3892 03BA                        l3884 03A6  
                      l3876 037C                        l3796 016E                        l3788 015B  
                      l4596 17A1                        l4588 176B                        l2998 0875  
                      l3990 06E2                        l3958 0613                        l3966 0628  
                      l3974 0640                        l3982 06BA                        l3894 03BE  
                      l3886 03AC                        l3878 0391                        l3798 0172  
                      l4598 17BA                        l3992 06EC                        l3984 06C8  
                      l3976 0686                        l3968 062E                        l3896 03C6  
                      l3888 03B0                        l3994 06F0                        l3986 06D6  
                      l3978 06B2                        l3898 03C8                        l3996 06F7  
                      l3988 06DD                        l3998 06FD                        STR_1 180B  
                      STR_2 182A                        STR_3 180B                        STR_4 1824  
                      STR_5 180B                        STR_6 1827                        STR_7 1800  
                      STR_8 1811                        STR_9 1819                        u3100 1F30  
                      u3101 1F2F                        _LATA 010C                        u3110 0009  
                      u3111 0008                        _LATC 010E                        u3120 000F  
                      u4000 112B                        u3200 088A                        u3121 000E  
                      u4001 112A                        u3201 0889                        u3105 1F2C  
                      u3210 0893                        u3130 1C82                        u3211 0892  
                      u3131 1C81                        u4020 113A                        u4100 082B  
                      u3300 093E                        u3220 0899                        u3140 1B67  
                      u4021 1139                        u4101 082A                        u3301 093D  
                      u3221 0898                        u3141 1B66                        u4110 0835  
                      u3230 089E                        u3070 1EFC                        u3150 1B33  
                      u4015 112C                        u4111 0834                        u3231 089D  
                      u3071 1EFB                        u3151 1B31                        u4040 114A  
                      u4200 1289                        u3400 09D3                        u3320 0952  
                      u3240 08B7                        u3080 1F01                        u3160 1B34  
                      u5000 01FA                        u4041 1149                        u4025 1136  
                      u4201 1288                        u3401 09D2                        u3321 0951  
                      u3241 08B6                        u3081 1F00                        u5001 01F8  
                      u4050 114F                        u4130 0844                        u4210 12A5  
                      u3410 09EC                        u3330 0956                        u3250 08BB  
                      u3170 0861                        u3090 1F11                        u5010 01FB  
                      u4051 114E                        u4035 1140                        u4131 0843  
                      u4115 0831                        u4211 12A4                        u3411 09EB  
                      u3331 0955                        u3315 0941                        u3251 08BA  
                      u3171 0860                        u3091 1F10                        u4140 0849  
                      u4060 0805                        u4220 12D3                        u3500 0A2C  
                      u3420 09F1                        u3340 095B                        u3260 0913  
                      u3180 0867                        u4300 11AD                        u5100 036F  
                      u5020 0207                        u4141 0848                        u4125 083A  
                      u4061 0804                        u4221 12D2                        u3501 0A2B  
                      u3421 09F0                        u3341 095A                        u3261 0912  
                      u3181 0866                        u4301 11AC                        u5101 036E  
                      u5021 0206                        u4070 0810                        u4150 1EBD  
                      u4230 1AE4                        u3510 0A32                        u3350 0970  
                      u3270 091D                        u3190 086C                        u5110 037C  
                      u5030 025C                        u4071 080F                        u4151 1EBC  
                      u4231 1AE3                        u3511 0A31                        u3351 096F  
                      u3271 091B                        u3191 086B                        u5111 037B  
                      u5031 025B                        u4080 081B                        u4400 1492  
                      u4160 1ED9                        u3600 1BFC                        u3520 0A3E  
                      u3440 0A05                        u3360 0974                        u3280 091E  
                      u4320 11BC                        u4240 1164                        u5200 050A  
                      u5120 0391                        u5040 02C8                        u4081 081A  
                      u4401 1491                        u4161 1ED8                        u4225 12CF  
                      u3601 1BFB                        u3521 0A3D                        u3441 0A04  
                      u3361 0973                        u3265 090F                        u4321 11BB  
                      u4241 1163                        u5201 0509                        u5121 0390  
                      u5041 02C7                        u6010 1349                        u4410 14B0  
                      u4170 1EF3                        u3530 0A4C                        u3450 0A0A  
                      u3370 0980                        u3290 0932                        u4330 11C1  
                      u4250 117A                        u5210 052C                        u5130 03A6  
                      u5050 0320                        u6011 1348                        u4411 14AF  
                      u4171 1EF2                        u3451 0A09                        u3435 09FB  
                      u3371 097F                        u3291 0931                        u4331 11C0  
                      u4315 11AF                        u5211 052B                        u5131 03A5  
                      u5115 0378                        u5051 031F                        u6020 134F  
                      u4420 14E8                        u4340 1441                        u4180 1261  
                      u3620 1C0C                        u3540 0A5B                        u3460 0A14  
                      u4260 118F                        u3700 1217                        u5300 062E  
                      u5220 0531                        u5140 03AC                        u5060 033A  
                      u6100 17F7                        u6021 134E                        u6005 133F  
                      u4421 14E7                        u4341 1440                        u4181 1260  
                      u3621 1C0B                        u3541 0A5A                        u3461 0A13  
                      u4261 118E                        u3701 1216                        u5301 062D  
                      u5221 0530                        u5141 03AB                        u5125 038D  
                      u5061 0339                        u6101 17F6                        u6030 1353  
                      u4510 153C                        u4350 1447                        u4190 127D  
                      u3550 0A64                        u3470 0A1A                        u3390 09A4  
                      u4270 1196                        u3710 1227                        u3630 1F54  
                      u5310 06C8                        u5230 057A                        u5150 03B0  
                      u5070 0341                        u6031 1352                        u4095 081F  
                      u4511 153B                        u4351 1446                        u4175 1EEF  
                      u4191 127C                        u3615 1C01                        u3551 0A63  
                      u3535 0A48                        u3471 0A19                        u3391 09A3  
                      u4271 1195                        u4255 1176                        u3711 1226  
                      u3631 1F53                        u5311 06C7                        u5231 0579  
                      u5151 03AF                        u5071 0340                        u6040 1367  
                      u4600 15A7                        u4360 144C                        u3560 0A69  
                      u3480 0A1F                        u3720 1234                        u3800 0050  
                      u3640 1F62                        u5400 0797                        u5320 06D6  
                      u5240 05DC                        u5160 03BA                        u5080 0354  
                      u4601 15A6                        u4505 1532                        u4361 144B  
                      u3561 0A68                        u3481 0A1E                        u3393 09A0  
                      u3385 0983                        u3801 004F                        u3641 1F61  
                      u5401 0795                        u5321 06D5                        u5241 05DB  
                      u5161 03B9                        u5081 0353                        u6050 1376  
                      u4610 15C2                        u4530 154C                        u4450 14FA  
                      u4370 146C                        u3570 0A76                        u3490 0A25  
                      u4290 11A6                        u3730 123F                        u3810 0056  
                      u3650 1F8B                        u5410 0798                        u5330 06DD  
                      u5250 05E3                        u5170 03BE                        u5090 0368  
                      u6051 1375                        u4611 15C1                        u4531 154B  
                      u4451 14F9                        u4435 14E9                        u4371 146B  
                      u3571 0A75                        u3491 0A24                        u4291 11A5  
                      u3731 123D                        u3811 0055                        u3651 1F8A  
                      u5331 06DC                        u5315 06C4                        u5251 05E2  
                      u5171 03BD                        u5091 0367                        u6060 137A  
                      u3900 1B1B                        u4620 15D7                        u4540 1551  
                      u4380 1472                        u4700 0AEA                        u3580 0A7B  
                      u3740 1240                        u3820 0064                        u3660 1F90  
                      u5420 07A4                        u5340 06E2                        u5260 05E9  
                      u5180 03CE                        u5500 1058                        u6061 1379  
                      u6045 1363                        u3901 1B19                        u4621 15D6  
                      u4605 15A3                        u4541 1550                        u4525 153E  
                      u4445 14F0                        u4381 1471                        u4701 0AE9  
                      u3581 0A7A                        u4285 1198                        u3725 1230  
                      u3805 004C                        u3661 1F8F                        u5421 07A3  
                      u5341 06E1                        u5325 06D2                        u5261 05E8  
                      u5181 03CD                        u5085 0350                        u5501 1057  
                      u3910 1B1C                        u5430 139A                        u4550 1565  
                      u4470 1514                        u4390 1477                        u4630 0A99  
                      u3590 0A89                        u3670 11F2                        u3830 0082  
                      u3750 1BED                        u5350 06FD                        u5270 05ED  
                      u5190 04B8                        u5510 1070                        u6070 1617  
                      u6207 1D6D                        u5431 1399                        u4615 15BE  
                      u4551 1564                        u4471 1513                        u4391 1476  
                      u4631 0A98                        u3591 0A88                        u3831 0081  
                      u3655 1F87                        u3751 1BEC                        u5351 06FC  
                      u5271 05EC                        u5191 04B7                        u5511 106F  
                      u6071 1616                        u3920 1B93                        u5440 13AE  
                      u4560 156C                        u4480 1527                        u4800 0C46  
                      u4640 0A9F                        u3680 1200                        u3840 0090  
                      u3760 1C45                        u5360 070D                        u5280 05F9  
                      u5520 1079                        u5600 0D7E                        u6080 17DA  
                      u6217 1D7F                        u3921 1B92                        u5441 13AD  
                      u4561 156B                        u4481 1526                        u4465 14FC  
                      u4801 0C45                        u4641 0A9E                        u3681 11FF  
                      u3825 0060                        u3761 1C43                        u5361 070C  
                      u5281 05F8                        u5521 1078                        u5601 0D7C  
                      u6081 17D9                        u6137 17CE                        u5450 13BC  
                      u4570 1572                        u4490 152F                        u4810 0C5A  
                      u4730 0BF2                        u4650 0AA4                        u3690 120D  
                      u3850 009A                        u3770 1C46                        u5370 0754  
                      u5290 05FD                        u5530 107F                        u5610 0D7F  
                      u6090 17E2                        u6227 1007                        u5451 13BB  
                      u4571 1571                        u4491 152E                        u4475 1510  
                      u4811 0C59                        u4715 0B69                        u4651 0AA3  
                      u3675 11EE                        u3851 0099                        u5371 0753  
                      u5291 05FC                        u5195 04B4                        u5531 107E  
                      u6147 17EB                        u6091 17E1                        u6075 1613  
                      u4900 1BC4                        u5460 140F                        u4580 157E  
                      u4820 0C61                        u4740 0C09                        u4660 0AC3  
                      u3860 00C0                        u3780 1C52                        u5380 0761  
                      u5540 108F                        u5700 0E97                        u5620 0D8E  
                      u6237 1012                        u6157 1DD3                        u4901 1BC3  
                      u5461 140D                        u4581 157D                        u4821 0C60  
                      u4725 0B98                        u4661 0AC2                        u3845 008C  
                      u3781 1C51                        u5381 0760                        u5541 108E  
                      u5701 0E96                        u5621 0D8D                        u3950 1BA7  
                      u5470 1410                        u4590 158C                        u4830 0C67  
                      u4670 0AC9                        u3870 00CA                        u3790 0035  
                      u5390 076C                        u4910 0125                        u5710 0EFC  
                      u5630 0DA2                        u6247 101D                        u6167 1E63  
                      u3951 1BA6                        u3935 1B98                        u4831 0C66  
                      u4735 0BEE                        u4671 0AC8                        u3695 1209  
                      u3871 00C9                        u5391 076B                        u4911 0124  
                      u5711 0EFB                        u5631 0DA1                        u5800 1FE1  
                      u5480 141C                        u3960 10FF                        u4840 0C73  
                      u4680 0ACE                        u3880 00E0                        u4920 014F  
                      u5720 0F31                        u5640 0DC2                        u6257 1D02  
                      u5801 1FE0                        u6177 1D8C                        u3945 1B9D  
                      u5481 141B                        u3961 10FE                        u4841 0C72  
                      u4745 0C05                        u4681 0ACD                        u3865 00BC  
                      u5385 075D                        u4921 014E                        u5721 0F2F  
                      u5641 0DC1                        u5490 1422                        u3970 110A  
                      u4850 0C81                        u4770 0C31                        u4690 0AE5  
                      u3890 00EA                        u4930 0154                        u5730 0F32  
                      u5650 0E17                        u5570 0CF8                        u5555 1CE6  
                      u6187 10CF                        u5491 1421                        u3971 1109  
                      u4595 1588                        u4771 0C30                        u4755 0C14  
                      u4691 0AE4                        u3891 00E9                        u3795 0031  
                      u4931 0153                        u5651 0E15                        u5571 0CF7  
                      u5820 1FF7                        u5900 1E6C                        u3980 111B  
                      u4860 0C9C                        u4940 015B                        u5740 0F41  
                      u5660 0E18                        u5580 0D1F                        u5821 1FF6  
                      u5805 1FDD                        u5565 1D52                        u6197 10F2  
                      u5901 1E6B                        u3981 111A                        u4861 0C9B  
                      u4765 0C27                        u3885 00DC                        u4941 015A  
                      u5741 0F40                        u5581 0D1E                        u5830 1E1D  
                      u5910 1D95                        u4870 0CB4                        u4790 0C41  
                      u4950 0184                        u5750 0FAC                        u5670 0E27  
                      u5590 0D3C                        u5815 1FEB                        u5831 1E1C  
                      u5911 1D94                        u4871 0CB3                        u4855 0C7D  
                      u4791 0C40                        u4951 0183                        u5751 0FAB  
                      u5671 0E26                        u5591 0D3B                        u5760 1FB6  
                      u5920 1DDC                        u4880 0CD0                        u4960 0196  
                      u5680 0E4A                        u5761 1FB5                        u5921 1DDB  
                      u4881 0CCF                        u4865 0C98                        u4785 0C33  
                      u4961 0194                        u5681 0E49                        u5930 12DE  
                      u5850 1E41                        u4890 1BB5                        u4970 0197  
                      u5690 0E70                        u5931 12DD                        u5851 1E40  
                      u4891 1BB4                        u3995 111F                        u4875 0CB0  
                      u5691 0E6F                        u5940 12E2                        u5780 1FC8  
                      u4980 01A3                        u5941 12E1                        u5781 1FC7  
                      u5845 1E25                        u4981 01A2                        u5950 1302  
                      u5870 1B8C                        u4990 01E8                        u5951 1301  
                      u5775 1FBA                        u5871 1B8B                        u4991 01E7  
                      u5880 1CC4                        u5865 1E49                        u5970 1321  
                      u5890 1CAD                        u5971 1320                        u5795 1FC9  
                      u5891 1CAC                        u5965 1315                        u5885 1CC0  
                      u5990 133B                        u5991 133A                        u5985 132F  
              __CFG_WRT$OFF 0000                        _data 01C0           ?_Lcd_Write_String 007A  
                      _dbuf 0220                        _atoi 1384                        _main 15E7  
                      _prec 0165                        _temp 01CE                        _nout 0161  
                      pad@i 0027                        pad@p 0025                        fsr0h 0005  
                      fsr1h 0007                        indf0 0000                        fsr0l 0004  
                      indf1 0001                        fsr1l 0006                        pad@w 0029  
                      btemp 007E               ___fpclassifyf 11CD                        start 0002  
        ??_Lcd_Write_String 007C               __CFG_IESO$OFF 0000             ___fldiv@new_exp 0052  
           __end_of_Lcd_Cmd 1D13                _tolower$1271 007C               __CFG_MCLRE$ON 0000  
                     ??_pad 007C            ?_I2C_Master_Init 0020            ?_I2C_Master_Wait 0070  
          ?_I2C_Master_Stop 0070               ___fltol@sign1 0079                       ?_atoi 0076  
           __end_of___fladd 0A8B                       ?_main 0070             __end_of___fldiv 15E7  
           __end_of___awdiv 1159             __end_of___flneg 1AE7                       STR_12 1815  
                     STR_13 181D                       STR_16 1821               __CFG_WDTE$OFF 0000  
                     STR_18 1821             __end_of___awmod 0853             __end_of___flmul 0CE2  
           __end_of___flsub 1D49             __end_of___fltol 11CD             __end_of___lldiv 2000  
           ___awdiv@divisor 0070                       _T2CON 001C             ___awdiv@counter 0075  
              vfpfcnvrt@fmt 006E                       _PORTA 000C                       _PORTC 000E  
   __size_of_Lcd_Set_Cursor 0049                       _TRISA 008C                       _TRISC 008E  
            __CFG_FCMEN$OFF 0000                       _flags 0167                       _fputc 1EF7  
                     _fputs 1C5A             __end_of_isdigit 1B23                       _low_i 01CA  
                     _low_t 01C2                       _low_u 01C6                       atoi@n 0027  
                     pad@fp 002B                       atoi@s 0076                       _width 0163  
                     _putch 1AAF                       main@i 014F             __end_of_isspace 1BCD  
            __CFG_BOREN$OFF 0000             __end_of_isupper 1B3B                       status 0003  
                     wtemp0 007E             __end_of_sprintf 1C35              ?___fpclassifyf 0070  
           __end_of_tolower 1C5A             __end_of_strncmp 109E            __end_of_Lcd_Init 1043  
          __end_of_Lcd_Port 1B54             __initialization 07E0                __end_of_atoi 1433  
              __end_of_main 1800                  _Cursor_Off 1ACA                      ??_atoi 0078  
                    ??_main 0147          __size_of_Lcd_Clear 0009              __CFG_PLLEN$OFF 0000  
         ?_I2C_Master_Start 0070          ??_I2C_Master_Start 0070                      _ADCON0 009D  
                    _ADCON1 009E                      _CCP2AS 029C                      ?_fputc 0070  
                    ?_fputs 0078                      _ADRESH 009C                      _CCPR2L 0298  
          ___awdiv@dividend 0072                      _ANSELA 018C                      ?_putch 0070  
                    _ANSELC 018E                   ??_Lcd_Cmd 0075     __size_of_Lcd_Write_Char 003F  
                    _SSPBUF 0211            __end_of___xxtofl 1384              __CFG_PWRTE$OFF 0000  
              vfprintf@cfmt 0135                      ___flge 124C                      ___fleq 1EA9  
                 ??___fladd 0062                      ___wmul 1B8D                   ??___fldiv 0048  
                 ??___awdiv 0074                   ??___flneg 0074                   ??___awmod 0074  
                 ??___flmul 002E                   ??___flsub 007E                   ??___fltol 0074  
                 ??___lldiv 0078                      _efgtoa 00FB                      _high_i 01CC  
                    _config 109E                      _buffer 01B0                      _high_t 01C4  
                    _high_u 01C8                      _floorf 0010                      _read_I 1D88  
                    _read_U 1DCF            ___awdiv@quotient 0077             ___awmod@divisor 0070  
           ___awmod@counter 0075                      pad@buf 0024                      _strcpy 1BCD  
                    _strlen 1B54                      fputc@c 0070                      fputs@c 0020  
                    fputs@i 0021                      fputs@s 0023                   ??_isdigit 0072  
        __size_of__Umul8_16 0023             ___fpclassifyf@e 0020             ___fpclassifyf@u 0022  
           ___fpclassifyf@x 0070                   ??_isspace 0072                   ??_isupper 0072  
                    putch@c 0070            __end_of_vfprintf 1CB2                   ??_sprintf 013D  
                 ??_tolower 0078                   ??_strncmp 0074             Lcd_Set_Cursor@a 0020  
           Lcd_Set_Cursor@b 007B             Lcd_Set_Cursor@y 0022             Lcd_Set_Cursor@z 0021  
                ___flge@ff1 0040                  ___flge@ff2 0044             ??___fpclassifyf 0074  
              ___xxtofl@arg 0022                ___xxtofl@exp 0021                ___xxtofl@val 0076  
                ___fleq@ff1 0070                  ___fleq@ff2 0074     __end_of__initialization 07FD  
                ___flneg@f1 0070           __end_of_Lcd_Clear 1ADC                  ___fltol@f1 0070  
            __pcstackCOMMON 0070                __pidataBANK2 1AB0                  _adc_config 1AE7  
             __end_of_fputc 1F4D               __end_of_fputs 1C83                 ?_Cursor_Off 0070  
             __end_of_putch 1AB0              _Lcd_Set_Cursor 1E16                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                     ??_fputc 0073                     ??_fputs 0079  
                   ??_putch 0070                  __pbssBANK2 0151                  __pbssBANK3 01A0  
                __pbssBANK4 0220          __size_of_read_Temp 004A           __end_of__Umul8_16 1C11  
                _efgtoa$821 00B9                  _efgtoa$815 00B5                  _efgtoa$816 00B7  
                _efgtoa$825 00BB                  _efgtoa$826 00BD                  _efgtoa$827 00BF  
                __pmaintext 15E7                     ?___flge 0040                     ?___fleq 0070  
                   ?___wmul 0070                     ?_efgtoa 00A8                     ?_config 0070  
         _I2C_Write_Display 1AC3                     _CCP2CON 029A                     ?_floorf 005A  
                   ?_read_I 0070                     ?_read_U 0070   __size_of_Lcd_Write_String 001F  
    __end_of_Lcd_Set_Cursor 1E5F                     _CCPTMRS 029E          ?_I2C_Write_Display 0070  
                   ?_strcpy 0070                     ?_strlen 0070                   ?___xxtofl 0076  
        __size_of_vfpfcnvrt 031E         ??_I2C_Write_Display 0072                  ??_Lcd_Init 007B  
                   _SSP1ADD 0212                     _SSP1BUF 0211                  ??_Lcd_Port 0072  
            _Lcd_Write_Char 1D49                     _Lcd_Cmd 1CE2         __size_of_Cursor_Off 0009  
 __end_of_I2C_Write_Display 1ACA                 ?_adc_config 0070             __size_of___flge 008B  
           __size_of___fleq 004E                     ___fladd 0853                     ___fldiv 1433  
                   ___awdiv 10FA                     ___flneg 1ADC                     ___awmod 0800  
                   ___flmul 0A8B                     ___flsub 1D13                     ___fltol 1159  
                   ___lldiv 1FA6             __size_of___wmul 001F                   ?_vfprintf 012F  
           __size_of_efgtoa 06E5             __size_of_config 005C             __CFG_STVREN$OFF 0000  
           __size_of_floorf 00EB             __size_of_read_I 0047             __size_of_read_U 0047  
           ?_Lcd_Set_Cursor 007B                     __ptext1 1C11                     __ptext2 1C83  
                   __ptext3 0CE2                     __ptext4 1043                     __ptext5 00FB  
                   __ptext6 1C35                     __ptext7 1B23                     __ptext8 1BCD  
                   __ptext9 1F4D             __size_of_strcpy 0021             __size_of_strlen 001A  
                   _counter 016F           __end_of_read_Temp 1EA9                     _current 01B8  
              __size_of_pad 0059                     _isdigit 1B0B                  ??___xxtofl 007A  
          ___awmod@dividend 0072                     _isspace 1BAC                     _isupper 1B23  
  __size_of_I2C_Master_Init 0030                     efgtoa@c 00AC                     efgtoa@d 00C9  
                   efgtoa@e 00E2                     efgtoa@f 00A8                     efgtoa@g 00DE  
                   efgtoa@h 00D4                     efgtoa@i 00DC                     efgtoa@l 00D8  
                   efgtoa@m 00C5                     efgtoa@n 00E4                     efgtoa@p 00CE  
                   efgtoa@t 00C1                     efgtoa@u 00E6                     efgtoa@w 00D1  
  __size_of_I2C_Master_Wait 000C    __size_of_I2C_Master_Stop 0006                     atoi@neg 0020  
                   _sprintf 1C11                     _tolower 1C35                     clrloop0 1ABE  
                   _voltage 01B4      __end_of_Lcd_Write_Char 1D88                     _strncmp 1043  
      end_of_initialization 07FD                     floorf@e 0068                     floorf@m 0064  
                   floorf@u 006A                     floorf@x 005A                     fputc@fp 0072  
                   fputs@fp 0078   __size_of_I2C_Master_Start 0006             ___lldiv@divisor 0070  
           ___lldiv@counter 007D           __end_of_vfpfcnvrt 1000                  efgtoa@mode 00D3  
                efgtoa@sign 00CB            I2C_Master_Init@c 0020                  ??_vfprintf 0132  
                   strcpy@d 0076                     strlen@a 0073                     strcpy@s 0074  
                   strlen@s 0074                   _PORTAbits 000C                 ___fladd@grs 006D  
          __CFG_FOSC$INTOSC 0000               ___xxtofl@sign 0020                   _TRISAbits 008C  
                 _TRISCbits 008E                  _pwm_config 1AF5                 ___fldiv@grs 0054  
               ___fldiv@rem 004D             ?_Lcd_Write_Char 0070         __size_of_adc_config 000E  
         Lcd_Write_String@a 007A           Lcd_Write_String@i 0020                 ___flmul@grs 0034  
                 _Lcd_Clear 1AD3  __size_of_I2C_Write_Display 0007              __end_of___flge 12D7  
            __end_of___fleq 1EF7                ??_Cursor_Off 007B                 vfpfcnvrt@ap 006F  
               vfpfcnvrt@ct 012A                 vfpfcnvrt@fp 012E              __end_of___wmul 1BAC  
          _Lcd_Write_String 1B6E              __end_of_efgtoa 07E0              __end_of_config 10FA  
            __end_of_floorf 00FB              __end_of_read_I 1DCF              __end_of_read_U 1E16  
              _esantioane_i 0151                  floorf@F524 01A8                _esantioane_t 01A0  
              _esantioane_u 0159              __end_of_strcpy 1BEE              __end_of_strlen 1B6E  
       start_initialization 07E0                 __end_of_pad 1FA6           __size_of_Lcd_Init 0043  
         __size_of_Lcd_Port 0019           ??_I2C_Master_Init 0024           ??_I2C_Master_Wait 0070  
         ??_I2C_Master_Stop 0070       __end_of___fpclassifyf 124C          __end_of_Cursor_Off 1AD3  
               _APFCON1bits 011E                 vfprintf@fmt 012F                  ?_Lcd_Clear 0070  
                  ??___flge 0048                    ??___fleq 0078                    ??___wmul 0074  
                  ??_efgtoa 00AD                   __Umul8_16 1BEE                    ??_config 0028  
               __pdataBANK2 016F                    ??_floorf 005E                    ??_read_I 0070  
                  ??_read_U 0070             Lcd_Write_Char@a 0077             Lcd_Write_Char@y 0078  
                  ??_strcpy 0072                    ??_strlen 0072                   ___fladd@a 005E  
                 ___fladd@b 005A                   ___fldiv@a 0040                   ___fldiv@b 0044  
                 ___flmul@a 002A                   ___flmul@b 0026                   ___flsub@a 00A0  
                 ___flsub@b 00A4                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00A0               __pcstackBANK2 0120                 ?_pwm_config 0070  
         __size_of___xxtofl 00AD                    ?_Lcd_Cmd 0070                   _atoi$1155 0022  
                 _atoi$1156 0026                   _atoi$1157 0024            _I2C_Master_Start 1AB1  
                 _main$1491 014B            ??_Lcd_Set_Cursor 007C                ??_adc_config 0070  
                  ?___fladd 005A                    ?___fldiv 0040                    ?___awdiv 0070  
                  ?___flneg 0070                    ?___awmod 0070                    ?___flmul 0026  
                  ?___flsub 00A0                    ?___fltol 0070                    ?___lldiv 0070  
                ?__Umul8_16 0070           __size_of_vfprintf 002F                    ?_isdigit 0070  
                  ?_isspace 0070                    ?_isupper 0070                   _read_Temp 1E5F  
                  ?_sprintf 0137                    ?_tolower 0076              __size_of_fputc 0056  
            __size_of_fputs 0029                    ?_strncmp 0070              __size_of_putch 0001  
        __end_of_adc_config 1AF5              ___wmul@product 0074                    _LATCbits 010E  
                 clear_ram0 1ABD                    Lcd_Cmd@a 007A                    _PIR1bits 0011  
               ??_Lcd_Clear 007B         __size_of_pwm_config 0016                    _SSP1CON1 0215  
                  _SSP1CON2 0216                    _SSP1STAT 0214                   _vfpfcnvrt 0CE2  
                _ADCON0bits 009D           ___wmul@multiplier 0070            ??_Lcd_Write_Char 0075  
              _isspace$1186 0074                    _Lcd_Init 1000                    _Lcd_Port 1B3B  
                ?_read_Temp 0070                  vfpfcnvrt@c 012D                  vfpfcnvrt@f 0126  
  __end_of_Lcd_Write_String 1B8D            __size_of_Lcd_Cmd 0031           _esantion_curent_i 016B  
         _esantion_curent_t 0169           _esantion_curent_u 016D                Lcd_Port@data 0074  
                vfprintf@ap 0131                  vfprintf@fp 0134                 ??__Umul8_16 0072  
          __size_of___fladd 0238            __size_of___fldiv 01B4            __size_of___awdiv 005F  
          __size_of___flneg 000B            __size_of___awmod 0053            __size_of___flmul 0257  
          __size_of___flsub 0036            __size_of___fltol 0074            __size_of___lldiv 005A  
                ?_vfpfcnvrt 006E                  _ANSELAbits 018C                  _ANSELCbits 018E  
        ___fpclassifyf@F463 01AC                  sprintf@fmt 0137             _I2C_Master_Init 1CB2  
                  ___xxtofl 12D7             _I2C_Master_Wait 0004             _I2C_Master_Stop 1AB7  
          __size_of_isdigit 0018            __size_of_isspace 0021                    __ptext10 1B54  
                  __ptext11 1C5A                    __ptext20 0A8B                    __ptext12 1EF7  
                  __ptext21 1BEE                    __ptext13 1AAF                    __ptext30 1B8D  
                  __ptext22 124C                    __ptext14 0010                    __ptext31 1DCF  
                  __ptext23 1EA9                    __ptext15 11CD                    __ptext40 1AD3  
                  __ptext32 1E5F                    __ptext24 1433                    __ptext16 1159  
                  __ptext41 1CB2                    __ptext33 1D88                    __ptext25 0800  
                  __ptext17 1D13                    __ptext50 1AE7                    __ptext42 1FA6  
                  __ptext34 1AF5                    __ptext26 10FA                    __ptext18 0853  
                  __ptext51 12D7                    __ptext43 1ACA                    __ptext35 109E  
                  __ptext27 1384                    __ptext19 1ADC                    __ptext44 1CE2  
                  __ptext36 1B6E                    __ptext28 1BAC                    __ptext45 1B3B  
                  __ptext37 1D49                    __ptext29 1B0B                    __ptext46 1AC3  
                  __ptext38 1E16                    __ptext47 1AB7                    __ptext39 1000  
                  __ptext48 1AB1                    __ptext49 0004            __size_of_isupper 0018  
              _SSP1CON2bits 0216            __size_of_sprintf 0024            __size_of_tolower 0025  
                strcpy@dest 0077            __size_of_strncmp 005B                 Lcd_Cmd@buff 0078  
             __size_of_atoi 00AF               __size_of_main 0219                    efgtoa@fp 00CD  
                  efgtoa@ne 00C7                    efgtoa@pp 00C3                    efgtoa@ou 00B1  
                  _vfprintf 1C83    __end_of_I2C_Master_Start 1AB7                  _INTCONbits 000B  
              ??_pwm_config 0070              __pstringtext10 182A              __pstringtext11 0000  
                  isdigit@c 0070                 ??_read_Temp 0070          Lcd_Write_Char@temp 0079  
                 sprintf@ap 0141                    isspace@c 0070            ___lldiv@dividend 0074  
         __CFG_CLKOUTEN$OFF 0000                   strcpy@src 0070                    isupper@c 0070  
                 strncmp@_l 0075                   strncmp@_r 0070                  _OSCCONbits 0099  
               efgtoa@nmode 00D0          __end_of_pwm_config 1B0B     __end_of_I2C_Master_Init 1CE2  
   __end_of_I2C_Master_Wait 0010     __end_of_I2C_Master_Stop 1ABD                 ??_vfpfcnvrt 00EA  
             _vfpfcnvrt$841 0120               _vfpfcnvrt$842 0122               _vfpfcnvrt$846 0124  
        Lcd_Set_Cursor@temp 0023               __pstringtext1 1800               __pstringtext2 180B  
             __pstringtext3 1811               __pstringtext4 1815               __pstringtext5 1819  
             __pstringtext6 181D               __pstringtext7 1821               __pstringtext8 1824  
             __pstringtext9 1827      __Umul8_16@multiplicand 0070                 _temperature 01BC  
                  sprintf@f 0142                    tolower@c 0076                    sprintf@s 0140  
    __size_of___fpclassifyf 007F            ___lldiv@quotient 0079                    strncmp@l 0078  
                  strncmp@n 0072                    strncmp@r 0076               ___fladd@signs 006A  
              ___fladd@aexp 006B                ___fladd@bexp 006C        __Umul8_16@multiplier 0078  
         __Umul8_16@product 0074  
